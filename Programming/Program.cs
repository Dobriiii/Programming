

////////////////////////////////////////////////////////////////////////////////////////ИЗПИТНА ТЕМА 1


////////////////////////////////////////////////////////////////////////////////////////using System.Diagnostics;
////////////////////////////////////////////////////////////////////////////////////////using System.Runtime.InteropServices;
////////////////////////////////////////////////////////////////////////////////////////using System.Text;
////////////////////////////////////////////////////////////////////////////////////////using System;

////////////////////////////////////////////////////////////////////////////////////////Прескочи на основното съдържание
////////////////////////////////////////////////////////////////////////////////////////ПГЕЕ
////////////////////////////////////////////////////////////////////////////////////////Български ‎(bg)‎ 
////////////////////////////////////////////////////////////////////////////////////////Добри Илев 
////////////////////////////////////////////////////////////////////////////////////////Тренировъчен курс - Програмно осигуряване
////////////////////////////////////////////////////////////////////////////////////////Начална страница
////////////////////////////////////////////////////////////////////////////////////////Моите курсове
//////////////////////////////////////////////////////////////////////////////////////// тренировъчен-курс-по
//////////////////////////////////////////////////////////////////////////////////////// Изпитна тема 1
//////////////////////////////////////////////////////////////////////////////////////// Тест към Изпитна тема №1
////////////////////////////////////////////////////////////////////////////////////////Започнат на	петък, 16 декември 2022, 09:46
////////////////////////////////////////////////////////////////////////////////////////Състояние Завършен
////////////////////////////////////////////////////////////////////////////////////////Приключен на	понеделник, 19 декември 2022, 18:35
////////////////////////////////////////////////////////////////////////////////////////Изминало време	3 дни 8 часа
////////////////////////////////////////////////////////////////////////////////////////Оценка	Още не е оценен
////////////////////////////////////////////////////////////////////////////////////////Въпрос 1
////////////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////////Дефинирайте понятието "цикли" в програмирането. Избройте видовете цикли в C#.

////////////////////////////////////////////////////////////////////////////////////////В програмирането често пъти се налага да изпълним блок с команди няколко пъти.За тази цел се използват циклите.

////////////////////////////////////////////////////////////////////////////////////////Цикълът започва с оператора for и преминава през всички стойности за дадена променлива в даден интервал.

////////////////////////////////////////////////////////////////////////////////////////В декларацията на цикъла може да се зададе начална стойност и крайна стойност.Тялото на цикъла обикновено се огражда с къдрави скоби { } и представлява блок с една или няколко команди.

////////////////////////////////////////////////////////////////////////////////////////Пример за for цикъл:

////////////////////////////////////////////////////////////////////////////////////////for ((начална стойност) ; (крайна стойност); i++)

////////////////////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////////////////////  //тяло на цикъла

////////////////////////////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////////////////////Конструкции за повторение на група команди, известни в програмирането с понятието "цикли".

////////////////////////////////////////////////////////////////////////////////////////В програмирането често пъти се налага да изпълним блок с команди няколко пъти. За целта се използват т.нар. цикли.

////////////////////////////////////////////////////////////////////////////////////////Примери: for, while, do -while, foreach.

////////////////////////////////////////////////////////////////////////////////////////Пълен отговор: 2т.

////////////////////////////////////////////////////////////////////////////////////////Непълен отговор: 1т.

////////////////////////////////////////////////////////////////////////////////////////Въпрос 2
////////////////////////////////////////////////////////////////////////////////////////Отчасти верен
////////////////////////////////////////////////////////////////////////////////////////1,67 от максимално 2,00 точки
////////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////////Компилаторът има за задача да  blank  (най-често написан на език от по-високо ниво) до blank  или друг език от по-ниско ниво, като междувременно  blank  на програмата.

////////////////////////////////////////////////////////////////////////////////////////Резултатът от неговото изпълнение представлява  blank , специфичен за дадена хардуерна и софтуерна платформа.

////////////////////////////////////////////////////////////////////////////////////////При компилируемите езици за програмиране компилирането на програмата се извършва задължително  blank  нейното изпълнение и  blank  на компилация се откриват синтактичните грешки (грешно зададени команди).




////////////////////////////////////////////////////////////////////////////////////////преди следпо времепсевдо кодмашинен кодпроверява за грешки текстаизпълним файлпоправя текста от грешкипреведе изходния код
////////////////////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////////////////////Your answer is partially correct.
////////////////////////////////////////////////////////////////////////////////////////Вие правилно сте избрали 5.
////////////////////////////////////////////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////////////////////////////////////////////Компилаторът има за задача да [преведе изходния код] (най - често написан на език от по-високо ниво) до[машинен код] или друг език от по-ниско ниво, като междувременно [проверява за грешки текста]
////////////////////////////////////////////////////////////////////////////////////////на програмата.

////////////////////////////////////////////////////////////////////////////////////////Резултатът от неговото изпълнение представлява [изпълним файл], специфичен за дадена хардуерна и софтуерна платформа.

////////////////////////////////////////////////////////////////////////////////////////При компилируемите езици за програмиране компилирането на програмата се извършва задължително[преди] нейното изпълнение и [по време] на компилация се откриват синтактичните грешки (грешно зададени команди).



////////////////////////////////////////////////////////////////////////////////////////Въпрос 3
////////////////////////////////////////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////////Поставете думите на празните места, така че да се получи правилно понятието за програмиране.
////////////////////////////////////////////////////////////////////////////////////////Програмиране означава да даваме  blank  на  blank  какво да прави.

////////////////////////////////////////////////////////////////////////////////////////Когато командите са няколко една след друга, те се наричат  blank   blank .

////////////////////////////////////////////////////////////////////////////////////////Текстът на  blank  се нарича  blank  или сорс код.




////////////////////////////////////////////////////////////////////////////////////////компютърнакомпютърните програмипрограмакоманди компютърапрограмен код
////////////////////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////////////////////////////////////////////Правилният отговор е: Поставете думите на празните места, така че да се получи правилно понятието за програмиране.
////////////////////////////////////////////////////////////////////////////////////////Програмиране означава да даваме [команди] на[компютъра] какво да прави.

////////////////////////////////////////////////////////////////////////////////////////Когато командите са няколко една след друга, те се наричат [компютърна][програма].

////////////////////////////////////////////////////////////////////////////////////////Текстът на[компютърните програми] се нарича [програмен код] или сорс код.



////////////////////////////////////////////////////////////////////////////////////////Въпрос 4
////////////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////////////От максимално 6,00
////////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////////Напишете метод на C#, който отпечатва на конзолата квадрат от звездички с размери nхn. Квадратът трябва да изглежда по следният начин:



////////////////////////////////////////////////////////////////////////////////////////int n = int.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////////////////////for (int row = 0; row < n; row++)

////////////////////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////////////////////  for (int column = 0; column < n; column++)

////////////////////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////////////////////    Console.Write("*");

////////////////////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////////////////////  Console.WriteLine();

////////////////////////////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////////////////////public void PrintSquare(int n)
////////////////////////////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////////////////////////////  for (int i = 1; i <= n; i++)
////////////////////////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////////////////////////    for (int j = 1; j <= n; j++)
////////////////////////////////////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////////////////////////////////////      Console.Write("* ");
////////////////////////////////////////////////////////////////////////////////////////    }
////////////////////////////////////////////////////////////////////////////////////////    Console.WriteLine();
////////////////////////////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////////////////////////////Въпрос 5
////////////////////////////////////////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////////////////////////////////////////6,00 от максимално 6,00 точки
////////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////////Посоченият по-долу фрагмент на C# събира числото 0.00001 общо 100000 пъти. Очакваният резултат от това е 1. При изпълнение се получава резултат 0.999999999998084. Как ще промените програмата, така че да се поправи тази изчислителна грешка?




////////////////////////////////////////////////////////////////////////////////////////Изберете едно
////////////////////////////////////////////////////////////////////////////////////////a. Чрез използване на тип long вместо double и добавянето на суфикс l след изписването на 0 и 0.00001.
////////////////////////////////////////////////////////////////////////////////////////b. Чрез използване на тип float вместо double и добавянето на суфикс f след изписването на 0 и 0.00001.
////////////////////////////////////////////////////////////////////////////////////////c. Чрез използване на тип decimal вместо double и добавянето на суфикс M след изписването на 0 и 0.00001. 
////////////////////////////////////////////////////////////////////////////////////////d. Чрез подходящо закръгляне на получения резултат.
////////////////////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////////////////////////////////////////////Правилният отговор е: Чрез използване на тип decimal вместо double и добавянето на суфикс M след изписването на 0 и 0.00001.
////////////////////////////////////////////////////////////////////////////////////////Въпрос 6
////////////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////////Дайте пример за конзолна програма, която чете оценка (десетично число), въведена от потребителя, и отпечатва “Excellent!”, ако оценката е 5.50 или по-висока.


////////////////////////////////////////////////////////////////////////////////////////double grade = double.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////////////////////if (grade >= 5.50)

////////////////////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////////////////////  Console.WriteLine("Excellent!");

////////////////////////////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////////////////////////////else

////////////////////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////////////////////  Console.WriteLine("No");

////////////////////////////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////////////////////////////Въпрос 7
////////////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////////Дефинирайте понятието метод - Защо е добра практика да използваме методи? Как се декларират методи? Как се извикват методи? Какво са параметри на метод и връщана стойност?

////////////////////////////////////////////////////////////////////////////////////////Когато кода стане твърде много и е трудно четим ние може да използваме методи за да разделим програмата на малки подчасти, които можем да четем по-лесно.Използват се методи за по-добра четимост и ефективност на кода.

////////////////////////////////////////////////////////////////////////////////////////Метода може да го декларираме в рамките на дадения клас( { и } ).Това представлява регистрирането на метода в програмата.



////////////////////////////////////////////////////////////////////////////////////////Пример за метод:

////////////////////////////////////////////////////////////////////////////////////////static double GetSquare(double num)

////////////////////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////////////////////  return num * num

////////////////////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////////////////////Извикването на метод представлява стартирането на изпълнението на кода, който се намира в тялото на метода. Това става като изпишем името му, последвано от кръглите скоби () и знака; за край на реда.



////////////////////////////////////////////////////////////////////////////////////////Тип на връщаната стойност. В случая типа е double, което означава, че методът от примера ще върне резултат, който е от тип double. Връщаната стойност може да бъде както int,double,string и т.н., така и void. Ако типът е void, то това означава, че методът не връща резултат, а само изпълнява дадена операция.



////////////////////////////////////////////////////////////////////////////////////////Списък с параметри се декларира се между скобите ( и ), които изписваме след името му. Тук изброяваме поредицата от параметри, които метода ще използва. Може да присъства само един параметър, няколко такива или да е празен списък.

////////////////////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////////////////////Дефиниция:

////////////////////////////////////////////////////////////////////////////////////////Методите са парчета код, които са именувани от нас по определен начин и които могат да бъдат извикани толкова пъти, колкото имаме нужда.

////////////////////////////////////////////////////////////////////////////////////////Един метод може да бъде извикан толкова пъти, колкото ние преценим, че ни е нужно за решаване на даден проблем. Това ни спестява повторението на един и същи код няколко пъти, както и намалява възможността да пропуснем грешка при евентуална корекция на въпросния код.

////////////////////////////////////////////////////////////////////////////////////////Даден проблем може да бъде разделен на по-малки части, като това ни улеснява  да го решим, избягваме повторенията на код и ни предпазва от грешки, също така подобрява четимостта на кода.

////////////////////////////////////////////////////////////////////////////////////////Деклариране на методи:

////////////////////////////////////////////////////////////////////////////////////////В езика C# декларираме методите в рамките на даден клас, т.е. между отварящата { и затваряща } скоби на класа. Декларирането представлява регистрирането на метода в програмата, за да бъде разпознаван в останалата част от нея. 

////////////////////////////////////////////////////////////////////////////////////////Със следващия пример ще разгледаме задължителните елементи в декларацията на един метод.



////////////////////////////////////////////////////////////////////////////////////////Тип на връщаната стойност. В случая типа е double, което означава, че методът от примера ще върне резултат, който е от тип double. Връщаната стойност може да бъде както int, double, string и т.н., така и void. Ако типът е void, то това означава, че методът не връща резултат, а само изпълнява дадена операция.
////////////////////////////////////////////////////////////////////////////////////////Име на метода. Името на метода е определено от нас, като не забравяме, че трябва да описва функцията, която е изпълнявана от кода в тялото му. В примера името е GetSquare, което ни указва, че задачата на този метод е да изчисли лицето на квадрат.
////////////////////////////////////////////////////////////////////////////////////////Списък с параметри. Декларира се между скобите ( и ), които изписваме след името му. Тук изброяваме поредицата от параметри, които метода ще използва. Може да присъства само един параметър, няколко такива или да е празен списък. Ако няма параметри, то ще запишем само скобите (). В конкретния пример декларираме параметъра double num.
////////////////////////////////////////////////////////////////////////////////////////Декларация static в описанието на метода. За момента може да приемем, че static се пише винаги, когато се декларира метод, а по-късно, когато се запознаем с обектно-ориентираното програмиране (ООП), ще разберем разликата между статични методи (споделени за целия клас) и методи на обект, които работят върху данните на конкретна инстанция на класа (обект).
////////////////////////////////////////////////////////////////////////////////////////При деклариране на методи е важно да спазваме последователността на основните му елементи - първо тип на връщаната стойност, след това име на метода и накрая списък от параметри, ограден с кръгли скоби ().

////////////////////////////////////////////////////////////////////////////////////////След като сме декларирали метода, следва неговата имплементация (тяло). В тялото на метода описваме алгоритъма, по който той решава даден проблем, т.е. тялото съдържа кода (програмен блок), който реализира логиката на метода. В показания пример изчисляваме лицето на квадрат, а именно num * num.

////////////////////////////////////////////////////////////////////////////////////////Когато декларираме дадена променлива в тялото на един метод, я наричаме локална променлива за метода. Областта, в която съществува и може да бъде използвана тази променлива, започва от реда, на който сме я декларирали и стига до затварящата къдрава скоба } на тялото на метода. Тази област се нарича област на видимост на променливата (variable scope).

////////////////////////////////////////////////////////////////////////////////////////Извикване на методи:

////////////////////////////////////////////////////////////////////////////////////////Извикването на метод представлява стартирането на изпълнението на кода, който се намира в тялото на метода. Това става като изпишем името му, последвано от кръглите скоби () и знака; за край на реда. Ако методът ни изисква входни данни, то те се подават в скобите (), като последователността на фактическите параметри трябва да съвпада с последователността на подадените при декларирането на метода. 




////////////////////////////////////////////////////////////////////////////////////////Въпрос 8
////////////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////////////От максимално 10,00
////////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////////Пример: По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид. 

////////////////////////////////////////////////////////////////////////////////////////Условие: Разполагате със следния програмен код:

////////////////////////////////////////////////////////////////////////////////////////Program.cs

////////////////////////////////////////////////////////////////////////////////////////static void Main(string[] args)
////////////////////////////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////////////////////////////  var days = Console.ReadLine();
////////////////////////////////////////////////////////////////////////////////////////  int kgFood = int.Parse(Console.ReadLine());
////////////////////////////////////////////////////////////////////////////////////////  double dailyFoodFirst = double.Parse(Console.ReadLine());
////////////////////////////////////////////////////////////////////////////////////////  double dailyFoodSecond = double.Parse();
////////////////////////////////////////////////////////////////////////////////////////  double dailyFoodThird = double.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////////////////////  int foodNeeded = days * dailyFoodFirst
////////////////////////////////////////////////////////////////////////////////////////                      + days * dailyFoodSecond
////////////////////////////////////////////////////////////////////////////////////////                      + days * dailyFoodThird;

////////////////////////////////////////////////////////////////////////////////////////  if (kgFood <= foodNeeded)
////////////////////////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////////////////////////    Console.WriteLine("{Math.Floor(kgFood - foodNeeded)} kilos of food left.");
////////////////////////////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////////////////////////////  else
////////////////////////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////////////////////////    Console.WriteLine("{Math.Ceiling(foodNeeded - kgFood)} more kilos of food are needed.");
////////////////////////////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////////////////////Открийте и поправете грешките във вече написания програмен код, така че да се реши поставената по-долу задача. Допълнете кода.

////////////////////////////////////////////////////////////////////////////////////////Елените на Дядо Коледа

////////////////////////////////////////////////////////////////////////////////////////Дядо Коледа много обича да пътешества, но за съжаление се случило, така че точно преди да замине на почивка три от елените му се разболяли и трябва да ги остави. Когато заминава, той трябва да съобрази колко храна да остави на всеки един от елените, за да не останат гладни. Напишете програма, която пресмята дали оставената от Дядо Коледа храна ще е достатъчна за времето, в което него няма да го има. Всеки елен изяжда определено количество храна на ден.

////////////////////////////////////////////////////////////////////////////////////////Вход:

////////////////////////////////////////////////////////////////////////////////////////От конзолата се четат пет реда:

////////////////////////////////////////////////////////////////////////////////////////Първи ред – брой дни, в които Дядо Коледа отсъства – цяло число в интервала [1…5000]
////////////////////////////////////////////////////////////////////////////////////////Втори ред – оставена храна в килограми – цяло число в интервала [0…100000]
////////////////////////////////////////////////////////////////////////////////////////Трети ред – храна на ден за първия елен в килограми – реално число в интервала [0.00…100.00]
////////////////////////////////////////////////////////////////////////////////////////Четвърти ред – храна на ден за втория елен в килограми– реално число в интервала [0.00…100.00]
////////////////////////////////////////////////////////////////////////////////////////Пети ред – храна на ден за третия елен в килограми – реално число в интервала [0.00…100.00]
////////////////////////////////////////////////////////////////////////////////////////Изход:

////////////////////////////////////////////////////////////////////////////////////////На конзолата трябва да се отпечата на един ред:

////////////////////////////////////////////////////////////////////////////////////////Ако оставената храна Е достатъчна:
////////////////////////////////////////////////////////////////////////////////////////“{ килограми, които остават}
////////////////////////////////////////////////////////////////////////////////////////kilos of food left.”
////////////////////////////////////////////////////////////////////////////////////////Резултатът трябва да е закръглен към ПО-МАЛКОТО цяло число
////////////////////////////////////////////////////////////////////////////////////////Ако оставената храна НЕ Е достатъчна:
////////////////////////////////////////////////////////////////////////////////////////“{ килограми, които не  недостигат}
////////////////////////////////////////////////////////////////////////////////////////more kilos of food are needed.”
////////////////////////////////////////////////////////////////////////////////////////Резултатът трябва да е закръглен към ПО-ГОЛЯМОТО цяло число
////////////////////////////////////////////////////////////////////////////////////////Примерен вход и изход:

////////////////////////////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////////////////Обяснения

////////////////////////////////////////////////////////////////////////////////////////2

////////////////////////////////////////////////////////////////////////////////////////10

////////////////////////////////////////////////////////////////////////////////////////1

////////////////////////////////////////////////////////////////////////////////////////1

////////////////////////////////////////////////////////////////////////////////////////2

////////////////////////////////////////////////////////////////////////////////////////2 kilos of food left.

////////////////////////////////////////////////////////////////////////////////////////Нужна храна за:

////////////////////////////////////////////////////////////////////////////////////////първи елен => 2 дни * 1 кг = 2 кг

////////////////////////////////////////////////////////////////////////////////////////втори елен => 2 дни * 1 кг = 2 кг

////////////////////////////////////////////////////////////////////////////////////////трети елен => 2 дни * 2 кг = 4 кг

////////////////////////////////////////////////////////////////////////////////////////Общо нужна храна => 2 + 2 + 4 = 8 кг

////////////////////////////////////////////////////////////////////////////////////////8 < 10 => количеството храна е достатъчно

////////////////////////////////////////////////////////////////////////////////////////=> 10 - 8 = 2 кг. храна остават

////////////////////////////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////////////////Обяснения

////////////////////////////////////////////////////////////////////////////////////////5

////////////////////////////////////////////////////////////////////////////////////////10

////////////////////////////////////////////////////////////////////////////////////////2.1

////////////////////////////////////////////////////////////////////////////////////////0.8

////////////////////////////////////////////////////////////////////////////////////////11

////////////////////////////////////////////////////////////////////////////////////////60 more kilos of food are needed.

////////////////////////////////////////////////////////////////////////////////////////Нужна храна за:

////////////////////////////////////////////////////////////////////////////////////////първи елен = 5 дни * 2.1 кг = 10.5 кг

////////////////////////////////////////////////////////////////////////////////////////втори елен = 5 дни * 0.8 кг = 4 кг

////////////////////////////////////////////////////////////////////////////////////////трети елен = 5 дни * 11 кг = 55 кг

////////////////////////////////////////////////////////////////////////////////////////Общо нужна храна => 10.5 + 4 + 55 = 69.5 кг

////////////////////////////////////////////////////////////////////////////////////////69.5 > 10 =>  количеството храна не е достатъчно

////////////////////////////////////////////////////////////////////////////////////////=> 69.5 – 10 = 59.5 ~ 60 кг не достигат




////////////////////////////////////////////////////////////////////////////////////////int days = int.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////////////////////int kgFood = int.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////////////////////double dailyFoodFirst = double.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////////////////////double dailyFoodSecond = double.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////////////////////double dailyFoodThird = double.Parse(Console.ReadLine());



////////////////////////////////////////////////////////////////////////////////////////var foodNeeded = (days * dailyFoodFirst) + (days * dailyFoodSecond) + (days * dailyFoodThird);



////////////////////////////////////////////////////////////////////////////////////////if (kgFood >= foodNeeded)

////////////////////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////////////////////  Console.WriteLine($"{Math.Floor(kgFood - foodNeeded)} kilos of food left.");

////////////////////////////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////////////////////////////else

////////////////////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////////////////////  Console.WriteLine($"{Math.Ceiling(foodNeeded - kgFood)} more kilos of food are needed.");

////////////////////////////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////////////////////////////Забележка
/////////////////////////////////////////////////////////////////////////////////////////* КЛЮЧ
////////////////////////////////////////////////////////////////////////////////////////         * int days = int.Parse(Console.ReadLine());//2т
////////////////////////////////////////////////////////////////////////////////////////            int kgFood = int.Parse(Console.ReadLine()); 
////////////////////////////////////////////////////////////////////////////////////////            double dailyFoodFirst = double.Parse(Console.ReadLine()); 
////////////////////////////////////////////////////////////////////////////////////////            double dailyFoodSecond = double.Parse(Console.ReadLine()); //2т
////////////////////////////////////////////////////////////////////////////////////////            double dailyFoodThird = double.Parse(Console.ReadLine()); 

////////////////////////////////////////////////////////////////////////////////////////            //2т
////////////////////////////////////////////////////////////////////////////////////////            double foodNeeded = days * dailyFoodFirst
////////////////////////////////////////////////////////////////////////////////////////                                + days * dailyFoodSecond
////////////////////////////////////////////////////////////////////////////////////////                                + days * dailyFoodThird; 

////////////////////////////////////////////////////////////////////////////////////////            if (kgFood >= foodNeeded) //2т
////////////////////////////////////////////////////////////////////////////////////////            {
////////////////////////////////////////////////////////////////////////////////////////                Console.WriteLine($"{Math.Floor(kgFood - foodNeeded)} kilos of food left.");//1т
////////////////////////////////////////////////////////////////////////////////////////            }
////////////////////////////////////////////////////////////////////////////////////////            else 
////////////////////////////////////////////////////////////////////////////////////////            {
////////////////////////////////////////////////////////////////////////////////////////                Console.WriteLine($"{Math.Ceiling(foodNeeded - kgFood)} more kilos of food are needed.");//1т
////////////////////////////////////////////////////////////////////////////////////////            }

////////////////////////////////////////////////////////////////////////////////////////         */

////////////////////////////////////////////////////////////////////////////////////////Въпрос 9
////////////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////////Дайте пример (напишете примерен код) за оператор за многовариантен избор (switch-case)  като използвате програмния език C#.

////////////////////////////////////////////////////////////////////////////////////////int day = int.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////////////////////switch (day)

////////////////////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////////////////////  case 1:

////////////////////////////////////////////////////////////////////////////////////////    Console.WriteLine("Monday");

////////////////////////////////////////////////////////////////////////////////////////    break;

////////////////////////////////////////////////////////////////////////////////////////  case 2:

////////////////////////////////////////////////////////////////////////////////////////    Console.WriteLine("Tuesday");

////////////////////////////////////////////////////////////////////////////////////////    break;

////////////////////////////////////////////////////////////////////////////////////////  case 3:

////////////////////////////////////////////////////////////////////////////////////////    Console.WriteLine("Wednesday");

////////////////////////////////////////////////////////////////////////////////////////    break;

////////////////////////////////////////////////////////////////////////////////////////  case 4:

////////////////////////////////////////////////////////////////////////////////////////    Console.WriteLine("Thursday");

////////////////////////////////////////////////////////////////////////////////////////    break;

////////////////////////////////////////////////////////////////////////////////////////  case 5:

////////////////////////////////////////////////////////////////////////////////////////    Console.WriteLine("Friday");

////////////////////////////////////////////////////////////////////////////////////////    break;

////////////////////////////////////////////////////////////////////////////////////////  case 6:

////////////////////////////////////////////////////////////////////////////////////////    Console.WriteLine("Saturday");

////////////////////////////////////////////////////////////////////////////////////////    break;

////////////////////////////////////////////////////////////////////////////////////////  case 7:

////////////////////////////////////////////////////////////////////////////////////////    Console.WriteLine("Sunday");

////////////////////////////////////////////////////////////////////////////////////////    break;

////////////////////////////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////////////////////switch (селектор)
////////////////////////////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////////////////////////////  case стойност1:
////////////////////////////////////////////////////////////////////////////////////////    конструкция;
////////////////////////////////////////////////////////////////////////////////////////    break;
////////////////////////////////////////////////////////////////////////////////////////  case стойност2:
////////////////////////////////////////////////////////////////////////////////////////    конструкция;
////////////////////////////////////////////////////////////////////////////////////////    break;
////////////////////////////////////////////////////////////////////////////////////////  default:
////////////////////////////////////////////////////////////////////////////////////////    конструкция;
////////////////////////////////////////////////////////////////////////////////////////    break;
////////////////////////////////////////////////////////////////////////////////////////}
////////////////////////////////////////////////////////////////////////////////////////Пълен отговор: 4т.
////////////////////////////////////////////////////////////////////////////////////////Непълен отговор: 2т.

////////////////////////////////////////////////////////////////////////////////////////Въпрос 10
////////////////////////////////////////////////////////////////////////////////////////Не е отговорен
////////////////////////////////////////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////////Посочете как задаваме в C# пълната форма на условни конструкции?
////////////////////////////////////////////////////////////////////////////////////////Изберете едно
////////////////////////////////////////////////////////////////////////////////////////a. if(true) { //some code... } else(false) { //some code... }
////////////////////////////////////////////////////////////////////////////////////////  b.Нито едно от изброените.
////////////////////////////////////////////////////////////////////////////////////////c. if (true)
////////////////////////////////////////////////////////////////////////////////////////  { //some code... } if else { //some code... }
////////////////////////////////////////////////////////////////////////////////////////    d. if (true)
////////////////////////////////////////////////////////////////////////////////////////    { //some code... } else { //some code... }
////////////////////////////////////////////////////////////////////////////////////////      Забележка
////////////////////////////////////////////////////////////////////////////////////////      Your answer is incorrect.
////////////////////////////////////////////////////////////////////////////////////////      Правилният отговор е: if (true)
////////////////////////////////////////////////////////////////////////////////////////      { //some code... } else { //some code... }
////////////////////////////////////////////////////////////////////////////////////////        Въпрос 11
////////////////////////////////////////////////////////////////////////////////////////      Отговорен
////////////////////////////////////////////////////////////////////////////////////////      От максимално 4,00
////////////////////////////////////////////////////////////////////////////////////////      НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////////      Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////////      Дайте пример за for -цикъл в C#. За пример може да ползвате код, който отпечатва на конзолата числата от 1 до 100.

////////////////////////////////////////////////////////////////////////////////////////for (int i = 1; i <= 100; i++)

////////////////////////////////////////////////////////////////////////////////////////          {

////////////////////////////////////////////////////////////////////////////////////////            Console.WriteLine(i);

////////////////////////////////////////////////////////////////////////////////////////          }

////////////////////////////////////////////////////////////////////////////////////////        Забележка
////////////////////////////////////////////////////////////////////////////////////////      for (int i = 1; i <= 100; i++)
////////////////////////////////////////////////////////////////////////////////////////        {
////////////////////////////////////////////////////////////////////////////////////////          Console.WriteLine(i);
////////////////////////////////////////////////////////////////////////////////////////        }

////////////////////////////////////////////////////////////////////////////////////////        Пълен отговор: 4т.

////////////////////////////////////////////////////////////////////////////////////////        Непълен: 2т.



////////////////////////////////////////////////////////////////////////////////////////        Въпрос 12
////////////////////////////////////////////////////////////////////////////////////////      Отговорен
////////////////////////////////////////////////////////////////////////////////////////      От максимално 4,00
////////////////////////////////////////////////////////////////////////////////////////      НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////////      Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////////      Дайте пример за конзолна програма, която чете цяло число, въведено от потребителя, и печата дали е четно("even") или нечетно("odd").

////////////////////////////////////////////////////////////////////////////////////////int number = int.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////////////////////        if (number % 2 == 0)

////////////////////////////////////////////////////////////////////////////////////////        {

////////////////////////////////////////////////////////////////////////////////////////          Console.WriteLine("Even");

////////////////////////////////////////////////////////////////////////////////////////        }

////////////////////////////////////////////////////////////////////////////////////////        else

////////////////////////////////////////////////////////////////////////////////////////        {

////////////////////////////////////////////////////////////////////////////////////////          Console.WriteLine("Odd");

////////////////////////////////////////////////////////////////////////////////////////        }

////////////////////////////////////////////////////////////////////////////////////////        Въпрос 13
////////////////////////////////////////////////////////////////////////////////////////      Неправилно
////////////////////////////////////////////////////////////////////////////////////////      0,00 от максимално 6,00 точки
////////////////////////////////////////////////////////////////////////////////////////      НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////////      Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////////      Даден е следният програмен код на C#. Открийте какъв ще бъде резултатът от изпълнението на програмата. В полето запишете очакваният резултат и защо се е получил този резултат?



////////////////////////////////////////////////////////////////////////////////////////Отговор:
////////////////////////////////////////////////////////////////////////////////////////        Отговора ще е tomato.Условието на if-а се изпълнява, защото той проверява дали цвета е червен и когато това условие се изпълни той връща tomato.
////////////////////////////////////////////////////////////////////////////////////////      Забележка
////////////////////////////////////////////////////////////////////////////////////////      Правилният отговор е: tomato lemon. Когато имаме само една команда в тялото на if конструкцията, можем да пропуснем къдравите скоби, обозначаващи тялото на условния оператор.Когато искаме да изпълним блок от код(група команди), къдравите скоби са задължителни. В случай че ги изпуснем, ще се изпълни само първият ред след if клаузата.
////////////////////////////////////////////////////////////////////////////////////////      Въпрос 14
////////////////////////////////////////////////////////////////////////////////////////      Отговорен
////////////////////////////////////////////////////////////////////////////////////////      От максимално 10,00
////////////////////////////////////////////////////////////////////////////////////////      НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////////      Текст на въпроса


////////////////////////////////////////////////////////////////////////////////////////Пример: По време на теоретичния изпит се предоставя непълен/ неработещ / некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.




////////////////////////////////////////////////////////////////////////////////////////Условие: Разполагате със следния програмен код:

////////////////////////////////////////////////////////////////////////////////////////        Program.cs

//////////////////////////////////////////////////////////////////////////////////////// static void Main(string[] args)
////////////////////////////////////////////////////////////////////////////////////////        {
////////////////////////////////////////////////////////////////////////////////////////          string month = "";
////////////////////////////////////////////////////////////////////////////////////////          int nightsCount = int.Parse(Console.ReadLine());
////////////////////////////////////////////////////////////////////////////////////////          double studio = 0;
////////////////////////////////////////////////////////////////////////////////////////          double apartment = 0;
////////////////////////////////////////////////////////////////////////////////////////          switch (month)
////////////////////////////////////////////////////////////////////////////////////////          {
////////////////////////////////////////////////////////////////////////////////////////            case "May":
////////////////////////////////////////////////////////////////////////////////////////            case "October":
////////////////////////////////////////////////////////////////////////////////////////              studio = 50;
////////////////////////////////////////////////////////////////////////////////////////              apartment = 65;
////////////////////////////////////////////////////////////////////////////////////////              if (nightsCount > 14)
////////////////////////////////////////////////////////////////////////////////////////              {
////////////////////////////////////////////////////////////////////////////////////////                studio = studio * 0.30;
////////////////////////////////////////////////////////////////////////////////////////              }
////////////////////////////////////////////////////////////////////////////////////////              if (nightsCount > 7)
////////////////////////////////////////////////////////////////////////////////////////              {
////////////////////////////////////////////////////////////////////////////////////////                studio -= studio * 0.05;
////////////////////////////////////////////////////////////////////////////////////////              }
////////////////////////////////////////////////////////////////////////////////////////              break;
////////////////////////////////////////////////////////////////////////////////////////            case "June":
////////////////////////////////////////////////////////////////////////////////////////            case "September":
////////////////////////////////////////////////////////////////////////////////////////              studio = 75.20;
////////////////////////////////////////////////////////////////////////////////////////              apartment = 68.70;
////////////////////////////////////////////////////////////////////////////////////////              if (nightsCount > 14)

////////////////////////////////////////////////////////////////////////////////////////                studio -= studio * 0.20;
////////////////////////////////////////////////////////////////////////////////////////          }
////////////////////////////////////////////////////////////////////////////////////////          break;
////////////////////////////////////////////////////////////////////////////////////////                case "July"
////////////////////////////////////////////////////////////////////////////////////////                case "August":
////////////////////////////////////////////////////////////////////////////////////////                    studio = 76;
////////////////////////////////////////////////////////////////////////////////////////        apartment = 77;
////////////////////////////////////////////////////////////////////////////////////////        break;
////////////////////////////////////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////////////////////////////////////      if (nightsCount > 14)
////////////////////////////////////////////////////////////////////////////////////////      {
////////////////////////////////////////////////////////////////////////////////////////        apartment -= apartment * 10;
////////////////////////////////////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////////////////////////////////////      double totalApartment = apartment * nightsCount;
////////////////////////////////////////////////////////////////////////////////////////      double totalStudio = studio * nightsCount;
////////////////////////////////////////////////////////////////////////////////////////      Console.WriteLine("Apartment: {totalApartment:f2} lv.");
////////////////////////////////////////////////////////////////////////////////////////      Console.WriteLine($"Studio: {totalStudio:f2} lv.");
////////////////////////////////////////////////////////////////////////////////////////    }



////////////////////////////////////////////////////////////////////////////////////////    Открийте и поправете грешките във вече написания програмен код, така че да се реши поставената по - долу задача.Допълнете кода.

////////////////////////////////////////////////////////////////////////////////////////Хотелска стая
////////////////////////////////////////////////////////////////////////////////////////Хотел предлага 2 вида стаи: студио и апартамент.Напишете програма, която изчислява цената за целия престой за студио и апартамент.Цените зависят от месеца на престоя:

////////////////////////////////////////////////////////////////////////////////////////Май и октомври

////////////////////////////////////////////////////////////////////////////////////////Юни и септември

////////////////////////////////////////////////////////////////////////////////////////Юли и август

////////////////////////////////////////////////////////////////////////////////////////Студио – 50 лв./ нощувка

////////////////////////////////////////////////////////////////////////////////////////Студио – 75.20 лв./ нощувка

////////////////////////////////////////////////////////////////////////////////////////Студио – 76 лв./ нощувка

////////////////////////////////////////////////////////////////////////////////////////Апартамент – 65 лв./ нощувка

////////////////////////////////////////////////////////////////////////////////////////Апартамент – 68.70 лв./ нощувка

////////////////////////////////////////////////////////////////////////////////////////Апартамент – 77 лв./ нощувка

////////////////////////////////////////////////////////////////////////////////////////Предлагат се и следните отстъпки:

////////////////////////////////////////////////////////////////////////////////////////·       За студио, при повече от 7 нощувки през май и октомври: 5 % намаление.

////////////////////////////////////////////////////////////////////////////////////////·       За студио, при повече от 14 нощувки през май и октомври: 30 % намаление.

////////////////////////////////////////////////////////////////////////////////////////·       За студио, при повече от 14 нощувки през юни и септември: 20 % намаление.

////////////////////////////////////////////////////////////////////////////////////////·       За апартамент, при повече от 14 нощувки, без значение от месеца : 10 % намаление.

////////////////////////////////////////////////////////////////////////////////////////Вход
////////////////////////////////////////////////////////////////////////////////////////Входът се чете от конзолата и съдържа точно 2 реда:

////////////////////////////////////////////////////////////////////////////////////////·       На първия ред е месецът – May, June, July, August, September или October

////////////////////////////////////////////////////////////////////////////////////////·       На втория ред е броят на нощувките – цяло число в интервала[0... 200]

////////////////////////////////////////////////////////////////////////////////////////Изход
////////////////////////////////////////////////////////////////////////////////////////Да се отпечатат на конзолата 2 реда:

////////////////////////////////////////////////////////////////////////////////////////·       На първия ред: “Apartment: { цена за целият престой}
////////////////////////////////////////////////////////////////////////////////////////    lv.”

////////////////////////////////////////////////////////////////////////////////////////·       На втория ред: “Studio: { цена за целият престой}
////////////////////////////////////////////////////////////////////////////////////////    lv.“

////////////////////////////////////////////////////////////////////////////////////////Цената за целия престой форматирана с точност до два знака след десетичната запетая.




////////////////////////////////////////////////////////////////////////////////////////Примерен вход и изход
////////////////////////////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////////////////Обяснения

////////////////////////////////////////////////////////////////////////////////////////May

////////////////////////////////////////////////////////////////////////////////////////15

////////////////////////////////////////////////////////////////////////////////////////Apartment: 877.50 lv.

////////////////////////////////////////////////////////////////////////////////////////Studio: 525.00 lv.

////////////////////////////////////////////////////////////////////////////////////////През май, при повече от 14 нощувки, намаляваме цената на студиото с 30 % (50 – 15 = 35), а на апартамента – с 10 % (65 – 6.5 = 58.5).

////////////////////////////////////////////////////////////////////////////////////////Целият престой в апартамент – 877.50 лв.

////////////////////////////////////////////////////////////////////////////////////////Целият престой в студио – 525.00 лв.

////////////////////////////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////////////////June

////////////////////////////////////////////////////////////////////////////////////////14

////////////////////////////////////////////////////////////////////////////////////////Apartment: 961.80 lv.

////////////////////////////////////////////////////////////////////////////////////////Studio: 1052.80 lv.

////////////////////////////////////////////////////////////////////////////////////////August

////////////////////////////////////////////////////////////////////////////////////////20

////////////////////////////////////////////////////////////////////////////////////////Apartment: 1386.00 lv.

////////////////////////////////////////////////////////////////////////////////////////Studio: 1520.00 lv.







////////////////////////////////////////////////////////////////////////////////////////string month = Console.ReadLine();

////////////////////////////////////////////////////////////////////////////////////////    int nightsCount = int.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////////////////////    double studio = 0;

////////////////////////////////////////////////////////////////////////////////////////    double apartment = 0;

////////////////////////////////////////////////////////////////////////////////////////    switch (month)

////////////////////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////////////////////      case "May":

////////////////////////////////////////////////////////////////////////////////////////      case "October":

////////////////////////////////////////////////////////////////////////////////////////        studio = 50;

////////////////////////////////////////////////////////////////////////////////////////        apartment = 65;

////////////////////////////////////////////////////////////////////////////////////////        if (nightsCount > 14)

////////////////////////////////////////////////////////////////////////////////////////        {

////////////////////////////////////////////////////////////////////////////////////////          studio -= studio * 0.30;

////////////////////////////////////////////////////////////////////////////////////////        }

////////////////////////////////////////////////////////////////////////////////////////        else if (nightsCount > 7)

////////////////////////////////////////////////////////////////////////////////////////        {

////////////////////////////////////////////////////////////////////////////////////////          studio -= studio * 0.05;

////////////////////////////////////////////////////////////////////////////////////////        }

////////////////////////////////////////////////////////////////////////////////////////        break;

////////////////////////////////////////////////////////////////////////////////////////      case "June":

////////////////////////////////////////////////////////////////////////////////////////      case "September":

////////////////////////////////////////////////////////////////////////////////////////        studio = 75.20;

////////////////////////////////////////////////////////////////////////////////////////        apartment = 68.70;

////////////////////////////////////////////////////////////////////////////////////////        if (nightsCount > 14)

////////////////////////////////////////////////////////////////////////////////////////        {

////////////////////////////////////////////////////////////////////////////////////////          studio -= studio * 0.20;

////////////////////////////////////////////////////////////////////////////////////////        }

////////////////////////////////////////////////////////////////////////////////////////        break;

////////////////////////////////////////////////////////////////////////////////////////      case "July":

////////////////////////////////////////////////////////////////////////////////////////      case "August":

////////////////////////////////////////////////////////////////////////////////////////        studio = 76;

////////////////////////////////////////////////////////////////////////////////////////        apartment = 77;

////////////////////////////////////////////////////////////////////////////////////////        break;

////////////////////////////////////////////////////////////////////////////////////////    }



////////////////////////////////////////////////////////////////////////////////////////    if (nightsCount > 14)

////////////////////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////////////////////      apartment -= apartment * 0.10;

////////////////////////////////////////////////////////////////////////////////////////    }



////////////////////////////////////////////////////////////////////////////////////////    double totalApartment = apartment * nightsCount;

////////////////////////////////////////////////////////////////////////////////////////    double totalStudio = studio * nightsCount;

////////////////////////////////////////////////////////////////////////////////////////    Console.WriteLine($"Apartment: {totalApartment:f2} lv.");

////////////////////////////////////////////////////////////////////////////////////////    Console.WriteLine($"Studio: {totalStudio:f2} lv.");

////////////////////////////////////////////////////////////////////////////////////////    Забележка
////////////////////////////////////////////////////////////////////////////////////////    /*
////////////////////////////////////////////////////////////////////////////////////////             КЛЮЧ
////////////////////////////////////////////////////////////////////////////////////////            static void Main(string[] args)
////////////////////////////////////////////////////////////////////////////////////////            {
////////////////////////////////////////////////////////////////////////////////////////                string month = Console.ReadLine(); //2Т
////////////////////////////////////////////////////////////////////////////////////////                int nightsCount = int.Parse(Console.ReadLine());
////////////////////////////////////////////////////////////////////////////////////////                double studio = 0; 
////////////////////////////////////////////////////////////////////////////////////////                double apartment = 0; 
////////////////////////////////////////////////////////////////////////////////////////                switch (month) 
////////////////////////////////////////////////////////////////////////////////////////                {
////////////////////////////////////////////////////////////////////////////////////////                    case "May":
////////////////////////////////////////////////////////////////////////////////////////                    case "October":
////////////////////////////////////////////////////////////////////////////////////////                        studio = 50;
////////////////////////////////////////////////////////////////////////////////////////                        apartment = 65;
////////////////////////////////////////////////////////////////////////////////////////                        if (nightsCount > 14) 
////////////////////////////////////////////////////////////////////////////////////////                        {
////////////////////////////////////////////////////////////////////////////////////////                            studio -= studio * 0.30;//1Т
////////////////////////////////////////////////////////////////////////////////////////                        }
////////////////////////////////////////////////////////////////////////////////////////                        else if (nightsCount > 7) //2Т
////////////////////////////////////////////////////////////////////////////////////////                        {
////////////////////////////////////////////////////////////////////////////////////////                            studio -= studio * 0.05;
////////////////////////////////////////////////////////////////////////////////////////                        }
////////////////////////////////////////////////////////////////////////////////////////                        break;
////////////////////////////////////////////////////////////////////////////////////////                    case "June":
////////////////////////////////////////////////////////////////////////////////////////                    case "September":
////////////////////////////////////////////////////////////////////////////////////////                        studio = 75.20;
////////////////////////////////////////////////////////////////////////////////////////                        apartment = 68.70;
////////////////////////////////////////////////////////////////////////////////////////                        if (nightsCount > 14)
////////////////////////////////////////////////////////////////////////////////////////                        {//1Т
////////////////////////////////////////////////////////////////////////////////////////                            studio -= studio * 0.20; 
////////////////////////////////////////////////////////////////////////////////////////                        }
////////////////////////////////////////////////////////////////////////////////////////                        break;
////////////////////////////////////////////////////////////////////////////////////////                    case "July"://1Т
////////////////////////////////////////////////////////////////////////////////////////                    case "August":
////////////////////////////////////////////////////////////////////////////////////////                        studio = 76;
////////////////////////////////////////////////////////////////////////////////////////                        apartment = 77;
////////////////////////////////////////////////////////////////////////////////////////                        break;
////////////////////////////////////////////////////////////////////////////////////////                }

////////////////////////////////////////////////////////////////////////////////////////                if (nightsCount > 14) 
////////////////////////////////////////////////////////////////////////////////////////                {
////////////////////////////////////////////////////////////////////////////////////////                    apartment -= apartment * 0.1; //2Т
////////////////////////////////////////////////////////////////////////////////////////                }

////////////////////////////////////////////////////////////////////////////////////////                double totalApartment = apartment * nightsCount; 
////////////////////////////////////////////////////////////////////////////////////////                double totalStudio = studio * nightsCount; 
////////////////////////////////////////////////////////////////////////////////////////                Console.WriteLine($"Apartment: {totalApartment:f2} lv.");//1Т
////////////////////////////////////////////////////////////////////////////////////////                Console.WriteLine($"Studio: {totalStudio:f2} lv."); 
////////////////////////////////////////////////////////////////////////////////////////            }
////////////////////////////////////////////////////////////////////////////////////////             */

////////////////////////////////////////////////////////////////////////////////////////    Въпрос 15
////////////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////////Дайте пример за while цикъл в C#, който отпечатва числата от 1 до 10(включително), всяко на отделен ред.

////////////////////////////////////////////////////////////////////////////////////////int i = 1;

////////////////////////////////////////////////////////////////////////////////////////    while (i >= 1 && i <= 10)

////////////////////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////////////////////      Console.WriteLine(i);

////////////////////////////////////////////////////////////////////////////////////////      i++;

////////////////////////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////////////////////////    Забележка
////////////////////////////////////////////////////////////////////////////////////////int num = 1;
////////////////////////////////////////////////////////////////////////////////////////    while (num <= 10)
////////////////////////////////////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////////////////////////////////////      Console.WriteLine(num++);
////////////////////////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////////////////////////    Пълен отговор: 4т.

////////////////////////////////////////////////////////////////////////////////////////Непълен отговор: 2т





////////////////////////////////////////////////////////////////////////////////////////Въпрос 16
////////////////////////////////////////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////////Дефинирайте понятието среда за разработка(IDE).
////////////////////////////////////////////////////////////////////////////////////////Средата за програмиране(Integrated Development Environment - IDE, интегрирана среда за разработка) е:
////////////////////////////////////////////////////////////////////////////////////////    Изберете едно
////////////////////////////////////////////////////////////////////////////////////////a.превежда кода от програмен език на машинен код, като за всяка от командите в кода избира подходящ, предварително подготвен фрагмент от машинен код
////////////////////////////////////////////////////////////////////////////////////////b.Изкуствен език, предназначен за задаване на команди, които искаме компютърът да прочете, обработи и изпълни.
////////////////////////////////////////////////////////////////////////////////////////c.Нито едно от изброените.
////////////////////////////////////////////////////////////////////////////////////////d.съвкупност от традиционни инструменти за разработване на софтуерни приложения.
////////////////////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////////////////////////////////////////////Правилният отговор е: съвкупност от традиционни инструменти за разработване на софтуерни приложения.
////////////////////////////////////////////////////////////////////////////////////////Въпрос 17
////////////////////////////////////////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////////Посочете коя от променливите е правилно декларирана?
////////////////////////////////////////////////////////////////////////////////////////Изберете едно
////////////////////////////////////////////////////////////////////////////////////////a. int weight = 23.5;
////////////////////////////////////////////////////////////////////////////////////////    b.Нито едно от изброените.
////////////////////////////////////////////////////////////////////////////////////////c. string 123aaa = "some variable"
////////////////////////////////////////////////////////////////////////////////////////d. bool isSunny = true;
////////////////////////////////////////////////////////////////////////////////////////    Забележка
////////////////////////////////////////////////////////////////////////////////////////    Your answer is correct.
////////////////////////////////////////////////////////////////////////////////////////    Правилният отговор е: bool isSunny = true;
////////////////////////////////////////////////////////////////////////////////////////    Въпрос 18
////////////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////////////От максимално 10,00
////////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////////Текст на въпроса


////////////////////////////////////////////////////////////////////////////////////////Пример: По време на теоретичния изпит се предоставя непълен/ неработещ / некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.




////////////////////////////////////////////////////////////////////////////////////////Условие: Разполагате със следния програмен код:

////////////////////////////////////////////////////////////////////////////////////////    Program.cs

//////////////////////////////////////////////////////////////////////////////////////// static void Main(string[] args)
////////////////////////////////////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////////////////////////////////////      int days = (Console.ReadLine());
////////////////////////////////////////////////////////////////////////////////////////      int doctors = 7;
////////////////////////////////////////////////////////////////////////////////////////      int treated = 0;
////////////////////////////////////////////////////////////////////////////////////////      int untreated = 0;
////////////////////////////////////////////////////////////////////////////////////////      for (int day = 1; day < days; day++)
////////////////////////////////////////////////////////////////////////////////////////      {
////////////////////////////////////////////////////////////////////////////////////////        int patientsCount = int.Parse(Console.ReadLine());
////////////////////////////////////////////////////////////////////////////////////////        if (day / 3 == 0 && untreated > treated)
////////////////////////////////////////////////////////////////////////////////////////        {
////////////////////////////////////////////////////////////////////////////////////////          doctors++;
////////////////////////////////////////////////////////////////////////////////////////        }
////////////////////////////////////////////////////////////////////////////////////////        if (patientsCount = doctors)
////////////////////////////////////////////////////////////////////////////////////////        {
////////////////////////////////////////////////////////////////////////////////////////          treated += patientsCount;
////////////////////////////////////////////////////////////////////////////////////////        }
////////////////////////////////////////////////////////////////////////////////////////        else

////////////////////////////////////////////////////////////////////////////////////////          treated += doctors;
////////////////////////////////////////////////////////////////////////////////////////        untreated += (patientsCount + doctors);
////////////////////////////////////////////////////////////////////////////////////////      }
////////////////////////////////////////////////////////////////////////////////////////    }
////////////////////////////////////////////////////////////////////////////////////////    Console.WriteLine("Treated patients: {treated}.");
////////////////////////////////////////////////////////////////////////////////////////    Console.WriteLine("Untreated patients: {untreated}.");
////////////////////////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////////////////////////  Открийте и поправете грешките във вече написания програмен код, така че да се реши поставената по - долу задача.Допълнете кода.

////////////////////////////////////////////////////////////////////////////////////////Болница
////////////////////////////////////////////////////////////////////////////////////////За даден период от време, всеки ден в болницата пристигат пациенти за преглед.Тя разполага първоначално със 7 лекари.Всеки лекар може да преглежда само по един пациент на ден, но понякога има недостиг на лекари, затова останалите пациенти се изпращат в други болници.Всеки трети ден, болницата прави изчисления и ако броят на непрегледаните пациенти е по - голям от броя на прегледаните, се назначава още един лекар. Като назначаването става преди да започне приемът на пациенти за деня.

////////////////////////////////////////////////////////////////////////////////////////Напишете програма, която изчислява за дадения период броя на прегледаните и непрегледаните пациенти.

////////////////////////////////////////////////////////////////////////////////////////Вход
////////////////////////////////////////////////////////////////////////////////////////Входът се чете от конзолата и съдържа:

////////////////////////////////////////////////////////////////////////////////////////·       На първия ред – периода, за който трябва да направите изчисления. Цяло число в интервала[1... 1000]

////////////////////////////////////////////////////////////////////////////////////////·       На следващите редове(равни на броят на дните) – броя пациенти, които пристигат за преглед за текущия ден. Цяло число в интервала[0…10 000]

////////////////////////////////////////////////////////////////////////////////////////Изход
////////////////////////////////////////////////////////////////////////////////////////Да се отпечатат на конзолата 2 реда:

////////////////////////////////////////////////////////////////////////////////////////·       На първия ред: “Treated patients: { брой прегледани пациенти}.”

////////////////////////////////////////////////////////////////////////////////////////·       На втория ред: “Untreated patients: { брой непрегледани пациенти}.”

////////////////////////////////////////////////////////////////////////////////////////Примерен вход и изход
////////////////////////////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////////////////Обяснения

////////////////////////////////////////////////////////////////////////////////////////4

////////////////////////////////////////////////////////////////////////////////////////7

////////////////////////////////////////////////////////////////////////////////////////27

////////////////////////////////////////////////////////////////////////////////////////9

////////////////////////////////////////////////////////////////////////////////////////1

////////////////////////////////////////////////////////////////////////////////////////Treated patients: 23.

////////////////////////////////////////////////////////////////////////////////////////Untreated patients: 21.

////////////////////////////////////////////////////////////////////////////////////////1 ден: 7 прегледани и 0 непрегледани пациента за деня

////////////////////////////////////////////////////////////////////////////////////////2 ден: 7 прегледани и 20 непрегледани пациента за деня

////////////////////////////////////////////////////////////////////////////////////////3 ден: До момента прегледаните пациенти са общо 14, а непрегледаните – 20 –> Назначава се нов лекар –>

////////////////////////////////////////////////////////////////////////////////////////8 прегледани и 1 непрегледан пациент за деня

////////////////////////////////////////////////////////////////////////////////////////4 ден: 1 прегледан и 0 непрегледани пациента за деня

////////////////////////////////////////////////////////////////////////////////////////Общо: 23 прегледани и 21 непрегледани пациенти.

////////////////////////////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////////////////6

////////////////////////////////////////////////////////////////////////////////////////25

////////////////////////////////////////////////////////////////////////////////////////25

////////////////////////////////////////////////////////////////////////////////////////25

////////////////////////////////////////////////////////////////////////////////////////25

////////////////////////////////////////////////////////////////////////////////////////25

////////////////////////////////////////////////////////////////////////////////////////2

////////////////////////////////////////////////////////////////////////////////////////Treated patients: 40.

////////////////////////////////////////////////////////////////////////////////////////Untreated patients: 87.

////////////////////////////////////////////////////////////////////////////////////////3

////////////////////////////////////////////////////////////////////////////////////////7

////////////////////////////////////////////////////////////////////////////////////////7

////////////////////////////////////////////////////////////////////////////////////////7

////////////////////////////////////////////////////////////////////////////////////////Treated patients: 21.

////////////////////////////////////////////////////////////////////////////////////////Untreated patients: 0.







////////////////////////////////////////////////////////////////////////////////////////int days = int.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////////////////////  int doctors = 7;

////////////////////////////////////////////////////////////////////////////////////////  int treated = 0;

////////////////////////////////////////////////////////////////////////////////////////  int untreated = 0;

////////////////////////////////////////////////////////////////////////////////////////  for (int day = 1; day <= days; day++)

////////////////////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////////////////////    int patientsCount = int.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////////////////////    if (day % 3 == 0 && untreated > treated)

////////////////////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////////////////////      doctors++;

////////////////////////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////////////////////////    if (patientsCount == doctors || doctors > patientsCount)

////////////////////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////////////////////      treated += patientsCount;

////////////////////////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////////////////////////    else

////////////////////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////////////////////      treated += doctors;

////////////////////////////////////////////////////////////////////////////////////////      untreated += (patientsCount - doctors);

////////////////////////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////////////////////  Console.WriteLine($"Treated patients: {treated}.");

////////////////////////////////////////////////////////////////////////////////////////  Console.WriteLine($"Untreated patients: {untreated}.");

////////////////////////////////////////////////////////////////////////////////////////  Забележка
////////////////////////////////////////////////////////////////////////////////////////  /*
////////////////////////////////////////////////////////////////////////////////////////          КЛЮЧ
////////////////////////////////////////////////////////////////////////////////////////         static void Main(string[] args)
////////////////////////////////////////////////////////////////////////////////////////         {
////////////////////////////////////////////////////////////////////////////////////////             int days = int.Parse(Console.ReadLine());//1Т
////////////////////////////////////////////////////////////////////////////////////////             int doctors = 7;
////////////////////////////////////////////////////////////////////////////////////////             int treated = 0; 
////////////////////////////////////////////////////////////////////////////////////////             int untreated = 0; 
////////////////////////////////////////////////////////////////////////////////////////             for (int day = 1; day <= days; day++) //1Т
////////////////////////////////////////////////////////////////////////////////////////             {
////////////////////////////////////////////////////////////////////////////////////////                 int patientsCount = int.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////////////////////                 if (day % 3 == 0 && untreated > treated) //2Т
////////////////////////////////////////////////////////////////////////////////////////                 {
////////////////////////////////////////////////////////////////////////////////////////                     doctors++; 
////////////////////////////////////////////////////////////////////////////////////////                 }
////////////////////////////////////////////////////////////////////////////////////////                 if (patientsCount <= doctors)//1Т
////////////////////////////////////////////////////////////////////////////////////////                 {
////////////////////////////////////////////////////////////////////////////////////////                     treated += patientsCount; 
////////////////////////////////////////////////////////////////////////////////////////                 }
////////////////////////////////////////////////////////////////////////////////////////                 else
////////////////////////////////////////////////////////////////////////////////////////                 {//1Т
////////////////////////////////////////////////////////////////////////////////////////                     treated += doctors;
////////////////////////////////////////////////////////////////////////////////////////                     untreated += (patientsCount - doctors);//2Т
////////////////////////////////////////////////////////////////////////////////////////                 } 
////////////////////////////////////////////////////////////////////////////////////////             } 
////////////////////////////////////////////////////////////////////////////////////////             Console.WriteLine($"Treated patients: {treated}."); //1Т
////////////////////////////////////////////////////////////////////////////////////////             Console.WriteLine($"Untreated patients: {untreated}."); //1Т
////////////////////////////////////////////////////////////////////////////////////////         }
////////////////////////////////////////////////////////////////////////////////////////          */

////////////////////////////////////////////////////////////////////////////////////////  Въпрос 19
////////////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////////////От максимално 10,00
////////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////////По време на теоретичния изпит се предоставя непълен/ неработещ / некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

////////////////////////////////////////////////////////////////////////////////////////Идентифицирайте правилно и поправете грешките в написания програмен код, така че да решите поставената задача. Допълнете кода, ако и когато това е необходимо.



////////////////////////////////////////////////////////////////////////////////////////Условие: Разполагате със следния програмен код:

////////////////////////////////////////////////////////////////////////////////////////  Program.cs

////////////////////////////////////////////////////////////////////////////////////////static void Main(string[] args)
////////////////////////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////////////////////////    string sector = Console.ReadLine()
////////////////////////////////////////////////////////////////////////////////////////            int row = int.Parse(Console.ReadLine());
////////////////////////////////////////////////////////////////////////////////////////    int col = int.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////////////////////    switch ()
////////////////////////////////////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////////////////////////////////////      case "Sector A":
////////////////////////////////////////////////////////////////////////////////////////        totalSum = GetTotalProfit(row, col, 11.60);

////////////////////////////////////////////////////////////////////////////////////////      case "Sector B":
////////////////////////////////////////////////////////////////////////////////////////        totalSum = GetTotalProfit(row, col, 14.50)
////////////////////////////////////////////////////////////////////////////////////////                    break;
////////////////////////////////////////////////////////////////////////////////////////      case "Sector C":
////////////////////////////////////////////////////////////////////////////////////////        totalSum = GetTotalProfit(row, col, 16.10);
////////////////////////////////////////////////////////////////////////////////////////        break;
////////////////////////////////////////////////////////////////////////////////////////      case "Sector D"
////////////////////////////////////////////////////////////////////////////////////////                    totalSum = GetTotalProfit(row, col, 8.40);
////////////////////////////////////////////////////////////////////////////////////////        break;

////////////////////////////////////////////////////////////////////////////////////////        Console.WriteLine($"{sector} profit is {totalSum:f2} lv.");
////////////////////////////////////////////////////////////////////////////////////////    }
////////////////////////////////////////////////////////////////////////////////////////    static double GetTotalProfit(int row, int col, double price)
////////////////////////////////////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////////////////////////////////////      return row * col * price;
////////////////////////////////////////////////////////////////////////////////////////    }



////////////////////////////////////////////////////////////////////////////////////////    Открийте и поправете грешките във вече написания програмен код, така че да се реши поставената по - долу задача.Допълнете кода.

////////////////////////////////////////////////////////////////////////////////////////1.Футболен мач

////////////////////////////////////////////////////////////////////////////////////////На един стадион има определен брой сектори, в които има седалки наредени в правоъгълна форма и има X реда и Y седалки на ред.

////////////////////////////////////////////////////////////////////////////////////////Има четири вида сектори с билети на различни цени:

////////////////////////////////////////////////////////////////////////////////////////    Sector A  –  цена на билета 11.60 лева
////////////////////////////////////////////////////////////////////////////////////////    Sector B  –  цена на билета 14.50 лева
////////////////////////////////////////////////////////////////////////////////////////    Sector C  –  цена на билета 16.10 лева
////////////////////////////////////////////////////////////////////////////////////////    Sector D – цена на билета 8.40 лева
////////////////////////////////////////////////////////////////////////////////////////    Напишете програма, която изчислява приходите за даден сектор, ако са разпродадени всички билети, като знаете кой е секторът, какъв е броят редове в него и броят седалки на ред.

////////////////////////////////////////////////////////////////////////////////////////Изчислението на приходите трябва да го осъществите с помощта на метод GetTotalProfit, който приема като параметри точно в дадената последователност: реда, колоната и цената на билета.

////////////////////////////////////////////////////////////////////////////////////////Вход:

////////////////////////////////////////////////////////////////////////////////////////Входът се чете от конзолата и съдържа точно 3 реда:

////////////////////////////////////////////////////////////////////////////////////////  На първия ред - сектор - текст с възможности: Sector A, Sector B, Sector C, Sector D
////////////////////////////////////////////////////////////////////////////////////////  На втория ред -брой редове - цяло число в интервала[1... 1000]
////////////////////////////////////////////////////////////////////////////////////////На третия ред - брой седалки на ред - цяло число в интервала[1... 1000]
////////////////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////////////////Да се отпечата на конзолата един ред:

////////////////////////////////////////////////////////////////////////////////////////   "{сектор} profit is {печалба} lv."

////////////////////////////////////////////////////////////////////////////////////////Печалбата да бъде форматирана до втория знак след десетичната запетая.




////////////////////////////////////////////////////////////////////////////////////////Примерен вход и изход

////////////////////////////////////////////////////////////////////////////////////////вход

////////////////////////////////////////////////////////////////////////////////////////изход

////////////////////////////////////////////////////////////////////////////////////////Обяснение

////////////////////////////////////////////////////////////////////////////////////////Sector A

////////////////////////////////////////////////////////////////////////////////////////12

////////////////////////////////////////////////////////////////////////////////////////300

////////////////////////////////////////////////////////////////////////////////////////Sector A profit is 41760.00 lv.

////////////////////////////////////////////////////////////////////////////////////////Цена за билет в сектор А: 11.60

////////////////////////////////////////////////////////////////////////////////////////Общ брой седалки: 12 * 300 = 3600

////////////////////////////////////////////////////////////////////////////////////////Печалба: 3600 * 11.60 = 41760




////////////////////////////////////////////////////////////////////////////////////////вход

////////////////////////////////////////////////////////////////////////////////////////изход

////////////////////////////////////////////////////////////////////////////////////////Обяснение

////////////////////////////////////////////////////////////////////////////////////////Sector B

////////////////////////////////////////////////////////////////////////////////////////40

////////////////////////////////////////////////////////////////////////////////////////120

////////////////////////////////////////////////////////////////////////////////////////Sector B profit is 69600.00 lv.

////////////////////////////////////////////////////////////////////////////////////////Цена за билет в сектор B: 14.50

////////////////////////////////////////////////////////////////////////////////////////Общ брой седалки: 40 * 120 = 4800

////////////////////////////////////////////////////////////////////////////////////////Печалба: 4800 * 14.50 = 69600




////////////////////////////////////////////////////////////////////////////////////////вход

////////////////////////////////////////////////////////////////////////////////////////изход

////////////////////////////////////////////////////////////////////////////////////////Обяснение

////////////////////////////////////////////////////////////////////////////////////////Sector C

////////////////////////////////////////////////////////////////////////////////////////10

////////////////////////////////////////////////////////////////////////////////////////170

////////////////////////////////////////////////////////////////////////////////////////Sector C profit is 27370.00 lv.

////////////////////////////////////////////////////////////////////////////////////////Цена за билет в сектор C: 16.10

////////////////////////////////////////////////////////////////////////////////////////Общ брой седалки: 10 * 170 = 1700

////////////////////////////////////////////////////////////////////////////////////////Печалба: 1700 * 16.10 = 27370




////////////////////////////////////////////////////////////////////////////////////////вход

////////////////////////////////////////////////////////////////////////////////////////изход

////////////////////////////////////////////////////////////////////////////////////////Обяснение

////////////////////////////////////////////////////////////////////////////////////////Sector D

////////////////////////////////////////////////////////////////////////////////////////20

////////////////////////////////////////////////////////////////////////////////////////600

////////////////////////////////////////////////////////////////////////////////////////Sector D profit is 100800.00 lv.

////////////////////////////////////////////////////////////////////////////////////////Цена за билет в сектор D: 8.40

////////////////////////////////////////////////////////////////////////////////////////Общ брой седалки: 20 * 600 = 12000

////////////////////////////////////////////////////////////////////////////////////////Печалба: 12000 * 8.40 = 100800





////////////////////////////////////////////////////////////////////////////////////////string sector = Console.ReadLine();

////////////////////////////////////////////////////////////////////////////////////////  int row = int.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////////////////////  int col = int.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////////////////////  var totalSum = 0.0;



////////////////////////////////////////////////////////////////////////////////////////  switch (sector)

////////////////////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////////////////////    case "Sector A":

////////////////////////////////////////////////////////////////////////////////////////      totalSum = GetTotalProfit(row, col, 11.60);

////////////////////////////////////////////////////////////////////////////////////////      break;



////////////////////////////////////////////////////////////////////////////////////////    case "Sector B":

////////////////////////////////////////////////////////////////////////////////////////      totalSum = GetTotalProfit(row, col, 14.50);

////////////////////////////////////////////////////////////////////////////////////////      break;

////////////////////////////////////////////////////////////////////////////////////////    case "Sector C":

////////////////////////////////////////////////////////////////////////////////////////      totalSum = GetTotalProfit(row, col, 16.10);

////////////////////////////////////////////////////////////////////////////////////////      break;

////////////////////////////////////////////////////////////////////////////////////////    case "Sector D":

////////////////////////////////////////////////////////////////////////////////////////      totalSum = GetTotalProfit(row, col, 8.40);

////////////////////////////////////////////////////////////////////////////////////////      break;

////////////////////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////////////////////  Console.WriteLine($"{sector} profit is {totalSum:f2} lv.");



////////////////////////////////////////////////////////////////////////////////////////  double GetTotalProfit(int Row, int Col, double price)

////////////////////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////////////////////    return row * col * price;

////////////////////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////////////////////  Забележка
////////////////////////////////////////////////////////////////////////////////////////  /*
////////////////////////////////////////////////////////////////////////////////////////           КЛЮЧ
////////////////////////////////////////////////////////////////////////////////////////          static void Main(string[] args)
////////////////////////////////////////////////////////////////////////////////////////          {
////////////////////////////////////////////////////////////////////////////////////////              string sector = Console.ReadLine(); //1Т
////////////////////////////////////////////////////////////////////////////////////////              int row = int.Parse(Console.ReadLine());
////////////////////////////////////////////////////////////////////////////////////////              int col = int.Parse(Console.ReadLine()); 
////////////////////////////////////////////////////////////////////////////////////////              double totalSum = 0;//2Т

////////////////////////////////////////////////////////////////////////////////////////              switch (sector)//2Т
////////////////////////////////////////////////////////////////////////////////////////              { 
////////////////////////////////////////////////////////////////////////////////////////                  case "Sector A":
////////////////////////////////////////////////////////////////////////////////////////                      totalSum = GetTotalProfit(row, col, 11.60); 
////////////////////////////////////////////////////////////////////////////////////////                      break; //2Т
////////////////////////////////////////////////////////////////////////////////////////                  case "Sector B":
////////////////////////////////////////////////////////////////////////////////////////                      totalSum = GetTotalProfit(row, col, 14.50);//1Т
////////////////////////////////////////////////////////////////////////////////////////                      break;
////////////////////////////////////////////////////////////////////////////////////////                  case "Sector C": 
////////////////////////////////////////////////////////////////////////////////////////                      totalSum = GetTotalProfit(row, col, 16.10); 
////////////////////////////////////////////////////////////////////////////////////////                      break;
////////////////////////////////////////////////////////////////////////////////////////                  case "Sector D"://1Т
////////////////////////////////////////////////////////////////////////////////////////                      totalSum = GetTotalProfit(row, col, 8.40);
////////////////////////////////////////////////////////////////////////////////////////                      break;
////////////////////////////////////////////////////////////////////////////////////////              }//1Т
////////////////////////////////////////////////////////////////////////////////////////              Console.WriteLine($"{sector} profit is {totalSum:f2} lv.");
////////////////////////////////////////////////////////////////////////////////////////          }
////////////////////////////////////////////////////////////////////////////////////////          static double GetTotalProfit(int row, int col, double price)
////////////////////////////////////////////////////////////////////////////////////////          {
////////////////////////////////////////////////////////////////////////////////////////              return row * col * price;
////////////////////////////////////////////////////////////////////////////////////////          }
////////////////////////////////////////////////////////////////////////////////////////           */

////////////////////////////////////////////////////////////////////////////////////////  Въпрос 20
////////////////////////////////////////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////////В таблицата по-долу трябва да посочите правилните места на операторите за сравнение в C#. В колона Означение поставяте съответния оператор, а в колона Работи за - задавате данните, за които може да работи съответния оператор.

////////////////////////////////////////////////////////////////////////////////////////Оператор  Означение Работи за
////////////////////////////////////////////////////////////////////////////////////////Проверка за равенство  blank blank
////////////////////////////////////////////////////////////////////////////////////////Проверка за различие blank
////////////////////////////////////////////////////////////////////////////////////////По - голямо  blank blank
////////////////////////////////////////////////////////////////////////////////////////По - голямо или равно  blank
////////////////////////////////////////////////////////////////////////////////////////По - малко   blank
////////////////////////////////////////////////////////////////////////////////////////По - малко или равно   blank


////////////////////////////////////////////////////////////////////////////////////////== != >>=<<=!====== !числа, стрингове, датичисла, дати, други сравними типовесамо за числасамо за стрингове
////////////////////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////////////////////////////////////////////  В таблицата по - долу трябва да посочите правилните места на операторите за сравнение в C#. В колона Означение поставяте съответния оператор, а в колона Работи за - задавате данните, за които може да работи съответния оператор.

////////////////////////////////////////////////////////////////////////////////////////Оператор  Означение Работи за
////////////////////////////////////////////////////////////////////////////////////////Проверка за равенство[==]  [числа, стрингове, дати]
////////////////////////////////////////////////////////////////////////////////////////  Проверка за различие[ !=]
////////////////////////////////////////////////////////////////////////////////////////По - голямо[ >][числа, дати, други сравними типове]
////////////////////////////////////////////////////////////////////////////////////////По - голямо или равно[>=]
////////////////////////////////////////////////////////////////////////////////////////По - малко[<]
////////////////////////////////////////////////////////////////////////////////////////По - малко или равно[<=]
////////////////////////////////////////////////////////////////////////////////////////Въпрос 21
////////////////////////////////////////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////////////////////////////////////////6,00 от максимално 6,00 точки
////////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////////Демонстрирайте как бихте създали конзолно приложение в средата за разработка Visual Studio.Подредете картинките така, че да спазват правилната последователност от стъпките за създаване на ново конзолно приложение.

////////////////////////////////////////////////////////////////////////////////////////Номерирайте картинките, като използвате цифрите за влачене под таблицата.




//////////////////////////////////////////////////////////////////////////////////////// blank



//////////////////////////////////////////////////////////////////////////////////////// blank



//////////////////////////////////////////////////////////////////////////////////////// blank



//////////////////////////////////////////////////////////////////////////////////////// blank




////////////////////////////////////////////////////////////////////////////////////////2222333344441111
////////////////////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////////////////////////////////////////////  Демонстрирайте как бихте създали конзолно приложение в средата за разработка Visual Studio. Подредете картинките така, че да спазват правилната последователност от стъпките за създаване на ново конзолно приложение.

////////////////////////////////////////////////////////////////////////////////////////  Номерирайте картинките, като използвате цифрите за влачене под таблицата.




////////////////////////////////////////////////////////////////////////////////////////[2]



////////////////////////////////////////////////////////////////////////////////////////[4]



////////////////////////////////////////////////////////////////////////////////////////[3]



////////////////////////////////////////////////////////////////////////////////////////[1]


////////////////////////////////////////////////////////////////////////////////////////Край на прегледа
////////////////////////////////////////////////////////////////////////////////////////Отиди на...
////////////////////////////////////////////////////////////////////////////////////////Отиди на ...
////////////////////////////////////////////////////////////////////////////////////////Прескочи < span id = "mod_quiz_navblock_title" > Навигация в теста</ span >
////////////////////////////////////////////////////////////////////////////////////////Навигация в теста
////////////////////////////////////////////////////////////////////////////////////////Край на прегледа
////////////////////////////////////////////////////////////////////////////////////////Вие сте влезли в системата като Добри Илев(Изход)
////////////////////////////////////////////////////////////////////////////////////////тренировъчен - курс - по
////////////////////////////////////////////////////////////////////////////////////////Data retention summary

//////////////////////////////////////////////////////////////////////////////////////using System;
/////////////////////////////////////////////////////////////////////////////////////////* КЛЮЧ
//////////////////////////////////////////////////////////////////////////////////////Прескочи на основното съдържание
//////////////////////////////////////////////////////////////////////////////////////ПГЕЕ
//////////////////////////////////////////////////////////////////////////////////////Български ‎(bg)‎ 
//////////////////////////////////////////////////////////////////////////////////////Добри Илев 
//////////////////////////////////////////////////////////////////////////////////////Тренировъчен курс - Програмно осигуряване
//////////////////////////////////////////////////////////////////////////////////////Начална страница
//////////////////////////////////////////////////////////////////////////////////////Моите курсове
////////////////////////////////////////////////////////////////////////////////////// тренировъчен-курс-по
////////////////////////////////////////////////////////////////////////////////////// Изпитна тема 1
////////////////////////////////////////////////////////////////////////////////////// Тест към Изпитна тема №1
//////////////////////////////////////////////////////////////////////////////////////Започнат на	вторник, 28 февруари 2023, 20:07
//////////////////////////////////////////////////////////////////////////////////////Състояние Завършен
//////////////////////////////////////////////////////////////////////////////////////Приключен на	вторник, 28 февруари 2023, 21:30
//////////////////////////////////////////////////////////////////////////////////////Изминало време	1 час 23 мин.
//////////////////////////////////////////////////////////////////////////////////////Оценка	Още не е оценен
//////////////////////////////////////////////////////////////////////////////////////Въпрос 1
//////////////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////////////От максимално 10,00
//////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////////Текст на въпроса


//////////////////////////////////////////////////////////////////////////////////////Пример: По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.



//////////////////////////////////////////////////////////////////////////////////////Условие: Разполагате със следния програмен код:

//////////////////////////////////////////////////////////////////////////////////////Program.cs

////////////////////////////////////////////////////////////////////////////////////// static void Main(string[] args)
//////////////////////////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////////////////////////  string month = "";
//////////////////////////////////////////////////////////////////////////////////////  int nightsCount = int.Parse(Console.ReadLine());
//////////////////////////////////////////////////////////////////////////////////////  double studio = 0;
//////////////////////////////////////////////////////////////////////////////////////  double apartment = 0;
//////////////////////////////////////////////////////////////////////////////////////  switch (month)
//////////////////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////////////////    case "May":
//////////////////////////////////////////////////////////////////////////////////////    case "October":
//////////////////////////////////////////////////////////////////////////////////////      studio = 50;
//////////////////////////////////////////////////////////////////////////////////////      apartment = 65;
//////////////////////////////////////////////////////////////////////////////////////      if (nightsCount > 14)
//////////////////////////////////////////////////////////////////////////////////////      {
//////////////////////////////////////////////////////////////////////////////////////        studio = studio * 0.30;
//////////////////////////////////////////////////////////////////////////////////////      }
//////////////////////////////////////////////////////////////////////////////////////      if (nightsCount > 7)
//////////////////////////////////////////////////////////////////////////////////////      {
//////////////////////////////////////////////////////////////////////////////////////        studio -= studio * 0.05;
//////////////////////////////////////////////////////////////////////////////////////      }
//////////////////////////////////////////////////////////////////////////////////////      break;
//////////////////////////////////////////////////////////////////////////////////////    case "June":
//////////////////////////////////////////////////////////////////////////////////////    case "September":
//////////////////////////////////////////////////////////////////////////////////////      studio = 75.20;
//////////////////////////////////////////////////////////////////////////////////////      apartment = 68.70;
//////////////////////////////////////////////////////////////////////////////////////      if (nightsCount > 14)

//////////////////////////////////////////////////////////////////////////////////////        studio -= studio * 0.20;
//////////////////////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////////////////////  break;
//////////////////////////////////////////////////////////////////////////////////////                case "July"
//////////////////////////////////////////////////////////////////////////////////////                case "August":
//////////////////////////////////////////////////////////////////////////////////////                    studio = 76;
//////////////////////////////////////////////////////////////////////////////////////apartment = 77;
//////////////////////////////////////////////////////////////////////////////////////break;
//////////////////////////////////////////////////////////////////////////////////////            }

//////////////////////////////////////////////////////////////////////////////////////            if (nightsCount > 14)
//////////////////////////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////////////////////////  apartment -= apartment * 10;
//////////////////////////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////////////////////////double totalApartment = apartment * nightsCount;
//////////////////////////////////////////////////////////////////////////////////////double totalStudio = studio * nightsCount;
//////////////////////////////////////////////////////////////////////////////////////Console.WriteLine("Apartment: {totalApartment:f2} lv.");
//////////////////////////////////////////////////////////////////////////////////////Console.WriteLine($"Studio: {totalStudio:f2} lv."); 
//////////////////////////////////////////////////////////////////////////////////////        }



//////////////////////////////////////////////////////////////////////////////////////Открийте и поправете грешките във вече написания програмен код, така че да се реши поставената по-долу задача. Допълнете кода.

//////////////////////////////////////////////////////////////////////////////////////Хотелска стая
//////////////////////////////////////////////////////////////////////////////////////Хотел предлага 2 вида стаи: студио и апартамент. Напишете програма, която изчислява цената за целия престой за студио и апартамент. Цените зависят от месеца на престоя:

//////////////////////////////////////////////////////////////////////////////////////Май и октомври

//////////////////////////////////////////////////////////////////////////////////////Юни и септември

//////////////////////////////////////////////////////////////////////////////////////Юли и август

//////////////////////////////////////////////////////////////////////////////////////Студио – 50 лв./нощувка

//////////////////////////////////////////////////////////////////////////////////////Студио – 75.20 лв./нощувка

//////////////////////////////////////////////////////////////////////////////////////Студио – 76 лв./нощувка

//////////////////////////////////////////////////////////////////////////////////////Апартамент – 65 лв./нощувка

//////////////////////////////////////////////////////////////////////////////////////Апартамент – 68.70 лв./нощувка

//////////////////////////////////////////////////////////////////////////////////////Апартамент – 77 лв./нощувка

//////////////////////////////////////////////////////////////////////////////////////Предлагат се и следните отстъпки:

//////////////////////////////////////////////////////////////////////////////////////·       За студио, при повече от 7 нощувки през май и октомври : 5 % намаление.

//////////////////////////////////////////////////////////////////////////////////////·       За студио, при повече от 14 нощувки през май и октомври : 30 % намаление.

//////////////////////////////////////////////////////////////////////////////////////·       За студио, при повече от 14 нощувки през юни и септември: 20 % намаление.

//////////////////////////////////////////////////////////////////////////////////////·       За апартамент, при повече от 14 нощувки, без значение от месеца : 10 % намаление.

//////////////////////////////////////////////////////////////////////////////////////Вход
//////////////////////////////////////////////////////////////////////////////////////Входът се чете от конзолата и съдържа точно 2 реда:

//////////////////////////////////////////////////////////////////////////////////////·       На първия ред е месецът – May, June, July, August, September или October

//////////////////////////////////////////////////////////////////////////////////////·       На втория ред е броят на нощувките – цяло число в интервала [0 ... 200]

//////////////////////////////////////////////////////////////////////////////////////Изход
//////////////////////////////////////////////////////////////////////////////////////Да се отпечатат на конзолата 2 реда:

//////////////////////////////////////////////////////////////////////////////////////·       На първия ред: “Apartment: { цена за целият престой}
//////////////////////////////////////////////////////////////////////////////////////lv.”

//////////////////////////////////////////////////////////////////////////////////////·       На втория ред: “Studio: { цена за целият престой}
//////////////////////////////////////////////////////////////////////////////////////lv.“

//////////////////////////////////////////////////////////////////////////////////////Цената за целия престой форматирана с точност до два знака след десетичната запетая.



//////////////////////////////////////////////////////////////////////////////////////Примерен вход и изход
//////////////////////////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////////////////Обяснения

//////////////////////////////////////////////////////////////////////////////////////May

//////////////////////////////////////////////////////////////////////////////////////15

//////////////////////////////////////////////////////////////////////////////////////Apartment: 877.50 lv.

//////////////////////////////////////////////////////////////////////////////////////Studio: 525.00 lv.

//////////////////////////////////////////////////////////////////////////////////////През май, при повече от 14 нощувки, намаляваме цената на студиото с 30% (50 – 15 = 35), а на апартамента – с 10% (65 – 6.5 =58.5).

//////////////////////////////////////////////////////////////////////////////////////Целият престой в апартамент – 877.50 лв.

//////////////////////////////////////////////////////////////////////////////////////Целият престой в студио – 525.00 лв.

//////////////////////////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////////////////June

//////////////////////////////////////////////////////////////////////////////////////14

//////////////////////////////////////////////////////////////////////////////////////Apartment: 961.80 lv.

//////////////////////////////////////////////////////////////////////////////////////Studio: 1052.80 lv.

//////////////////////////////////////////////////////////////////////////////////////August

//////////////////////////////////////////////////////////////////////////////////////20

//////////////////////////////////////////////////////////////////////////////////////Apartment: 1386.00 lv.

//////////////////////////////////////////////////////////////////////////////////////Studio: 1520.00 lv.







////////////////////////////////////////////////////////////////////////////////////// static void Main(string[] args)

//////////////////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////////////////  string month = Console.ReadLine();

//////////////////////////////////////////////////////////////////////////////////////  int nightsCount = int.Parse(Console.ReadLine());

//////////////////////////////////////////////////////////////////////////////////////  double studio = 0;

//////////////////////////////////////////////////////////////////////////////////////  double apartment = 0;

//////////////////////////////////////////////////////////////////////////////////////  switch (month)

//////////////////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////////////////    case "May":

//////////////////////////////////////////////////////////////////////////////////////    case "October":

//////////////////////////////////////////////////////////////////////////////////////      studio = 50;

//////////////////////////////////////////////////////////////////////////////////////      apartment = 65;

//////////////////////////////////////////////////////////////////////////////////////      if (nightsCount > 14)

//////////////////////////////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////////////////////////////        studio -= studio * 0.30;

//////////////////////////////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////////////////////////////      else if (nightsCount > 7)

//////////////////////////////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////////////////////////////        studio -= studio * 0.05;

//////////////////////////////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////////////////////////////      break;

//////////////////////////////////////////////////////////////////////////////////////    case "June":

//////////////////////////////////////////////////////////////////////////////////////    case "September":

//////////////////////////////////////////////////////////////////////////////////////      studio = 75.20;

//////////////////////////////////////////////////////////////////////////////////////      apartment = 68.70;

//////////////////////////////////////////////////////////////////////////////////////      if (nightsCount > 14)

//////////////////////////////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////////////////////////////        studio -= studio * 0.20;

//////////////////////////////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////////////////////////////      break;

//////////////////////////////////////////////////////////////////////////////////////    case "July":

//////////////////////////////////////////////////////////////////////////////////////    case "August":

//////////////////////////////////////////////////////////////////////////////////////      studio = 76;

//////////////////////////////////////////////////////////////////////////////////////      apartment = 77;

//////////////////////////////////////////////////////////////////////////////////////      break;

//////////////////////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////////////////////  if (nightsCount > 14)

//////////////////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////////////////    apartment -= apartment * 0.10;

//////////////////////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////////////////////  double totalApartment = apartment * nightsCount;

//////////////////////////////////////////////////////////////////////////////////////  double totalStudio = studio * nightsCount;

//////////////////////////////////////////////////////////////////////////////////////  Console.WriteLine($"Apartment: {totalApartment:f2} lv.");

//////////////////////////////////////////////////////////////////////////////////////  Console.WriteLine($"Studio: {totalStudio:f2} lv.");



//////////////////////////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////////////////////////Забележка
///////////////////////////////////////////////////////////////////////////////////////*
//////////////////////////////////////////////////////////////////////////////////////         КЛЮЧ
//////////////////////////////////////////////////////////////////////////////////////        static void Main(string[] args)
//////////////////////////////////////////////////////////////////////////////////////        {
//////////////////////////////////////////////////////////////////////////////////////            string month = Console.ReadLine(); //2Т
//////////////////////////////////////////////////////////////////////////////////////            int nightsCount = int.Parse(Console.ReadLine());
//////////////////////////////////////////////////////////////////////////////////////            double studio = 0; 
//////////////////////////////////////////////////////////////////////////////////////            double apartment = 0; 
//////////////////////////////////////////////////////////////////////////////////////            switch (month) 
//////////////////////////////////////////////////////////////////////////////////////            {
//////////////////////////////////////////////////////////////////////////////////////                case "May":
//////////////////////////////////////////////////////////////////////////////////////                case "October":
//////////////////////////////////////////////////////////////////////////////////////                    studio = 50;
//////////////////////////////////////////////////////////////////////////////////////                    apartment = 65;
//////////////////////////////////////////////////////////////////////////////////////                    if (nightsCount > 14) 
//////////////////////////////////////////////////////////////////////////////////////                    {
//////////////////////////////////////////////////////////////////////////////////////                        studio -= studio * 0.30;//1Т
//////////////////////////////////////////////////////////////////////////////////////                    }
//////////////////////////////////////////////////////////////////////////////////////                    else if (nightsCount > 7) //2Т
//////////////////////////////////////////////////////////////////////////////////////                    {
//////////////////////////////////////////////////////////////////////////////////////                        studio -= studio * 0.05;
//////////////////////////////////////////////////////////////////////////////////////                    }
//////////////////////////////////////////////////////////////////////////////////////                    break;
//////////////////////////////////////////////////////////////////////////////////////                case "June":
//////////////////////////////////////////////////////////////////////////////////////                case "September":
//////////////////////////////////////////////////////////////////////////////////////                    studio = 75.20;
//////////////////////////////////////////////////////////////////////////////////////                    apartment = 68.70;
//////////////////////////////////////////////////////////////////////////////////////                    if (nightsCount > 14)
//////////////////////////////////////////////////////////////////////////////////////                    {//1Т
//////////////////////////////////////////////////////////////////////////////////////                        studio -= studio * 0.20; 
//////////////////////////////////////////////////////////////////////////////////////                    }
//////////////////////////////////////////////////////////////////////////////////////                    break;
//////////////////////////////////////////////////////////////////////////////////////                case "July"://1Т
//////////////////////////////////////////////////////////////////////////////////////                case "August":
//////////////////////////////////////////////////////////////////////////////////////                    studio = 76;
//////////////////////////////////////////////////////////////////////////////////////                    apartment = 77;
//////////////////////////////////////////////////////////////////////////////////////                    break;
//////////////////////////////////////////////////////////////////////////////////////            }

//////////////////////////////////////////////////////////////////////////////////////            if (nightsCount > 14) 
//////////////////////////////////////////////////////////////////////////////////////            {
//////////////////////////////////////////////////////////////////////////////////////                apartment -= apartment * 0.1; //2Т
//////////////////////////////////////////////////////////////////////////////////////            }

//////////////////////////////////////////////////////////////////////////////////////            double totalApartment = apartment * nightsCount; 
//////////////////////////////////////////////////////////////////////////////////////            double totalStudio = studio * nightsCount; 
//////////////////////////////////////////////////////////////////////////////////////            Console.WriteLine($"Apartment: {totalApartment:f2} lv.");//1Т
//////////////////////////////////////////////////////////////////////////////////////            Console.WriteLine($"Studio: {totalStudio:f2} lv."); 
//////////////////////////////////////////////////////////////////////////////////////        }
//////////////////////////////////////////////////////////////////////////////////////         */

//////////////////////////////////////////////////////////////////////////////////////Въпрос 2
//////////////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////////Дайте пример за метод (напишете примерен код), който сумира числата от 1 до n включително и като резултат връща тази сума. За примера използвайте код написан на програмния език C#.

////////////////////////////////////////////////////////////////////////////////////// static void Main(string[] args)

//////////////////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////////////////  int n = int.Parse(Console.ReadLine());

//////////////////////////////////////////////////////////////////////////////////////  int sum = 0;

//////////////////////////////////////////////////////////////////////////////////////  for (int i = 0; i <= n; i++)

//////////////////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////////////////    sum += i;

//////////////////////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////////////////////  Console.WriteLine(sum);

//////////////////////////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////////////////public static int SumNumbers(int n)
//////////////////////////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////////////////////////  int sum = 0;
//////////////////////////////////////////////////////////////////////////////////////  for (int i = 1; i <= n; i++)
//////////////////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////////////////    sum += i;
//////////////////////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////////////////////  return sum;
//////////////////////////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////////////////////////Въпрос 3
//////////////////////////////////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////////////////////////////////4,00 от максимално 4,00 точки
//////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////////Обяснете в каква последователност ще се изпълни програмата, когато имаме серия от проверки като на примера по-долу?


//////////////////////////////////////////////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////////////////////////////////////////////a. Последователно сравнява входното число от конзолата с цифрите от 1 до 9, като всяко следващо сравнение се извършва независимо от предходното сравнение дали е било истина. Ако никое от if условията не е изпълнено, се изпълнява последната else клаузa.
//////////////////////////////////////////////////////////////////////////////////////b. Последователно сравнява входното число от конзолата с цифрите от 1 до 9, като всяко следващо сравнение се извършва, само в случай че предходното сравнение не е било истина. Ако никое от if условията не е изпълнено, се изпълнява последната else клаузa. 
//////////////////////////////////////////////////////////////////////////////////////c. Последователно сравнява входното число от конзолата с цифрите от 1 до 9, като всяко следващо сравнение се извършва, само в случай че предходното сравнение не е било истина. Като последната else клаузa се изпълнява винаги.
//////////////////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////////////////////////////////Правилният отговор е: Последователно сравнява входното число от конзолата с цифрите от 1 до 9, като всяко следващо сравнение се извършва, само в случай че предходното сравнение не е било истина. Ако никое от if условията не е изпълнено, се изпълнява последната else клаузa.
//////////////////////////////////////////////////////////////////////////////////////Въпрос 4
//////////////////////////////////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////////Показан е следния програмен код на C#. Каква е целта на програмата? Посочете верния отговор.



//////////////////////////////////////////////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////////////////////////////////////////////a. Намира всички числа в интервала [1 … 1000], които завършват на 7 и ги отпечатва на конзолата. 
//////////////////////////////////////////////////////////////////////////////////////b. Намира всички числа в интервала [1 … 1000], които са равни на 7 и ги отпечатва на конзолата.
//////////////////////////////////////////////////////////////////////////////////////c. Намира всички числа в интервала [1 … 1000], които се делят на 10 и ги отпечатва на конзолата.
//////////////////////////////////////////////////////////////////////////////////////d. Намира всички числа в интервала [1 … 1000], които се делят на 7 и ги отпечатва на конзолата.
//////////////////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////////////////////////////////Правилният отговор е: Намира всички числа в интервала [1 … 1000], които завършват на 7 и ги отпечатва на конзолата.
//////////////////////////////////////////////////////////////////////////////////////Въпрос 5
//////////////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////////////От максимално 6,00
//////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////////Дайте пример за конзолна програма, която чете от конзолата страна и височина на триъгълник, въведени от потребителя, и пресмята неговото лице. Използвайте формулата за лице на триъгълник: area = a * h / 2.Закръглете резултата до 2 знака след десетичната точка.

//////////////////////////////////////////////////////////////////////////////////////Примерен вход/изход:


//////////////////////////////////////////////////////////////////////////////////////вход

//////////////////////////////////////////////////////////////////////////////////////изход

//////////////////////////////////////////////////////////////////////////////////////20
//////////////////////////////////////////////////////////////////////////////////////30

//////////////////////////////////////////////////////////////////////////////////////Triangle area = 300


//////////////////////////////////////////////////////////////////////////////////////15
//////////////////////////////////////////////////////////////////////////////////////35

//////////////////////////////////////////////////////////////////////////////////////Triangle area = 262.5

//////////////////////////////////////////////////////////////////////////////////////7.75
//////////////////////////////////////////////////////////////////////////////////////8.45

//////////////////////////////////////////////////////////////////////////////////////Triangle area = 32.74




//////////////////////////////////////////////////////////////////////////////////////static void Main(string[] args)

//////////////////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////////////////  decimal a = decimal.Parse(Console.ReadLine());

//////////////////////////////////////////////////////////////////////////////////////  decimal h = decimal.Parse(Console.ReadLine());

//////////////////////////////////////////////////////////////////////////////////////  var area = (a * h) / 2m;

//////////////////////////////////////////////////////////////////////////////////////  Console.WriteLine("Triangle area: " + Math.Round(area, 2));

//////////////////////////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////////////////////////Въпрос 6
//////////////////////////////////////////////////////////////////////////////////////Отчасти верен
//////////////////////////////////////////////////////////////////////////////////////1,50 от максимално 2,00 точки
//////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////////Интерпретаторът има за задача в  blank  да преведе код, написан на високо ниво (най-често на динамичен език) до blank  или код за виртуална машина.

//////////////////////////////////////////////////////////////////////////////////////Интерпретаторът е " blank  за изпълняване на програми", написани на някакъв програмен език. Той изпълнява командите на програмата  blank , като разбира не само от единични команди и поредици от команди, но и от другите езикови конструкции (проверки, повторения, функции и т.н.).

//////////////////////////////////////////////////////////////////////////////////////Езици, които работят с интерпретатор се изпълняват без да се компилират. Поради липса на предварителна  blank , при  blank  езици грешките се откриват  blank , след като програмата започне да работи, а не  blank .




////////////////////////////////////////////////////////////////////////////////////// една след другапо време на изпълнениеинтерпретеруемите машинен кодреално времеслед изпълнениепрограмакомпилацияпредварително
//////////////////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////////////////Your answer is partially correct.
//////////////////////////////////////////////////////////////////////////////////////Вие правилно сте избрали 6.
//////////////////////////////////////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////////////////////////////////////Интерпретаторът има за задача в [реално време] да преведе код, написан на високо ниво (най-често на динамичен език) до[машинен код] или код за виртуална машина.

//////////////////////////////////////////////////////////////////////////////////////Интерпретаторът е "[програма] за изпълняване на програми", написани на някакъв програмен език. Той изпълнява командите на програмата [една след друга], като разбира не само от единични команди и поредици от команди, но и от другите езикови конструкции (проверки, повторения, функции и т.н.).

//////////////////////////////////////////////////////////////////////////////////////Езици, които работят с интерпретатор се изпълняват без да се компилират. Поради липса на предварителна [компилация], при[интерпретеруемите] езици грешките се откриват [по време на изпълнение], след като програмата започне да работи, а не [предварително].



//////////////////////////////////////////////////////////////////////////////////////Въпрос 7
//////////////////////////////////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////////Посочете кое твърдение е вярно за променливите?
//////////////////////////////////////////////////////////////////////////////////////Изберете едно или повече:
//////////////////////////////////////////////////////////////////////////////////////a.Променливата е място, на което пазим информация. 
//////////////////////////////////////////////////////////////////////////////////////b. Всяка една променлива в C# си има тип и име. 
//////////////////////////////////////////////////////////////////////////////////////c. Не може да има две променливи с едно и също име. 
//////////////////////////////////////////////////////////////////////////////////////d. Имената на променливите могат да започват с числа.
//////////////////////////////////////////////////////////////////////////////////////e. Имената на променливите могат да бъдат служебни думи.
//////////////////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////////////////////////////////The correct answers are: Променливата е място, на което пазим информация., Всяка една променлива в C# си има тип и име., Не може да има две променливи с едно и също име.
//////////////////////////////////////////////////////////////////////////////////////Въпрос 8
//////////////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////////////От максимално 10,00
//////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////////Текст на въпроса


//////////////////////////////////////////////////////////////////////////////////////Пример: По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.



//////////////////////////////////////////////////////////////////////////////////////Условие: Разполагате със следния програмен код:

//////////////////////////////////////////////////////////////////////////////////////Program.cs

////////////////////////////////////////////////////////////////////////////////////// static void Main(string[] args)
//////////////////////////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////////////////////////  int days = (Console.ReadLine());
//////////////////////////////////////////////////////////////////////////////////////  int doctors = 7;
//////////////////////////////////////////////////////////////////////////////////////  int treated = 0;
//////////////////////////////////////////////////////////////////////////////////////  int untreated = 0;
//////////////////////////////////////////////////////////////////////////////////////  for (int day = 1; day < days; day++)
//////////////////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////////////////    int patientsCount = int.Parse(Console.ReadLine());
//////////////////////////////////////////////////////////////////////////////////////    if (day / 3 == 0 && untreated > treated)
//////////////////////////////////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////////////////////////////////      doctors++;
//////////////////////////////////////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////////////////////////////////////    if (patientsCount = doctors)
//////////////////////////////////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////////////////////////////////      treated += patientsCount;
//////////////////////////////////////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////////////////////////////////////    else

//////////////////////////////////////////////////////////////////////////////////////      treated += doctors;
//////////////////////////////////////////////////////////////////////////////////////    untreated += (patientsCount + doctors);
//////////////////////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////////////////////}
//////////////////////////////////////////////////////////////////////////////////////Console.WriteLine("Treated patients: {treated}.");
//////////////////////////////////////////////////////////////////////////////////////Console.WriteLine("Untreated patients: {untreated}."); 
//////////////////////////////////////////////////////////////////////////////////////        }



//////////////////////////////////////////////////////////////////////////////////////Открийте и поправете грешките във вече написания програмен код, така че да се реши поставената по-долу задача. Допълнете кода.

//////////////////////////////////////////////////////////////////////////////////////Болница
//////////////////////////////////////////////////////////////////////////////////////За даден период от време, всеки ден в болницата пристигат пациенти за преглед. Тя разполага първоначално със 7 лекари. Всеки лекар може да преглежда само по един пациент на ден, но понякога има недостиг на лекари, затова останалите пациенти се изпращат в други болници. Всеки трети ден, болницата прави изчисления и ако броят на непрегледаните пациенти е по-голям от броя на прегледаните, се назначава още един лекар. Като назначаването става преди да започне приемът на пациенти за деня.

//////////////////////////////////////////////////////////////////////////////////////Напишете програма, която изчислява за дадения период броя на прегледаните и непрегледаните пациенти.

//////////////////////////////////////////////////////////////////////////////////////Вход
//////////////////////////////////////////////////////////////////////////////////////Входът се чете от конзолата и съдържа:

//////////////////////////////////////////////////////////////////////////////////////·       На първия ред – периода, за който трябва да направите изчисления. Цяло число в интервала [1 ... 1000]

//////////////////////////////////////////////////////////////////////////////////////·       На следващите редове(равни на броят на дните) – броя пациенти, които пристигат за преглед за текущия ден. Цяло число в интервала [0…10 000]

//////////////////////////////////////////////////////////////////////////////////////Изход
//////////////////////////////////////////////////////////////////////////////////////Да се отпечатат на конзолата 2 реда :

//////////////////////////////////////////////////////////////////////////////////////·       На първия ред: “Treated patients: { брой прегледани пациенти}.”

//////////////////////////////////////////////////////////////////////////////////////·       На втория ред: “Untreated patients: { брой непрегледани пациенти}.”

//////////////////////////////////////////////////////////////////////////////////////Примерен вход и изход
//////////////////////////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////////////////Обяснения

//////////////////////////////////////////////////////////////////////////////////////4

//////////////////////////////////////////////////////////////////////////////////////7

//////////////////////////////////////////////////////////////////////////////////////27

//////////////////////////////////////////////////////////////////////////////////////9

//////////////////////////////////////////////////////////////////////////////////////1

//////////////////////////////////////////////////////////////////////////////////////Treated patients: 23.

//////////////////////////////////////////////////////////////////////////////////////Untreated patients: 21.

//////////////////////////////////////////////////////////////////////////////////////1 ден: 7 прегледани и 0 непрегледани пациента за деня

//////////////////////////////////////////////////////////////////////////////////////2 ден: 7 прегледани и 20 непрегледани пациента за деня

//////////////////////////////////////////////////////////////////////////////////////3 ден: До момента прегледаните пациенти са общо 14, а непрегледаните – 20 –> Назначава се нов лекар –>

//////////////////////////////////////////////////////////////////////////////////////8 прегледани и 1 непрегледан пациент за деня

//////////////////////////////////////////////////////////////////////////////////////4 ден: 1 прегледан и 0 непрегледани пациента за деня

//////////////////////////////////////////////////////////////////////////////////////Общо: 23 прегледани и 21 непрегледани пациенти.

//////////////////////////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////////////////6

//////////////////////////////////////////////////////////////////////////////////////25

//////////////////////////////////////////////////////////////////////////////////////25

//////////////////////////////////////////////////////////////////////////////////////25

//////////////////////////////////////////////////////////////////////////////////////25

//////////////////////////////////////////////////////////////////////////////////////25

//////////////////////////////////////////////////////////////////////////////////////2

//////////////////////////////////////////////////////////////////////////////////////Treated patients: 40.

//////////////////////////////////////////////////////////////////////////////////////Untreated patients: 87.

//////////////////////////////////////////////////////////////////////////////////////3

//////////////////////////////////////////////////////////////////////////////////////7

//////////////////////////////////////////////////////////////////////////////////////7

//////////////////////////////////////////////////////////////////////////////////////7

//////////////////////////////////////////////////////////////////////////////////////Treated patients: 21.

//////////////////////////////////////////////////////////////////////////////////////Untreated patients: 0.







////////////////////////////////////////////////////////////////////////////////////// static void Main(string[] args)

//////////////////////////////////////////////////////////////////////////////////////{



//////////////////////////////////////////////////////////////////////////////////////  int days = int.Parse(Console.ReadLine());

//////////////////////////////////////////////////////////////////////////////////////  int doctors = 7;

//////////////////////////////////////////////////////////////////////////////////////  int treated = 0;

//////////////////////////////////////////////////////////////////////////////////////  int untreated = 0;

//////////////////////////////////////////////////////////////////////////////////////  for (int day = 1; day <= days; day++)

//////////////////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////////////////    int patientsCount = int.Parse(Console.ReadLine());

//////////////////////////////////////////////////////////////////////////////////////    if (day % 3 == 0 && untreated > treated)

//////////////////////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////////////////////      doctors++;

//////////////////////////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////////////////////////    if (patientsCount == doctors || doctors > patientsCount)



//////////////////////////////////////////////////////////////////////////////////////    {



//////////////////////////////////////////////////////////////////////////////////////      treated += patientsCount;



//////////////////////////////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////////////////////////////    else



//////////////////////////////////////////////////////////////////////////////////////    {



//////////////////////////////////////////////////////////////////////////////////////      treated += doctors;



//////////////////////////////////////////////////////////////////////////////////////      untreated += (patientsCount - doctors);



//////////////////////////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////////////////////  Console.WriteLine($"Treated patients: {treated}.");

//////////////////////////////////////////////////////////////////////////////////////  Console.WriteLine($"Untreated patients: {untreated}.");

//////////////////////////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////////////////////////Забележка
///////////////////////////////////////////////////////////////////////////////////////*
//////////////////////////////////////////////////////////////////////////////////////        КЛЮЧ
//////////////////////////////////////////////////////////////////////////////////////       static void Main(string[] args)
//////////////////////////////////////////////////////////////////////////////////////       {
//////////////////////////////////////////////////////////////////////////////////////           int days = int.Parse(Console.ReadLine());//1Т
//////////////////////////////////////////////////////////////////////////////////////           int doctors = 7;
//////////////////////////////////////////////////////////////////////////////////////           int treated = 0; 
//////////////////////////////////////////////////////////////////////////////////////           int untreated = 0; 
//////////////////////////////////////////////////////////////////////////////////////           for (int day = 1; day <= days; day++) //1Т
//////////////////////////////////////////////////////////////////////////////////////           {
//////////////////////////////////////////////////////////////////////////////////////               int patientsCount = int.Parse(Console.ReadLine());

//////////////////////////////////////////////////////////////////////////////////////               if (day % 3 == 0 && untreated > treated) //2Т
//////////////////////////////////////////////////////////////////////////////////////               {
//////////////////////////////////////////////////////////////////////////////////////                   doctors++; 
//////////////////////////////////////////////////////////////////////////////////////               }
//////////////////////////////////////////////////////////////////////////////////////               if (patientsCount <= doctors)//1Т
//////////////////////////////////////////////////////////////////////////////////////               {
//////////////////////////////////////////////////////////////////////////////////////                   treated += patientsCount; 
//////////////////////////////////////////////////////////////////////////////////////               }
//////////////////////////////////////////////////////////////////////////////////////               else
//////////////////////////////////////////////////////////////////////////////////////               {//1Т
//////////////////////////////////////////////////////////////////////////////////////                   treated += doctors;
//////////////////////////////////////////////////////////////////////////////////////                   untreated += (patientsCount - doctors);//2Т
//////////////////////////////////////////////////////////////////////////////////////               } 
//////////////////////////////////////////////////////////////////////////////////////           } 
//////////////////////////////////////////////////////////////////////////////////////           Console.WriteLine($"Treated patients: {treated}."); //1Т
//////////////////////////////////////////////////////////////////////////////////////           Console.WriteLine($"Untreated patients: {untreated}."); //1Т
//////////////////////////////////////////////////////////////////////////////////////       }
//////////////////////////////////////////////////////////////////////////////////////        */

//////////////////////////////////////////////////////////////////////////////////////Въпрос 9
//////////////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////////Дайте пример за конзолна програма, която чете парола (един ред с произволен текст), въведена от потребителя, и проверява дали въведеното съвпада с фразата “s3cr3t!P@ssw0rd”. При съвпадение да се изведе “Welcome”. При несъвпадение да се изведе “Wrong password!”.

////////////////////////////////////////////////////////////////////////////////////// string password = Console.ReadLine();

//////////////////////////////////////////////////////////////////////////////////////string secretpass = "s3cr3t!P@ssw0rd";

//////////////////////////////////////////////////////////////////////////////////////if (password == secretpass)

//////////////////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////////////////  Console.WriteLine("Welcome");

//////////////////////////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////////////////////////else

//////////////////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////////////////  Console.WriteLine("Wrong password!");

//////////////////////////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////////////////////////Въпрос 10
//////////////////////////////////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////////Посочете как се записва в C# кратка форма на условна конструкция?
//////////////////////////////////////////////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////////////////////////////////////////////a. if(true) { //some code... } if else() { //some code... }
//////////////////////////////////////////////////////////////////////////////////////  b. do if (true)
//////////////////////////////////////////////////////////////////////////////////////    { //some code... }
//////////////////////////////////////////////////////////////////////////////////////      c. if (true)
//////////////////////////////////////////////////////////////////////////////////////      { //some code... } 
//////////////////////////////////////////////////////////////////////////////////////        d. (true) { //some code... }
//////////////////////////////////////////////////////////////////////////////////////          Забележка
//////////////////////////////////////////////////////////////////////////////////////          Your answer is correct.
//////////////////////////////////////////////////////////////////////////////////////          Правилният отговор е: if (true)
//////////////////////////////////////////////////////////////////////////////////////          { //some code... }
//////////////////////////////////////////////////////////////////////////////////////            Въпрос 11
//////////////////////////////////////////////////////////////////////////////////////          Правилно
//////////////////////////////////////////////////////////////////////////////////////          6,00 от максимално 6,00 точки
//////////////////////////////////////////////////////////////////////////////////////          НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////////          Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////////          Даден е следният примерен код на C#. Изчислете какъв ще бъде резултата, ако числото n = 5 , запишете в полето за отговор това, което ще се отпечата на конзолата.



//////////////////////////////////////////////////////////////////////////////////////Отговор:
//////////////////////////////////////////////////////////////////////////////////////            6
//////////////////////////////////////////////////////////////////////////////////////          Забележка
//////////////////////////////////////////////////////////////////////////////////////          Точен отговор: 6т.

//////////////////////////////////////////////////////////////////////////////////////Правилният отговор е: 6
//////////////////////////////////////////////////////////////////////////////////////          Въпрос 12
//////////////////////////////////////////////////////////////////////////////////////          Правилно
//////////////////////////////////////////////////////////////////////////////////////          6,00 от максимално 6,00 точки
//////////////////////////////////////////////////////////////////////////////////////          НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////////          Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////////          Открийте начините, по които се стартира проект във VisualStudio среда.

//////////////////////////////////////////////////////////////////////////////////////Изберете едно или повече:
//////////////////////////////////////////////////////////////////////////////////////a.С клавишната комбинация Shift +F5
//////////////////////////////////////////////////////////////////////////////////////          b.С клавишната комбинация Ctrl +F5
//////////////////////////////////////////////////////////////////////////////////////          c.С клавишната комбинация Ctrl +F10
//////////////////////////////////////////////////////////////////////////////////////          d.С клавишната комбинация Ctrl +Shift + F10
//////////////////////////////////////////////////////////////////////////////////////          e.С клавишната комбинация Ctrl +Shift + F5
//////////////////////////////////////////////////////////////////////////////////////          f.С бутона за стартиране
//////////////////////////////////////////////////////////////////////////////////////          Забележка
//////////////////////////////////////////////////////////////////////////////////////          Your answer is correct.
//////////////////////////////////////////////////////////////////////////////////////          The correct answers are: С бутона за стартиране, С клавишната комбинация Ctrl + F5
//////////////////////////////////////////////////////////////////////////////////////          Въпрос 13
//////////////////////////////////////////////////////////////////////////////////////          Отговорен
//////////////////////////////////////////////////////////////////////////////////////          От максимално 2,00
//////////////////////////////////////////////////////////////////////////////////////          НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////////          Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////////          Дефинирайте понятието език за програмиране.
//////////////////////////////////////////////////////////////////////////////////////          Език за програмиране е език, който се използва за да се задават команди на компютъра какво да прави.Езиците могат да са различни като C#,C,Java и още.Езика се използва в различни среди за разработка на софтуер като Visual Studio.

//////////////////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////////////////          Езикът за програмиране е предназначен за задаване на команди, които искаме компютърът да прочете, обработи и изпълни.Чрез езиците за програмиране пишем поредици от команди(програми), които задават какво да прави компютъра. Изпълнението на компютърните програми може да се реализира с компилатор или с интерпретатор.Съществуват различни видове езици за програмиране. С езици от високо ниво като C#, Python и JavaScript се създават приложни програми, например програма за четене на поща или чат програма.
//////////////////////////////////////////////////////////////////////////////////////Частичен отговор: 1т.
//////////////////////////////////////////////////////////////////////////////////////          Пълен отговор: 2т.
//////////////////////////////////////////////////////////////////////////////////////          Друго: 0т.
//////////////////////////////////////////////////////////////////////////////////////          Въпрос 14
//////////////////////////////////////////////////////////////////////////////////////          Отговорен
//////////////////////////////////////////////////////////////////////////////////////          От максимално 10,00
//////////////////////////////////////////////////////////////////////////////////////          НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////////          Текст на въпроса

//////////////////////////////////////////////////////////////////////////////////////Пример: По време на теоретичния изпит се предоставя непълен/ неработещ / некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.




//////////////////////////////////////////////////////////////////////////////////////Условие: Разполагате със следния програмен код:

//////////////////////////////////////////////////////////////////////////////////////            Program.cs

////////////////////////////////////////////////////////////////////////////////////// int n = int.Parse(Console.ReadLine());
//////////////////////////////////////////////////////////////////////////////////////            int d3 = 0;
//////////////////////////////////////////////////////////////////////////////////////            int d5 = 0;

//////////////////////////////////////////////////////////////////////////////////////            for (int i = 0; i < n; i--)
//////////////////////////////////////////////////////////////////////////////////////            {
//////////////////////////////////////////////////////////////////////////////////////              int number = Console.ReadLine();
//////////////////////////////////////////////////////////////////////////////////////              if (number % 2 == 0)
//////////////////////////////////////////////////////////////////////////////////////              {
//////////////////////////////////////////////////////////////////////////////////////                d2++;

//////////////////////////////////////////////////////////////////////////////////////                if (number % 3 == 0)
//////////////////////////////////////////////////////////////////////////////////////                {
//////////////////////////////////////////////////////////////////////////////////////                  d3++
//////////////////////////////////////////////////////////////////////////////////////                }
//////////////////////////////////////////////////////////////////////////////////////                if (number / 5 == 0)
//////////////////////////////////////////////////////////////////////////////////////                {
//////////////////////////////////////////////////////////////////////////////////////                  d5++;
//////////////////////////////////////////////////////////////////////////////////////                }
//////////////////////////////////////////////////////////////////////////////////////              }

//////////////////////////////////////////////////////////////////////////////////////              Console.WriteLine(d2);
//////////////////////////////////////////////////////////////////////////////////////              Console.WriteLine(d3);
//////////////////////////////////////////////////////////////////////////////////////              Console.WriteLine(d5);



//////////////////////////////////////////////////////////////////////////////////////              Открийте и поправете грешките във вече написания програмен код, така че да се реши поставената по - долу задача.Допълнете кода.

//////////////////////////////////////////////////////////////////////////////////////Деление без остатък

//////////////////////////////////////////////////////////////////////////////////////Дадени са n-на брой цели числа в интервала[1…1000].От тях някакъв брой се делят без остатък на 2, друг брой се делят без остатък на 3, друг брой се делят без остатък на 5.Да се напише програма, която изчислява и отпечатва броя на числата във всяка група.

//////////////////////////////////////////////////////////////////////////////////////Пример: имаме n = 10 числа: 680, 2, 600, 200, 800, 799, 199, 46, 128, 65.Получаваме следното разпределение и визуализация:

//////////////////////////////////////////////////////////////////////////////////////Деление без остатък на:

//////////////////////////////////////////////////////////////////////////////////////Числа в диапазона

//////////////////////////////////////////////////////////////////////////////////////Брой числа

//////////////////////////////////////////////////////////////////////////////////////2

//////////////////////////////////////////////////////////////////////////////////////680, 2, 600, 200, 800, 46, 128

//////////////////////////////////////////////////////////////////////////////////////7

//////////////////////////////////////////////////////////////////////////////////////3

//////////////////////////////////////////////////////////////////////////////////////600

//////////////////////////////////////////////////////////////////////////////////////1

//////////////////////////////////////////////////////////////////////////////////////5

//////////////////////////////////////////////////////////////////////////////////////680, 600, 200, 800, 65

//////////////////////////////////////////////////////////////////////////////////////5

//////////////////////////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////////////////////////На първия ред от входа стои цялото число n(1 ≤ n ≤ 1000) -брой числа.На следващите n реда стои по едно цяло число в интервала[1…1000] - числата които да бъдат проверени на колко се делят.

//////////////////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////////////////Да се отпечатат на конзолата 3 реда:

//////////////////////////////////////////////////////////////////////////////////////            На първият ред – брой на числата които се делят на 2
//////////////////////////////////////////////////////////////////////////////////////          На вторият ред - брой на числата които се делят на 3
//////////////////////////////////////////////////////////////////////////////////////          На третият ред - брой на числата които се делят на 4
//////////////////////////////////////////////////////////////////////////////////////          Примерен вход и изход

//////////////////////////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////////////////////////Изход




//////////////////////////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////////////////10

//////////////////////////////////////////////////////////////////////////////////////680

//////////////////////////////////////////////////////////////////////////////////////2

//////////////////////////////////////////////////////////////////////////////////////600

//////////////////////////////////////////////////////////////////////////////////////200

//////////////////////////////////////////////////////////////////////////////////////800

//////////////////////////////////////////////////////////////////////////////////////799

//////////////////////////////////////////////////////////////////////////////////////199

//////////////////////////////////////////////////////////////////////////////////////46

//////////////////////////////////////////////////////////////////////////////////////128

//////////////////////////////////////////////////////////////////////////////////////65

//////////////////////////////////////////////////////////////////////////////////////7

//////////////////////////////////////////////////////////////////////////////////////1

//////////////////////////////////////////////////////////////////////////////////////5

//////////////////////////////////////////////////////////////////////////////////////3

//////////////////////////////////////////////////////////////////////////////////////3

//////////////////////////////////////////////////////////////////////////////////////6

//////////////////////////////////////////////////////////////////////////////////////9




//////////////////////////////////////////////////////////////////////////////////////1

//////////////////////////////////////////////////////////////////////////////////////3

//////////////////////////////////////////////////////////////////////////////////////0





//////////////////////////////////////////////////////////////////////////////////////static void Main(string[] args)

//////////////////////////////////////////////////////////////////////////////////////            {

//////////////////////////////////////////////////////////////////////////////////////              int n = int.Parse(Console.ReadLine());

//////////////////////////////////////////////////////////////////////////////////////              int d2 = 0;

//////////////////////////////////////////////////////////////////////////////////////              int d3 = 0;

//////////////////////////////////////////////////////////////////////////////////////              int d5 = 0;



//////////////////////////////////////////////////////////////////////////////////////              for (int i = 0; i < n; i++)

//////////////////////////////////////////////////////////////////////////////////////              {

//////////////////////////////////////////////////////////////////////////////////////                int number = int.Parse(Console.ReadLine());

//////////////////////////////////////////////////////////////////////////////////////                if (number % 2 == 0)

//////////////////////////////////////////////////////////////////////////////////////                {

//////////////////////////////////////////////////////////////////////////////////////                  d2++;

//////////////////////////////////////////////////////////////////////////////////////                }

//////////////////////////////////////////////////////////////////////////////////////                if (number % 3 == 0)

//////////////////////////////////////////////////////////////////////////////////////                {

//////////////////////////////////////////////////////////////////////////////////////                  d3++;

//////////////////////////////////////////////////////////////////////////////////////                }

//////////////////////////////////////////////////////////////////////////////////////                if (number % 5 == 0)

//////////////////////////////////////////////////////////////////////////////////////                {

//////////////////////////////////////////////////////////////////////////////////////                  d5++;

//////////////////////////////////////////////////////////////////////////////////////                }



//////////////////////////////////////////////////////////////////////////////////////              }

//////////////////////////////////////////////////////////////////////////////////////              Console.WriteLine(d2);

//////////////////////////////////////////////////////////////////////////////////////              Console.WriteLine(d3);

//////////////////////////////////////////////////////////////////////////////////////              Console.WriteLine(d5);

//////////////////////////////////////////////////////////////////////////////////////            }

//////////////////////////////////////////////////////////////////////////////////////            Забележка
//////////////////////////////////////////////////////////////////////////////////////            /*
//////////////////////////////////////////////////////////////////////////////////////                    КЛЮЧ
//////////////////////////////////////////////////////////////////////////////////////                   int n = int.Parse(Console.ReadLine()); 
//////////////////////////////////////////////////////////////////////////////////////                       int d2 = 0; //2Т
//////////////////////////////////////////////////////////////////////////////////////                       int d3 = 0; 
//////////////////////////////////////////////////////////////////////////////////////                       int d5 = 0; 

//////////////////////////////////////////////////////////////////////////////////////                       for (int i = 0; i < n; i++) //2Т
//////////////////////////////////////////////////////////////////////////////////////                       {
//////////////////////////////////////////////////////////////////////////////////////                           int number = int.Parse(Console.ReadLine());//2Т
//////////////////////////////////////////////////////////////////////////////////////                           if (number % 2 == 0) 
//////////////////////////////////////////////////////////////////////////////////////                           {
//////////////////////////////////////////////////////////////////////////////////////                               d2++; 
//////////////////////////////////////////////////////////////////////////////////////                           }//1Т
//////////////////////////////////////////////////////////////////////////////////////                           if (number % 3 == 0) 
//////////////////////////////////////////////////////////////////////////////////////                           {
//////////////////////////////////////////////////////////////////////////////////////                               d3++; //1Т
//////////////////////////////////////////////////////////////////////////////////////                           }
//////////////////////////////////////////////////////////////////////////////////////                           if (number % 5 == 0) //2Т
//////////////////////////////////////////////////////////////////////////////////////                           {
//////////////////////////////////////////////////////////////////////////////////////                               d5++; 
//////////////////////////////////////////////////////////////////////////////////////                           }
//////////////////////////////////////////////////////////////////////////////////////                       }

//////////////////////////////////////////////////////////////////////////////////////                       Console.WriteLine(d2); 
//////////////////////////////////////////////////////////////////////////////////////                       Console.WriteLine(d3); 
//////////////////////////////////////////////////////////////////////////////////////                       Console.WriteLine(d5);
//////////////////////////////////////////////////////////////////////////////////////                    */

//////////////////////////////////////////////////////////////////////////////////////            Въпрос 15
//////////////////////////////////////////////////////////////////////////////////////          Правилно
//////////////////////////////////////////////////////////////////////////////////////          6,00 от максимално 6,00 точки
//////////////////////////////////////////////////////////////////////////////////////          НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////////          Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////////          Имате даден следният програмен фрагмент:



//////////////////////////////////////////////////////////////////////////////////////Открийте какъв ще бъде резултатът след изпълнението на програмата при подаден вход 120.

//////////////////////////////////////////////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////////////////////////////////////////////          a.Less than 200
//////////////////////////////////////////////////////////////////////////////////////          b.Програмата ще хвърли изключение.
//////////////////////////////////////////////////////////////////////////////////////c.Greater than 100
//////////////////////////////////////////////////////////////////////////////////////          d.Between 100 and 200
//////////////////////////////////////////////////////////////////////////////////////          Забележка
//////////////////////////////////////////////////////////////////////////////////////          Your answer is correct.
//////////////////////////////////////////////////////////////////////////////////////          Правилният отговор е: Between 100 and 200
//////////////////////////////////////////////////////////////////////////////////////          Въпрос 16
//////////////////////////////////////////////////////////////////////////////////////          Правилно
//////////////////////////////////////////////////////////////////////////////////////          4,00 от максимално 4,00 точки
//////////////////////////////////////////////////////////////////////////////////////          НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////////          Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////////          Показан е следният програмен фрагмент на C#. Обобщете какъв ще бъде резултатът от изпълнението на програмата?



//////////////////////////////////////////////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////////////////////////////////////////////          a.Програмата прочита едно целочислено число.След което цикълът отпечатва числата от 1 до това число n, като всяко едно от числата се отпечатва на отделен ред.
//////////////////////////////////////////////////////////////////////////////////////          b.Програмата прочита едно реално число.След което цикълът отпечатва числата от 1 до това число n, като всяко едно от числата се отпечатва на отделен ред.
//////////////////////////////////////////////////////////////////////////////////////          c.Програмата прочита едно реално число.След което цикълът отпечатва числата от 1 до това число n, като всяко едно от числата разделено от интервал.
//////////////////////////////////////////////////////////////////////////////////////          d.Програмата прочита едно целочислено число.След което цикълът отпечатва числата от 1 до това число n в обратен ред, като всяко едно от числата се отпечатва на отделен ред. 
//////////////////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////////////////////////////////Правилният отговор е: Програмата прочита едно целочислено число.След което цикълът отпечатва числата от 1 до това число n в обратен ред, като всяко едно от числата се отпечатва на отделен ред.
//////////////////////////////////////////////////////////////////////////////////////Въпрос 17
//////////////////////////////////////////////////////////////////////////////////////          Отговорен
//////////////////////////////////////////////////////////////////////////////////////          От максимално 2,00
//////////////////////////////////////////////////////////////////////////////////////          НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////////          Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////////          Дефинирайте понятието вложени цикли.

//////////////////////////////////////////////////////////////////////////////////////Вложени цикли е вид структура, където един цикъл е съдържан в друг цикъл.Вътрешният цикъл се изпълнява напълно за всяка итерация на външния цикъл.Това създава вложена структура в която многократни итерации се извършват за всяка итерация на външния цикъл.

//////////////////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////////////////Вложените цикли представляват конструкция, при която в тялото на един цикъл(външен) се изпълнява друг цикъл(вътрешен). За всяко завъртане на външния цикъл, вътрешният се извърта целият.Това се случва по следния начин:

//////////////////////////////////////////////////////////////////////////////////////При стартиране на изпълнение на вложени цикли първо стартира външният цикъл: извършва се инициализация на неговата управляваща променлива и след проверка за край на цикъла, се изпълнява кодът в тялото му.
//////////////////////////////////////////////////////////////////////////////////////          След това се изпълнява вътрешният цикъл. Извършва се инициализация на началната стойност на управляващата му променлива, прави се проверка за край на цикъла и се изпълнява кодът в тялото му.
//////////////////////////////////////////////////////////////////////////////////////          При достигане на зададената стойност за край на вътрешния цикъл, програмата се връща една стъпка нагоре и се продължава започналото изпълнение предходния(външния) цикъл.Променя се с една стъпка управляващата променлива за външния цикъл, проверява се дали условието за край е удовлетворено и започва ново изпълнение на вложения(вътрешния) цикъл.
//////////////////////////////////////////////////////////////////////////////////////          Това се повтаря докато променливата на външния цикъл достигне условието за край на цикъла.
//////////////////////////////////////////////////////////////////////////////////////Пълен отговор: 2т
//////////////////////////////////////////////////////////////////////////////////////Непълен отговор: 1т.

//////////////////////////////////////////////////////////////////////////////////////Въпрос 18
//////////////////////////////////////////////////////////////////////////////////////          Правилно
//////////////////////////////////////////////////////////////////////////////////////          2,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////////////////////////////////          НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////////          Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////////          Дефинирайте понятието алгоритъм.
//////////////////////////////////////////////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////////////////////////////////////////////          a.Съвкупност от традиционни инструменти за разработване на софтуерни приложения.
//////////////////////////////////////////////////////////////////////////////////////          b.Управляват хардуера и изискват много усилия и огромен брой команди, за да свършат единица работа
//////////////////////////////////////////////////////////////////////////////////////          c.Поредица от команди, необходими, за да се свърши определена работа. 
//////////////////////////////////////////////////////////////////////////////////////d.Превежда кода от програмен език на машинен код.
//////////////////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////////////////////////////////Правилният отговор е: Поредица от команди, необходими, за да се свърши определена работа.
//////////////////////////////////////////////////////////////////////////////////////Въпрос 19
//////////////////////////////////////////////////////////////////////////////////////          Отчасти верен
//////////////////////////////////////////////////////////////////////////////////////          1,33 от максимално 2,00 точки
//////////////////////////////////////////////////////////////////////////////////////          НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////////          Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////////          Формулирайте правилно определението за условни конструкции.

//////////////////////////////////////////////////////////////////////////////////////Условните конструкции if и if-else представляват blank, чрез който програмата може да се държи  blank , в зависимост от blank, което се проверява по време на изпълнение на конструкцията.



//////////////////////////////////////////////////////////////////////////////////////тип условен контролразличнонякакво условиенякакъв обектеднакво
//////////////////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////////////////          Your answer is partially correct.
//////////////////////////////////////////////////////////////////////////////////////Вие правилно сте избрали 2.
//////////////////////////////////////////////////////////////////////////////////////          Правилният отговор е:
//////////////////////////////////////////////////////////////////////////////////////            Формулирайте правилно определението за условни конструкции.

//////////////////////////////////////////////////////////////////////////////////////Условните конструкции if и if-else представляват[тип условен контрол], чрез който програмата може да се държи[различно], в зависимост от[някакво условие], което се проверява по време на изпълнение на конструкцията.

//////////////////////////////////////////////////////////////////////////////////////Въпрос 20
//////////////////////////////////////////////////////////////////////////////////////          Отговорен
//////////////////////////////////////////////////////////////////////////////////////          От максимално 10,00
//////////////////////////////////////////////////////////////////////////////////////          НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////////          Текст на въпроса



//////////////////////////////////////////////////////////////////////////////////////Пример: По време на теоретичния изпит се предоставя непълен/ неработещ / некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.




//////////////////////////////////////////////////////////////////////////////////////Условие: Разполагате със следния програмен код:

//////////////////////////////////////////////////////////////////////////////////////            Program.cs

//////////////////////////////////////////////////////////////////////////////////////int number = int.Parse(Console.ReadLine());
//////////////////////////////////////////////////////////////////////////////////////            int firstDigit = number / 100;
//////////////////////////////////////////////////////////////////////////////////////            int secondDigit = (number / 100) % 10;
//////////////////////////////////////////////////////////////////////////////////////            int thirdDigit = number % 100;
//////////////////////////////////////////////////////////////////////////////////////            int rows = firstDigit + secondDigit;
//////////////////////////////////////////////////////////////////////////////////////            int cols = firstDigit + thirdDigit;

//////////////////////////////////////////////////////////////////////////////////////            for (int row = 0; row < rows; row--)
//////////////////////////////////////////////////////////////////////////////////////            {
//////////////////////////////////////////////////////////////////////////////////////              for (int col = 0; col > cols; col++)
//////////////////////////////////////////////////////////////////////////////////////              {
//////////////////////////////////////////////////////////////////////////////////////                if (number % 5 == 0)
//////////////////////////////////////////////////////////////////////////////////////                {
//////////////////////////////////////////////////////////////////////////////////////                  number -= firstDigit;
//////////////////////////////////////////////////////////////////////////////////////                }
//////////////////////////////////////////////////////////////////////////////////////                if (number % 3 == 0)
//////////////////////////////////////////////////////////////////////////////////////                {
//////////////////////////////////////////////////////////////////////////////////////                  number = secondDigit;
//////////////////////////////////////////////////////////////////////////////////////                }
//////////////////////////////////////////////////////////////////////////////////////                else
//////////////////////////////////////////////////////////////////////////////////////                {
//////////////////////////////////////////////////////////////////////////////////////                  number += thirdDigit;
//////////////////////////////////////////////////////////////////////////////////////                }
//////////////////////////////////////////////////////////////////////////////////////                Console.Write($"{number} ");
//////////////////////////////////////////////////////////////////////////////////////              }

//////////////////////////////////////////////////////////////////////////////////////              Console.WriteLine();
//////////////////////////////////////////////////////////////////////////////////////            }



//////////////////////////////////////////////////////////////////////////////////////            Открийте и поправете грешките във вече написания програмен код, така че да се реши поставената по - долу задача.Допълнете кода.




//////////////////////////////////////////////////////////////////////////////////////Цифри

//////////////////////////////////////////////////////////////////////////////////////Като вход на програмата, се прочита от конзолата 1 цяло трицифрено число.Трябва да принтирате числото определен брой пъти, като всеки път, преди да се принтира, числото се модифицира по следния начин:

//////////////////////////////////////////////////////////////////////////////////////·       ако числото се дели на 5 без остатък, извадете от него първата му цифра,

//////////////////////////////////////////////////////////////////////////////////////·       ако числото се дели на 3 без остатък, извадете от него втората му цифра,

//////////////////////////////////////////////////////////////////////////////////////·       ако не е нито едно от горните – прибавете към него третата му цифра,

//////////////////////////////////////////////////////////////////////////////////////Принтирайте на конзолата N на брой реда, като всеки ред има М на брой числа, които са резултат от горните действия. Редовете са равни на сбора на първата и втората цифра на числото, а колоните – на първата и третата цифра.

//////////////////////////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////////////////////////Входът е цяло число в интервала[100…999].

//////////////////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////////////////Да се отпечатат на конзолата всички цели числа, които са резултат от дадените по-горе изчисления в съответния брой редове и колони, както в примерите.

//////////////////////////////////////////////////////////////////////////////////////Примерен вход и изход

//////////////////////////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////////////////Обяснения

//////////////////////////////////////////////////////////////////////////////////////132

//////////////////////////////////////////////////////////////////////////////////////129 126 123

//////////////////////////////////////////////////////////////////////////////////////120 119 121

//////////////////////////////////////////////////////////////////////////////////////123 120 119

//////////////////////////////////////////////////////////////////////////////////////121 123 120

//////////////////////////////////////////////////////////////////////////////////////(1 + 3) = 4 и(1 + 2) = 3-> 4 реда по 3 числа на всеки ред

//////////////////////////////////////////////////////////////////////////////////////Входното число 132

//////////////////////////////////////////////////////////////////////////////////////132->деление на 3-> 132 - 3 =

//////////////////////////////////////////////////////////////////////////////////////= 129->деление на 3-> 129 - 3 =

//////////////////////////////////////////////////////////////////////////////////////= 126->деление на 3-> 126 - 3 =

//////////////////////////////////////////////////////////////////////////////////////= 123->деление на 3-> 123 - 3 =

//////////////////////////////////////////////////////////////////////////////////////= 120->деление на 5-> 120 - 1 =

//////////////////////////////////////////////////////////////////////////////////////..... 121->нито на 5, нито на 3-> 121 + 2 = 123

//////////////////////////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////////////////Обяснения

//////////////////////////////////////////////////////////////////////////////////////376

//////////////////////////////////////////////////////////////////////////////////////382 388 394 400 397 403 409 415 412

//////////////////////////////////////////////////////////////////////////////////////418 424 430 427 433 439 445 442 448

//////////////////////////////////////////////////////////////////////////////////////454 460 457 463 469 475 472 478 484

//////////////////////////////////////////////////////////////////////////////////////490 487 493 499 505 502 508 514 520

//////////////////////////////////////////////////////////////////////////////////////517 523 529 535 532 538 544 550 547

//////////////////////////////////////////////////////////////////////////////////////553 559 565 562 568 574 580 577 583

//////////////////////////////////////////////////////////////////////////////////////589 595 592 598 604 610 607 613 619

//////////////////////////////////////////////////////////////////////////////////////625 622 628 634 640 637 643 649 655

//////////////////////////////////////////////////////////////////////////////////////652 658 664 670 667 673 679 685 682

//////////////////////////////////////////////////////////////////////////////////////688 694 700 697 703 709 715 712 718

//////////////////////////////////////////////////////////////////////////////////////10 реда по 9 числа на всеки

//////////////////////////////////////////////////////////////////////////////////////Входното число 376->нито на 5, нито на 3-> 376 + 6 =

//////////////////////////////////////////////////////////////////////////////////////= 382->нито на 5, нито на 3-> 382 + 6 =

//////////////////////////////////////////////////////////////////////////////////////= 388 + 6 = 394 + 6 =

//////////////////////////////////////////////////////////////////////////////////////= 400->деление на 5-> 400 – 3 = 397...




////////////////////////////////////////////////////////////////////////////////////// int number = int.Parse(Console.ReadLine());

//////////////////////////////////////////////////////////////////////////////////////            int firstDigit = number / 100;

//////////////////////////////////////////////////////////////////////////////////////            int secondDigit = (number / 10) % 10;

//////////////////////////////////////////////////////////////////////////////////////            int thirdDigit = number % 10;

//////////////////////////////////////////////////////////////////////////////////////            int rows = firstDigit + secondDigit;

//////////////////////////////////////////////////////////////////////////////////////            int cols = firstDigit + thirdDigit;



//////////////////////////////////////////////////////////////////////////////////////            for (int row = 0; row < rows; row++)

//////////////////////////////////////////////////////////////////////////////////////            {

//////////////////////////////////////////////////////////////////////////////////////              for (int col = 0; col < cols; col++)

//////////////////////////////////////////////////////////////////////////////////////              {

//////////////////////////////////////////////////////////////////////////////////////                if (number % 5 == 0)

//////////////////////////////////////////////////////////////////////////////////////                {

//////////////////////////////////////////////////////////////////////////////////////                  number -= firstDigit;

//////////////////////////////////////////////////////////////////////////////////////                }

//////////////////////////////////////////////////////////////////////////////////////                else if (number % 3 == 0)

//////////////////////////////////////////////////////////////////////////////////////                {

//////////////////////////////////////////////////////////////////////////////////////                  number -= secondDigit;

//////////////////////////////////////////////////////////////////////////////////////                }

//////////////////////////////////////////////////////////////////////////////////////                else

//////////////////////////////////////////////////////////////////////////////////////                {

//////////////////////////////////////////////////////////////////////////////////////                  number += thirdDigit;

//////////////////////////////////////////////////////////////////////////////////////                }

//////////////////////////////////////////////////////////////////////////////////////                Console.Write($"{number} ");

//////////////////////////////////////////////////////////////////////////////////////              }



//////////////////////////////////////////////////////////////////////////////////////              Console.WriteLine();



//////////////////////////////////////////////////////////////////////////////////////              Забележка
//////////////////////////////////////////////////////////////////////////////////////              /*
//////////////////////////////////////////////////////////////////////////////////////                       КЛЮЧ
//////////////////////////////////////////////////////////////////////////////////////                       int number = int.Parse(Console.ReadLine()); 
//////////////////////////////////////////////////////////////////////////////////////                          int firstDigit = number / 100; 
//////////////////////////////////////////////////////////////////////////////////////                          int secondDigit = (number / 10) % 10; //2Т
//////////////////////////////////////////////////////////////////////////////////////                          int thirdDigit = number % 10; //2Т
//////////////////////////////////////////////////////////////////////////////////////                          int rows = firstDigit + secondDigit; 
//////////////////////////////////////////////////////////////////////////////////////                          int cols = firstDigit + thirdDigit; 

//////////////////////////////////////////////////////////////////////////////////////                          for (int row = 0; row < rows; row++) //2Т
//////////////////////////////////////////////////////////////////////////////////////                          {
//////////////////////////////////////////////////////////////////////////////////////                              for (int col = 0; col < cols; col++) //2Т
//////////////////////////////////////////////////////////////////////////////////////                              {
//////////////////////////////////////////////////////////////////////////////////////                                  if (number % 5 == 0) 
//////////////////////////////////////////////////////////////////////////////////////                                  {
//////////////////////////////////////////////////////////////////////////////////////                                      number -= firstDigit;
//////////////////////////////////////////////////////////////////////////////////////                                  }
//////////////////////////////////////////////////////////////////////////////////////                                  else if (number % 3 == 0) //1Т
//////////////////////////////////////////////////////////////////////////////////////                                  {
//////////////////////////////////////////////////////////////////////////////////////                                      number -= secondDigit;//1Т
//////////////////////////////////////////////////////////////////////////////////////                                  }
//////////////////////////////////////////////////////////////////////////////////////                                  else
//////////////////////////////////////////////////////////////////////////////////////                                  {
//////////////////////////////////////////////////////////////////////////////////////                                      number += thirdDigit; 
//////////////////////////////////////////////////////////////////////////////////////                                  }
//////////////////////////////////////////////////////////////////////////////////////                                  Console.Write($"{number} "); 
//////////////////////////////////////////////////////////////////////////////////////                              } 

//////////////////////////////////////////////////////////////////////////////////////                              Console.WriteLine(); 
//////////////////////////////////////////////////////////////////////////////////////                          }
//////////////////////////////////////////////////////////////////////////////////////                       */

//////////////////////////////////////////////////////////////////////////////////////              Въпрос 21
//////////////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////////Дайте пример за while цикъл в C#, който отпечатва числата от 1 до 10(включително), всяко на отделен ред.

//////////////////////////////////////////////////////////////////////////////////////int n = 1;

//////////////////////////////////////////////////////////////////////////////////////              while (n <= 10)

//////////////////////////////////////////////////////////////////////////////////////              {

//////////////////////////////////////////////////////////////////////////////////////                Console.WriteLine(n);

//////////////////////////////////////////////////////////////////////////////////////                n++;

//////////////////////////////////////////////////////////////////////////////////////              }

//////////////////////////////////////////////////////////////////////////////////////              Забележка
//////////////////////////////////////////////////////////////////////////////////////int num = 1;
//////////////////////////////////////////////////////////////////////////////////////              while (num <= 10)
//////////////////////////////////////////////////////////////////////////////////////              {
//////////////////////////////////////////////////////////////////////////////////////                Console.WriteLine(num++);
//////////////////////////////////////////////////////////////////////////////////////              }

//////////////////////////////////////////////////////////////////////////////////////              Пълен отговор: 4т.

//////////////////////////////////////////////////////////////////////////////////////Непълен отговор: 2т





//////////////////////////////////////////////////////////////////////////////////////Край на прегледа
//////////////////////////////////////////////////////////////////////////////////////Отиди на ...
//////////////////////////////////////////////////////////////////////////////////////Отиди на ...
//////////////////////////////////////////////////////////////////////////////////////Прескочи < span id = "mod_quiz_navblock_title" > Навигация в теста</ span >
//////////////////////////////////////////////////////////////////////////////////////              Навигация в теста
//////////////////////////////////////////////////////////////////////////////////////Край на прегледа
//////////////////////////////////////////////////////////////////////////////////////Вие сте влезли в системата като Добри Илев(Изход)
//////////////////////////////////////////////////////////////////////////////////////тренировъчен - курс - по
//////////////////////////////////////////////////////////////////////////////////////Data retention summary

////////////////////////////////////////////////////////////////////////////////////using System.Reflection;
///////////////////////////////////////////////////////////////////////////////////////*
///////////////////////////////////////////////////////////////////////////////////////*
////////////////////////////////////////////////////////////////////////////////////Прескочи на основното съдържание
////////////////////////////////////////////////////////////////////////////////////ПГЕЕ
////////////////////////////////////////////////////////////////////////////////////Български ‎(bg)‎ 
////////////////////////////////////////////////////////////////////////////////////Добри Илев 
////////////////////////////////////////////////////////////////////////////////////Тренировъчен курс - Програмно осигуряване
////////////////////////////////////////////////////////////////////////////////////Начална страница
////////////////////////////////////////////////////////////////////////////////////Моите курсове
//////////////////////////////////////////////////////////////////////////////////// тренировъчен-курс-по
//////////////////////////////////////////////////////////////////////////////////// Изпитна тема 1
//////////////////////////////////////////////////////////////////////////////////// Тест към Изпитна тема №1
////////////////////////////////////////////////////////////////////////////////////Започнат на	неделя, 2 април 2023, 12:34
////////////////////////////////////////////////////////////////////////////////////Състояние Завършен
////////////////////////////////////////////////////////////////////////////////////Приключен на	неделя, 2 април 2023, 13:42
////////////////////////////////////////////////////////////////////////////////////Изминало време	1 час 8 мин.
////////////////////////////////////////////////////////////////////////////////////Оценка	Още не е оценен
////////////////////////////////////////////////////////////////////////////////////Въпрос 1
////////////////////////////////////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////Посочете правилната стойност по подразбиране към всеки от типовете данни:


////////////////////////////////////////////////////////////////////////////////////char

////////////////////////////////////////////////////////////////////////////////////Отговор 1
////////////////////////////////////////////////////////////////////////////////////'\u0000'

////////////////////////////////////////////////////////////////////////////////////bool

////////////////////////////////////////////////////////////////////////////////////Отговор 2
////////////////////////////////////////////////////////////////////////////////////false

////////////////////////////////////////////////////////////////////////////////////string

////////////////////////////////////////////////////////////////////////////////////Отговор 3
////////////////////////////////////////////////////////////////////////////////////null

////////////////////////////////////////////////////////////////////////////////////float

////////////////////////////////////////////////////////////////////////////////////Отговор 4
////////////////////////////////////////////////////////////////////////////////////0.0f

////////////////////////////////////////////////////////////////////////////////////sbyte

////////////////////////////////////////////////////////////////////////////////////Отговор 5
////////////////////////////////////////////////////////////////////////////////////0

////////////////////////////////////////////////////////////////////////////////////decimal

////////////////////////////////////////////////////////////////////////////////////Отговор 6
////////////////////////////////////////////////////////////////////////////////////0.0m

////////////////////////////////////////////////////////////////////////////////////object

////////////////////////////////////////////////////////////////////////////////////Отговор 7
////////////////////////////////////////////////////////////////////////////////////null

////////////////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////////////////////////////////////////Правилният отговор е: char → '\u0000', bool → false, string → null, float → 0.0f, sbyte → 0, decimal → 0.0m, object → null
////////////////////////////////////////////////////////////////////////////////////Въпрос 2
////////////////////////////////////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////В таблицата по-долу трябва да посочите правилните места на операторите за сравнение в C#. В колона Означение поставяте съответния оператор, а в колона Работи за - задавате данните, за които може да работи съответния оператор.

////////////////////////////////////////////////////////////////////////////////////Оператор	Означение	Работи за
////////////////////////////////////////////////////////////////////////////////////Проверка за равенство	 blank 	 blank 
////////////////////////////////////////////////////////////////////////////////////Проверка за различие	 blank 
////////////////////////////////////////////////////////////////////////////////////По-голямо	 blank 	 blank 
////////////////////////////////////////////////////////////////////////////////////По-голямо или равно	 blank 
////////////////////////////////////////////////////////////////////////////////////По-малко	 blank 
////////////////////////////////////////////////////////////////////////////////////По-малко или равно	 blank 


////////////////////////////////////////////////////////////////////////////////////== != >>=<<=!======!числа, стрингове, датичисла, дати, други сравними типовесамо за числасамо за стрингове
////////////////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////////////////////////////////////////В таблицата по-долу трябва да посочите правилните места на операторите за сравнение в C#. В колона Означение поставяте съответния оператор, а в колона Работи за - задавате данните, за които може да работи съответния оператор.

////////////////////////////////////////////////////////////////////////////////////Оператор	Означение	Работи за
////////////////////////////////////////////////////////////////////////////////////Проверка за равенство	[==][числа, стрингове, дати]
////////////////////////////////////////////////////////////////////////////////////Проверка за различие	[ !=]
////////////////////////////////////////////////////////////////////////////////////По - голямо[ >][числа, дати, други сравними типове]
////////////////////////////////////////////////////////////////////////////////////По - голямо или равно[>=]
////////////////////////////////////////////////////////////////////////////////////По-малко	[<]
////////////////////////////////////////////////////////////////////////////////////По - малко или равно[<=]
////////////////////////////////////////////////////////////////////////////////////Въпрос 3
////////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////Дайте пример за метод (напишете примерен код), който сумира числата от 1 до n включително и като резултат връща тази сума. За примера използвайте код написан на програмния език C#.

////////////////////////////////////////////////////////////////////////////////////using System;



////////////////////////////////////////////////////////////////////////////////////class Program

////////////////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////////////////  static int SumNumbers(int n)

////////////////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////////////////    int sum = 0;

////////////////////////////////////////////////////////////////////////////////////    for (int i = 1; i <= n; i++)

////////////////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////////////////      sum += i;

////////////////////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////////////////////    return sum;

////////////////////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////////////////////  public static void Main(string[] args)

////////////////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////////////////    int n = 10;

////////////////////////////////////////////////////////////////////////////////////    int result = SumNumbers(n);

////////////////////////////////////////////////////////////////////////////////////    Console.WriteLine($"Сумата на числата от 1 до {n} е: {result}");

////////////////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////////////////public static int SumNumbers(int n)
////////////////////////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////////////////////////  int sum = 0;
////////////////////////////////////////////////////////////////////////////////////  for (int i = 1; i <= n; i++)
////////////////////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////////////////////    sum += i;
////////////////////////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////////////////////////  return sum;
////////////////////////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////////////////////////Въпрос 4
////////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////Дефинирайте понятието for цикъл в C#. Опишете декларацията на for цикъл който преминава последователно през числата от 1 до 10 и ги отпечатва. Опишете конструкцията на for цикълa, декларация, стъпки, цел и тяло на цикъла. 

////////////////////////////////////////////////////////////////////////////////////Понятието for цикъл в C# представлява един от основните циклични контролни оператори, който позволява повтарянето на даден блок код определен брой пъти. for цикълът се състои от инициализация, условие, итерация (обновяване) и тяло на цикъла.
////////////////////////////////////////////////////////////////////////////////////Ето декларацията на for цикъл, който преминава последователно през числата от 1 до 10 и ги отпечатва:
////////////////////////////////////////////////////////////////////////////////////for (int i = 1; i <= 10; i++)
////////////////////////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////////////////////////  Console.WriteLine(i);
////////////////////////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////////////////////////Конструкцията на for цикъла се разделя на следните части:
////////////////////////////////////////////////////////////////////////////////////Декларация: for (int i = 1; i <= 10; i++)
////////////////////////////////////////////////////////////////////////////////////Инициализация: int i = 1 - тук се дефинира и инициализира променлива за брояча на цикъла. В този пример i се инициализира със стойността 1.
////////////////////////////////////////////////////////////////////////////////////Условие: i <= 10 - това условие се проверява преди всяка итерация на цикъла. Ако условието е вярно, цикълът продължава, ако не е вярно, цикълът приключва. В този пример, цикълът ще продължи, докато i е по-малко или равно на 10.
////////////////////////////////////////////////////////////////////////////////////Итерация (обновяване): i++ - тази част на цикъла се изпълнява след всяко завършване на тялото на цикъла. В този пример, стойността на i се увеличава с 1 след всяка итерация.
////////////////////////////////////////////////////////////////////////////////////Тяло на цикъла:
////////////////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////////////////  Console.WriteLine(i);

////////////////////////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////////////////////////Това е блокът код, който се изпълнява при всяка итерация на цикъла. В този пример, тялото на цикъла се състои само от един ред код, който отпечатва стойността на променливата i на конзолата.


////////////////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////////////////for (int i = 1; i <= 10; i++)
////////////////////////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////////////////////////  Console.WriteLine(i);
////////////////////////////////////////////////////////////////////////////////////}


////////////////////////////////////////////////////////////////////////////////////Цикълът започва с оператора for и преминава през всички стойности за дадена променлива в даден интервал, например всички числа от 1 до 10 включително, и за всяка стойност изпълнява поредица от команди.

////////////////////////////////////////////////////////////////////////////////////В декларацията на цикъла може да се зададе начална стойност (i = 1) и крайна стойност (i <= 10). Тялото на цикъла обикновено се огражда с къдрави скоби { } и представлява блок с една или няколко команди. 

////////////////////////////////////////////////////////////////////////////////////Целта на цикъла е да се премине последователно през числата 1, 2, 3, …, n и за всяко от тях да се изпълни някакво действие. 

////////////////////////////////////////////////////////////////////////////////////В примера по-горе променливата i приема стойности от 1 до 10 и в тялото на цикъла се отпечатва текущата стойност. Цикълът се повтаря 10 пъти и всяко от тези повторения се нарича "итерация".

////////////////////////////////////////////////////////////////////////////////////Пълен отговор: 2т

////////////////////////////////////////////////////////////////////////////////////Непълен отговор: 1т.




////////////////////////////////////////////////////////////////////////////////////Въпрос 5
////////////////////////////////////////////////////////////////////////////////////Отчасти верен
////////////////////////////////////////////////////////////////////////////////////1,33 от максимално 2,00 точки
////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////Посочете коя среда за разработка на кой програмен език съответства?
////////////////////////////////////////////////////////////////////////////////////За програмиране на езика C#:	Отговор 1
////////////////////////////////////////////////////////////////////////////////////Visual Studio

////////////////////////////////////////////////////////////////////////////////////За програмиране на езика Java:	Отговор 2
////////////////////////////////////////////////////////////////////////////////////Espresso

////////////////////////////////////////////////////////////////////////////////////За програмиране на езика Python:	Отговор 3
////////////////////////////////////////////////////////////////////////////////////PyCharm

////////////////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////////////////Your answer is partially correct.
////////////////////////////////////////////////////////////////////////////////////Вие правилно сте избрали 2.
////////////////////////////////////////////////////////////////////////////////////Правилният отговор е: За програмиране на езика C#: → Visual Studio, За програмиране на езика Java: → IntelliJ IDEA, За програмиране на езика Python: → PyCharm
////////////////////////////////////////////////////////////////////////////////////Въпрос 6
////////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////Дайте пример за for - цикъл в C#. За пример може да ползвате код, който отпечатва на конзолата числата от 1 до 100.

////////////////////////////////////////////////////////////////////////////////////for (int i = 1; i <= 100; i++)

////////////////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////////////////  Console.WriteLine(i);

////////////////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////////////////for (int i = 1; i <= 100; i++)
////////////////////////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////////////////////////  Console.WriteLine(i);
////////////////////////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////////////////////////Пълен отговор: 4т.

////////////////////////////////////////////////////////////////////////////////////Непълен: 2т.



////////////////////////////////////////////////////////////////////////////////////Въпрос 7
////////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////////От максимално 10,00
////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////Текст на въпроса

////////////////////////////////////////////////////////////////////////////////////Пример: По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.



////////////////////////////////////////////////////////////////////////////////////Условие: Разполагате със следния програмен код:

////////////////////////////////////////////////////////////////////////////////////Program.cs

//////////////////////////////////////////////////////////////////////////////////// int n = int.Parse(Console.ReadLine());
////////////////////////////////////////////////////////////////////////////////////int d3 = 0;
////////////////////////////////////////////////////////////////////////////////////int d5 = 0;

////////////////////////////////////////////////////////////////////////////////////for (int i = 0; i < n; i--)
////////////////////////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////////////////////////  int number = Console.ReadLine();
////////////////////////////////////////////////////////////////////////////////////  if (number % 2 == 0)
////////////////////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////////////////////    d2++;

////////////////////////////////////////////////////////////////////////////////////    if (number % 3 == 0)
////////////////////////////////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////////////////////////////////      d3++
////////////////////////////////////////////////////////////////////////////////////                }
////////////////////////////////////////////////////////////////////////////////////    if (number / 5 == 0)
////////////////////////////////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////////////////////////////////      d5++;
////////////////////////////////////////////////////////////////////////////////////    }
////////////////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////////////////  Console.WriteLine(d2);
////////////////////////////////////////////////////////////////////////////////////  Console.WriteLine(d3);
////////////////////////////////////////////////////////////////////////////////////  Console.WriteLine(d5);



////////////////////////////////////////////////////////////////////////////////////  Открийте и поправете грешките във вече написания програмен код, така че да се реши поставената по - долу задача.Допълнете кода.

////////////////////////////////////////////////////////////////////////////////////Деление без остатък

////////////////////////////////////////////////////////////////////////////////////Дадени са n-на брой цели числа в интервала[1…1000].От тях някакъв брой се делят без остатък на 2, друг брой се делят без остатък на 3, друг брой се делят без остатък на 5.Да се напише програма, която изчислява и отпечатва броя на числата във всяка група.

////////////////////////////////////////////////////////////////////////////////////Пример: имаме n = 10 числа: 680, 2, 600, 200, 800, 799, 199, 46, 128, 65.Получаваме следното разпределение и визуализация:

////////////////////////////////////////////////////////////////////////////////////Деление без остатък на:

////////////////////////////////////////////////////////////////////////////////////Числа в диапазона

////////////////////////////////////////////////////////////////////////////////////Брой числа

////////////////////////////////////////////////////////////////////////////////////2

////////////////////////////////////////////////////////////////////////////////////680, 2, 600, 200, 800, 46, 128

////////////////////////////////////////////////////////////////////////////////////7

////////////////////////////////////////////////////////////////////////////////////3

////////////////////////////////////////////////////////////////////////////////////600

////////////////////////////////////////////////////////////////////////////////////1

////////////////////////////////////////////////////////////////////////////////////5

////////////////////////////////////////////////////////////////////////////////////680, 600, 200, 800, 65

////////////////////////////////////////////////////////////////////////////////////5

////////////////////////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////////////////////////На първия ред от входа стои цялото число n(1 ≤ n ≤ 1000) -брой числа.На следващите n реда стои по едно цяло число в интервала [1…1000] -числата които да бъдат проверени на колко се делят.

////////////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////////////Да се отпечатат на конзолата 3 реда:

////////////////////////////////////////////////////////////////////////////////////На първият ред – брой на числата които се делят на 2
////////////////////////////////////////////////////////////////////////////////////На вторият ред - брой на числата които се делят на 3
////////////////////////////////////////////////////////////////////////////////////На третият ред - брой на числата които се делят на 4
////////////////////////////////////////////////////////////////////////////////////Примерен вход и изход

////////////////////////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////////////////////////Изход



////////////////////////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////////////10

////////////////////////////////////////////////////////////////////////////////////680

////////////////////////////////////////////////////////////////////////////////////2

////////////////////////////////////////////////////////////////////////////////////600

////////////////////////////////////////////////////////////////////////////////////200

////////////////////////////////////////////////////////////////////////////////////800

////////////////////////////////////////////////////////////////////////////////////799

////////////////////////////////////////////////////////////////////////////////////199

////////////////////////////////////////////////////////////////////////////////////46

////////////////////////////////////////////////////////////////////////////////////128

////////////////////////////////////////////////////////////////////////////////////65

////////////////////////////////////////////////////////////////////////////////////7

////////////////////////////////////////////////////////////////////////////////////1

////////////////////////////////////////////////////////////////////////////////////5

////////////////////////////////////////////////////////////////////////////////////3

////////////////////////////////////////////////////////////////////////////////////3

////////////////////////////////////////////////////////////////////////////////////6

////////////////////////////////////////////////////////////////////////////////////9



////////////////////////////////////////////////////////////////////////////////////1

////////////////////////////////////////////////////////////////////////////////////3

////////////////////////////////////////////////////////////////////////////////////0




////////////////////////////////////////////////////////////////////////////////////using System;



////////////////////////////////////////////////////////////////////////////////////class Program

////////////////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////////////////  static void Main(string[] args)

////////////////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////////////////    int n = int.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////////////////    int d2 = 0;

////////////////////////////////////////////////////////////////////////////////////    int d3 = 0;

////////////////////////////////////////////////////////////////////////////////////    int d5 = 0;



////////////////////////////////////////////////////////////////////////////////////    for (int i = 0; i < n; i++)

////////////////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////////////////      int number = int.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////////////////      if (number % 2 == 0)

////////////////////////////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////////////////////////////        d2++;

////////////////////////////////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////////////////////////////////      if (number % 3 == 0)

////////////////////////////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////////////////////////////        d3++;

////////////////////////////////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////////////////////////////////      if (number % 5 == 0)

////////////////////////////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////////////////////////////        d5++;

////////////////////////////////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////////////////////////////////    }



////////////////////////////////////////////////////////////////////////////////////    Console.WriteLine(d2);

////////////////////////////////////////////////////////////////////////////////////    Console.WriteLine(d3);

////////////////////////////////////////////////////////////////////////////////////    Console.WriteLine(d5);

////////////////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////////////////Забележка
/////////////////////////////////////////////////////////////////////////////////////*
////////////////////////////////////////////////////////////////////////////////////        КЛЮЧ
////////////////////////////////////////////////////////////////////////////////////       int n = int.Parse(Console.ReadLine()); 
////////////////////////////////////////////////////////////////////////////////////           int d2 = 0; //2Т
////////////////////////////////////////////////////////////////////////////////////           int d3 = 0; 
////////////////////////////////////////////////////////////////////////////////////           int d5 = 0; 

////////////////////////////////////////////////////////////////////////////////////           for (int i = 0; i < n; i++) //2Т
////////////////////////////////////////////////////////////////////////////////////           {
////////////////////////////////////////////////////////////////////////////////////               int number = int.Parse(Console.ReadLine());//2Т
////////////////////////////////////////////////////////////////////////////////////               if (number % 2 == 0) 
////////////////////////////////////////////////////////////////////////////////////               {
////////////////////////////////////////////////////////////////////////////////////                   d2++; 
////////////////////////////////////////////////////////////////////////////////////               }//1Т
////////////////////////////////////////////////////////////////////////////////////               if (number % 3 == 0) 
////////////////////////////////////////////////////////////////////////////////////               {
////////////////////////////////////////////////////////////////////////////////////                   d3++; //1Т
////////////////////////////////////////////////////////////////////////////////////               }
////////////////////////////////////////////////////////////////////////////////////               if (number % 5 == 0) //2Т
////////////////////////////////////////////////////////////////////////////////////               {
////////////////////////////////////////////////////////////////////////////////////                   d5++; 
////////////////////////////////////////////////////////////////////////////////////               }
////////////////////////////////////////////////////////////////////////////////////           }

////////////////////////////////////////////////////////////////////////////////////           Console.WriteLine(d2); 
////////////////////////////////////////////////////////////////////////////////////           Console.WriteLine(d3); 
////////////////////////////////////////////////////////////////////////////////////           Console.WriteLine(d5);
////////////////////////////////////////////////////////////////////////////////////        */

////////////////////////////////////////////////////////////////////////////////////Въпрос 8
////////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////////От максимално 10,00
////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////Текст на въпроса



////////////////////////////////////////////////////////////////////////////////////Пример: По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.



////////////////////////////////////////////////////////////////////////////////////Условие: Разполагате със следния програмен код:

////////////////////////////////////////////////////////////////////////////////////Program.cs

////////////////////////////////////////////////////////////////////////////////////int number = int.Parse(Console.ReadLine());
////////////////////////////////////////////////////////////////////////////////////int firstDigit = number / 100;
////////////////////////////////////////////////////////////////////////////////////int secondDigit = (number / 100) % 10;
////////////////////////////////////////////////////////////////////////////////////int thirdDigit = number % 100;
////////////////////////////////////////////////////////////////////////////////////int rows = firstDigit + secondDigit;
////////////////////////////////////////////////////////////////////////////////////int cols = firstDigit + thirdDigit;

////////////////////////////////////////////////////////////////////////////////////for (int row = 0; row < rows; row--)
////////////////////////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////////////////////////  for (int col = 0; col > cols; col++)
////////////////////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////////////////////    if (number % 5 == 0)
////////////////////////////////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////////////////////////////////      number -= firstDigit;
////////////////////////////////////////////////////////////////////////////////////    }
////////////////////////////////////////////////////////////////////////////////////    if (number % 3 == 0)
////////////////////////////////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////////////////////////////////      number = secondDigit;
////////////////////////////////////////////////////////////////////////////////////    }
////////////////////////////////////////////////////////////////////////////////////    else
////////////////////////////////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////////////////////////////////      number += thirdDigit;
////////////////////////////////////////////////////////////////////////////////////    }
////////////////////////////////////////////////////////////////////////////////////    Console.Write($"{number} ");
////////////////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////////////////  Console.WriteLine();
////////////////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////////////////Открийте и поправете грешките във вече написания програмен код, така че да се реши поставената по-долу задача. Допълнете кода.



////////////////////////////////////////////////////////////////////////////////////Цифри

////////////////////////////////////////////////////////////////////////////////////Като вход на програмата, се прочита от конзолата 1 цяло трицифрено число. Трябва да принтирате числото определен брой пъти, като всеки път, преди да се принтира, числото се модифицира по следния начин:

////////////////////////////////////////////////////////////////////////////////////·       ако числото се дели на 5 без остатък, извадете от него първата му цифра,

////////////////////////////////////////////////////////////////////////////////////·       ако числото се дели на 3 без остатък, извадете от него втората му цифра,

////////////////////////////////////////////////////////////////////////////////////·       ако не е нито едно от горните – прибавете към него третата му цифра,

////////////////////////////////////////////////////////////////////////////////////Принтирайте на конзолата N на брой реда, като всеки ред има М на брой числа, които са резултат от горните действия. Редовете са равни на сбора на първата и втората цифра на числото, а колоните – на първата и третата цифра.

////////////////////////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////////////////////////Входът е цяло число в интервала [100…999].

////////////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////////////Да се отпечатат на конзолата всички цели числа, които са резултат от дадените по-горе изчисления в съответния брой редове и колони, както в примерите.

////////////////////////////////////////////////////////////////////////////////////Примерен вход и изход

////////////////////////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////////////Обяснения

////////////////////////////////////////////////////////////////////////////////////132

////////////////////////////////////////////////////////////////////////////////////129 126 123

////////////////////////////////////////////////////////////////////////////////////120 119 121

////////////////////////////////////////////////////////////////////////////////////123 120 119

////////////////////////////////////////////////////////////////////////////////////121 123 120

////////////////////////////////////////////////////////////////////////////////////(1 +3) = 4 и(1 + 2) = 3-> 4 реда по 3 числа на всеки ред

////////////////////////////////////////////////////////////////////////////////////Входното число 132

////////////////////////////////////////////////////////////////////////////////////132 -> деление на 3 -> 132 - 3 =

////////////////////////////////////////////////////////////////////////////////////= 129 -> деление на 3 -> 129 - 3 =

////////////////////////////////////////////////////////////////////////////////////= 126 -> деление на 3 -> 126 - 3 =

////////////////////////////////////////////////////////////////////////////////////= 123 -> деление на 3 -> 123 - 3 =

////////////////////////////////////////////////////////////////////////////////////= 120 -> деление на 5 -> 120 - 1 =

////////////////////////////////////////////////////////////////////////////////////..... 121 -> нито на 5, нито на 3 -> 121 + 2 = 123

////////////////////////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////////////Обяснения

////////////////////////////////////////////////////////////////////////////////////376

////////////////////////////////////////////////////////////////////////////////////382 388 394 400 397 403 409 415 412

////////////////////////////////////////////////////////////////////////////////////418 424 430 427 433 439 445 442 448

////////////////////////////////////////////////////////////////////////////////////454 460 457 463 469 475 472 478 484

////////////////////////////////////////////////////////////////////////////////////490 487 493 499 505 502 508 514 520

////////////////////////////////////////////////////////////////////////////////////517 523 529 535 532 538 544 550 547

////////////////////////////////////////////////////////////////////////////////////553 559 565 562 568 574 580 577 583

////////////////////////////////////////////////////////////////////////////////////589 595 592 598 604 610 607 613 619

////////////////////////////////////////////////////////////////////////////////////625 622 628 634 640 637 643 649 655

////////////////////////////////////////////////////////////////////////////////////652 658 664 670 667 673 679 685 682

////////////////////////////////////////////////////////////////////////////////////688 694 700 697 703 709 715 712 718

////////////////////////////////////////////////////////////////////////////////////10 реда по 9 числа на всеки

////////////////////////////////////////////////////////////////////////////////////Входното число 376 -> нито на 5, нито на 3 -> 376 + 6 =

////////////////////////////////////////////////////////////////////////////////////= 382 -> нито на 5, нито на 3 -> 382 + 6 =

////////////////////////////////////////////////////////////////////////////////////= 388  + 6 = 394 + 6 =

////////////////////////////////////////////////////////////////////////////////////= 400 -> деление на 5 -> 400 – 3 = 397

////////////////////////////////////////////////////////////////////////////////////...




////////////////////////////////////////////////////////////////////////////////////using System;



////////////////////////////////////////////////////////////////////////////////////class Program

////////////////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////////////////  static void Main(string[] args)

////////////////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////////////////    int number = int.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////////////////    int firstDigit = number / 100;

////////////////////////////////////////////////////////////////////////////////////    int secondDigit = (number % 100) / 10;

////////////////////////////////////////////////////////////////////////////////////    int thirdDigit = number % 10;

////////////////////////////////////////////////////////////////////////////////////    int rows = firstDigit + secondDigit;

////////////////////////////////////////////////////////////////////////////////////    int cols = firstDigit + thirdDigit;



////////////////////////////////////////////////////////////////////////////////////    for (int row = 0; row < rows; row++)

////////////////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////////////////      for (int col = 0; col < cols; col++)

////////////////////////////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////////////////////////////        if (number % 5 == 0)

////////////////////////////////////////////////////////////////////////////////////        {

////////////////////////////////////////////////////////////////////////////////////          number -= firstDigit;

////////////////////////////////////////////////////////////////////////////////////        }

////////////////////////////////////////////////////////////////////////////////////        else if (number % 3 == 0)

////////////////////////////////////////////////////////////////////////////////////        {

////////////////////////////////////////////////////////////////////////////////////          number -= secondDigit;

////////////////////////////////////////////////////////////////////////////////////        }

////////////////////////////////////////////////////////////////////////////////////        else

////////////////////////////////////////////////////////////////////////////////////        {

////////////////////////////////////////////////////////////////////////////////////          number += thirdDigit;

////////////////////////////////////////////////////////////////////////////////////        }

////////////////////////////////////////////////////////////////////////////////////        Console.Write($"{number} ");

////////////////////////////////////////////////////////////////////////////////////      }



////////////////////////////////////////////////////////////////////////////////////      Console.WriteLine();

////////////////////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////////////////Забележка
/////////////////////////////////////////////////////////////////////////////////////*
////////////////////////////////////////////////////////////////////////////////////         КЛЮЧ
////////////////////////////////////////////////////////////////////////////////////         int number = int.Parse(Console.ReadLine()); 
////////////////////////////////////////////////////////////////////////////////////            int firstDigit = number / 100; 
////////////////////////////////////////////////////////////////////////////////////            int secondDigit = (number / 10) % 10; //2Т
////////////////////////////////////////////////////////////////////////////////////            int thirdDigit = number % 10; //2Т
////////////////////////////////////////////////////////////////////////////////////            int rows = firstDigit + secondDigit; 
////////////////////////////////////////////////////////////////////////////////////            int cols = firstDigit + thirdDigit; 

////////////////////////////////////////////////////////////////////////////////////            for (int row = 0; row < rows; row++) //2Т
////////////////////////////////////////////////////////////////////////////////////            {
////////////////////////////////////////////////////////////////////////////////////                for (int col = 0; col < cols; col++) //2Т
////////////////////////////////////////////////////////////////////////////////////                {
////////////////////////////////////////////////////////////////////////////////////                    if (number % 5 == 0) 
////////////////////////////////////////////////////////////////////////////////////                    {
////////////////////////////////////////////////////////////////////////////////////                        number -= firstDigit;
////////////////////////////////////////////////////////////////////////////////////                    }
////////////////////////////////////////////////////////////////////////////////////                    else if (number % 3 == 0) //1Т
////////////////////////////////////////////////////////////////////////////////////                    {
////////////////////////////////////////////////////////////////////////////////////                        number -= secondDigit;//1Т
////////////////////////////////////////////////////////////////////////////////////                    }
////////////////////////////////////////////////////////////////////////////////////                    else
////////////////////////////////////////////////////////////////////////////////////                    {
////////////////////////////////////////////////////////////////////////////////////                        number += thirdDigit; 
////////////////////////////////////////////////////////////////////////////////////                    }
////////////////////////////////////////////////////////////////////////////////////                    Console.Write($"{number} "); 
////////////////////////////////////////////////////////////////////////////////////                } 

////////////////////////////////////////////////////////////////////////////////////                Console.WriteLine(); 
////////////////////////////////////////////////////////////////////////////////////            }
////////////////////////////////////////////////////////////////////////////////////         */

////////////////////////////////////////////////////////////////////////////////////Въпрос 9
////////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////Дайте пример за конзолна програма, която чете две цели числа, въведени от потребителя, и отпечатва по-голямото от двете. 

////////////////////////////////////////////////////////////////////////////////////Не използвайте вградените функционалности в .NET! Решете задачата с условна конструкция!

////////////////////////////////////////////////////////////////////////////////////using System;



////////////////////////////////////////////////////////////////////////////////////class Program

////////////////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////////////////  static void Main(string[] args)

////////////////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////////////////    int firstNumber = int.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////////////////    int secondNumber = int.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////////////////    int largerNumber;

////////////////////////////////////////////////////////////////////////////////////    if (firstNumber > secondNumber)

////////////////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////////////////      largerNumber = firstNumber;

////////////////////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////////////////////    else

////////////////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////////////////      largerNumber = secondNumber;

////////////////////////////////////////////////////////////////////////////////////    }



////////////////////////////////////////////////////////////////////////////////////    Console.WriteLine($"По-голямото число е: {largerNumber}");

////////////////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////////////////Въпрос 10
////////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////////От максимално 6,00
////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////Дайте пример за конзолна програма, която чете от конзолата страна и височина на триъгълник, въведени от потребителя, и пресмята неговото лице. Използвайте формулата за лице на триъгълник: area = a * h / 2.Закръглете резултата до 2 знака след десетичната точка.

////////////////////////////////////////////////////////////////////////////////////Примерен вход/изход:


////////////////////////////////////////////////////////////////////////////////////вход

////////////////////////////////////////////////////////////////////////////////////изход

////////////////////////////////////////////////////////////////////////////////////20
////////////////////////////////////////////////////////////////////////////////////30

////////////////////////////////////////////////////////////////////////////////////Triangle area = 300


////////////////////////////////////////////////////////////////////////////////////15
////////////////////////////////////////////////////////////////////////////////////35

////////////////////////////////////////////////////////////////////////////////////Triangle area = 262.5

////////////////////////////////////////////////////////////////////////////////////7.75
////////////////////////////////////////////////////////////////////////////////////8.45

////////////////////////////////////////////////////////////////////////////////////Triangle area = 32.74




////////////////////////////////////////////////////////////////////////////////////using System;



////////////////////////////////////////////////////////////////////////////////////class Program

////////////////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////////////////  static void Main(string[] args)

////////////////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////////////////    double side = double.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////////////////    double height = double.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////////////////    double area = side * height / 2;

////////////////////////////////////////////////////////////////////////////////////    double roundedArea = Math.Round(area, 2);

////////////////////////////////////////////////////////////////////////////////////    Console.WriteLine($"Triangle area = {roundedArea}");

////////////////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////////////////Въпрос 11
////////////////////////////////////////////////////////////////////////////////////Неправилно
////////////////////////////////////////////////////////////////////////////////////0,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////Показан е следния програмен код на C#. Каква е целта на програмата? Посочете верния отговор.





////////////////////////////////////////////////////////////////////////////////////Изберете едно
////////////////////////////////////////////////////////////////////////////////////a. Намира всички числа в интервала [1 … 1000], които завършват на 0 и ги отпечатва на конзолата.
////////////////////////////////////////////////////////////////////////////////////b. Намира всички числа в интервала [1 … 1000], които се делят на 7 и ги отпечатва на конзолата.
////////////////////////////////////////////////////////////////////////////////////c. Намира всички числа в интервала [1 … 1000], които започват със 7 и ги отпечатва на конзолата.
////////////////////////////////////////////////////////////////////////////////////d. Намира всички числа в интервала [1 … 1000], които завършват на 7 и ги отпечатва на конзолата. 
////////////////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////////////////Your answer is incorrect.
////////////////////////////////////////////////////////////////////////////////////Правилният отговор е: Намира всички числа в интервала [1 … 1000], които се делят на 7 и ги отпечатва на конзолата.
////////////////////////////////////////////////////////////////////////////////////Въпрос 12
////////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////Дайте пример за конзолна програма, която чете оценка (десетично число), въведена от потребителя, и отпечатва “Excellent!”, ако оценката е 5.50 или по-висока, или “Not excellent.” в противен случай.

////////////////////////////////////////////////////////////////////////////////////using System;



////////////////////////////////////////////////////////////////////////////////////class Program

////////////////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////////////////  static void Main(string[] args)

////////////////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////////////////    Console.WriteLine("Моля, въведете оценката:");

////////////////////////////////////////////////////////////////////////////////////    double grade = double.Parse(Console.ReadLine());



////////////////////////////////////////////////////////////////////////////////////    if (grade >= 5.50)

////////////////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////////////////      Console.WriteLine("Excellent!");

////////////////////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////////////////////    else

////////////////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////////////////      Console.WriteLine("Not excellent.");

////////////////////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////////////////Въпрос 13
////////////////////////////////////////////////////////////////////////////////////Отчасти верен
////////////////////////////////////////////////////////////////////////////////////2,00 от максимално 6,00 точки
////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////Даден е следният програмен код на C#. Открийте какъв ще бъде резултатът от изпълнението на програмата. В полето запишете очакваният резултат и защо се е получил този резултат?



////////////////////////////////////////////////////////////////////////////////////Отговор: 
////////////////////////////////////////////////////////////////////////////////////tomato lemon
////////////////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////////////////Правилният отговор е: tomato lemon.Когато имаме само една команда в тялото на if конструкцията, можем да пропуснем къдравите скоби, обозначаващи тялото на условния оператор.Когато искаме да изпълним блок от код (група команди), къдравите скоби са задължителни. В случай че ги изпуснем, ще се изпълни само първият ред след if клаузата.
////////////////////////////////////////////////////////////////////////////////////Въпрос 14
////////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////////От максимално 10,00
////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент.Предоставеният фрагмент да се приведе в работещ вид.

////////////////////////////////////////////////////////////////////////////////////Идентифицирайте правилно и поправете грешките в написания програмен код, така че да решите поставената задача. Допълнете кода, ако и когато това е необходимо.




////////////////////////////////////////////////////////////////////////////////////Условие: Разполагате със следния програмен код:

////////////////////////////////////////////////////////////////////////////////////Program.cs

////////////////////////////////////////////////////////////////////////////////////static void Main(string[] args)
////////////////////////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////////////////////////  string sector = Console.ReadLine()
////////////////////////////////////////////////////////////////////////////////////            int row = int.Parse(Console.ReadLine());
////////////////////////////////////////////////////////////////////////////////////  int col = int.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////////////////  switch ()
////////////////////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////////////////////    case "Sector A":
////////////////////////////////////////////////////////////////////////////////////      totalSum = GetTotalProfit(row, col, 11.60);

////////////////////////////////////////////////////////////////////////////////////    case "Sector B":
////////////////////////////////////////////////////////////////////////////////////      totalSum = GetTotalProfit(row, col, 14.50)
////////////////////////////////////////////////////////////////////////////////////                    break;
////////////////////////////////////////////////////////////////////////////////////    case "Sector C":
////////////////////////////////////////////////////////////////////////////////////      totalSum = GetTotalProfit(row, col, 16.10);
////////////////////////////////////////////////////////////////////////////////////      break;
////////////////////////////////////////////////////////////////////////////////////    case "Sector D"
////////////////////////////////////////////////////////////////////////////////////                    totalSum = GetTotalProfit(row, col, 8.40);
////////////////////////////////////////////////////////////////////////////////////      break;

////////////////////////////////////////////////////////////////////////////////////      Console.WriteLine($"{sector} profit is {totalSum:f2} lv.");
////////////////////////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////////////////////////  static double GetTotalProfit(int row, int col, double price)
////////////////////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////////////////////    return row * col * price;
////////////////////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////////////////////  Открийте и поправете грешките във вече написания програмен код, така че да се реши поставената по - долу задача.Допълнете кода.

////////////////////////////////////////////////////////////////////////////////////1.Футболен мач

////////////////////////////////////////////////////////////////////////////////////На един стадион има определен брой сектори, в които има седалки наредени в правоъгълна форма и има X реда и Y седалки на ред.

////////////////////////////////////////////////////////////////////////////////////Има четири вида сектори с билети на различни цени:

////////////////////////////////////////////////////////////////////////////////////  Sector A  –  цена на билета 11.60 лева
////////////////////////////////////////////////////////////////////////////////////  Sector B  –  цена на билета 14.50 лева
////////////////////////////////////////////////////////////////////////////////////  Sector C  –  цена на билета 16.10 лева
////////////////////////////////////////////////////////////////////////////////////  Sector D – цена на билета 8.40 лева
////////////////////////////////////////////////////////////////////////////////////  Напишете програма, която изчислява приходите за даден сектор, ако са разпродадени всички билети, като знаете кой е секторът, какъв е броят редове в него и броят седалки на ред.

////////////////////////////////////////////////////////////////////////////////////Изчислението на приходите трябва да го осъществите с помощта на метод GetTotalProfit, който приема като параметри точно в дадената последователност: реда, колоната и цената на билета.

////////////////////////////////////////////////////////////////////////////////////Вход:

////////////////////////////////////////////////////////////////////////////////////Входът се чете от конзолата и съдържа точно 3 реда:

////////////////////////////////////////////////////////////////////////////////////На първия ред - сектор - текст с възможности: Sector A, Sector B, Sector C, Sector D
////////////////////////////////////////////////////////////////////////////////////На втория ред - брой редове - цяло число в интервала [1... 1000]
////////////////////////////////////////////////////////////////////////////////////На третия ред -  брой седалки на ред - цяло число в интервала [1... 1000]
////////////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////////////Да се отпечата на конзолата един ред:

////////////////////////////////////////////////////////////////////////////////////   "{сектор} profit is {печалба} lv."

////////////////////////////////////////////////////////////////////////////////////Печалбата да бъде форматирана до втория знак след десетичната запетая.



////////////////////////////////////////////////////////////////////////////////////Примерен вход и изход

////////////////////////////////////////////////////////////////////////////////////вход

////////////////////////////////////////////////////////////////////////////////////изход

////////////////////////////////////////////////////////////////////////////////////Обяснение

////////////////////////////////////////////////////////////////////////////////////Sector A

////////////////////////////////////////////////////////////////////////////////////12

////////////////////////////////////////////////////////////////////////////////////300

////////////////////////////////////////////////////////////////////////////////////Sector A profit is 41760.00 lv.

////////////////////////////////////////////////////////////////////////////////////Цена за билет в сектор А: 11.60

////////////////////////////////////////////////////////////////////////////////////Общ брой седалки: 12 * 300 = 3600

////////////////////////////////////////////////////////////////////////////////////Печалба: 3600 * 11.60 = 41760




////////////////////////////////////////////////////////////////////////////////////вход

////////////////////////////////////////////////////////////////////////////////////изход

////////////////////////////////////////////////////////////////////////////////////Обяснение

////////////////////////////////////////////////////////////////////////////////////Sector B

////////////////////////////////////////////////////////////////////////////////////40

////////////////////////////////////////////////////////////////////////////////////120

////////////////////////////////////////////////////////////////////////////////////Sector B profit is 69600.00 lv.

////////////////////////////////////////////////////////////////////////////////////Цена за билет в сектор B: 14.50

////////////////////////////////////////////////////////////////////////////////////Общ брой седалки: 40 * 120 = 4800

////////////////////////////////////////////////////////////////////////////////////Печалба: 4800 * 14.50 = 69600




////////////////////////////////////////////////////////////////////////////////////вход

////////////////////////////////////////////////////////////////////////////////////изход

////////////////////////////////////////////////////////////////////////////////////Обяснение

////////////////////////////////////////////////////////////////////////////////////Sector C

////////////////////////////////////////////////////////////////////////////////////10

////////////////////////////////////////////////////////////////////////////////////170

////////////////////////////////////////////////////////////////////////////////////Sector C profit is 27370.00 lv.

////////////////////////////////////////////////////////////////////////////////////Цена за билет в сектор C: 16.10

////////////////////////////////////////////////////////////////////////////////////Общ брой седалки: 10 * 170 = 1700

////////////////////////////////////////////////////////////////////////////////////Печалба: 1700 * 16.10 = 27370




////////////////////////////////////////////////////////////////////////////////////вход

////////////////////////////////////////////////////////////////////////////////////изход

////////////////////////////////////////////////////////////////////////////////////Обяснение

////////////////////////////////////////////////////////////////////////////////////Sector D

////////////////////////////////////////////////////////////////////////////////////20

////////////////////////////////////////////////////////////////////////////////////600

////////////////////////////////////////////////////////////////////////////////////Sector D profit is 100800.00 lv.

////////////////////////////////////////////////////////////////////////////////////Цена за билет в сектор D: 8.40

////////////////////////////////////////////////////////////////////////////////////Общ брой седалки: 20 * 600 = 12000

////////////////////////////////////////////////////////////////////////////////////Печалба: 12000 * 8.40 = 100800




////////////////////////////////////////////////////////////////////////////////////using System;



////////////////////////////////////////////////////////////////////////////////////class Program

////////////////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////////////////  static void Main(string[] args)

////////////////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////////////////    string sector = Console.ReadLine();

////////////////////////////////////////////////////////////////////////////////////    int row = int.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////////////////    int col = int.Parse(Console.ReadLine());



////////////////////////////////////////////////////////////////////////////////////    double totalSum = 0;



////////////////////////////////////////////////////////////////////////////////////    switch (sector)

////////////////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////////////////      case "Sector A":

////////////////////////////////////////////////////////////////////////////////////        totalSum = GetTotalProfit(row, col, 11.60);

////////////////////////////////////////////////////////////////////////////////////        break;



////////////////////////////////////////////////////////////////////////////////////      case "Sector B":

////////////////////////////////////////////////////////////////////////////////////        totalSum = GetTotalProfit(row, col, 14.50);

////////////////////////////////////////////////////////////////////////////////////        break;



////////////////////////////////////////////////////////////////////////////////////      case "Sector C":

////////////////////////////////////////////////////////////////////////////////////        totalSum = GetTotalProfit(row, col, 16.10);

////////////////////////////////////////////////////////////////////////////////////        break;



////////////////////////////////////////////////////////////////////////////////////      case "Sector D":

////////////////////////////////////////////////////////////////////////////////////        totalSum = GetTotalProfit(row, col, 8.40);

////////////////////////////////////////////////////////////////////////////////////        break;

////////////////////////////////////////////////////////////////////////////////////    }



////////////////////////////////////////////////////////////////////////////////////    Console.WriteLine($"{sector} profit is {totalSum:f2} lv.");

////////////////////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////////////////////  static double GetTotalProfit(int row, int col, double price)

////////////////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////////////////    return row * col * price;

////////////////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////////////////Забележка
/////////////////////////////////////////////////////////////////////////////////////*
////////////////////////////////////////////////////////////////////////////////////         КЛЮЧ
////////////////////////////////////////////////////////////////////////////////////        static void Main(string[] args)
////////////////////////////////////////////////////////////////////////////////////        {
////////////////////////////////////////////////////////////////////////////////////            string sector = Console.ReadLine(); //1Т
////////////////////////////////////////////////////////////////////////////////////            int row = int.Parse(Console.ReadLine());
////////////////////////////////////////////////////////////////////////////////////            int col = int.Parse(Console.ReadLine()); 
////////////////////////////////////////////////////////////////////////////////////            double totalSum = 0;//2Т

////////////////////////////////////////////////////////////////////////////////////            switch (sector)//2Т
////////////////////////////////////////////////////////////////////////////////////            { 
////////////////////////////////////////////////////////////////////////////////////                case "Sector A":
////////////////////////////////////////////////////////////////////////////////////                    totalSum = GetTotalProfit(row, col, 11.60); 
////////////////////////////////////////////////////////////////////////////////////                    break; //2Т
////////////////////////////////////////////////////////////////////////////////////                case "Sector B":
////////////////////////////////////////////////////////////////////////////////////                    totalSum = GetTotalProfit(row, col, 14.50);//1Т
////////////////////////////////////////////////////////////////////////////////////                    break;
////////////////////////////////////////////////////////////////////////////////////                case "Sector C": 
////////////////////////////////////////////////////////////////////////////////////                    totalSum = GetTotalProfit(row, col, 16.10); 
////////////////////////////////////////////////////////////////////////////////////                    break;
////////////////////////////////////////////////////////////////////////////////////                case "Sector D"://1Т
////////////////////////////////////////////////////////////////////////////////////                    totalSum = GetTotalProfit(row, col, 8.40);
////////////////////////////////////////////////////////////////////////////////////                    break;
////////////////////////////////////////////////////////////////////////////////////            }//1Т
////////////////////////////////////////////////////////////////////////////////////            Console.WriteLine($"{sector} profit is {totalSum:f2} lv.");
////////////////////////////////////////////////////////////////////////////////////        }
////////////////////////////////////////////////////////////////////////////////////        static double GetTotalProfit(int row, int col, double price)
////////////////////////////////////////////////////////////////////////////////////        {
////////////////////////////////////////////////////////////////////////////////////            return row * col * price;
////////////////////////////////////////////////////////////////////////////////////        }
////////////////////////////////////////////////////////////////////////////////////         */

////////////////////////////////////////////////////////////////////////////////////Въпрос 15
////////////////////////////////////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////////////////////////////////////6,00 от максимално 6,00 точки
////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////Открийте начините, по които се стартира проект във VisualStudio среда.

////////////////////////////////////////////////////////////////////////////////////Изберете едно или повече:
////////////////////////////////////////////////////////////////////////////////////a.С клавишната комбинация Shift + F5
////////////////////////////////////////////////////////////////////////////////////b. С клавишната комбинация Ctrl + Shift + F10
////////////////////////////////////////////////////////////////////////////////////c. С клавишната комбинация Ctrl + Shift + F5
////////////////////////////////////////////////////////////////////////////////////d. С клавишната комбинация Ctrl + F10
////////////////////////////////////////////////////////////////////////////////////e. С клавишната комбинация Ctrl + F5 
////////////////////////////////////////////////////////////////////////////////////f. С бутона за стартиране   
////////////////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////////////////////////////////////////The correct answers are: С бутона за стартиране  , С клавишната комбинация Ctrl + F5
////////////////////////////////////////////////////////////////////////////////////Въпрос 16
////////////////////////////////////////////////////////////////////////////////////Неправилно
////////////////////////////////////////////////////////////////////////////////////0,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////Компютърната програма е:
////////////////////////////////////////////////////////////////////////////////////Изберете едно
////////////////////////////////////////////////////////////////////////////////////a. Програмата се пише в текстов формат, а самият текст на програмата се нарича сорс код (source code). Той се компилира до изпълним файл или се изпълнява директно. 
////////////////////////////////////////////////////////////////////////////////////b. Поредица от команди, които се изписват на предварително избран език за програмиране
////////////////////////////////////////////////////////////////////////////////////c. Описва поредица от пресмятания, проверки, повторения и всякакви подобни операции, които целят постигане на някакъв резултат.
////////////////////////////////////////////////////////////////////////////////////d. Всичко от изброеното.
////////////////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////////////////Your answer is incorrect.
////////////////////////////////////////////////////////////////////////////////////Правилният отговор е: Всичко от изброеното.
////////////////////////////////////////////////////////////////////////////////////Въпрос 17
////////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////////От максимално 6,00
////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////Напишете метод на C#, който отпечатва на конзолата квадрат от звездички с размери nхn. Квадратът трябва да изглежда по следният начин:



////////////////////////////////////////////////////////////////////////////////////using System;



////////////////////////////////////////////////////////////////////////////////////class Program

////////////////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////////////////  static void Main(string[] args)

////////////////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////////////////    int n = int.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////////////////    PrintSquareOfStars(n);

////////////////////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////////////////////  static void PrintSquareOfStars(int n)

////////////////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////////////////    for (int row = 0; row < n; row++)

////////////////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////////////////      for (int col = 0; col < n; col++)

////////////////////////////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////////////////////////////        Console.Write("*");

////////////////////////////////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////////////////////////////////      Console.WriteLine();

////////////////////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////////////////public void PrintSquare(int n)
////////////////////////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////////////////////////  for (int i = 1; i <= n; i++)
////////////////////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////////////////////    for (int j = 1; j <= n; j++)
////////////////////////////////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////////////////////////////////      Console.Write("* ");
////////////////////////////////////////////////////////////////////////////////////    }
////////////////////////////////////////////////////////////////////////////////////    Console.WriteLine();
////////////////////////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////////////////////////Въпрос 18
////////////////////////////////////////////////////////////////////////////////////Отчасти верен
////////////////////////////////////////////////////////////////////////////////////1,67 от максимално 2,00 точки
////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////Посочете кои езици за програмиране работят с компилатор, кои с интерпретатор?

////////////////////////////////////////////////////////////////////////////////////Език за програмиране	компилатор/интерпретатор
////////////////////////////////////////////////////////////////////////////////////Python	
////////////////////////////////////////////////////////////////////////////////////с интерпретатор

////////////////////////////////////////////////////////////////////////////////////PHP	
////////////////////////////////////////////////////////////////////////////////////с интерпретатор

////////////////////////////////////////////////////////////////////////////////////C++	
////////////////////////////////////////////////////////////////////////////////////с компилатор

////////////////////////////////////////////////////////////////////////////////////C#	
////////////////////////////////////////////////////////////////////////////////////с компилатор

////////////////////////////////////////////////////////////////////////////////////Java 

////////////////////////////////////////////////////////////////////////////////////с интерпретатор

////////////////////////////////////////////////////////////////////////////////////JavaScript 	
////////////////////////////////////////////////////////////////////////////////////с интерпретатор

////////////////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////////////////Your answer is partially correct.
////////////////////////////////////////////////////////////////////////////////////Вие правилно сте избрали 5.
////////////////////////////////////////////////////////////////////////////////////Правилният отговор е: Посочете кои езици за програмиране работят с компилатор, кои с интерпретатор?

////////////////////////////////////////////////////////////////////////////////////Език за програмиране	компилатор/интерпретатор
////////////////////////////////////////////////////////////////////////////////////Python	[с интерпретатор]
////////////////////////////////////////////////////////////////////////////////////PHP[с интерпретатор]
////////////////////////////////////////////////////////////////////////////////////C++[с компилатор]
////////////////////////////////////////////////////////////////////////////////////C#	[с компилатор]
////////////////////////////////////////////////////////////////////////////////////Java
////////////////////////////////////////////////////////////////////////////////////[с компилатор]
////////////////////////////////////////////////////////////////////////////////////JavaScript 	[с интерпретатор]
////////////////////////////////////////////////////////////////////////////////////Въпрос 19
////////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////////От максимално 10,00
////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////Пример: По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид. 

////////////////////////////////////////////////////////////////////////////////////Условие: Разполагате със следния програмен код:

////////////////////////////////////////////////////////////////////////////////////Program.cs

////////////////////////////////////////////////////////////////////////////////////static void Main(string[] args)
////////////////////////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////////////////////////  var days = Console.ReadLine();
////////////////////////////////////////////////////////////////////////////////////  int kgFood = int.Parse(Console.ReadLine());
////////////////////////////////////////////////////////////////////////////////////  double dailyFoodFirst = double.Parse(Console.ReadLine());
////////////////////////////////////////////////////////////////////////////////////  double dailyFoodSecond = double.Parse();
////////////////////////////////////////////////////////////////////////////////////  double dailyFoodThird = double.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////////////////  int foodNeeded = days * dailyFoodFirst
////////////////////////////////////////////////////////////////////////////////////                      + days * dailyFoodSecond
////////////////////////////////////////////////////////////////////////////////////                      + days * dailyFoodThird;

////////////////////////////////////////////////////////////////////////////////////  if (kgFood <= foodNeeded)
////////////////////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////////////////////    Console.WriteLine("{Math.Floor(kgFood - foodNeeded)} kilos of food left.");
////////////////////////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////////////////////////  else
////////////////////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////////////////////    Console.WriteLine("{Math.Ceiling(foodNeeded - kgFood)} more kilos of food are needed.");
////////////////////////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////////////////Открийте и поправете грешките във вече написания програмен код, така че да се реши поставената по-долу задача. Допълнете кода.

////////////////////////////////////////////////////////////////////////////////////Елените на Дядо Коледа

////////////////////////////////////////////////////////////////////////////////////Дядо Коледа много обича да пътешества, но за съжаление се случило, така че точно преди да замине на почивка три от елените му се разболяли и трябва да ги остави. Когато заминава, той трябва да съобрази колко храна да остави на всеки един от елените, за да не останат гладни. Напишете програма, която пресмята дали оставената от Дядо Коледа храна ще е достатъчна за времето, в което него няма да го има. Всеки елен изяжда определено количество храна на ден.

////////////////////////////////////////////////////////////////////////////////////Вход:

////////////////////////////////////////////////////////////////////////////////////От конзолата се четат пет реда:

////////////////////////////////////////////////////////////////////////////////////Първи ред – брой дни, в които Дядо Коледа отсъства – цяло число в интервала [1…5000]
////////////////////////////////////////////////////////////////////////////////////Втори ред – оставена храна в килограми – цяло число в интервала [0…100000]
////////////////////////////////////////////////////////////////////////////////////Трети ред – храна на ден за първия елен в килограми – реално число в интервала [0.00…100.00]
////////////////////////////////////////////////////////////////////////////////////Четвърти ред – храна на ден за втория елен в килограми– реално число в интервала [0.00…100.00]
////////////////////////////////////////////////////////////////////////////////////Пети ред – храна на ден за третия елен в килограми – реално число в интервала [0.00…100.00]
////////////////////////////////////////////////////////////////////////////////////Изход:

////////////////////////////////////////////////////////////////////////////////////На конзолата трябва да се отпечата на един ред:

////////////////////////////////////////////////////////////////////////////////////Ако оставената храна Е достатъчна:
////////////////////////////////////////////////////////////////////////////////////“{ килограми, които остават}
////////////////////////////////////////////////////////////////////////////////////kilos of food left.”
////////////////////////////////////////////////////////////////////////////////////Резултатът трябва да е закръглен към ПО-МАЛКОТО цяло число
////////////////////////////////////////////////////////////////////////////////////Ако оставената храна НЕ Е достатъчна:
////////////////////////////////////////////////////////////////////////////////////“{ килограми, които не  недостигат}
////////////////////////////////////////////////////////////////////////////////////more kilos of food are needed.”
////////////////////////////////////////////////////////////////////////////////////Резултатът трябва да е закръглен към ПО-ГОЛЯМОТО цяло число
////////////////////////////////////////////////////////////////////////////////////Примерен вход и изход:

////////////////////////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////////////Обяснения

////////////////////////////////////////////////////////////////////////////////////2

////////////////////////////////////////////////////////////////////////////////////10

////////////////////////////////////////////////////////////////////////////////////1

////////////////////////////////////////////////////////////////////////////////////1

////////////////////////////////////////////////////////////////////////////////////2

////////////////////////////////////////////////////////////////////////////////////2 kilos of food left.

////////////////////////////////////////////////////////////////////////////////////Нужна храна за:

////////////////////////////////////////////////////////////////////////////////////първи елен => 2 дни * 1 кг = 2 кг

////////////////////////////////////////////////////////////////////////////////////втори елен => 2 дни * 1 кг = 2 кг

////////////////////////////////////////////////////////////////////////////////////трети елен => 2 дни * 2 кг = 4 кг

////////////////////////////////////////////////////////////////////////////////////Общо нужна храна => 2 + 2 + 4 = 8 кг

////////////////////////////////////////////////////////////////////////////////////8 < 10 => количеството храна е достатъчно

////////////////////////////////////////////////////////////////////////////////////=> 10 - 8 = 2 кг. храна остават

////////////////////////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////////////Обяснения

////////////////////////////////////////////////////////////////////////////////////5

////////////////////////////////////////////////////////////////////////////////////10

////////////////////////////////////////////////////////////////////////////////////2.1

////////////////////////////////////////////////////////////////////////////////////0.8

////////////////////////////////////////////////////////////////////////////////////11

////////////////////////////////////////////////////////////////////////////////////60 more kilos of food are needed.

////////////////////////////////////////////////////////////////////////////////////Нужна храна за:

////////////////////////////////////////////////////////////////////////////////////първи елен = 5 дни * 2.1 кг = 10.5 кг

////////////////////////////////////////////////////////////////////////////////////втори елен = 5 дни * 0.8 кг = 4 кг

////////////////////////////////////////////////////////////////////////////////////трети елен = 5 дни * 11 кг = 55 кг

////////////////////////////////////////////////////////////////////////////////////Общо нужна храна => 10.5 + 4 + 55 = 69.5 кг

////////////////////////////////////////////////////////////////////////////////////69.5 > 10 =>  количеството храна не е достатъчно

////////////////////////////////////////////////////////////////////////////////////=> 69.5 – 10 = 59.5 ~ 60 кг не достигат




////////////////////////////////////////////////////////////////////////////////////using System;



////////////////////////////////////////////////////////////////////////////////////namespace SantaFoodCalculator

////////////////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////////////////  class Program

////////////////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////////////////    static void Main(string[] args)

////////////////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////////////////      int days = int.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////////////////      int kgFood = int.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////////////////      double dailyFoodFirst = double.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////////////////      double dailyFoodSecond = double.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////////////////      double dailyFoodThird = double.Parse(Console.ReadLine());



////////////////////////////////////////////////////////////////////////////////////      double foodNeeded = days * dailyFoodFirst

////////////////////////////////////////////////////////////////////////////////////                          + days * dailyFoodSecond

////////////////////////////////////////////////////////////////////////////////////                          + days * dailyFoodThird;



////////////////////////////////////////////////////////////////////////////////////      if (kgFood >= foodNeeded)

////////////////////////////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////////////////////////////        Console.WriteLine($"{Math.Floor(kgFood - foodNeeded)} kilos of food left.");

////////////////////////////////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////////////////////////////////      else

////////////////////////////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////////////////////////////        Console.WriteLine($"{Math.Ceiling(foodNeeded - kgFood)} more kilos of food are needed.");

////////////////////////////////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////////////////Забележка
/////////////////////////////////////////////////////////////////////////////////////* КЛЮЧ
////////////////////////////////////////////////////////////////////////////////////         * int days = int.Parse(Console.ReadLine());//2т
////////////////////////////////////////////////////////////////////////////////////            int kgFood = int.Parse(Console.ReadLine()); 
////////////////////////////////////////////////////////////////////////////////////            double dailyFoodFirst = double.Parse(Console.ReadLine()); 
////////////////////////////////////////////////////////////////////////////////////            double dailyFoodSecond = double.Parse(Console.ReadLine()); //2т
////////////////////////////////////////////////////////////////////////////////////            double dailyFoodThird = double.Parse(Console.ReadLine()); 

////////////////////////////////////////////////////////////////////////////////////            //2т
////////////////////////////////////////////////////////////////////////////////////            double foodNeeded = days * dailyFoodFirst
////////////////////////////////////////////////////////////////////////////////////                                + days * dailyFoodSecond
////////////////////////////////////////////////////////////////////////////////////                                + days * dailyFoodThird; 

////////////////////////////////////////////////////////////////////////////////////            if (kgFood >= foodNeeded) //2т
////////////////////////////////////////////////////////////////////////////////////            {
////////////////////////////////////////////////////////////////////////////////////                Console.WriteLine($"{Math.Floor(kgFood - foodNeeded)} kilos of food left.");//1т
////////////////////////////////////////////////////////////////////////////////////            }
////////////////////////////////////////////////////////////////////////////////////            else 
////////////////////////////////////////////////////////////////////////////////////            {
////////////////////////////////////////////////////////////////////////////////////                Console.WriteLine($"{Math.Ceiling(foodNeeded - kgFood)} more kilos of food are needed.");//1т
////////////////////////////////////////////////////////////////////////////////////            }

////////////////////////////////////////////////////////////////////////////////////         */

////////////////////////////////////////////////////////////////////////////////////Въпрос 20
////////////////////////////////////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////Посочете какво означава живот на променливата или т.нар. variable scope в езика C#?
////////////////////////////////////////////////////////////////////////////////////Изберете едно
////////////////////////////////////////////////////////////////////////////////////a. Живот на променливата означава, че тя има обхват, който уточнява къде може да бъде използвана тази променлива. 
////////////////////////////////////////////////////////////////////////////////////b. Всичко от изброеното е вярно.
////////////////////////////////////////////////////////////////////////////////////c. Живот на променливата означава, че тази променлива можем да я създадем и когато вече не ни е нужна да я изтрием от паметта.
////////////////////////////////////////////////////////////////////////////////////d. Живот на променливата означава, че независимо къде сме дефинирали дадена променлива, ние можем да използваме тази променлива, стига да е в обхвата на нашия .cs файл.
////////////////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////////////////////////////////////////Правилният отговор е: Живот на променливата означава, че тя има обхват, който уточнява къде може да бъде използвана тази променлива.
////////////////////////////////////////////////////////////////////////////////////Въпрос 21
////////////////////////////////////////////////////////////////////////////////////Отчасти верен
////////////////////////////////////////////////////////////////////////////////////2,00 от максимално 4,00 точки
////////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////////Решете задачата: Показан е следният програмен фрагмент на C#. Какви стойности трябва да се зададат на променливите age и gender, за да получим резултат "Ms."? 



////////////////////////////////////////////////////////////////////////////////////age =	Отговор 1
////////////////////////////////////////////////////////////////////////////////////15

////////////////////////////////////////////////////////////////////////////////////gender =	Отговор 2
////////////////////////////////////////////////////////////////////////////////////f

////////////////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////////////////Your answer is partially correct.
////////////////////////////////////////////////////////////////////////////////////Вие правилно сте избрали 1.
////////////////////////////////////////////////////////////////////////////////////Правилният отговор е: age = → 16, gender = → f
////////////////////////////////////////////////////////////////////////////////////Край на прегледа
////////////////////////////////////////////////////////////////////////////////////Отиди на ...
////////////////////////////////////////////////////////////////////////////////////Отиди на ...
////////////////////////////////////////////////////////////////////////////////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
////////////////////////////////////////////////////////////////////////////////////Навигация в теста
////////////////////////////////////////////////////////////////////////////////////Край на прегледа
////////////////////////////////////////////////////////////////////////////////////Вие сте влезли в системата като Добри Илев (Изход)
////////////////////////////////////////////////////////////////////////////////////тренировъчен - курс - по
////////////////////////////////////////////////////////////////////////////////////Data retention summary
//////////////////////////////////////////////////////////////////////////////////using System.Reflection;
/////////////////////////////////////////////////////////////////////////////////////*
/////////////////////////////////////////////////////////////////////////////////////*
/////////////////////////////////////////////////////////////////////////////////////*
/////////////////////////////////////////////////////////////////////////////////////* КЛЮЧ
//////////////////////////////////////////////////////////////////////////////////Прескочи на основното съдържание
//////////////////////////////////////////////////////////////////////////////////ПГЕЕ
//////////////////////////////////////////////////////////////////////////////////Български ‎(bg)‎ 
//////////////////////////////////////////////////////////////////////////////////Добри Илев 
//////////////////////////////////////////////////////////////////////////////////Тренировъчен курс - Програмно осигуряване
//////////////////////////////////////////////////////////////////////////////////Начална страница
//////////////////////////////////////////////////////////////////////////////////Моите курсове
////////////////////////////////////////////////////////////////////////////////// тренировъчен-курс-по
////////////////////////////////////////////////////////////////////////////////// Изпитна тема 1
////////////////////////////////////////////////////////////////////////////////// Тест към Изпитна тема №1
//////////////////////////////////////////////////////////////////////////////////Започнат на	неделя, 2 април 2023, 13:44
//////////////////////////////////////////////////////////////////////////////////Състояние Завършен
//////////////////////////////////////////////////////////////////////////////////Приключен на	вторник, 4 април 2023, 09:32
//////////////////////////////////////////////////////////////////////////////////Изминало време	1 ден 19 часа
//////////////////////////////////////////////////////////////////////////////////Оценка	Още не е оценен
//////////////////////////////////////////////////////////////////////////////////Въпрос 1
//////////////////////////////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////////////////////////////6,00 от максимално 6,00 точки
//////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////Даден е следният примерен код на C#. Изчислете какъв ще бъде резултата, ако числото n = 5 , запишете в полето за отговор това, което ще се отпечата на конзолата.



//////////////////////////////////////////////////////////////////////////////////Отговор: 
//////////////////////////////////////////////////////////////////////////////////6
//////////////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////////////Точен отговор: 6т.

//////////////////////////////////////////////////////////////////////////////////Правилният отговор е: 6
//////////////////////////////////////////////////////////////////////////////////Въпрос 2
//////////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////////От максимално 10,00
//////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////Пример: По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид. 

//////////////////////////////////////////////////////////////////////////////////Условие: Разполагате със следния програмен код:

//////////////////////////////////////////////////////////////////////////////////Program.cs

//////////////////////////////////////////////////////////////////////////////////static void Main(string[] args)
//////////////////////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////////////////////  var days = Console.ReadLine();
//////////////////////////////////////////////////////////////////////////////////  int kgFood = int.Parse(Console.ReadLine());
//////////////////////////////////////////////////////////////////////////////////  double dailyFoodFirst = double.Parse(Console.ReadLine());
//////////////////////////////////////////////////////////////////////////////////  double dailyFoodSecond = double.Parse();
//////////////////////////////////////////////////////////////////////////////////  double dailyFoodThird = double.Parse(Console.ReadLine());

//////////////////////////////////////////////////////////////////////////////////  int foodNeeded = days * dailyFoodFirst
//////////////////////////////////////////////////////////////////////////////////                      + days * dailyFoodSecond
//////////////////////////////////////////////////////////////////////////////////                      + days * dailyFoodThird;

//////////////////////////////////////////////////////////////////////////////////  if (kgFood <= foodNeeded)
//////////////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////////////    Console.WriteLine("{Math.Floor(kgFood - foodNeeded)} kilos of food left.");
//////////////////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////////////////  else
//////////////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////////////    Console.WriteLine("{Math.Ceiling(foodNeeded - kgFood)} more kilos of food are needed.");
//////////////////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////////////////Открийте и поправете грешките във вече написания програмен код, така че да се реши поставената по-долу задача. Допълнете кода.

//////////////////////////////////////////////////////////////////////////////////Елените на Дядо Коледа

//////////////////////////////////////////////////////////////////////////////////Дядо Коледа много обича да пътешества, но за съжаление се случило, така че точно преди да замине на почивка три от елените му се разболяли и трябва да ги остави. Когато заминава, той трябва да съобрази колко храна да остави на всеки един от елените, за да не останат гладни. Напишете програма, която пресмята дали оставената от Дядо Коледа храна ще е достатъчна за времето, в което него няма да го има. Всеки елен изяжда определено количество храна на ден.

//////////////////////////////////////////////////////////////////////////////////Вход:

//////////////////////////////////////////////////////////////////////////////////От конзолата се четат пет реда:

//////////////////////////////////////////////////////////////////////////////////Първи ред – брой дни, в които Дядо Коледа отсъства – цяло число в интервала [1…5000]
//////////////////////////////////////////////////////////////////////////////////Втори ред – оставена храна в килограми – цяло число в интервала [0…100000]
//////////////////////////////////////////////////////////////////////////////////Трети ред – храна на ден за първия елен в килограми – реално число в интервала [0.00…100.00]
//////////////////////////////////////////////////////////////////////////////////Четвърти ред – храна на ден за втория елен в килограми– реално число в интервала [0.00…100.00]
//////////////////////////////////////////////////////////////////////////////////Пети ред – храна на ден за третия елен в килограми – реално число в интервала [0.00…100.00]
//////////////////////////////////////////////////////////////////////////////////Изход:

//////////////////////////////////////////////////////////////////////////////////На конзолата трябва да се отпечата на един ред:

//////////////////////////////////////////////////////////////////////////////////Ако оставената храна Е достатъчна:
//////////////////////////////////////////////////////////////////////////////////“{ килограми, които остават}
//////////////////////////////////////////////////////////////////////////////////kilos of food left.”
//////////////////////////////////////////////////////////////////////////////////Резултатът трябва да е закръглен към ПО-МАЛКОТО цяло число
//////////////////////////////////////////////////////////////////////////////////Ако оставената храна НЕ Е достатъчна:
//////////////////////////////////////////////////////////////////////////////////“{ килограми, които не  недостигат}
//////////////////////////////////////////////////////////////////////////////////more kilos of food are needed.”
//////////////////////////////////////////////////////////////////////////////////Резултатът трябва да е закръглен към ПО-ГОЛЯМОТО цяло число
//////////////////////////////////////////////////////////////////////////////////Примерен вход и изход:

//////////////////////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////////////Обяснения

//////////////////////////////////////////////////////////////////////////////////2

//////////////////////////////////////////////////////////////////////////////////10

//////////////////////////////////////////////////////////////////////////////////1

//////////////////////////////////////////////////////////////////////////////////1

//////////////////////////////////////////////////////////////////////////////////2

//////////////////////////////////////////////////////////////////////////////////2 kilos of food left.

//////////////////////////////////////////////////////////////////////////////////Нужна храна за:

//////////////////////////////////////////////////////////////////////////////////първи елен => 2 дни * 1 кг = 2 кг

//////////////////////////////////////////////////////////////////////////////////втори елен => 2 дни * 1 кг = 2 кг

//////////////////////////////////////////////////////////////////////////////////трети елен => 2 дни * 2 кг = 4 кг

//////////////////////////////////////////////////////////////////////////////////Общо нужна храна => 2 + 2 + 4 = 8 кг

//////////////////////////////////////////////////////////////////////////////////8 < 10 => количеството храна е достатъчно

//////////////////////////////////////////////////////////////////////////////////=> 10 - 8 = 2 кг. храна остават

//////////////////////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////////////Обяснения

//////////////////////////////////////////////////////////////////////////////////5

//////////////////////////////////////////////////////////////////////////////////10

//////////////////////////////////////////////////////////////////////////////////2.1

//////////////////////////////////////////////////////////////////////////////////0.8

//////////////////////////////////////////////////////////////////////////////////11

//////////////////////////////////////////////////////////////////////////////////60 more kilos of food are needed.

//////////////////////////////////////////////////////////////////////////////////Нужна храна за:

//////////////////////////////////////////////////////////////////////////////////първи елен = 5 дни * 2.1 кг = 10.5 кг

//////////////////////////////////////////////////////////////////////////////////втори елен = 5 дни * 0.8 кг = 4 кг

//////////////////////////////////////////////////////////////////////////////////трети елен = 5 дни * 11 кг = 55 кг

//////////////////////////////////////////////////////////////////////////////////Общо нужна храна => 10.5 + 4 + 55 = 69.5 кг

//////////////////////////////////////////////////////////////////////////////////69.5 > 10 =>  количеството храна не е достатъчно

//////////////////////////////////////////////////////////////////////////////////=> 69.5 – 10 = 59.5 ~ 60 кг не достигат




//////////////////////////////////////////////////////////////////////////////////using System;

//////////////////////////////////////////////////////////////////////////////////using System.Collections.Generic;

//////////////////////////////////////////////////////////////////////////////////using System.Linq;

//////////////////////////////////////////////////////////////////////////////////using System.Text;

//////////////////////////////////////////////////////////////////////////////////using System.Threading.Tasks;



//////////////////////////////////////////////////////////////////////////////////namespace Test1

//////////////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////////////  internal class Program

//////////////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////////////    static void Main(string[] args)

//////////////////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////////////////      int days = int.Parse(Console.ReadLine());

//////////////////////////////////////////////////////////////////////////////////      int kgFood = int.Parse(Console.ReadLine());

//////////////////////////////////////////////////////////////////////////////////      double dailyFoodFirst = double.Parse(Console.ReadLine());

//////////////////////////////////////////////////////////////////////////////////      double dailyFoodSecond = double.Parse(Console.ReadLine());

//////////////////////////////////////////////////////////////////////////////////      double dailyFoodThird = double.Parse(Console.ReadLine());



//////////////////////////////////////////////////////////////////////////////////      var foodNeeded = days * dailyFoodFirst + days * dailyFoodSecond + days * dailyFoodThird;



//////////////////////////////////////////////////////////////////////////////////      if (kgFood >= foodNeeded)

//////////////////////////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////////////////////////        Console.WriteLine($"{Math.Floor(kgFood - foodNeeded)} kilos of food left.");

//////////////////////////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////////////////////////      else

//////////////////////////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////////////////////////        Console.WriteLine($"{Math.Ceiling(foodNeeded - kgFood)} more kilos of food are needed.");

//////////////////////////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////////////////Забележка
///////////////////////////////////////////////////////////////////////////////////* КЛЮЧ
//////////////////////////////////////////////////////////////////////////////////         * int days = int.Parse(Console.ReadLine());//2т
//////////////////////////////////////////////////////////////////////////////////            int kgFood = int.Parse(Console.ReadLine()); 
//////////////////////////////////////////////////////////////////////////////////            double dailyFoodFirst = double.Parse(Console.ReadLine()); 
//////////////////////////////////////////////////////////////////////////////////            double dailyFoodSecond = double.Parse(Console.ReadLine()); //2т
//////////////////////////////////////////////////////////////////////////////////            double dailyFoodThird = double.Parse(Console.ReadLine()); 

//////////////////////////////////////////////////////////////////////////////////            //2т
//////////////////////////////////////////////////////////////////////////////////            double foodNeeded = days * dailyFoodFirst
//////////////////////////////////////////////////////////////////////////////////                                + days * dailyFoodSecond
//////////////////////////////////////////////////////////////////////////////////                                + days * dailyFoodThird; 

//////////////////////////////////////////////////////////////////////////////////            if (kgFood >= foodNeeded) //2т
//////////////////////////////////////////////////////////////////////////////////            {
//////////////////////////////////////////////////////////////////////////////////                Console.WriteLine($"{Math.Floor(kgFood - foodNeeded)} kilos of food left.");//1т
//////////////////////////////////////////////////////////////////////////////////            }
//////////////////////////////////////////////////////////////////////////////////            else 
//////////////////////////////////////////////////////////////////////////////////            {
//////////////////////////////////////////////////////////////////////////////////                Console.WriteLine($"{Math.Ceiling(foodNeeded - kgFood)} more kilos of food are needed.");//1т
//////////////////////////////////////////////////////////////////////////////////            }

//////////////////////////////////////////////////////////////////////////////////         */

//////////////////////////////////////////////////////////////////////////////////Въпрос 3
//////////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////////От максимално 2,00
//////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////Дефинирайте оператор за многовариантен избор (switch-case).
//////////////////////////////////////////////////////////////////////////////////using System;

//////////////////////////////////////////////////////////////////////////////////using System.Collections.Generic;

//////////////////////////////////////////////////////////////////////////////////using System.Linq;

//////////////////////////////////////////////////////////////////////////////////using System.Text;

//////////////////////////////////////////////////////////////////////////////////using System.Threading.Tasks;



//////////////////////////////////////////////////////////////////////////////////namespace Test1

//////////////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////////////  internal class Program

//////////////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////////////    static void Main(string[] args)

//////////////////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////////////////      int number = int.Parse(Console.ReadLine());

//////////////////////////////////////////////////////////////////////////////////      switch (number)

//////////////////////////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////////////////////////        case 1:

//////////////////////////////////////////////////////////////////////////////////          Console.WriteLine("Monday");

//////////////////////////////////////////////////////////////////////////////////          break;

//////////////////////////////////////////////////////////////////////////////////        case 2:

//////////////////////////////////////////////////////////////////////////////////          Console.WriteLine("Tuesday");

//////////////////////////////////////////////////////////////////////////////////          break;

//////////////////////////////////////////////////////////////////////////////////        case 3:

//////////////////////////////////////////////////////////////////////////////////          Console.WriteLine("Wednesday");

//////////////////////////////////////////////////////////////////////////////////          break;

//////////////////////////////////////////////////////////////////////////////////        case 4:

//////////////////////////////////////////////////////////////////////////////////          Console.WriteLine("Thursday");

//////////////////////////////////////////////////////////////////////////////////          break;

//////////////////////////////////////////////////////////////////////////////////        case 5:

//////////////////////////////////////////////////////////////////////////////////          Console.WriteLine("Friday");

//////////////////////////////////////////////////////////////////////////////////          break;

//////////////////////////////////////////////////////////////////////////////////        case 6:

//////////////////////////////////////////////////////////////////////////////////          Console.WriteLine("Saturday");

//////////////////////////////////////////////////////////////////////////////////          break;

//////////////////////////////////////////////////////////////////////////////////        case 7:

//////////////////////////////////////////////////////////////////////////////////          Console.WriteLine("Sunday");

//////////////////////////////////////////////////////////////////////////////////          break;

//////////////////////////////////////////////////////////////////////////////////        default:

//////////////////////////////////////////////////////////////////////////////////          Console.WriteLine("Write a number between 1 and 7");

//////////////////////////////////////////////////////////////////////////////////          break;

//////////////////////////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////////////Когато работата на програмата ни зависи от стойността на една променлива, вместо да правим последователни проверки с множество if-else блокове, можем да използваме условната конструкция switch-case.

//////////////////////////////////////////////////////////////////////////////////Конструкцията се състои от:

//////////////////////////////////////////////////////////////////////////////////Селектор - израз, който се изчислява до някаква конкретна стойност. Типът на селектора може да бъде цяло число, string или enum.
//////////////////////////////////////////////////////////////////////////////////Множество case етикети с команди след тях, завършващи с break.
//////////////////////////////////////////////////////////////////////////////////Непълен отговор: 1т.

//////////////////////////////////////////////////////////////////////////////////Пълен отговор: 2т.



//////////////////////////////////////////////////////////////////////////////////Въпрос 4
//////////////////////////////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////////////////////////////4,00 от максимално 4,00 точки
//////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////Обяснете в каква последователност ще се изпълни програмата, когато имаме серия от проверки като на примера по-долу?


//////////////////////////////////////////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////////////////////////////////////////a. Последователно сравнява входното число от конзолата с цифрите от 1 до 9, като всяко следващо сравнение се извършва, само в случай че предходното сравнение не е било истина. Като последната else клаузa се изпълнява винаги.
//////////////////////////////////////////////////////////////////////////////////b. Последователно сравнява входното число от конзолата с цифрите от 1 до 9, като всяко следващо сравнение се извършва независимо от предходното сравнение дали е било истина. Ако никое от if условията не е изпълнено, се изпълнява последната else клаузa.
//////////////////////////////////////////////////////////////////////////////////c. Последователно сравнява входното число от конзолата с цифрите от 1 до 9, като всяко следващо сравнение се извършва, само в случай че предходното сравнение не е било истина. Ако никое от if условията не е изпълнено, се изпълнява последната else клаузa. 
//////////////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////////////////////////////Правилният отговор е: Последователно сравнява входното число от конзолата с цифрите от 1 до 9, като всяко следващо сравнение се извършва, само в случай че предходното сравнение не е било истина. Ако никое от if условията не е изпълнено, се изпълнява последната else клаузa.
//////////////////////////////////////////////////////////////////////////////////Въпрос 5
//////////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////////От максимално 10,00
//////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////Текст на въпроса



//////////////////////////////////////////////////////////////////////////////////Пример: По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.



//////////////////////////////////////////////////////////////////////////////////Условие: Разполагате със следния програмен код:

//////////////////////////////////////////////////////////////////////////////////Program.cs

//////////////////////////////////////////////////////////////////////////////////int number = int.Parse(Console.ReadLine());
//////////////////////////////////////////////////////////////////////////////////int firstDigit = number / 100;
//////////////////////////////////////////////////////////////////////////////////int secondDigit = (number / 100) % 10;
//////////////////////////////////////////////////////////////////////////////////int thirdDigit = number % 100;
//////////////////////////////////////////////////////////////////////////////////int rows = firstDigit + secondDigit;
//////////////////////////////////////////////////////////////////////////////////int cols = firstDigit + thirdDigit;

//////////////////////////////////////////////////////////////////////////////////for (int row = 0; row < rows; row--)
//////////////////////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////////////////////  for (int col = 0; col > cols; col++)
//////////////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////////////    if (number % 5 == 0)
//////////////////////////////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////////////////////////////      number -= firstDigit;
//////////////////////////////////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////////////////////////////////    if (number % 3 == 0)
//////////////////////////////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////////////////////////////      number = secondDigit;
//////////////////////////////////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////////////////////////////////    else
//////////////////////////////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////////////////////////////      number += thirdDigit;
//////////////////////////////////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////////////////////////////////    Console.Write($"{number} ");
//////////////////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////////////////  Console.WriteLine();
//////////////////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////////////////Открийте и поправете грешките във вече написания програмен код, така че да се реши поставената по-долу задача. Допълнете кода.



//////////////////////////////////////////////////////////////////////////////////Цифри

//////////////////////////////////////////////////////////////////////////////////Като вход на програмата, се прочита от конзолата 1 цяло трицифрено число. Трябва да принтирате числото определен брой пъти, като всеки път, преди да се принтира, числото се модифицира по следния начин:

//////////////////////////////////////////////////////////////////////////////////·       ако числото се дели на 5 без остатък, извадете от него първата му цифра,

//////////////////////////////////////////////////////////////////////////////////·       ако числото се дели на 3 без остатък, извадете от него втората му цифра,

//////////////////////////////////////////////////////////////////////////////////·       ако не е нито едно от горните – прибавете към него третата му цифра,

//////////////////////////////////////////////////////////////////////////////////Принтирайте на конзолата N на брой реда, като всеки ред има М на брой числа, които са резултат от горните действия. Редовете са равни на сбора на първата и втората цифра на числото, а колоните – на първата и третата цифра.

//////////////////////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////////////////////Входът е цяло число в интервала [100…999].

//////////////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////////////Да се отпечатат на конзолата всички цели числа, които са резултат от дадените по-горе изчисления в съответния брой редове и колони, както в примерите.

//////////////////////////////////////////////////////////////////////////////////Примерен вход и изход

//////////////////////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////////////Обяснения

//////////////////////////////////////////////////////////////////////////////////132

//////////////////////////////////////////////////////////////////////////////////129 126 123

//////////////////////////////////////////////////////////////////////////////////120 119 121

//////////////////////////////////////////////////////////////////////////////////123 120 119

//////////////////////////////////////////////////////////////////////////////////121 123 120

//////////////////////////////////////////////////////////////////////////////////(1 +3) = 4 и(1 + 2) = 3-> 4 реда по 3 числа на всеки ред

//////////////////////////////////////////////////////////////////////////////////Входното число 132

//////////////////////////////////////////////////////////////////////////////////132 -> деление на 3 -> 132 - 3 =

//////////////////////////////////////////////////////////////////////////////////= 129 -> деление на 3 -> 129 - 3 =

//////////////////////////////////////////////////////////////////////////////////= 126 -> деление на 3 -> 126 - 3 =

//////////////////////////////////////////////////////////////////////////////////= 123 -> деление на 3 -> 123 - 3 =

//////////////////////////////////////////////////////////////////////////////////= 120 -> деление на 5 -> 120 - 1 =

//////////////////////////////////////////////////////////////////////////////////..... 121 -> нито на 5, нито на 3 -> 121 + 2 = 123

//////////////////////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////////////Обяснения

//////////////////////////////////////////////////////////////////////////////////376

//////////////////////////////////////////////////////////////////////////////////382 388 394 400 397 403 409 415 412

//////////////////////////////////////////////////////////////////////////////////418 424 430 427 433 439 445 442 448

//////////////////////////////////////////////////////////////////////////////////454 460 457 463 469 475 472 478 484

//////////////////////////////////////////////////////////////////////////////////490 487 493 499 505 502 508 514 520

//////////////////////////////////////////////////////////////////////////////////517 523 529 535 532 538 544 550 547

//////////////////////////////////////////////////////////////////////////////////553 559 565 562 568 574 580 577 583

//////////////////////////////////////////////////////////////////////////////////589 595 592 598 604 610 607 613 619

//////////////////////////////////////////////////////////////////////////////////625 622 628 634 640 637 643 649 655

//////////////////////////////////////////////////////////////////////////////////652 658 664 670 667 673 679 685 682

//////////////////////////////////////////////////////////////////////////////////688 694 700 697 703 709 715 712 718

//////////////////////////////////////////////////////////////////////////////////10 реда по 9 числа на всеки

//////////////////////////////////////////////////////////////////////////////////Входното число 376 -> нито на 5, нито на 3 -> 376 + 6 =

//////////////////////////////////////////////////////////////////////////////////= 382 -> нито на 5, нито на 3 -> 382 + 6 =

//////////////////////////////////////////////////////////////////////////////////= 388  + 6 = 394 + 6 =

//////////////////////////////////////////////////////////////////////////////////= 400 -> деление на 5 -> 400 – 3 = 397

//////////////////////////////////////////////////////////////////////////////////...




//////////////////////////////////////////////////////////////////////////////////using System;

//////////////////////////////////////////////////////////////////////////////////using System.Collections.Generic;

//////////////////////////////////////////////////////////////////////////////////using System.Linq;

//////////////////////////////////////////////////////////////////////////////////using System.Text;

//////////////////////////////////////////////////////////////////////////////////using System.Threading.Tasks;



//////////////////////////////////////////////////////////////////////////////////namespace Test1

//////////////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////////////  internal class Program

//////////////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////////////    static void Main(string[] args)

//////////////////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////////////////      int number = int.Parse(Console.ReadLine());

//////////////////////////////////////////////////////////////////////////////////      int firstDigit = number / 100;

//////////////////////////////////////////////////////////////////////////////////      int secondDigit = (number % 100) / 10;

//////////////////////////////////////////////////////////////////////////////////      int thirdDigit = number % 10;

//////////////////////////////////////////////////////////////////////////////////      int rows = firstDigit + secondDigit;

//////////////////////////////////////////////////////////////////////////////////      int cols = firstDigit + thirdDigit;



//////////////////////////////////////////////////////////////////////////////////      for (int row = 0; row < rows; row++)

//////////////////////////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////////////////////////        for (int col = 0; col < cols; col++)

//////////////////////////////////////////////////////////////////////////////////        {

//////////////////////////////////////////////////////////////////////////////////          if (number % 5 == 0)

//////////////////////////////////////////////////////////////////////////////////          {

//////////////////////////////////////////////////////////////////////////////////            number -= firstDigit;

//////////////////////////////////////////////////////////////////////////////////          }

//////////////////////////////////////////////////////////////////////////////////          else if (number % 3 == 0)

//////////////////////////////////////////////////////////////////////////////////          {

//////////////////////////////////////////////////////////////////////////////////            number -= secondDigit;

//////////////////////////////////////////////////////////////////////////////////          }

//////////////////////////////////////////////////////////////////////////////////          else

//////////////////////////////////////////////////////////////////////////////////          {

//////////////////////////////////////////////////////////////////////////////////            number += thirdDigit;

//////////////////////////////////////////////////////////////////////////////////          }

//////////////////////////////////////////////////////////////////////////////////          Console.Write($"{number} ");

//////////////////////////////////////////////////////////////////////////////////        }



//////////////////////////////////////////////////////////////////////////////////        Console.WriteLine();

//////////////////////////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////////////////Забележка
///////////////////////////////////////////////////////////////////////////////////*
//////////////////////////////////////////////////////////////////////////////////         КЛЮЧ
//////////////////////////////////////////////////////////////////////////////////         int number = int.Parse(Console.ReadLine()); 
//////////////////////////////////////////////////////////////////////////////////            int firstDigit = number / 100; 
//////////////////////////////////////////////////////////////////////////////////            int secondDigit = (number / 10) % 10; //2Т
//////////////////////////////////////////////////////////////////////////////////            int thirdDigit = number % 10; //2Т
//////////////////////////////////////////////////////////////////////////////////            int rows = firstDigit + secondDigit; 
//////////////////////////////////////////////////////////////////////////////////            int cols = firstDigit + thirdDigit; 

//////////////////////////////////////////////////////////////////////////////////            for (int row = 0; row < rows; row++) //2Т
//////////////////////////////////////////////////////////////////////////////////            {
//////////////////////////////////////////////////////////////////////////////////                for (int col = 0; col < cols; col++) //2Т
//////////////////////////////////////////////////////////////////////////////////                {
//////////////////////////////////////////////////////////////////////////////////                    if (number % 5 == 0) 
//////////////////////////////////////////////////////////////////////////////////                    {
//////////////////////////////////////////////////////////////////////////////////                        number -= firstDigit;
//////////////////////////////////////////////////////////////////////////////////                    }
//////////////////////////////////////////////////////////////////////////////////                    else if (number % 3 == 0) //1Т
//////////////////////////////////////////////////////////////////////////////////                    {
//////////////////////////////////////////////////////////////////////////////////                        number -= secondDigit;//1Т
//////////////////////////////////////////////////////////////////////////////////                    }
//////////////////////////////////////////////////////////////////////////////////                    else
//////////////////////////////////////////////////////////////////////////////////                    {
//////////////////////////////////////////////////////////////////////////////////                        number += thirdDigit; 
//////////////////////////////////////////////////////////////////////////////////                    }
//////////////////////////////////////////////////////////////////////////////////                    Console.Write($"{number} "); 
//////////////////////////////////////////////////////////////////////////////////                } 

//////////////////////////////////////////////////////////////////////////////////                Console.WriteLine(); 
//////////////////////////////////////////////////////////////////////////////////            }
//////////////////////////////////////////////////////////////////////////////////         */

//////////////////////////////////////////////////////////////////////////////////Въпрос 6
//////////////////////////////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////////////////////////////4,00 от максимално 4,00 точки
//////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////Решете задачата: Показан е следният програмен фрагмент на C#. Какви стойности трябва да се зададат на променливите age и gender, за да получим резултат "Ms."? 



//////////////////////////////////////////////////////////////////////////////////age =	Отговор 1
//////////////////////////////////////////////////////////////////////////////////16

//////////////////////////////////////////////////////////////////////////////////gender =	Отговор 2
//////////////////////////////////////////////////////////////////////////////////f

//////////////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////////////////////////////Правилният отговор е: age = → 16, gender = → f
//////////////////////////////////////////////////////////////////////////////////Въпрос 7
//////////////////////////////////////////////////////////////////////////////////Не е отговорен
//////////////////////////////////////////////////////////////////////////////////От максимално 2,00
//////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////Дефинирайте понятието метод - Защо е добра практика да използваме методи? Как се декларират методи? Как се извикват методи? Какво са параметри на метод и връщана стойност?

//////////////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////////////Дефиниция:

//////////////////////////////////////////////////////////////////////////////////Методите са парчета код, които са именувани от нас по определен начин и които могат да бъдат извикани толкова пъти, колкото имаме нужда.

//////////////////////////////////////////////////////////////////////////////////Един метод може да бъде извикан толкова пъти, колкото ние преценим, че ни е нужно за решаване на даден проблем. Това ни спестява повторението на един и същи код няколко пъти, както и намалява възможността да пропуснем грешка при евентуална корекция на въпросния код.

//////////////////////////////////////////////////////////////////////////////////Даден проблем може да бъде разделен на по-малки части, като това ни улеснява  да го решим, избягваме повторенията на код и ни предпазва от грешки, също така подобрява четимостта на кода.

//////////////////////////////////////////////////////////////////////////////////Деклариране на методи:

//////////////////////////////////////////////////////////////////////////////////В езика C# декларираме методите в рамките на даден клас, т.е. между отварящата { и затваряща } скоби на класа. Декларирането представлява регистрирането на метода в програмата, за да бъде разпознаван в останалата част от нея. 

//////////////////////////////////////////////////////////////////////////////////Със следващия пример ще разгледаме задължителните елементи в декларацията на един метод.



//////////////////////////////////////////////////////////////////////////////////Тип на връщаната стойност. В случая типа е double, което означава, че методът от примера ще върне резултат, който е от тип double. Връщаната стойност може да бъде както int, double, string и т.н., така и void. Ако типът е void, то това означава, че методът не връща резултат, а само изпълнява дадена операция.
//////////////////////////////////////////////////////////////////////////////////Име на метода. Името на метода е определено от нас, като не забравяме, че трябва да описва функцията, която е изпълнявана от кода в тялото му. В примера името е GetSquare, което ни указва, че задачата на този метод е да изчисли лицето на квадрат.
//////////////////////////////////////////////////////////////////////////////////Списък с параметри. Декларира се между скобите ( и ), които изписваме след името му. Тук изброяваме поредицата от параметри, които метода ще използва. Може да присъства само един параметър, няколко такива или да е празен списък. Ако няма параметри, то ще запишем само скобите (). В конкретния пример декларираме параметъра double num.
//////////////////////////////////////////////////////////////////////////////////Декларация static в описанието на метода. За момента може да приемем, че static се пише винаги, когато се декларира метод, а по-късно, когато се запознаем с обектно-ориентираното програмиране (ООП), ще разберем разликата между статични методи (споделени за целия клас) и методи на обект, които работят върху данните на конкретна инстанция на класа (обект).
//////////////////////////////////////////////////////////////////////////////////При деклариране на методи е важно да спазваме последователността на основните му елементи - първо тип на връщаната стойност, след това име на метода и накрая списък от параметри, ограден с кръгли скоби ().

//////////////////////////////////////////////////////////////////////////////////След като сме декларирали метода, следва неговата имплементация (тяло). В тялото на метода описваме алгоритъма, по който той решава даден проблем, т.е. тялото съдържа кода (програмен блок), който реализира логиката на метода. В показания пример изчисляваме лицето на квадрат, а именно num * num.

//////////////////////////////////////////////////////////////////////////////////Когато декларираме дадена променлива в тялото на един метод, я наричаме локална променлива за метода. Областта, в която съществува и може да бъде използвана тази променлива, започва от реда, на който сме я декларирали и стига до затварящата къдрава скоба } на тялото на метода. Тази област се нарича област на видимост на променливата (variable scope).

//////////////////////////////////////////////////////////////////////////////////Извикване на методи:

//////////////////////////////////////////////////////////////////////////////////Извикването на метод представлява стартирането на изпълнението на кода, който се намира в тялото на метода. Това става като изпишем името му, последвано от кръглите скоби () и знака; за край на реда. Ако методът ни изисква входни данни, то те се подават в скобите (), като последователността на фактическите параметри трябва да съвпада с последователността на подадените при декларирането на метода. 




//////////////////////////////////////////////////////////////////////////////////Въпрос 8
//////////////////////////////////////////////////////////////////////////////////Не е отговорен
//////////////////////////////////////////////////////////////////////////////////От максимално 2,00
//////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////Дефинирайте понятието алгоритъм.
//////////////////////////////////////////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////////////////////////////////////////a. Управляват хардуера и изискват много усилия и огромен брой команди, за да свършат единица работа
//////////////////////////////////////////////////////////////////////////////////b. Превежда кода от програмен език на машинен код.
//////////////////////////////////////////////////////////////////////////////////c. Поредица от команди, необходими, за да се свърши определена работа.
//////////////////////////////////////////////////////////////////////////////////d. Съвкупност от традиционни инструменти за разработване на софтуерни приложения.
//////////////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////////////Your answer is incorrect.
//////////////////////////////////////////////////////////////////////////////////Правилният отговор е: Поредица от команди, необходими, за да се свърши определена работа.
//////////////////////////////////////////////////////////////////////////////////Въпрос 9
//////////////////////////////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////Посочете кои езици за програмиране работят с компилатор, кои с интерпретатор?

//////////////////////////////////////////////////////////////////////////////////Език за програмиране	компилатор/интерпретатор
//////////////////////////////////////////////////////////////////////////////////Python	
//////////////////////////////////////////////////////////////////////////////////с интерпретатор

//////////////////////////////////////////////////////////////////////////////////PHP	
//////////////////////////////////////////////////////////////////////////////////с интерпретатор

//////////////////////////////////////////////////////////////////////////////////C++	
//////////////////////////////////////////////////////////////////////////////////с компилатор

//////////////////////////////////////////////////////////////////////////////////C#	
//////////////////////////////////////////////////////////////////////////////////с компилатор

//////////////////////////////////////////////////////////////////////////////////Java 

//////////////////////////////////////////////////////////////////////////////////с компилатор

//////////////////////////////////////////////////////////////////////////////////JavaScript 	
//////////////////////////////////////////////////////////////////////////////////с интерпретатор

//////////////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////////////////////////////Правилният отговор е: Посочете кои езици за програмиране работят с компилатор, кои с интерпретатор?

//////////////////////////////////////////////////////////////////////////////////Език за програмиране	компилатор/интерпретатор
//////////////////////////////////////////////////////////////////////////////////Python	[с интерпретатор]
//////////////////////////////////////////////////////////////////////////////////PHP[с интерпретатор]
//////////////////////////////////////////////////////////////////////////////////C++[с компилатор]
//////////////////////////////////////////////////////////////////////////////////C#	[с компилатор]
//////////////////////////////////////////////////////////////////////////////////Java
//////////////////////////////////////////////////////////////////////////////////[с компилатор]
//////////////////////////////////////////////////////////////////////////////////JavaScript 	[с интерпретатор]
//////////////////////////////////////////////////////////////////////////////////Въпрос 10
//////////////////////////////////////////////////////////////////////////////////Не е отговорен
//////////////////////////////////////////////////////////////////////////////////От максимално 2,00
//////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////Дефинирайте понятието език за програмиране.
//////////////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////////////Езикът за програмиране е предназначен за задаване на команди, които искаме компютърът да прочете, обработи и изпълни. Чрез езиците за програмиране пишем поредици от команди (програми), които задават какво да прави компютъра. Изпълнението на компютърните програми може да се реализира с компилатор или с интерпретатор. Съществуват различни видове езици за програмиране. С езици от високо ниво като C#, Python и JavaScript се създават приложни програми, например програма за четене на поща или чат програма.
//////////////////////////////////////////////////////////////////////////////////Частичен отговор: 1т.
//////////////////////////////////////////////////////////////////////////////////Пълен отговор: 2т.
//////////////////////////////////////////////////////////////////////////////////Друго: 0т.
//////////////////////////////////////////////////////////////////////////////////Въпрос 11
//////////////////////////////////////////////////////////////////////////////////Неправилно
//////////////////////////////////////////////////////////////////////////////////0,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////Посочете какво означава живот на променливата или т.нар. variable scope в езика C#?
//////////////////////////////////////////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////////////////////////////////////////a. Всичко от изброеното е вярно. 
//////////////////////////////////////////////////////////////////////////////////b. Живот на променливата означава, че тя има обхват, който уточнява къде може да бъде използвана тази променлива.
//////////////////////////////////////////////////////////////////////////////////c. Живот на променливата означава, че тази променлива можем да я създадем и когато вече не ни е нужна да я изтрием от паметта.
//////////////////////////////////////////////////////////////////////////////////d. Живот на променливата означава, че независимо къде сме дефинирали дадена променлива, ние можем да използваме тази променлива, стига да е в обхвата на нашия .cs файл.
//////////////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////////////Your answer is incorrect.
//////////////////////////////////////////////////////////////////////////////////Правилният отговор е: Живот на променливата означава, че тя има обхват, който уточнява къде може да бъде използвана тази променлива.
//////////////////////////////////////////////////////////////////////////////////Въпрос 12
//////////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////Дайте пример за конзолна програма, която чете оценка (десетично число), въведена от потребителя, и отпечатва “Excellent!”, ако оценката е 5.50 или по-висока, или “Not excellent.” в противен случай.

//////////////////////////////////////////////////////////////////////////////////using System;

//////////////////////////////////////////////////////////////////////////////////using System.Collections.Generic;

//////////////////////////////////////////////////////////////////////////////////using System.Linq;

//////////////////////////////////////////////////////////////////////////////////using System.Text;

//////////////////////////////////////////////////////////////////////////////////using System.Threading.Tasks;



//////////////////////////////////////////////////////////////////////////////////namespace Test1

//////////////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////////////  internal class Program

//////////////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////////////    static void Main(string[] args)

//////////////////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////////////////      double grade = double.Parse(Console.ReadLine());

//////////////////////////////////////////////////////////////////////////////////      if (grade >= 5.50)

//////////////////////////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////////////////////////        Console.WriteLine("Excellent!");

//////////////////////////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////////////////////////      else

//////////////////////////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////////////////////////        Console.WriteLine("Not excellent!");

//////////////////////////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////////////////Въпрос 13
//////////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////////От максимално 10,00
//////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

//////////////////////////////////////////////////////////////////////////////////Идентифицирайте правилно и поправете грешките в написания програмен код, така че да решите поставената задача. Допълнете кода, ако и когато това е необходимо.



//////////////////////////////////////////////////////////////////////////////////Условие: Разполагате със следния програмен код:

//////////////////////////////////////////////////////////////////////////////////Program.cs

//////////////////////////////////////////////////////////////////////////////////static void Main(string[] args)
//////////////////////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////////////////////  string sector = Console.ReadLine()
//////////////////////////////////////////////////////////////////////////////////            int row = int.Parse(Console.ReadLine());
//////////////////////////////////////////////////////////////////////////////////  int col = int.Parse(Console.ReadLine());

//////////////////////////////////////////////////////////////////////////////////  switch ()
//////////////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////////////    case "Sector A":
//////////////////////////////////////////////////////////////////////////////////      totalSum = GetTotalProfit(row, col, 11.60);

//////////////////////////////////////////////////////////////////////////////////    case "Sector B":
//////////////////////////////////////////////////////////////////////////////////      totalSum = GetTotalProfit(row, col, 14.50)
//////////////////////////////////////////////////////////////////////////////////                    break;
//////////////////////////////////////////////////////////////////////////////////    case "Sector C":
//////////////////////////////////////////////////////////////////////////////////      totalSum = GetTotalProfit(row, col, 16.10);
//////////////////////////////////////////////////////////////////////////////////      break;
//////////////////////////////////////////////////////////////////////////////////    case "Sector D"
//////////////////////////////////////////////////////////////////////////////////                    totalSum = GetTotalProfit(row, col, 8.40);
//////////////////////////////////////////////////////////////////////////////////      break;

//////////////////////////////////////////////////////////////////////////////////      Console.WriteLine($"{sector} profit is {totalSum:f2} lv.");
//////////////////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////////////////  static double GetTotalProfit(int row, int col, double price)
//////////////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////////////    return row * col * price;
//////////////////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////////////////  Открийте и поправете грешките във вече написания програмен код, така че да се реши поставената по - долу задача.Допълнете кода.

//////////////////////////////////////////////////////////////////////////////////1.Футболен мач

//////////////////////////////////////////////////////////////////////////////////На един стадион има определен брой сектори, в които има седалки наредени в правоъгълна форма и има X реда и Y седалки на ред.

//////////////////////////////////////////////////////////////////////////////////Има четири вида сектори с билети на различни цени:

//////////////////////////////////////////////////////////////////////////////////  Sector A  –  цена на билета 11.60 лева
//////////////////////////////////////////////////////////////////////////////////  Sector B  –  цена на билета 14.50 лева
//////////////////////////////////////////////////////////////////////////////////  Sector C  –  цена на билета 16.10 лева
//////////////////////////////////////////////////////////////////////////////////  Sector D – цена на билета 8.40 лева
//////////////////////////////////////////////////////////////////////////////////  Напишете програма, която изчислява приходите за даден сектор, ако са разпродадени всички билети, като знаете кой е секторът, какъв е броят редове в него и броят седалки на ред.

//////////////////////////////////////////////////////////////////////////////////Изчислението на приходите трябва да го осъществите с помощта на метод GetTotalProfit, който приема като параметри точно в дадената последователност: реда, колоната и цената на билета.

//////////////////////////////////////////////////////////////////////////////////Вход:

//////////////////////////////////////////////////////////////////////////////////Входът се чете от конзолата и съдържа точно 3 реда:

//////////////////////////////////////////////////////////////////////////////////На първия ред - сектор - текст с възможности: Sector A, Sector B, Sector C, Sector D
//////////////////////////////////////////////////////////////////////////////////На втория ред - брой редове - цяло число в интервала [1... 1000]
//////////////////////////////////////////////////////////////////////////////////На третия ред -  брой седалки на ред - цяло число в интервала [1... 1000]
//////////////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////////////Да се отпечата на конзолата един ред:

//////////////////////////////////////////////////////////////////////////////////   "{сектор} profit is {печалба} lv."

//////////////////////////////////////////////////////////////////////////////////Печалбата да бъде форматирана до втория знак след десетичната запетая.



//////////////////////////////////////////////////////////////////////////////////Примерен вход и изход

//////////////////////////////////////////////////////////////////////////////////вход

//////////////////////////////////////////////////////////////////////////////////изход

//////////////////////////////////////////////////////////////////////////////////Обяснение

//////////////////////////////////////////////////////////////////////////////////Sector A

//////////////////////////////////////////////////////////////////////////////////12

//////////////////////////////////////////////////////////////////////////////////300

//////////////////////////////////////////////////////////////////////////////////Sector A profit is 41760.00 lv.

//////////////////////////////////////////////////////////////////////////////////Цена за билет в сектор А: 11.60

//////////////////////////////////////////////////////////////////////////////////Общ брой седалки: 12 * 300 = 3600

//////////////////////////////////////////////////////////////////////////////////Печалба: 3600 * 11.60 = 41760




//////////////////////////////////////////////////////////////////////////////////вход

//////////////////////////////////////////////////////////////////////////////////изход

//////////////////////////////////////////////////////////////////////////////////Обяснение

//////////////////////////////////////////////////////////////////////////////////Sector B

//////////////////////////////////////////////////////////////////////////////////40

//////////////////////////////////////////////////////////////////////////////////120

//////////////////////////////////////////////////////////////////////////////////Sector B profit is 69600.00 lv.

//////////////////////////////////////////////////////////////////////////////////Цена за билет в сектор B: 14.50

//////////////////////////////////////////////////////////////////////////////////Общ брой седалки: 40 * 120 = 4800

//////////////////////////////////////////////////////////////////////////////////Печалба: 4800 * 14.50 = 69600




//////////////////////////////////////////////////////////////////////////////////вход

//////////////////////////////////////////////////////////////////////////////////изход

//////////////////////////////////////////////////////////////////////////////////Обяснение

//////////////////////////////////////////////////////////////////////////////////Sector C

//////////////////////////////////////////////////////////////////////////////////10

//////////////////////////////////////////////////////////////////////////////////170

//////////////////////////////////////////////////////////////////////////////////Sector C profit is 27370.00 lv.

//////////////////////////////////////////////////////////////////////////////////Цена за билет в сектор C: 16.10

//////////////////////////////////////////////////////////////////////////////////Общ брой седалки: 10 * 170 = 1700

//////////////////////////////////////////////////////////////////////////////////Печалба: 1700 * 16.10 = 27370




//////////////////////////////////////////////////////////////////////////////////вход

//////////////////////////////////////////////////////////////////////////////////изход

//////////////////////////////////////////////////////////////////////////////////Обяснение

//////////////////////////////////////////////////////////////////////////////////Sector D

//////////////////////////////////////////////////////////////////////////////////20

//////////////////////////////////////////////////////////////////////////////////600

//////////////////////////////////////////////////////////////////////////////////Sector D profit is 100800.00 lv.

//////////////////////////////////////////////////////////////////////////////////Цена за билет в сектор D: 8.40

//////////////////////////////////////////////////////////////////////////////////Общ брой седалки: 20 * 600 = 12000

//////////////////////////////////////////////////////////////////////////////////Печалба: 12000 * 8.40 = 100800




//////////////////////////////////////////////////////////////////////////////////using System;

//////////////////////////////////////////////////////////////////////////////////using System.Collections.Generic;

//////////////////////////////////////////////////////////////////////////////////using System.Linq;

//////////////////////////////////////////////////////////////////////////////////using System.Text;

//////////////////////////////////////////////////////////////////////////////////using System.Threading.Tasks;



//////////////////////////////////////////////////////////////////////////////////namespace Test1

//////////////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////////////  internal class Program

//////////////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////////////    static void Main(string[] args)

//////////////////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////////////////      string sector = Console.ReadLine();

//////////////////////////////////////////////////////////////////////////////////      int row = int.Parse(Console.ReadLine());

//////////////////////////////////////////////////////////////////////////////////      int col = int.Parse(Console.ReadLine());

//////////////////////////////////////////////////////////////////////////////////      double totalSum = 0;

//////////////////////////////////////////////////////////////////////////////////      switch (sector)

//////////////////////////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////////////////////////        case "Sector A":

//////////////////////////////////////////////////////////////////////////////////          totalSum = GetTotalProfit(row, col, 11.60);

//////////////////////////////////////////////////////////////////////////////////          break;

//////////////////////////////////////////////////////////////////////////////////        case "Sector B":

//////////////////////////////////////////////////////////////////////////////////          totalSum = GetTotalProfit(row, col, 14.50);

//////////////////////////////////////////////////////////////////////////////////          break;

//////////////////////////////////////////////////////////////////////////////////        case "Sector C":

//////////////////////////////////////////////////////////////////////////////////          totalSum = GetTotalProfit(row, col, 16.10);

//////////////////////////////////////////////////////////////////////////////////          break;

//////////////////////////////////////////////////////////////////////////////////        case "Sector D":

//////////////////////////////////////////////////////////////////////////////////          totalSum = GetTotalProfit(row, col, 8.40);

//////////////////////////////////////////////////////////////////////////////////          break;

//////////////////////////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////////////////////////      Console.WriteLine($"{sector} profit is {totalSum:f2} lv.");



//////////////////////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////////////////////    static double GetTotalProfit(int row, int col, double price)

//////////////////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////////////////      return row * col * price;

//////////////////////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////////////////Забележка
///////////////////////////////////////////////////////////////////////////////////*
//////////////////////////////////////////////////////////////////////////////////         КЛЮЧ
//////////////////////////////////////////////////////////////////////////////////        static void Main(string[] args)
//////////////////////////////////////////////////////////////////////////////////        {
//////////////////////////////////////////////////////////////////////////////////            string sector = Console.ReadLine(); //1Т
//////////////////////////////////////////////////////////////////////////////////            int row = int.Parse(Console.ReadLine());
//////////////////////////////////////////////////////////////////////////////////            int col = int.Parse(Console.ReadLine()); 
//////////////////////////////////////////////////////////////////////////////////            double totalSum = 0;//2Т

//////////////////////////////////////////////////////////////////////////////////            switch (sector)//2Т
//////////////////////////////////////////////////////////////////////////////////            { 
//////////////////////////////////////////////////////////////////////////////////                case "Sector A":
//////////////////////////////////////////////////////////////////////////////////                    totalSum = GetTotalProfit(row, col, 11.60); 
//////////////////////////////////////////////////////////////////////////////////                    break; //2Т
//////////////////////////////////////////////////////////////////////////////////                case "Sector B":
//////////////////////////////////////////////////////////////////////////////////                    totalSum = GetTotalProfit(row, col, 14.50);//1Т
//////////////////////////////////////////////////////////////////////////////////                    break;
//////////////////////////////////////////////////////////////////////////////////                case "Sector C": 
//////////////////////////////////////////////////////////////////////////////////                    totalSum = GetTotalProfit(row, col, 16.10); 
//////////////////////////////////////////////////////////////////////////////////                    break;
//////////////////////////////////////////////////////////////////////////////////                case "Sector D"://1Т
//////////////////////////////////////////////////////////////////////////////////                    totalSum = GetTotalProfit(row, col, 8.40);
//////////////////////////////////////////////////////////////////////////////////                    break;
//////////////////////////////////////////////////////////////////////////////////            }//1Т
//////////////////////////////////////////////////////////////////////////////////            Console.WriteLine($"{sector} profit is {totalSum:f2} lv.");
//////////////////////////////////////////////////////////////////////////////////        }
//////////////////////////////////////////////////////////////////////////////////        static double GetTotalProfit(int row, int col, double price)
//////////////////////////////////////////////////////////////////////////////////        {
//////////////////////////////////////////////////////////////////////////////////            return row * col * price;
//////////////////////////////////////////////////////////////////////////////////        }
//////////////////////////////////////////////////////////////////////////////////         */

//////////////////////////////////////////////////////////////////////////////////Въпрос 14
//////////////////////////////////////////////////////////////////////////////////Отчасти верен
//////////////////////////////////////////////////////////////////////////////////1,33 от максимално 2,00 точки
//////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////Формулирайте правилно определението за условни конструкции.

//////////////////////////////////////////////////////////////////////////////////Условните конструкции if и if-else представляват  blank , чрез който програмата може да се държи  blank , в зависимост от  blank , което се проверява по време на изпълнение на конструкцията.


//////////////////////////////////////////////////////////////////////////////////различнонякакво условиенякакъв обектеднаквотип условен контрол
//////////////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////////////Your answer is partially correct.
//////////////////////////////////////////////////////////////////////////////////Вие правилно сте избрали 2.
//////////////////////////////////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////////////////////////////////Формулирайте правилно определението за условни конструкции.

//////////////////////////////////////////////////////////////////////////////////Условните конструкции if и if-else представляват [тип условен контрол], чрез който програмата може да се държи [различно], в зависимост от [някакво условие], което се проверява по време на изпълнение на конструкцията.

//////////////////////////////////////////////////////////////////////////////////Въпрос 15
//////////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////////От максимално 10,00
//////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////Текст на въпроса


//////////////////////////////////////////////////////////////////////////////////Пример: По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.



//////////////////////////////////////////////////////////////////////////////////Условие: Разполагате със следния програмен код:

//////////////////////////////////////////////////////////////////////////////////Program.cs

////////////////////////////////////////////////////////////////////////////////// static void Main(string[] args)
//////////////////////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////////////////////  string month = "";
//////////////////////////////////////////////////////////////////////////////////  int nightsCount = int.Parse(Console.ReadLine());
//////////////////////////////////////////////////////////////////////////////////  double studio = 0;
//////////////////////////////////////////////////////////////////////////////////  double apartment = 0;
//////////////////////////////////////////////////////////////////////////////////  switch (month)
//////////////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////////////    case "May":
//////////////////////////////////////////////////////////////////////////////////    case "October":
//////////////////////////////////////////////////////////////////////////////////      studio = 50;
//////////////////////////////////////////////////////////////////////////////////      apartment = 65;
//////////////////////////////////////////////////////////////////////////////////      if (nightsCount > 14)
//////////////////////////////////////////////////////////////////////////////////      {
//////////////////////////////////////////////////////////////////////////////////        studio = studio * 0.30;
//////////////////////////////////////////////////////////////////////////////////      }
//////////////////////////////////////////////////////////////////////////////////      if (nightsCount > 7)
//////////////////////////////////////////////////////////////////////////////////      {
//////////////////////////////////////////////////////////////////////////////////        studio -= studio * 0.05;
//////////////////////////////////////////////////////////////////////////////////      }
//////////////////////////////////////////////////////////////////////////////////      break;
//////////////////////////////////////////////////////////////////////////////////    case "June":
//////////////////////////////////////////////////////////////////////////////////    case "September":
//////////////////////////////////////////////////////////////////////////////////      studio = 75.20;
//////////////////////////////////////////////////////////////////////////////////      apartment = 68.70;
//////////////////////////////////////////////////////////////////////////////////      if (nightsCount > 14)

//////////////////////////////////////////////////////////////////////////////////        studio -= studio * 0.20;
//////////////////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////////////////  break;
//////////////////////////////////////////////////////////////////////////////////                case "July"
//////////////////////////////////////////////////////////////////////////////////                case "August":
//////////////////////////////////////////////////////////////////////////////////                    studio = 76;
//////////////////////////////////////////////////////////////////////////////////apartment = 77;
//////////////////////////////////////////////////////////////////////////////////break;
//////////////////////////////////////////////////////////////////////////////////            }

//////////////////////////////////////////////////////////////////////////////////            if (nightsCount > 14)
//////////////////////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////////////////////  apartment -= apartment * 10;
//////////////////////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////////////////////double totalApartment = apartment * nightsCount;
//////////////////////////////////////////////////////////////////////////////////double totalStudio = studio * nightsCount;
//////////////////////////////////////////////////////////////////////////////////Console.WriteLine("Apartment: {totalApartment:f2} lv.");
//////////////////////////////////////////////////////////////////////////////////Console.WriteLine($"Studio: {totalStudio:f2} lv."); 
//////////////////////////////////////////////////////////////////////////////////        }



//////////////////////////////////////////////////////////////////////////////////Открийте и поправете грешките във вече написания програмен код, така че да се реши поставената по-долу задача. Допълнете кода.

//////////////////////////////////////////////////////////////////////////////////Хотелска стая
//////////////////////////////////////////////////////////////////////////////////Хотел предлага 2 вида стаи: студио и апартамент. Напишете програма, която изчислява цената за целия престой за студио и апартамент. Цените зависят от месеца на престоя:

//////////////////////////////////////////////////////////////////////////////////Май и октомври

//////////////////////////////////////////////////////////////////////////////////Юни и септември

//////////////////////////////////////////////////////////////////////////////////Юли и август

//////////////////////////////////////////////////////////////////////////////////Студио – 50 лв./нощувка

//////////////////////////////////////////////////////////////////////////////////Студио – 75.20 лв./нощувка

//////////////////////////////////////////////////////////////////////////////////Студио – 76 лв./нощувка

//////////////////////////////////////////////////////////////////////////////////Апартамент – 65 лв./нощувка

//////////////////////////////////////////////////////////////////////////////////Апартамент – 68.70 лв./нощувка

//////////////////////////////////////////////////////////////////////////////////Апартамент – 77 лв./нощувка

//////////////////////////////////////////////////////////////////////////////////Предлагат се и следните отстъпки:

//////////////////////////////////////////////////////////////////////////////////·       За студио, при повече от 7 нощувки през май и октомври : 5 % намаление.

//////////////////////////////////////////////////////////////////////////////////·       За студио, при повече от 14 нощувки през май и октомври : 30 % намаление.

//////////////////////////////////////////////////////////////////////////////////·       За студио, при повече от 14 нощувки през юни и септември: 20 % намаление.

//////////////////////////////////////////////////////////////////////////////////·       За апартамент, при повече от 14 нощувки, без значение от месеца : 10 % намаление.

//////////////////////////////////////////////////////////////////////////////////Вход
//////////////////////////////////////////////////////////////////////////////////Входът се чете от конзолата и съдържа точно 2 реда:

//////////////////////////////////////////////////////////////////////////////////·       На първия ред е месецът – May, June, July, August, September или October

//////////////////////////////////////////////////////////////////////////////////·       На втория ред е броят на нощувките – цяло число в интервала [0 ... 200]

//////////////////////////////////////////////////////////////////////////////////Изход
//////////////////////////////////////////////////////////////////////////////////Да се отпечатат на конзолата 2 реда:

//////////////////////////////////////////////////////////////////////////////////·       На първия ред: “Apartment: { цена за целият престой}
//////////////////////////////////////////////////////////////////////////////////lv.”

//////////////////////////////////////////////////////////////////////////////////·       На втория ред: “Studio: { цена за целият престой}
//////////////////////////////////////////////////////////////////////////////////lv.“

//////////////////////////////////////////////////////////////////////////////////Цената за целия престой форматирана с точност до два знака след десетичната запетая.



//////////////////////////////////////////////////////////////////////////////////Примерен вход и изход
//////////////////////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////////////Обяснения

//////////////////////////////////////////////////////////////////////////////////May

//////////////////////////////////////////////////////////////////////////////////15

//////////////////////////////////////////////////////////////////////////////////Apartment: 877.50 lv.

//////////////////////////////////////////////////////////////////////////////////Studio: 525.00 lv.

//////////////////////////////////////////////////////////////////////////////////През май, при повече от 14 нощувки, намаляваме цената на студиото с 30% (50 – 15 = 35), а на апартамента – с 10% (65 – 6.5 =58.5).

//////////////////////////////////////////////////////////////////////////////////Целият престой в апартамент – 877.50 лв.

//////////////////////////////////////////////////////////////////////////////////Целият престой в студио – 525.00 лв.

//////////////////////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////////////June

//////////////////////////////////////////////////////////////////////////////////14

//////////////////////////////////////////////////////////////////////////////////Apartment: 961.80 lv.

//////////////////////////////////////////////////////////////////////////////////Studio: 1052.80 lv.

//////////////////////////////////////////////////////////////////////////////////August

//////////////////////////////////////////////////////////////////////////////////20

//////////////////////////////////////////////////////////////////////////////////Apartment: 1386.00 lv.

//////////////////////////////////////////////////////////////////////////////////Studio: 1520.00 lv.






//////////////////////////////////////////////////////////////////////////////////using System;

//////////////////////////////////////////////////////////////////////////////////using System.Collections.Generic;

//////////////////////////////////////////////////////////////////////////////////using System.Linq;

//////////////////////////////////////////////////////////////////////////////////using System.Text;

//////////////////////////////////////////////////////////////////////////////////using System.Threading.Tasks;



//////////////////////////////////////////////////////////////////////////////////namespace Test1

//////////////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////////////  internal class Program

//////////////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////////////    static void Main(string[] args)

//////////////////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////////////////      string month = Console.ReadLine();

//////////////////////////////////////////////////////////////////////////////////      int nightsCount = int.Parse(Console.ReadLine());

//////////////////////////////////////////////////////////////////////////////////      double studio = 0;

//////////////////////////////////////////////////////////////////////////////////      double apartment = 0;

//////////////////////////////////////////////////////////////////////////////////      switch (month)

//////////////////////////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////////////////////////        case "May":

//////////////////////////////////////////////////////////////////////////////////        case "October":

//////////////////////////////////////////////////////////////////////////////////          studio = 50;

//////////////////////////////////////////////////////////////////////////////////          apartment = 65;

//////////////////////////////////////////////////////////////////////////////////          if (nightsCount > 14)

//////////////////////////////////////////////////////////////////////////////////          {

//////////////////////////////////////////////////////////////////////////////////            studio -= studio * 0.30;

//////////////////////////////////////////////////////////////////////////////////          }

//////////////////////////////////////////////////////////////////////////////////          else if (nightsCount > 7)

//////////////////////////////////////////////////////////////////////////////////          {

//////////////////////////////////////////////////////////////////////////////////            studio -= studio * 0.05;

//////////////////////////////////////////////////////////////////////////////////          }

//////////////////////////////////////////////////////////////////////////////////          break;

//////////////////////////////////////////////////////////////////////////////////        case "June":

//////////////////////////////////////////////////////////////////////////////////        case "September":

//////////////////////////////////////////////////////////////////////////////////          studio = 75.20;

//////////////////////////////////////////////////////////////////////////////////          apartment = 68.70;

//////////////////////////////////////////////////////////////////////////////////          if (nightsCount > 14)

//////////////////////////////////////////////////////////////////////////////////          {

//////////////////////////////////////////////////////////////////////////////////            studio -= studio * 0.20;

//////////////////////////////////////////////////////////////////////////////////          }

//////////////////////////////////////////////////////////////////////////////////          break;

//////////////////////////////////////////////////////////////////////////////////        case "July":

//////////////////////////////////////////////////////////////////////////////////        case "August":

//////////////////////////////////////////////////////////////////////////////////          studio = 76;

//////////////////////////////////////////////////////////////////////////////////          apartment = 77;

//////////////////////////////////////////////////////////////////////////////////          break;

//////////////////////////////////////////////////////////////////////////////////      }



//////////////////////////////////////////////////////////////////////////////////      if (nightsCount > 14)

//////////////////////////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////////////////////////        apartment -= apartment * 0.10;

//////////////////////////////////////////////////////////////////////////////////      }



//////////////////////////////////////////////////////////////////////////////////      double totalApartment = apartment * nightsCount;

//////////////////////////////////////////////////////////////////////////////////      double totalStudio = studio * nightsCount;

//////////////////////////////////////////////////////////////////////////////////      Console.WriteLine($"Apartment: {totalApartment:f2} lv.");

//////////////////////////////////////////////////////////////////////////////////      Console.WriteLine($"Studio: {totalStudio:f2} lv.");

//////////////////////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////////////////Забележка
///////////////////////////////////////////////////////////////////////////////////*
//////////////////////////////////////////////////////////////////////////////////         КЛЮЧ
//////////////////////////////////////////////////////////////////////////////////        static void Main(string[] args)
//////////////////////////////////////////////////////////////////////////////////        {
//////////////////////////////////////////////////////////////////////////////////            string month = Console.ReadLine(); //2Т
//////////////////////////////////////////////////////////////////////////////////            int nightsCount = int.Parse(Console.ReadLine());
//////////////////////////////////////////////////////////////////////////////////            double studio = 0; 
//////////////////////////////////////////////////////////////////////////////////            double apartment = 0; 
//////////////////////////////////////////////////////////////////////////////////            switch (month) 
//////////////////////////////////////////////////////////////////////////////////            {
//////////////////////////////////////////////////////////////////////////////////                case "May":
//////////////////////////////////////////////////////////////////////////////////                case "October":
//////////////////////////////////////////////////////////////////////////////////                    studio = 50;
//////////////////////////////////////////////////////////////////////////////////                    apartment = 65;
//////////////////////////////////////////////////////////////////////////////////                    if (nightsCount > 14) 
//////////////////////////////////////////////////////////////////////////////////                    {
//////////////////////////////////////////////////////////////////////////////////                        studio -= studio * 0.30;//1Т
//////////////////////////////////////////////////////////////////////////////////                    }
//////////////////////////////////////////////////////////////////////////////////                    else if (nightsCount > 7) //2Т
//////////////////////////////////////////////////////////////////////////////////                    {
//////////////////////////////////////////////////////////////////////////////////                        studio -= studio * 0.05;
//////////////////////////////////////////////////////////////////////////////////                    }
//////////////////////////////////////////////////////////////////////////////////                    break;
//////////////////////////////////////////////////////////////////////////////////                case "June":
//////////////////////////////////////////////////////////////////////////////////                case "September":
//////////////////////////////////////////////////////////////////////////////////                    studio = 75.20;
//////////////////////////////////////////////////////////////////////////////////                    apartment = 68.70;
//////////////////////////////////////////////////////////////////////////////////                    if (nightsCount > 14)
//////////////////////////////////////////////////////////////////////////////////                    {//1Т
//////////////////////////////////////////////////////////////////////////////////                        studio -= studio * 0.20; 
//////////////////////////////////////////////////////////////////////////////////                    }
//////////////////////////////////////////////////////////////////////////////////                    break;
//////////////////////////////////////////////////////////////////////////////////                case "July"://1Т
//////////////////////////////////////////////////////////////////////////////////                case "August":
//////////////////////////////////////////////////////////////////////////////////                    studio = 76;
//////////////////////////////////////////////////////////////////////////////////                    apartment = 77;
//////////////////////////////////////////////////////////////////////////////////                    break;
//////////////////////////////////////////////////////////////////////////////////            }

//////////////////////////////////////////////////////////////////////////////////            if (nightsCount > 14) 
//////////////////////////////////////////////////////////////////////////////////            {
//////////////////////////////////////////////////////////////////////////////////                apartment -= apartment * 0.1; //2Т
//////////////////////////////////////////////////////////////////////////////////            }

//////////////////////////////////////////////////////////////////////////////////            double totalApartment = apartment * nightsCount; 
//////////////////////////////////////////////////////////////////////////////////            double totalStudio = studio * nightsCount; 
//////////////////////////////////////////////////////////////////////////////////            Console.WriteLine($"Apartment: {totalApartment:f2} lv.");//1Т
//////////////////////////////////////////////////////////////////////////////////            Console.WriteLine($"Studio: {totalStudio:f2} lv."); 
//////////////////////////////////////////////////////////////////////////////////        }
//////////////////////////////////////////////////////////////////////////////////         */

//////////////////////////////////////////////////////////////////////////////////Въпрос 16
//////////////////////////////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////Показан е следния програмен код на C#. Каква е целта на програмата? Посочете верния отговор.





//////////////////////////////////////////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////////////////////////////////////////a. Намира всички числа в интервала [1 … 1000], които започват със 7 и ги отпечатва на конзолата.
//////////////////////////////////////////////////////////////////////////////////b. Намира всички числа в интервала [1 … 1000], които завършват на 0 и ги отпечатва на конзолата.
//////////////////////////////////////////////////////////////////////////////////c. Намира всички числа в интервала [1 … 1000], които завършват на 7 и ги отпечатва на конзолата.
//////////////////////////////////////////////////////////////////////////////////d. Намира всички числа в интервала [1 … 1000], които се делят на 7 и ги отпечатва на конзолата. 
//////////////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////////////////////////////Правилният отговор е: Намира всички числа в интервала [1 … 1000], които се делят на 7 и ги отпечатва на конзолата.
//////////////////////////////////////////////////////////////////////////////////Въпрос 17
//////////////////////////////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////////////////////////////6,00 от максимално 6,00 точки
//////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////Посоченият по-долу фрагмент на C# събира числото 0.00001 общо 100000 пъти. Очакваният резултат от това е 1. При изпълнение се получава резултат 0.999999999998084. Как ще промените програмата, така че да се поправи тази изчислителна грешка?




//////////////////////////////////////////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////////////////////////////////////////a. Чрез използване на тип float вместо double и добавянето на суфикс f след изписването на 0 и 0.00001.
//////////////////////////////////////////////////////////////////////////////////b. Чрез подходящо закръгляне на получения резултат.
//////////////////////////////////////////////////////////////////////////////////c. Чрез използване на тип decimal вместо double и добавянето на суфикс M след изписването на 0 и 0.00001. 
//////////////////////////////////////////////////////////////////////////////////d. Чрез използване на тип long вместо double и добавянето на суфикс l след изписването на 0 и 0.00001.
//////////////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////////////////////////////Правилният отговор е: Чрез използване на тип decimal вместо double и добавянето на суфикс M след изписването на 0 и 0.00001.
//////////////////////////////////////////////////////////////////////////////////Въпрос 18
//////////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////Дайте пример за метод (напишете примерен код), който сумира числата от 1 до n включително и като резултат връща тази сума. За примера използвайте код написан на програмния език C#.

//////////////////////////////////////////////////////////////////////////////////using System;

//////////////////////////////////////////////////////////////////////////////////using System.Collections.Generic;

//////////////////////////////////////////////////////////////////////////////////using System.Linq;

//////////////////////////////////////////////////////////////////////////////////using System.Text;

//////////////////////////////////////////////////////////////////////////////////using System.Threading.Tasks;



//////////////////////////////////////////////////////////////////////////////////namespace Test1

//////////////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////////////  internal class Program

//////////////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////////////    static void Main(string[] args)

//////////////////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////////////////      int n = int.Parse(Console.ReadLine());

//////////////////////////////////////////////////////////////////////////////////      var sum = 0;

//////////////////////////////////////////////////////////////////////////////////      for (int i = 0; i < n; i++)

//////////////////////////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////////////////////////        sum += n - i;

//////////////////////////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////////////////////////      Console.WriteLine(sum);

//////////////////////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////////////public static int SumNumbers(int n)
//////////////////////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////////////////////  int sum = 0;
//////////////////////////////////////////////////////////////////////////////////  for (int i = 1; i <= n; i++)
//////////////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////////////    sum += i;
//////////////////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////////////////  return sum;
//////////////////////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////////////////////Въпрос 19
//////////////////////////////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////////////////////////////6,00 от максимално 6,00 точки
//////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////Демонстрирайте как бихте създали конзолно приложение в средата за разработка Visual Studio. Подредете картинките така, че да спазват правилната последователност от стъпките за създаване на ново конзолно приложение. 

//////////////////////////////////////////////////////////////////////////////////Номерирайте картинките, като използвате цифрите за влачене под таблицата.




////////////////////////////////////////////////////////////////////////////////// blank 



////////////////////////////////////////////////////////////////////////////////// blank 



////////////////////////////////////////////////////////////////////////////////// blank 



////////////////////////////////////////////////////////////////////////////////// blank 



//////////////////////////////////////////////////////////////////////////////////4444111133332222
//////////////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////////////////////////////////Демонстрирайте как бихте създали конзолно приложение в средата за разработка Visual Studio. Подредете картинките така, че да спазват правилната последователност от стъпките за създаване на ново конзолно приложение. 

//////////////////////////////////////////////////////////////////////////////////Номерирайте картинките, като използвате цифрите за влачене под таблицата.




//////////////////////////////////////////////////////////////////////////////////[2]



//////////////////////////////////////////////////////////////////////////////////[4]



//////////////////////////////////////////////////////////////////////////////////[3]



//////////////////////////////////////////////////////////////////////////////////[1]


//////////////////////////////////////////////////////////////////////////////////Въпрос 20
//////////////////////////////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////////////////////////////6,00 от максимално 6,00 точки
//////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////Имате даден следният програмен фрагмент:



//////////////////////////////////////////////////////////////////////////////////Открийте какъв ще бъде резултатът след изпълнението на програмата при подаден вход 120.

//////////////////////////////////////////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////////////////////////////////////////a. Between 100 and 200 
//////////////////////////////////////////////////////////////////////////////////b. Less than 200
//////////////////////////////////////////////////////////////////////////////////c. Програмата ще хвърли изключение.
//////////////////////////////////////////////////////////////////////////////////d. Greater than 100
//////////////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////////////////////////////Правилният отговор е: Between 100 and 200
//////////////////////////////////////////////////////////////////////////////////Въпрос 21
//////////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////////Дайте пример за while цикъл в C#, който отпечатва числата от 1 до 10(включително), всяко на отделен ред.

//////////////////////////////////////////////////////////////////////////////////using System;

//////////////////////////////////////////////////////////////////////////////////using System.Collections.Generic;

//////////////////////////////////////////////////////////////////////////////////using System.Linq;

//////////////////////////////////////////////////////////////////////////////////using System.Text;

//////////////////////////////////////////////////////////////////////////////////using System.Threading.Tasks;



//////////////////////////////////////////////////////////////////////////////////namespace Test1

//////////////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////////////  internal class Program

//////////////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////////////    static void Main(string[] args)

//////////////////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////////////////      for (int i = 1; i <= 10; i++)

//////////////////////////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////////////////////////        Console.WriteLine(i);

//////////////////////////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////////////int num = 1;
//////////////////////////////////////////////////////////////////////////////////while (num <= 10)
//////////////////////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////////////////////  Console.WriteLine(num++);
//////////////////////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////////////////////Пълен отговор: 4т.

//////////////////////////////////////////////////////////////////////////////////Непълен отговор: 2т





//////////////////////////////////////////////////////////////////////////////////Край на прегледа
//////////////////////////////////////////////////////////////////////////////////Отиди на ...
//////////////////////////////////////////////////////////////////////////////////Отиди на ...
//////////////////////////////////////////////////////////////////////////////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
//////////////////////////////////////////////////////////////////////////////////Навигация в теста
//////////////////////////////////////////////////////////////////////////////////Край на прегледа
//////////////////////////////////////////////////////////////////////////////////Вие сте влезли в системата като Добри Илев (Изход)
//////////////////////////////////////////////////////////////////////////////////тренировъчен - курс - по
//////////////////////////////////////////////////////////////////////////////////Data retention summary



//////////////////////////////////////////////////////////////////////////////////ИЗПИТНА ТЕМА 2

////////////////////////////////////////////////////////////////////////////////using System;
///////////////////////////////////////////////////////////////////////////////////* КЛЮЧ
///////////////////////////////////////////////////////////////////////////////////*
///////////////////////////////////////////////////////////////////////////////////*
///////////////////////////////////////////////////////////////////////////////////*
////////////////////////////////////////////////////////////////////////////////Прескочи на основното съдържание
////////////////////////////////////////////////////////////////////////////////ПГЕЕ
////////////////////////////////////////////////////////////////////////////////Български ‎(bg)‎ 
////////////////////////////////////////////////////////////////////////////////Добри Илев 
////////////////////////////////////////////////////////////////////////////////Тренировъчен курс - Програмно осигуряване
////////////////////////////////////////////////////////////////////////////////Начална страница
////////////////////////////////////////////////////////////////////////////////Моите курсове
//////////////////////////////////////////////////////////////////////////////// тренировъчен-курс-по
//////////////////////////////////////////////////////////////////////////////// Изпитна тема 2
//////////////////////////////////////////////////////////////////////////////// Тест към Изпитна тема №2
////////////////////////////////////////////////////////////////////////////////Започнат на	вторник, 22 ноември 2022, 09:35
////////////////////////////////////////////////////////////////////////////////Състояние Завършен
////////////////////////////////////////////////////////////////////////////////Приключен на	четвъртък, 5 януари 2023, 23:10
////////////////////////////////////////////////////////////////////////////////Изминало време	44 дни 13 часа
////////////////////////////////////////////////////////////////////////////////Въпрос 1
////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////От максимално 10,00
////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

////////////////////////////////////////////////////////////////////////////////Условие: Разполагате със следния програмен код:

////////////////////////////////////////////////////////////////////////////////Program.cs

////////////////////////////////////////////////////////////////////////////////static void Main(string[] args)
////////////////////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////////////////////  Dictionary<string, int> dict = new Dictionary<string, int>();

////////////////////////////////////////////////////////////////////////////////  string input = Console.ReadLine().Split(" - ", StringSplitOptions.RemoveEmptyEntries);
////////////////////////////////////////////////////////////////////////////////  while (input[0].Equals("END"))
////////////////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////////////////    if (!dict.ContainsKey(input))
////////////////////////////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////////////////////////////      dict.Add(input[0], 1);
////////////////////////////////////////////////////////////////////////////////    }
////////////////////////////////////////////////////////////////////////////////    dict[input[0]] = int.Parse(input[1]);
////////////////////////////////////////////////////////////////////////////////    input = Console.ReadLine().Split(" - ", StringSplitOptions.RemoveEmptyEntries);
////////////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////////////  foreach (var kvp in dict)
////////////////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////////////////    Console.WriteLine("{kvp.Key} -> {kvp.Value}");
////////////////////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////////////Открийте и поправете грешките във вече написания програмен код, така че да се реши поставената по-долу задача. Допълнете кода.

////////////////////////////////////////////////////////////////////////////////Баскетболен сезон
////////////////////////////////////////////////////////////////////////////////Треньорът на баскетболен отбор иска да знае накрая на сезона по точки е вкарала всяка една от състезателките му. Помогнете му като напишете програма, която получава име на състезателката и колко точки е вкарала в съответния мач, докато не получите команда "END".  След получаване на командата, принтирайте в азбучен ред имената на състезателките и срещу имената на всяка една от тях колко точки е вкарала през сезона.

////////////////////////////////////////////////////////////////////////////////Вход
////////////////////////////////////////////////////////////////////////////////От конзолата се чете:

////////////////////////////////////////////////////////////////////////////////Състезателка и вкараните точки от нея в съответния мач – текст в следния формат: "{име на състезателка} – {брой вкарани точки}", докато не получите команда "END".
////////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////////Да се отпечата на конзолата имената на състезателките в азбучен ред  и общо колко точки е вкарал всяка една от тях през сезона в следния формат:

////////////////////////////////////////////////////////////////////////////////"{име на състезателка} -> {общ брой вкарани точки}"



////////////////////////////////////////////////////////////////////////////////Примерен вход и изход
////////////////////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////////Обяснения

////////////////////////////////////////////////////////////////////////////////Simona - 20

////////////////////////////////////////////////////////////////////////////////Iva - 13

////////////////////////////////////////////////////////////////////////////////Petya - 12

////////////////////////////////////////////////////////////////////////////////Simona - 14

////////////////////////////////////////////////////////////////////////////////Simona - 12

////////////////////////////////////////////////////////////////////////////////Petya - 13

////////////////////////////////////////////////////////////////////////////////Martina - 12

////////////////////////////////////////////////////////////////////////////////END

////////////////////////////////////////////////////////////////////////////////Iva -> 13

////////////////////////////////////////////////////////////////////////////////Martina -> 12

////////////////////////////////////////////////////////////////////////////////Petya -> 25

////////////////////////////////////////////////////////////////////////////////Simona -> 46

////////////////////////////////////////////////////////////////////////////////Simona -> 20 + 14 + 12 = 46

////////////////////////////////////////////////////////////////////////////////Iva -> 13

////////////////////////////////////////////////////////////////////////////////Petya -> 12 + 13 = 25

////////////////////////////////////////////////////////////////////////////////Martina -> 12

////////////////////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////////Обяснения

////////////////////////////////////////////////////////////////////////////////Mihaela - 13

////////////////////////////////////////////////////////////////////////////////Sanya - 14

////////////////////////////////////////////////////////////////////////////////Nikol - 21

////////////////////////////////////////////////////////////////////////////////Penka - 31

////////////////////////////////////////////////////////////////////////////////Nikol - 12

////////////////////////////////////////////////////////////////////////////////Mihaela - 11

////////////////////////////////////////////////////////////////////////////////Sanya - 21

////////////////////////////////////////////////////////////////////////////////END

////////////////////////////////////////////////////////////////////////////////Mihaela -> 24

////////////////////////////////////////////////////////////////////////////////Nikol -> 33

////////////////////////////////////////////////////////////////////////////////Penka -> 31

////////////////////////////////////////////////////////////////////////////////Sanya -> 35

////////////////////////////////////////////////////////////////////////////////Mihaela -> 13 + 11 = 24

////////////////////////////////////////////////////////////////////////////////Sanya -> 14 + 21 = 35

////////////////////////////////////////////////////////////////////////////////Nikol -> 21 + 12 = 33

////////////////////////////////////////////////////////////////////////////////Penka -> 31






////////////////////////////////////////////////////////////////////////////////Dictionary<string, int> dict = new Dictionary<string, int>();

////////////////////////////////////////////////////////////////////////////////int count = 2;

////////////////////////////////////////////////////////////////////////////////char[] separator = { '-' };



////////////////////////////////////////////////////////////////////////////////string[] input = Console.ReadLine().Split(separator, count, StringSplitOptions.RemoveEmptyEntries);

////////////////////////////////////////////////////////////////////////////////while (input[0].Equals("END"))

////////////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////////////  if (!dict.ContainsKey(input[0]))

////////////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////////////    dict.Add(input[0], 0);

////////////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////////////  dict[input[0]] = int.Parse(input[1]);

////////////////////////////////////////////////////////////////////////////////  input = Console.ReadLine().Split(separator, count, StringSplitOptions.RemoveEmptyEntries);

////////////////////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////////////////////var ordered = dict.OrderBy(x => x.Key).ToDictionary(x => x.Key, x => x.Value);

////////////////////////////////////////////////////////////////////////////////foreach (var kvp in ordered)

////////////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////////////  Console.WriteLine($"{kvp.Key} -> {kvp.Value}");

////////////////////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////////////////////Въпрос 2
////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////Дефинирайте понятието речник, като попълните липсващите думи в текста.

////////////////////////////////////////////////////////////////////////////////Речниците са известни още като  blank . В тях всеки  blank представлява съответствие между  blank .  На един  blank може да се съпостави точно една  blank .


////////////////////////////////////////////////////////////////////////////////стойностстойностстойностстойностстойностключ и стойностключ и стойностключ и стойностключ и стойностключ и стойностелемент елемент елемент елемент елемент ключключключключключасоциативни масиви или картиасоциативни масиви или картиасоциативни масиви или картиасоциативни масиви или картиасоциативни масиви или картисписъцимасивииндексиндексиндексиндексиндексиндекс и стойностиндекс и стойностиндекс и стойностиндекс и стойностиндекс и стойност
////////////////////////////////////////////////////////////////////////////////Въпрос 3
////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////Посочете кое от изброените НЕ е вярно за стойностните типове данни?
////////////////////////////////////////////////////////////////////////////////Изберете едно
////////////////////////////////////////////////////////////////////////////////a. Стойностни са примитивните числови типове, символният тип и булевият тип: sbyte, byte, short, ushort, int, long, ulong, float, double, decimal, char, bool.
////////////////////////////////////////////////////////////////////////////////b.Стойностните типове данни съдържат в стека за изпъл­нение на програмата референция (адрес) към динамичната памет (heap).
////////////////////////////////////////////////////////////////////////////////c.Стойностните типове данни се освобождават при излизане от обхват, т.е. когато блокът с код, в който са дефинирани, завърши изпълнението си.
////////////////////////////////////////////////////////////////////////////////d. Стойностните типове данни се съхраняват в стека за изпъл­нение на програ­мата и съдържат директно стойността си.
////////////////////////////////////////////////////////////////////////////////Въпрос 4
////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////Дефинирайте понятието списък в C# като попълните липсващите думи в текста.

////////////////////////////////////////////////////////////////////////////////Списък е  blank структура от данни, която съдържа  blank . Списъкът има свойството дължина (брой елементи) и елемен­тите му са наредени  blank .

////////////////////////////////////////////////////////////////////////////////Списъкът позволява добавяне на елементи   blank , премахването им и последователното им обхождане.



////////////////////////////////////////////////////////////////////////////////линейна линейна линейна линейна последователнопоследователнопоследователнопоследователнопоредица от елементипоредица от елементипоредица от елементипоредица от елементисамо в началотосамо в началотосамо в началотосамо в началотона всяко едно мястона всяко едно мястона всяко едно мястона всяко едно мястонепоследователнонепоследователнонепоследователнонепоследователносамо в краясамо в краясамо в краясамо в краядървовиднадървовиднадървовиднадървовидна
////////////////////////////////////////////////////////////////////////////////Въпрос 5
////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////Дефинирайте понятието шестнадесетична бройна система. Къде най-често се използва? Как се представят шестнайсетичните числа в шестнадесетичната бройна система?

////////////////////////////////////////////////////////////////////////////////При тези числа имаме за основа на бройната система числото 16, което налага да бъдат използвани 16 знака (цифри) за представянето на всички възможни стойности от 0 до 15 включително. Както вече беше показано в една от таблиците в предходните точки, за представянето на шестнайсе­тичните числа се използват числата от 0 до 9 и латинските букви от A до F. Всяка от тях има съответната стойност:



////////////////////////////////////////////////////////////////////////////////A = 10, B = 11, C = 12, D = 13, E = 14, F = 15



////////////////////////////////////////////////////////////////////////////////Като примери за шестнайсетични числа могат да бъдат посочени съответно, D2, 1F2 F1, D1E и др.



////////////////////////////////////////////////////////////////////////////////Преминаването към десетична система става като се умножи по 160 стойността на най-дясната цифра, по 161 следващата вляво, по 162 следващата вляво и т.н. и накрая се съберат. Например:



////////////////////////////////////////////////////////////////////////////////D1E(16) = Е * 160 + 1 * 161 + D * 162 = 14 * 1 + 1 * 16 + 13 * 256 = 3358(10).



////////////////////////////////////////////////////////////////////////////////Преминаването от десетична към шестнайсетична бройна система става като се дели десетичното число на 16 и се вземат остатъчите в обратен ред. Например:



////////////////////////////////////////////////////////////////////////////////3358 / 16 = 209 + остатък 14(Е)



////////////////////////////////////////////////////////////////////////////////209 / 16 = 13 + остатък 1(1)



////////////////////////////////////////////////////////////////////////////////13 / 16 = 0 + остатък 13(D)



////////////////////////////////////////////////////////////////////////////////Взимаме остатъците в обратен ред и получаваме числото D1E(16).

////////////////////////////////////////////////////////////////////////////////Въпрос 6
////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////Дефинирайте понятието двоична бройна система. Какво представлява? Къде се използва най-често? Как са представени числата в двоичната бройна система?

////////////////////////////////////////////////////////////////////////////////Числата представени в тази бройна система, се задават във вторичен вид т.е. вид удобен за възприемане от изчислителната машина. Този вид е малко по-трудно разбираем за човека. За представянето на двоичните числа, се използва двоичната бройна система, която има за основа числото 2. Числата записани в нея са подредени по степените на двойката. За тяхното представяне, се използват само цифрите 0 и 1.



////////////////////////////////////////////////////////////////////////////////Прието е, когато едно число се записва в бройна система, различна от десетичната, във вид на индекс в долната му част да се отразява, коя бройна система е използвана за представянето му. Например със записа 1110(2) означаваме число в двоична бройна система. Ако не бъде указана изрично, бройната система се приема, че е десетична. Числото се произ­нася, като се прочетат последователно неговите цифри, започвайки от ляво на дясно (т.е. прочитаме го от старшия към младия разряд "бит").



////////////////////////////////////////////////////////////////////////////////Както и при десетичните числа, гледано от дясно наляво, всяко двоично число изразява степените на числото 2 в съответната последователност. На младшата позиция в двоично число съответства нулевата степен (20=1), на втората позиция съответства първа степен (21=2), на третата позиция съответства втора степен (22=4) и т.н.Ако числото е 8-битово, степените достигат до седма (27=128). Ако числото е 16-битово, степените достигат до петнадесета (215=32768). Чрез 8 двоични цифри(0 или 1) могат да се представят общо 256 числа, защото 28=256. Чрез 16 двоични цифри могат да се представят общо 65536 числа, защото 216=65536.



////////////////////////////////////////////////////////////////////////////////Въпрос 7
////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////В най-популярната система за контрол на версиите GitHub има няколко основни команди, които се използват когато пишете в конзолния клиент GitBash. Обяснете какво прави командата git commit, като поставите липсващите думи в празните полета.

////////////////////////////////////////////////////////////////////////////////След като промените са готови (staged), с командата commit  blank промените.




////////////////////////////////////////////////////////////////////////////////добавятеизтеглятепубликуватекачвате
////////////////////////////////////////////////////////////////////////////////Въпрос 8
////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////Опишете как се осъществява достъп до елементите на многомерен масив в C#?

////////////////////////////////////////////////////////////////////////////////Многомерните масиви се декларират по начин аналогичен на едномер­ните. Всяка тяхна размерност (освен първата) означаваме със запетая.

////////////////////////////////////////////////////////////////////////////////Всяка размерност в допълнение на първата отговаря на една запетая в квадратните скоби [].

////////////////////////////////////////////////////////////////////////////////Памет за многомерни размери се заделя като се използва ключовата дума new и за всяка размерност в квадратни скоби се задава размерът, който е необходим:



////////////////////////////////////////////////////////////////////////////////Въпрос 9
////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////Даден е следния програмен код на C#. След изпълнението на тази програма какво ще се отпечата на конзолата? Решете задачата и в празното поле запишете само това, което ще се отпечата!

////////////////////////////////////////////////////////////////////////////////Примерен вход: Java C# PHP PHP JAVA C java



////////////////////////////////////////////////////////////////////////////////Отговор: 
////////////////////////////////////////////////////////////////////////////////java, c#, c
////////////////////////////////////////////////////////////////////////////////Въпрос 10
////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////Обяснете какво прави метода ContainsKey(key) реализиран в класа Dictionary<K, V>?

////////////////////////////////////////////////////////////////////////////////ContainsKey определя дали Dictionary<TKey, TValue> съдържа посочения ключ.Той връща true, ако Dictionary<TKey, TValue> съдържа елемент с посочения ключ; в противен случай false.



////////////////////////////////////////////////////////////////////////////////Въпрос 11
////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////От максимално 10,00
////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид. 

////////////////////////////////////////////////////////////////////////////////Условие: Разполагате със следния програмен код:

////////////////////////////////////////////////////////////////////////////////Program.cs

////////////////////////////////////////////////////////////////////////////////static void Main(string[] args)
////////////////////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////////////////////  Dictionary<string, int> dict = new Dictionary<string, int>();
////////////////////////////////////////////////////////////////////////////////  var eggs = Console.ReadLine();
////////////////////////////////////////////////////////////////////////////////  for (int i = 0; i < eggs; i++
////////////////////////////////////////////////////////////////////////////////            {
////////////////////////////////////////////////////////////////////////////////    string color = Console.ReadLine();
////////////////////////////////////////////////////////////////////////////////    if (dict.ContainsKey(color))
////////////////////////////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////////////////////////////      dict.Add(color, 1);
////////////////////////////////////////////////////////////////////////////////    }
////////////////////////////////////////////////////////////////////////////////    dict[color];
////////////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////////////  Console.WriteLine("Red eggs: {(dict.ContainsKey("red") ? dict["red"] : 0)}");
////////////////////////////////////////////////////////////////////////////////  Console.WriteLine($"Orange eggs: {(dict.ContainsKey("orange") ? 0 : dict["orange"])}");
////////////////////////////////////////////////////////////////////////////////  Console.WriteLine($"Blue eggs: {(dict.ContainsKey("blue") ? dict["blue"] : 0)}");
////////////////////////////////////////////////////////////////////////////////  Console.WriteLine($"Green eggs: {(dict.ContainsKey("green") ? dict["green"] : 0)}");
////////////////////////////////////////////////////////////////////////////////  Console.WriteLine($"Max eggs: {dict.Values.Max()} -> {dict.OrderByDescending(x => x.Value).FirstOrDefault().Key}");
////////////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////////////Открийте и поправете грешките във вече написания програмен код, така че да се реши поставената по-долу задача. Допълнете кода.

////////////////////////////////////////////////////////////////////////////////Великденски яйца
////////////////////////////////////////////////////////////////////////////////Предстои Великден и едно от най-вълнуващите неща е боядисването на яйца. Наличните цветове за боядисване са:
////////////////////////////////////////////////////////////////////////////////•          червено(red)
////////////////////////////////////////////////////////////////////////////////•          оранжев(orange)
////////////////////////////////////////////////////////////////////////////////•          син(blue)
////////////////////////////////////////////////////////////////////////////////•          зелен(green)
////////////////////////////////////////////////////////////////////////////////Напишете програма, която изчислява какъв е броят на яйцата от всеки цвят и от кой цвят яйцата са най - много, като знаете общия им брой и цветът на всяко яйце.

////////////////////////////////////////////////////////////////////////////////Вход
////////////////////////////////////////////////////////////////////////////////От конзолата се четe 1 ред:

////////////////////////////////////////////////////////////////////////////////Броят на боядисаните яйца – цяло число в интервала [1 ... 100]

////////////////////////////////////////////////////////////////////////////////За всяко яйце се чете:

////////////////////////////////////////////////////////////////////////////////Цветът на яйцето – текст – следните възможности: red, orange, blue, green

////////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////////Да се отпечатат на конзолата 5 реда:

////////////////////////////////////////////////////////////////////////////////"Red eggs: {брой на червените яйца}"

////////////////////////////////////////////////////////////////////////////////"Orange eggs: {брой на оранжевите яйца}"

////////////////////////////////////////////////////////////////////////////////"Blue eggs: {брой на сините яйца}"

////////////////////////////////////////////////////////////////////////////////"Green eggs: {брой на зелените яйца}"

////////////////////////////////////////////////////////////////////////////////"Max eggs: {максимален брой на яйцата от цвят} -> {цвят}"

////////////////////////////////////////////////////////////////////////////////Примерен вход и изход
////////////////////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////////Обяснения

////////////////////////////////////////////////////////////////////////////////7

////////////////////////////////////////////////////////////////////////////////orange

////////////////////////////////////////////////////////////////////////////////blue

////////////////////////////////////////////////////////////////////////////////green

////////////////////////////////////////////////////////////////////////////////green

////////////////////////////////////////////////////////////////////////////////blue

////////////////////////////////////////////////////////////////////////////////red

////////////////////////////////////////////////////////////////////////////////green

////////////////////////////////////////////////////////////////////////////////Red eggs: 1

////////////////////////////////////////////////////////////////////////////////Orange eggs: 1

////////////////////////////////////////////////////////////////////////////////Blue eggs: 2

////////////////////////////////////////////////////////////////////////////////Green eggs: 3

////////////////////////////////////////////////////////////////////////////////Max eggs: 3->green

////////////////////////////////////////////////////////////////////////////////Брой яйца: 7

////////////////////////////////////////////////////////////////////////////////Яйце 1: оранжево->брой оранжеви яйца: 1

////////////////////////////////////////////////////////////////////////////////Яйце 2: синьо->брой сини яйца: 1

////////////////////////////////////////////////////////////////////////////////Яйце 3: зелено->брой зелени яйца: 1

////////////////////////////////////////////////////////////////////////////////Яйце 4: зелено->брой зелени яйца: 2

////////////////////////////////////////////////////////////////////////////////Яйце 5: синьо->брой сини яйца: 2

////////////////////////////////////////////////////////////////////////////////Яйце 6: червено->брой червени яйца: 1

////////////////////////////////////////////////////////////////////////////////Яйце 7: зелено->брой зелени яйца: 3

////////////////////////////////////////////////////////////////////////////////Най - много яйца: зелени-> 3 броя

////////////////////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////////Обяснения

////////////////////////////////////////////////////////////////////////////////4

////////////////////////////////////////////////////////////////////////////////blue

////////////////////////////////////////////////////////////////////////////////red

////////////////////////////////////////////////////////////////////////////////blue

////////////////////////////////////////////////////////////////////////////////orange

////////////////////////////////////////////////////////////////////////////////Red eggs: 1

////////////////////////////////////////////////////////////////////////////////Orange eggs: 1

////////////////////////////////////////////////////////////////////////////////Blue eggs: 2

////////////////////////////////////////////////////////////////////////////////Green eggs: 0

////////////////////////////////////////////////////////////////////////////////Max eggs: 2->blue

////////////////////////////////////////////////////////////////////////////////Брой яйца: 4

////////////////////////////////////////////////////////////////////////////////Яйце 1: синьо->брой сини яйца: 1

////////////////////////////////////////////////////////////////////////////////Яйце 2: червено->брой червени яйца: 1

////////////////////////////////////////////////////////////////////////////////Яйце 3: синьо->брой сини яйца: 2

////////////////////////////////////////////////////////////////////////////////Яйце 4: оранжево->брой оранжеви яйца: 1

////////////////////////////////////////////////////////////////////////////////Най - много яйца: сини-> 2 броя






////////////////////////////////////////////////////////////////////////////////   Dictionary<string, int> dict = new Dictionary<string, int>();

////////////////////////////////////////////////////////////////////////////////int eggs = int.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////////////for (int i = 0; i < eggs; i++)

////////////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////////////  string color = Console.ReadLine();

////////////////////////////////////////////////////////////////////////////////  if (!dict.ContainsKey(color))

////////////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////////////    dict.Add(color, 0);

////////////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////////////  dict[color]++;

////////////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////////////Console.WriteLine($"Red eggs: {(dict.ContainsKey("red") ? dict["red"] : 0)}");

////////////////////////////////////////////////////////////////////////////////Console.WriteLine($"Orange eggs: {(dict.ContainsKey("orange") ? dict["orange"] : 0)}");

////////////////////////////////////////////////////////////////////////////////Console.WriteLine($"Blue eggs: {(dict.ContainsKey("blue") ? dict["blue"] : 0)}");

////////////////////////////////////////////////////////////////////////////////Console.WriteLine($"Green eggs: {(dict.ContainsKey("green") ? dict["green"] : 0)}");

////////////////////////////////////////////////////////////////////////////////Console.WriteLine($"Max eggs: {dict.Values.Max()} -> {dict.OrderByDescending(x => x.Value).FirstOrDefault().Key}");

////////////////////////////////////////////////////////////////////////////////Въпрос 12
////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////Дефинирайте понятието многомерен масив в C#. 

////////////////////////////////////////////////////////////////////////////////Многомерните масиви се декларират по начин аналогичен на едномер­ните. Всяка тяхна размерност (освен първата) означаваме със запетая.Памет за многомерни размери се заделя като се използва ключовата дума new и за всяка размерност в квадратни скоби се задава размерът, който е необходим:

////////////////////////////////////////////////////////////////////////////////Въпрос 13
////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////Дайте пример за това как бихте декларирали променлива от тип низ със стойност "Hello, World!"?

////////////////////////////////////////////////////////////////////////////////Отговор: 
////////////////////////////////////////////////////////////////////////////////string greeting = "Hello, World!";
////////////////////////////////////////////////////////////////////////////////Въпрос 14
////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////Посочете кои от характеристиките се отнасят към централизираните сорс-контрол системи и кои към децентрализираните сорс-контрол системи.

////////////////////////////////////////////////////////////////////////////////Използват един сървър, съдържащ всички контролирани файлове и множество от клиенти, които издърпват файловете от това централно място. 
////////////////////////////////////////////////////////////////////////////////Централизирани


////////////////////////////////////////////////////////////////////////////////Клиентите изтеглят последния snapshot на файловете и изцяло клонират цялото хранилище, включително пълната му история. 
////////////////////////////////////////////////////////////////////////////////Децентрализирани


////////////////////////////////////////////////////////////////////////////////Администраторите имат подробен контрол върху това кой какво може да прави и освен това е много по-лесно да се администрира. 
////////////////////////////////////////////////////////////////////////////////Централизирани


////////////////////////////////////////////////////////////////////////////////Ако сървърът загине, хранилището на даден проект може да се възстанови от локалното копие на всеки клиент. 
////////////////////////////////////////////////////////////////////////////////Децентрализирани


////////////////////////////////////////////////////////////////////////////////Всички данни се пазят на едно място и зависят от надеждността на сървъра, който ги съхранява. 
////////////////////////////////////////////////////////////////////////////////Централизирани


////////////////////////////////////////////////////////////////////////////////Ако сървърът по някаква причина не е достъпен за час - тогава през този час никой не може да качва своите промени. 
////////////////////////////////////////////////////////////////////////////////Централизирани


////////////////////////////////////////////////////////////////////////////////Въпрос 15
////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////От максимално 6,00
////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////Демонстрирайте с C# код по какъв начин ще декларирате и ще заделите място в паметта на списък, който съдържа текстов тип данни?

////////////////////////////////////////////////////////////////////////////////List<string> names = new List<string>;

////////////////////////////////////////////////////////////////////////////////Въпрос 16
////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////Ако имате речник с ключ от тип данни низ и стойност тип данни цяло число, по кой от изброените начини ще премахнете елемент от този речник, който има за ключ стойност "tomatoes"? Посочете верния отговор?

////////////////////////////////////////////////////////////////////////////////Изберете едно
////////////////////////////////////////////////////////////////////////////////a. dict.Remove("tomatoes");
////////////////////////////////////////////////////////////////////////////////b.dict.Clear("tomatoes");
////////////////////////////////////////////////////////////////////////////////c.dict.Undo("tomatoes");
////////////////////////////////////////////////////////////////////////////////d.dict.Delete("tomatoes");
////////////////////////////////////////////////////////////////////////////////Въпрос 17
////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////От максимално 10,00
////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид. 

////////////////////////////////////////////////////////////////////////////////Условие: Разполагате със следния програмен код:

////////////////////////////////////////////////////////////////////////////////Program.cs

////////////////////////////////////////////////////////////////////////////////static void Main(string[] args)
////////////////////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////////////////////  int nums = Console.ReadLine().Split(',').Select(int.Parse).ToArray();
////////////////////////////////////////////////////////////////////////////////  List<int> evens = new List<int>();
////////////////////////////////////////////////////////////////////////////////  List<int> odds = new List<int>();
////////////////////////////////////////////////////////////////////////////////  List<int> sum5 = new List<int>();

////////////////////////////////////////////////////////////////////////////////  for (int i = 0; i < nums.Length; i++)
////////////////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////////////////    if (nums[i] % 2 == 0 && (nums[i] % 10 == 4 && nums[i] % 10 == 8))
////////////////////////////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////////////////////////////      evens.Add(nums);


////////////////////////////////////////////////////////////////////////////////                else if (nums[i] % 2 != 0 && (nums[i] % 10 == 5 || nums[i] % 10 == 7))
////////////////////////////////////////////////////////////////////////////////      {
////////////////////////////////////////////////////////////////////////////////        odds.Add(nums[i]);
////////////////////////////////////////////////////////////////////////////////      }
////////////////////////////////////////////////////////////////////////////////      if (SumDigits(nums[i]) = 15)
////////////////////////////////////////////////////////////////////////////////      {
////////////////////////////////////////////////////////////////////////////////        sum5.Add(nums[i]);
////////////////////////////////////////////////////////////////////////////////      }
////////////////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////////////////    Console.WriteLine(String.Join(", ", evens));
////////////////////////////////////////////////////////////////////////////////    Console.WriteLine(String.Join(", ", evens));
////////////////////////////////////////////////////////////////////////////////    Console.WriteLine(String.Join(", ", sum5));
////////////////////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////////////////////  public static int SumDigits(int number)
////////////////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////////////////    int sum = 0;

////////////////////////////////////////////////////////////////////////////////    while (number != 0)
////////////////////////////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////////////////////////////      sum += number % 10;
////////////////////////////////////////////////////////////////////////////////      number /= 10;
////////////////////////////////////////////////////////////////////////////////    }
////////////////////////////////////////////////////////////////////////////////  }





////////////////////////////////////////////////////////////////////////////////  Открийте и поправете грешките във вече написания програмен код, така че да се реши поставената по - долу задача.Допълнете кода.

////////////////////////////////////////////////////////////////////////////////Магически числа
////////////////////////////////////////////////////////////////////////////////В системата първоначално има въведени числа, които трябва да бъдат разпределени в три групи.

////////////////////////////////////////////////////////////////////////////////Групите са следните:

////////////////////////////////////////////////////////////////////////////////  Група на четните числа, които завършват на 4 или 8
////////////////////////////////////////////////////////////////////////////////Група на нечетните числа, които завършват на 5 или 7
////////////////////////////////////////////////////////////////////////////////Група на числа, чийто сбор на цифрите е 15
////////////////////////////////////////////////////////////////////////////////Напишете програма, която при подаден първоначален списък с числа ги групира и принтира трите групи от числа. Едно число може да попада в повече от 1 група.Ако число не отговаря на нито едно от горните условия то не се разпределя в нито една група.

////////////////////////////////////////////////////////////////////////////////Вход
////////////////////////////////////////////////////////////////////////////////От конзолата се чете 1 ред:

////////////////////////////////////////////////////////////////////////////////  Списък с числа – текст(числата са разделени със запетая)
////////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////////На конзолата да се отпечатват 3 реда:

////////////////////////////////////////////////////////////////////////////////  списък с четните числа, които завършват на 4 или 8, разделени със запетая и интервал
////////////////////////////////////////////////////////////////////////////////  списък с нечетните числа, които завършват на 5 или 7, разделени със запетая и интервал
////////////////////////////////////////////////////////////////////////////////  списък с числата, чийто сбор на цифрите е 15, разделени със запетая и интервал
////////////////////////////////////////////////////////////////////////////////  Примерен вход и изход
////////////////////////////////////////////////////////////////////////////////  Вход

////////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////////Обяснения

////////////////////////////////////////////////////////////////////////////////58,87,96,45,14

////////////////////////////////////////////////////////////////////////////////58, 14

////////////////////////////////////////////////////////////////////////////////87, 45

////////////////////////////////////////////////////////////////////////////////87, 96

////////////////////////////////////////////////////////////////////////////////58->четно, завършващо на 8

////////////////////////////////////////////////////////////////////////////////87->нечетно, завършващо на 7 и сборът от цифрите му е 15

////////////////////////////////////////////////////////////////////////////////96->сборът от цифрите му е 15

////////////////////////////////////////////////////////////////////////////////45->нечетно, завършващо на 5

////////////////////////////////////////////////////////////////////////////////14->четно, завършващо на 4

////////////////////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////////Обяснения

////////////////////////////////////////////////////////////////////////////////54,69,67,159,225

////////////////////////////////////////////////////////////////////////////////54

////////////////////////////////////////////////////////////////////////////////67, 225

////////////////////////////////////////////////////////////////////////////////69, 159

////////////////////////////////////////////////////////////////////////////////54->четно, завършващо на 4

////////////////////////////////////////////////////////////////////////////////69->сборът от цифрите му е 15

////////////////////////////////////////////////////////////////////////////////67->нечетно, завършващо на 7

////////////////////////////////////////////////////////////////////////////////159->сборът от цифрите му е 15

////////////////////////////////////////////////////////////////////////////////225->нечетно, завършващо на 5







//////////////////////////////////////////////////////////////////////////////// int[] nums = Console.ReadLine().Split(',').Select(int.Parse).ToArray();

////////////////////////////////////////////////////////////////////////////////  List<int> evens = new List<int>();

////////////////////////////////////////////////////////////////////////////////  List<int> odds = new List<int>();

////////////////////////////////////////////////////////////////////////////////  List<int> sum5 = new List<int>();



////////////////////////////////////////////////////////////////////////////////  for (int i = 0; i < nums.Length; i++)

////////////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////////////    if (nums[i] % 2 == 0 && nums[i] % 10 == 4 && nums[i] % 10 == 8)

////////////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////////////      evens.Add(nums[i]);



////////////////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////////////////    else if (nums[i] % 2 != 0 && nums[i] % 10 == 5 || nums[i] % 10 == 7)

////////////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////////////      odds.Add(nums[i]);

////////////////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////////////////    if (SumDigits(nums[i]) == 15)

////////////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////////////      sum5.Add(nums[i]);

////////////////////////////////////////////////////////////////////////////////    }



////////////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////////////  Console.WriteLine(String.Join(", ", evens));

////////////////////////////////////////////////////////////////////////////////  Console.WriteLine(String.Join(", ", evens));

////////////////////////////////////////////////////////////////////////////////  Console.WriteLine(String.Join(", ", sum5));

////////////////////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////////////////////public static int SumDigits(int number)

////////////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////////////  int sum = 0;



////////////////////////////////////////////////////////////////////////////////  while (number != 0)

////////////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////////////    sum += number % 10;

////////////////////////////////////////////////////////////////////////////////    number /= 10;

////////////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////////////  return sum;

////////////////////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////////////////////Въпрос 18
////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////Имате дадена следната матрица:



////////////////////////////////////////////////////////////////////////////////Имате и следният код на C#:



////////////////////////////////////////////////////////////////////////////////Какво ще се отпечата на конзолата? Решете задачата и запишете отговора в празното поле!


////////////////////////////////////////////////////////////////////////////////4 1 7 1 2

////////////////////////////////////////////////////////////////////////////////5 7

////////////////////////////////////////////////////////////////////////////////7

////////////////////////////////////////////////////////////////////////////////5 2 1 8



////////////////////////////////////////////////////////////////////////////////Въпрос 19
////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////От максимално 6,00
////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////Дадени са следните парчета код на C#. Свържете всеки един от кодовете с резултата, който трябва да върне.







////////////////////////////////////////////////////////////////////////////////Отговор 1
////////////////////////////////////////////////////////////////////////////////-1




////////////////////////////////////////////////////////////////////////////////Отговор 2
////////////////////////////////////////////////////////////////////////////////World!




////////////////////////////////////////////////////////////////////////////////Отговор 3
////////////////////////////////////////////////////////////////////////////////AwesomeImage
////////////////////////////////////////////////////////////////////////////////Въпрос 20
////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////Опишете как ще преминете от двоична бройна система в десетична.

////////////////////////////////////////////////////////////////////////////////Преобразувайте числото  11101(2)  от двоична в десетична бройна система.


////////////////////////////////////////////////////////////////////////////////За да преобразуваш 11101 от двоична в десетична бройна система трябва да сметнеш сбора от числата който са единици.Числата се броят от дясно на ляво като всяко число на следваща позиция се получава като събереш предишното число по него.

////////////////////////////////////////////////////////////////////////////////111101 = 1 x 1 + 0 x 2 + 1 х 4 + 1 x 8 + 1 x 16 + 1 x 32 = 61

////////////////////////////////////////////////////////////////////////////////Въпрос 21
////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////От максимално 10,00
////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид. 

////////////////////////////////////////////////////////////////////////////////Условие: Разполагате със следния програмен код:

////////////////////////////////////////////////////////////////////////////////Program.cs

////////////////////////////////////////////////////////////////////////////////static void Main(string[] args)
////////////////////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////////////////////  int[] nums = Console.ReadLine().Split(',').Select(int.Parse);

////////////////////////////////////////////////////////////////////////////////  List<int> evens = new List<int>();
////////////////////////////////////////////////////////////////////////////////  List<int> odds = new List<int>();
////////////////////////////////////////////////////////////////////////////////  List<int> sum5 = new List<int>();

////////////////////////////////////////////////////////////////////////////////  for (int i = 0; i > nums.Length; i++)
////////////////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////////////////    if (nums[i] / 2 == 0)
////////////////////////////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////////////////////////////      evens.Add(nums[i]);
////////////////////////////////////////////////////////////////////////////////    }
////////////////////////////////////////////////////////////////////////////////    else

////////////////////////////////////////////////////////////////////////////////      odds.Add(nums[i]);
////////////////////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////////////////////  if (SumDigits(nums) % 10 == 5)
////////////////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////////////////    sum5.Add(nums[i]);
////////////////////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////////////////////}
////////////////////////////////////////////////////////////////////////////////Console.WriteLine(String.Join(", ", evens));
////////////////////////////////////////////////////////////////////////////////Console.WriteLine(String.Join(", ", odds));
////////////////////////////////////////////////////////////////////////////////Console.WriteLine(String.Join(", ", sum5));
////////////////////////////////////////////////////////////////////////////////        }
////////////////////////////////////////////////////////////////////////////////        public static int SumDigits(int number)
////////////////////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////////////////////  int sum = 0;

////////////////////////////////////////////////////////////////////////////////  while (true)
////////////////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////////////////    sum += number % 10;
////////////////////////////////////////////////////////////////////////////////    number /= 10;
////////////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////////////  return sum;
////////////////////////////////////////////////////////////////////////////////}






////////////////////////////////////////////////////////////////////////////////Открийте и поправете грешките във вече написания програмен код, така че да се реши поставената по-долу задача. Допълнете кода.

////////////////////////////////////////////////////////////////////////////////Видове числа
////////////////////////////////////////////////////////////////////////////////В системата първоначално има въведени числа, които трябва да бъдат разпределени в три групи.

////////////////////////////////////////////////////////////////////////////////Групите са следните:

////////////////////////////////////////////////////////////////////////////////Група на четните числа
////////////////////////////////////////////////////////////////////////////////Група на нечетните числа
////////////////////////////////////////////////////////////////////////////////Група на числа, чийто сбор на цифрите завършва на 5
////////////////////////////////////////////////////////////////////////////////Напишете програма, която при подаден първоначален списък с числа ги групира и принтира трите групи от числа. Едно число може да попада в повече от 1 група.

////////////////////////////////////////////////////////////////////////////////Вход
////////////////////////////////////////////////////////////////////////////////От конзолата се чете 1 ред:

////////////////////////////////////////////////////////////////////////////////Списък с числа – текст (числата са разделени със запетая)
////////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////////На конзолата да се отпечатват 3 реда:

////////////////////////////////////////////////////////////////////////////////списък с четните числа, разделени със запетая и интервал
////////////////////////////////////////////////////////////////////////////////списък с нечетните числа, разделени със запетая и интервал
////////////////////////////////////////////////////////////////////////////////списък с числата, чийто сбор на цифрите завършва на 5, разделени със запетая и интервал
////////////////////////////////////////////////////////////////////////////////Примерен вход и изход
////////////////////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////////Обяснения

////////////////////////////////////////////////////////////////////////////////56,87,9999,45,12

////////////////////////////////////////////////////////////////////////////////56, 12

////////////////////////////////////////////////////////////////////////////////87, 9999, 45

////////////////////////////////////////////////////////////////////////////////87

////////////////////////////////////////////////////////////////////////////////56 -> четно

////////////////////////////////////////////////////////////////////////////////87 -> нечетно и сборът от цифрите му (8 + 7 = 15) завършва на 5

////////////////////////////////////////////////////////////////////////////////9999 -> нечетно

////////////////////////////////////////////////////////////////////////////////45 -> нечетно

////////////////////////////////////////////////////////////////////////////////12 -> четно

////////////////////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////////Обяснения

////////////////////////////////////////////////////////////////////////////////54,67,63,123,221

////////////////////////////////////////////////////////////////////////////////54

////////////////////////////////////////////////////////////////////////////////67, 63, 123, 221

////////////////////////////////////////////////////////////////////////////////221

////////////////////////////////////////////////////////////////////////////////54 -> четно

////////////////////////////////////////////////////////////////////////////////67 -> нечетно

////////////////////////////////////////////////////////////////////////////////63 -> нечетно

////////////////////////////////////////////////////////////////////////////////123 -> нечетно

////////////////////////////////////////////////////////////////////////////////221 -> нечетно и сборът на от цифрите му (2 + 2 + 1 = 5) завършва на 5







////////////////////////////////////////////////////////////////////////////////static void Main(string[] args)

////////////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////////////  int[] nums = Console.ReadLine().Split(',').Select(int.Parse).ToArray();



////////////////////////////////////////////////////////////////////////////////  List<int> evens = new List<int>();

////////////////////////////////////////////////////////////////////////////////  List<int> odds = new List<int>();

////////////////////////////////////////////////////////////////////////////////  List<int> sum5 = new List<int>();



////////////////////////////////////////////////////////////////////////////////  for (int i = 0; i < nums.Length; i++)

////////////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////////////    if (nums[i] % 2 == 0)

////////////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////////////      evens.Add(nums[i]);

////////////////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////////////////    else

////////////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////////////      odds.Add(nums[i]);

////////////////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////////////////    if (SumDigits(nums[i]) % 10 == 5)

////////////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////////////      sum5.Add(nums[i]);

////////////////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////////////  Console.WriteLine(String.Join(", ", evens));

////////////////////////////////////////////////////////////////////////////////  Console.WriteLine(String.Join(", ", odds));

////////////////////////////////////////////////////////////////////////////////  Console.WriteLine(String.Join(", ", sum5));

////////////////////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////////////////////public static int SumDigits(int number)

////////////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////////////  int sum = 0;



////////////////////////////////////////////////////////////////////////////////  while (number != 0)

////////////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////////////    sum += number % 10;

////////////////////////////////////////////////////////////////////////////////    number /= 10;

////////////////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////////////////  return sum;

////////////////////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////////////////////Въпрос 22
////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////Дефинирайте понятието сорс-контрол система. Какво представляват? За какво служат? Как се използват?

////////////////////////////////////////////////////////////////////////////////Система за контрол на версиите е механизмът, по който се управлява работата по даден софтуерен проект. За да се улесни разработката на софтуер са създадени специални системи, които намаляват неудобствата при съвместна работа на много хора върху един проект.



////////////////////////////////////////////////////////////////////////////////Системите за контрол на версиите обикновено използват едно централно хранилище, в което се съхраняват файловете на проекта. Когато някой започне да работи по този проект, той създава копие на файловете от това хранилище на своята система и работи с тези копия. В процеса на работа потребителят може да изпраща към хранилището направените от него промени и да получава промените, направени по проекта от другите хора в екипа.



////////////////////////////////////////////////////////////////////////////////След обновяване на хранилището, в него се запазват старите версии на променените файлове. Така тези файлове могат да бъдат възстановени при необходимост. Системата за контрол на версиите също така следи за конфликти – различни промени на различните потребители, които ползват хранилището.

////////////////////////////////////////////////////////////////////////////////Въпрос 23
////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////Дефинирайте понятието string в C# като попълните липсващите думи в текста.

////////////////////////////////////////////////////////////////////////////////Символният низ е  blank , записана на даден адрес в паметта. 

////////////////////////////////////////////////////////////////////////////////Типът string е  blank и като такъв той спазва  blank . Стойностите му се записват в  blank памет, а променливите от тип string пазят  blank в паметта.



////////////////////////////////////////////////////////////////////////////////динамичната динамичната динамичната динамичната динамичната стойността на обектстойността на обектстойността на обектстойността на обектстойността на обектстатичнатастатичнатастатичнатастатичнатастатичнатареференция към обектреференция към обектреференция към обектреференция към обектреференция към обектобектобектобектобектобектпринципите на обектно‑ориентираното програмиранепринципите на обектно‑ориентираното програмиранепринципите на обектно‑ориентираното програмиранепринципите на обектно‑ориентираното програмиранепринципите на обектно‑ориентираното програмиранепоследователност от символипоследователност от символипоследователност от символипоследователност от символипоследователност от символипринципите на функционалното програмиранепринципите на функционалното програмиранепринципите на функционалното програмиранепринципите на функционалното програмиранепринципите на функционалното програмиранеклас клас клас клас клас 
////////////////////////////////////////////////////////////////////////////////Въпрос 24
////////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////////Посочете кое твърдение е вярно за променливите?
////////////////////////////////////////////////////////////////////////////////Изберете едно или повече:
////////////////////////////////////////////////////////////////////////////////a.Имената на променливите могат да бъдат служебни думи.
////////////////////////////////////////////////////////////////////////////////b. Не може да има две променливи с едно и също име.
////////////////////////////////////////////////////////////////////////////////c. Всяка една променлива в C# си има тип и име.
////////////////////////////////////////////////////////////////////////////////d. Променливата е място, на което пазим информация.
////////////////////////////////////////////////////////////////////////////////e. Имената на променливите могат да започват с числа.
////////////////////////////////////////////////////////////////////////////////Край на прегледа
////////////////////////////////////////////////////////////////////////////////Отиди на ...
////////////////////////////////////////////////////////////////////////////////Отиди на ...
////////////////////////////////////////////////////////////////////////////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
////////////////////////////////////////////////////////////////////////////////Навигация в теста
////////////////////////////////////////////////////////////////////////////////Край на прегледа
////////////////////////////////////////////////////////////////////////////////Вие сте влезли в системата като Добри Илев (Изход)
////////////////////////////////////////////////////////////////////////////////тренировъчен - курс - по
////////////////////////////////////////////////////////////////////////////////Data retention summary

//////////////////////////////////////////////////////////////////////////////Прескочи на основното съдържание
//////////////////////////////////////////////////////////////////////////////ПГЕЕ
//////////////////////////////////////////////////////////////////////////////Български ‎(bg)‎ 
//////////////////////////////////////////////////////////////////////////////Добри Илев 
//////////////////////////////////////////////////////////////////////////////Тренировъчен курс - Програмно осигуряване
//////////////////////////////////////////////////////////////////////////////Начална страница
//////////////////////////////////////////////////////////////////////////////Моите курсове
////////////////////////////////////////////////////////////////////////////// тренировъчен-курс-по
////////////////////////////////////////////////////////////////////////////// Изпитна тема 2
////////////////////////////////////////////////////////////////////////////// Тест към Изпитна тема №2
//////////////////////////////////////////////////////////////////////////////Започнат на	вторник, 28 февруари 2023, 22:03
//////////////////////////////////////////////////////////////////////////////Състояние Завършен
//////////////////////////////////////////////////////////////////////////////Приключен на	сряда, 1 март 2023, 20:08
//////////////////////////////////////////////////////////////////////////////Изминало време	22 часа 5 мин.
//////////////////////////////////////////////////////////////////////////////Въпрос 1
//////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////От максимално 6,00
//////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////Демонстрирайте как ще запишете с код на C# променлива от тип символен низ със стойност: Hello, my name is Niki. Запишете отговора в полето.

//////////////////////////////////////////////////////////////////////////////Отговор: 
//////////////////////////////////////////////////////////////////////////////string greeting = "Hello, my name is Niki.";
//////////////////////////////////////////////////////////////////////////////Въпрос 2
//////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////От максимално 10,00
//////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

//////////////////////////////////////////////////////////////////////////////Условие: Разполагате със следния програмен код:

//////////////////////////////////////////////////////////////////////////////Program.cs

//////////////////////////////////////////////////////////////////////////////static void Main(string[] args)
//////////////////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////////////////  Dictionary<string, int> dict = new Dictionary<string, int>();

//////////////////////////////////////////////////////////////////////////////  string input = Console.ReadLine().Split(" - ", StringSplitOptions.RemoveEmptyEntries);
//////////////////////////////////////////////////////////////////////////////  while (input[0].Equals("END"))
//////////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////////    if (!dict.ContainsKey(input))
//////////////////////////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////////////////////////      dict.Add(input[0], 1);
//////////////////////////////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////////////////////////////    dict[input[0]] = int.Parse(input[1]);
//////////////////////////////////////////////////////////////////////////////    input = Console.ReadLine().Split(" - ", StringSplitOptions.RemoveEmptyEntries);
//////////////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////////////  foreach (var kvp in dict)
//////////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////////    Console.WriteLine("{kvp.Key} -> {kvp.Value}");
//////////////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////////////Открийте и поправете грешките във вече написания програмен код, така че да се реши поставената по-долу задача. Допълнете кода.

//////////////////////////////////////////////////////////////////////////////Баскетболен сезон
//////////////////////////////////////////////////////////////////////////////Треньорът на баскетболен отбор иска да знае накрая на сезона по точки е вкарала всяка една от състезателките му. Помогнете му като напишете програма, която получава име на състезателката и колко точки е вкарала в съответния мач, докато не получите команда "END".  След получаване на командата, принтирайте в азбучен ред имената на състезателките и срещу имената на всяка една от тях колко точки е вкарала през сезона.

//////////////////////////////////////////////////////////////////////////////Вход
//////////////////////////////////////////////////////////////////////////////От конзолата се чете:

//////////////////////////////////////////////////////////////////////////////Състезателка и вкараните точки от нея в съответния мач – текст в следния формат: "{име на състезателка} – {брой вкарани точки}", докато не получите команда "END".
//////////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////////Да се отпечата на конзолата имената на състезателките в азбучен ред  и общо колко точки е вкарал всяка една от тях през сезона в следния формат:

//////////////////////////////////////////////////////////////////////////////"{име на състезателка} -> {общ брой вкарани точки}"



//////////////////////////////////////////////////////////////////////////////Примерен вход и изход
//////////////////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////////Обяснения

//////////////////////////////////////////////////////////////////////////////Simona - 20

//////////////////////////////////////////////////////////////////////////////Iva - 13

//////////////////////////////////////////////////////////////////////////////Petya - 12

//////////////////////////////////////////////////////////////////////////////Simona - 14

//////////////////////////////////////////////////////////////////////////////Simona - 12

//////////////////////////////////////////////////////////////////////////////Petya - 13

//////////////////////////////////////////////////////////////////////////////Martina - 12

//////////////////////////////////////////////////////////////////////////////END

//////////////////////////////////////////////////////////////////////////////Iva -> 13

//////////////////////////////////////////////////////////////////////////////Martina -> 12

//////////////////////////////////////////////////////////////////////////////Petya -> 25

//////////////////////////////////////////////////////////////////////////////Simona -> 46

//////////////////////////////////////////////////////////////////////////////Simona -> 20 + 14 + 12 = 46

//////////////////////////////////////////////////////////////////////////////Iva -> 13

//////////////////////////////////////////////////////////////////////////////Petya -> 12 + 13 = 25

//////////////////////////////////////////////////////////////////////////////Martina -> 12

//////////////////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////////Обяснения

//////////////////////////////////////////////////////////////////////////////Mihaela - 13

//////////////////////////////////////////////////////////////////////////////Sanya - 14

//////////////////////////////////////////////////////////////////////////////Nikol - 21

//////////////////////////////////////////////////////////////////////////////Penka - 31

//////////////////////////////////////////////////////////////////////////////Nikol - 12

//////////////////////////////////////////////////////////////////////////////Mihaela - 11

//////////////////////////////////////////////////////////////////////////////Sanya - 21

//////////////////////////////////////////////////////////////////////////////END

//////////////////////////////////////////////////////////////////////////////Mihaela -> 24

//////////////////////////////////////////////////////////////////////////////Nikol -> 33

//////////////////////////////////////////////////////////////////////////////Penka -> 31

//////////////////////////////////////////////////////////////////////////////Sanya -> 35

//////////////////////////////////////////////////////////////////////////////Mihaela -> 13 + 11 = 24

//////////////////////////////////////////////////////////////////////////////Sanya -> 14 + 21 = 35

//////////////////////////////////////////////////////////////////////////////Nikol -> 21 + 12 = 33

//////////////////////////////////////////////////////////////////////////////Penka -> 31






//////////////////////////////////////////////////////////////////////////////Dictionary<string, int> dict = new Dictionary<string, int>();



//////////////////////////////////////////////////////////////////////////////int count = 2;



//////////////////////////////////////////////////////////////////////////////char[] separator = { '-' };







//////////////////////////////////////////////////////////////////////////////string[] input = Console.ReadLine().Split(separator, count, StringSplitOptions.RemoveEmptyEntries);



//////////////////////////////////////////////////////////////////////////////while (input[0].Equals("END"))



//////////////////////////////////////////////////////////////////////////////{



//////////////////////////////////////////////////////////////////////////////  if (!dict.ContainsKey(input[0]))



//////////////////////////////////////////////////////////////////////////////  {



//////////////////////////////////////////////////////////////////////////////    dict.Add(input[0], 0);



//////////////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////////////  dict[input[0]] = int.Parse(input[1]);



//////////////////////////////////////////////////////////////////////////////  input = Console.ReadLine().Split(separator, count, StringSplitOptions.RemoveEmptyEntries);



//////////////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////////////var ordered = dict.OrderBy(x => x.Key).ToDictionary(x => x.Key, x => x.Value);



//////////////////////////////////////////////////////////////////////////////foreach (var kvp in ordered)



//////////////////////////////////////////////////////////////////////////////{



//////////////////////////////////////////////////////////////////////////////  Console.WriteLine($"{kvp.Key} -> {kvp.Value}");



//////////////////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////////////////Въпрос 3
//////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////От максимално 2,00
//////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////Напишете поне три типа данни, които познавате в езика за програмиране C#.

//////////////////////////////////////////////////////////////////////////////string - текстов тип данни

//////////////////////////////////////////////////////////////////////////////int - тип данни с цели числа

//////////////////////////////////////////////////////////////////////////////double-тип данни с реални числа

//////////////////////////////////////////////////////////////////////////////Въпрос 4
//////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////От максимално 2,00
//////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////Опишете как се инициализира многомерен масив в C#?

//////////////////////////////////////////////////////////////////////////////Многомерен масив се реализира по аналогичен начин на едномерния.Той се инициализира като поставиш запетая в квадратните скоби [].

//////////////////////////////////////////////////////////////////////////////Въпрос 5
//////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////От максимално 2,00
//////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////Посочете правилната стойност по подразбиране към всеки от типовете данни:


//////////////////////////////////////////////////////////////////////////////decimal

//////////////////////////////////////////////////////////////////////////////Отговор 1
//////////////////////////////////////////////////////////////////////////////0.0m
//////////////////////////////////////////////////////////////////////////////float

//////////////////////////////////////////////////////////////////////////////Отговор 2
//////////////////////////////////////////////////////////////////////////////0.0f
//////////////////////////////////////////////////////////////////////////////char

//////////////////////////////////////////////////////////////////////////////Отговор 3
//////////////////////////////////////////////////////////////////////////////'\u0000'
//////////////////////////////////////////////////////////////////////////////object

//////////////////////////////////////////////////////////////////////////////Отговор 4
//////////////////////////////////////////////////////////////////////////////null
//////////////////////////////////////////////////////////////////////////////sbyte

//////////////////////////////////////////////////////////////////////////////Отговор 5
//////////////////////////////////////////////////////////////////////////////0
//////////////////////////////////////////////////////////////////////////////bool

//////////////////////////////////////////////////////////////////////////////Отговор 6
//////////////////////////////////////////////////////////////////////////////false
//////////////////////////////////////////////////////////////////////////////string

//////////////////////////////////////////////////////////////////////////////Отговор 7
//////////////////////////////////////////////////////////////////////////////null
//////////////////////////////////////////////////////////////////////////////Въпрос 6
//////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////От максимално 2,00
//////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////В най-популярната система за контрол на версиите GitHub има няколко основни команди, които се използват когато пишете в конзолния клиент GitBash. Обяснете какво прави командата git add, като поставите липсващите думи в празните полета.

//////////////////////////////////////////////////////////////////////////////С командата add  blank промените в индекса на Git, които смятате, че са готови да  blank (commit). 




//////////////////////////////////////////////////////////////////////////////изтеглятедобавятепубликуватекачвате
//////////////////////////////////////////////////////////////////////////////Въпрос 7
//////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////От максимално 10,00
//////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид. 

//////////////////////////////////////////////////////////////////////////////Условие: Разполагате със следния програмен код:

//////////////////////////////////////////////////////////////////////////////Program.cs

//////////////////////////////////////////////////////////////////////////////static void Main(string[] args)
//////////////////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////////////////  int[] nums = Console.ReadLine().Split(',').Select(int.Parse);

//////////////////////////////////////////////////////////////////////////////  List<int> evens = new List<int>();
//////////////////////////////////////////////////////////////////////////////  List<int> odds = new List<int>();
//////////////////////////////////////////////////////////////////////////////  List<int> sum5 = new List<int>();

//////////////////////////////////////////////////////////////////////////////  for (int i = 0; i > nums.Length; i++)
//////////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////////    if (nums[i] / 2 == 0)
//////////////////////////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////////////////////////      evens.Add(nums[i]);
//////////////////////////////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////////////////////////////    else

//////////////////////////////////////////////////////////////////////////////      odds.Add(nums[i]);
//////////////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////////////  if (SumDigits(nums) % 10 == 5)
//////////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////////    sum5.Add(nums[i]);
//////////////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////////////}
//////////////////////////////////////////////////////////////////////////////Console.WriteLine(String.Join(", ", evens));
//////////////////////////////////////////////////////////////////////////////Console.WriteLine(String.Join(", ", odds));
//////////////////////////////////////////////////////////////////////////////Console.WriteLine(String.Join(", ", sum5));
//////////////////////////////////////////////////////////////////////////////        }
//////////////////////////////////////////////////////////////////////////////        public static int SumDigits(int number)
//////////////////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////////////////  int sum = 0;

//////////////////////////////////////////////////////////////////////////////  while (true)
//////////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////////    sum += number % 10;
//////////////////////////////////////////////////////////////////////////////    number /= 10;
//////////////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////////////  return sum;
//////////////////////////////////////////////////////////////////////////////}






//////////////////////////////////////////////////////////////////////////////Открийте и поправете грешките във вече написания програмен код, така че да се реши поставената по-долу задача. Допълнете кода.

//////////////////////////////////////////////////////////////////////////////Видове числа
//////////////////////////////////////////////////////////////////////////////В системата първоначално има въведени числа, които трябва да бъдат разпределени в три групи.

//////////////////////////////////////////////////////////////////////////////Групите са следните:

//////////////////////////////////////////////////////////////////////////////Група на четните числа
//////////////////////////////////////////////////////////////////////////////Група на нечетните числа
//////////////////////////////////////////////////////////////////////////////Група на числа, чийто сбор на цифрите завършва на 5
//////////////////////////////////////////////////////////////////////////////Напишете програма, която при подаден първоначален списък с числа ги групира и принтира трите групи от числа. Едно число може да попада в повече от 1 група.

//////////////////////////////////////////////////////////////////////////////Вход
//////////////////////////////////////////////////////////////////////////////От конзолата се чете 1 ред:

//////////////////////////////////////////////////////////////////////////////Списък с числа – текст (числата са разделени със запетая)
//////////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////////На конзолата да се отпечатват 3 реда:

//////////////////////////////////////////////////////////////////////////////списък с четните числа, разделени със запетая и интервал
//////////////////////////////////////////////////////////////////////////////списък с нечетните числа, разделени със запетая и интервал
//////////////////////////////////////////////////////////////////////////////списък с числата, чийто сбор на цифрите завършва на 5, разделени със запетая и интервал
//////////////////////////////////////////////////////////////////////////////Примерен вход и изход
//////////////////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////////Обяснения

//////////////////////////////////////////////////////////////////////////////56,87,9999,45,12

//////////////////////////////////////////////////////////////////////////////56, 12

//////////////////////////////////////////////////////////////////////////////87, 9999, 45

//////////////////////////////////////////////////////////////////////////////87

//////////////////////////////////////////////////////////////////////////////56 -> четно

//////////////////////////////////////////////////////////////////////////////87 -> нечетно и сборът от цифрите му (8 + 7 = 15) завършва на 5

//////////////////////////////////////////////////////////////////////////////9999 -> нечетно

//////////////////////////////////////////////////////////////////////////////45 -> нечетно

//////////////////////////////////////////////////////////////////////////////12 -> четно

//////////////////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////////Обяснения

//////////////////////////////////////////////////////////////////////////////54,67,63,123,221

//////////////////////////////////////////////////////////////////////////////54

//////////////////////////////////////////////////////////////////////////////67, 63, 123, 221

//////////////////////////////////////////////////////////////////////////////221

//////////////////////////////////////////////////////////////////////////////54 -> четно

//////////////////////////////////////////////////////////////////////////////67 -> нечетно

//////////////////////////////////////////////////////////////////////////////63 -> нечетно

//////////////////////////////////////////////////////////////////////////////123 -> нечетно

//////////////////////////////////////////////////////////////////////////////221 -> нечетно и сборът на от цифрите му (2 + 2 + 1 = 5) завършва на 5







//////////////////////////////////////////////////////////////////////////////static void Main(string[] args)



//////////////////////////////////////////////////////////////////////////////{



//////////////////////////////////////////////////////////////////////////////  int[] nums = Console.ReadLine().Split(',').Select(int.Parse).ToArray();







//////////////////////////////////////////////////////////////////////////////  List<int> evens = new List<int>();



//////////////////////////////////////////////////////////////////////////////  List<int> odds = new List<int>();



//////////////////////////////////////////////////////////////////////////////  List<int> sum5 = new List<int>();







//////////////////////////////////////////////////////////////////////////////  for (int i = 0; i < nums.Length; i++)



//////////////////////////////////////////////////////////////////////////////  {



//////////////////////////////////////////////////////////////////////////////    if (nums[i] % 2 == 0)



//////////////////////////////////////////////////////////////////////////////    {



//////////////////////////////////////////////////////////////////////////////      evens.Add(nums[i]);



//////////////////////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////////////////////    else



//////////////////////////////////////////////////////////////////////////////    {



//////////////////////////////////////////////////////////////////////////////      odds.Add(nums[i]);



//////////////////////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////////////////////    if (SumDigits(nums[i]) % 10 == 5)



//////////////////////////////////////////////////////////////////////////////    {



//////////////////////////////////////////////////////////////////////////////      sum5.Add(nums[i]);



//////////////////////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////////////  Console.WriteLine(String.Join(", ", evens));



//////////////////////////////////////////////////////////////////////////////  Console.WriteLine(String.Join(", ", odds));



//////////////////////////////////////////////////////////////////////////////  Console.WriteLine(String.Join(", ", sum5));



//////////////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////////////public static int SumDigits(int number)



//////////////////////////////////////////////////////////////////////////////{



//////////////////////////////////////////////////////////////////////////////  int sum = 0;







//////////////////////////////////////////////////////////////////////////////  while (number != 0)



//////////////////////////////////////////////////////////////////////////////  {



//////////////////////////////////////////////////////////////////////////////    sum += number % 10;



//////////////////////////////////////////////////////////////////////////////    number /= 10;



//////////////////////////////////////////////////////////////////////////////  }







//////////////////////////////////////////////////////////////////////////////  return sum;



//////////////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////////////Въпрос 8
//////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////От максимално 6,00
//////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////Демонстрирайте с C# код по какъв начин ще декларирате и ще заделите място в паметта на масив, който съдържа целочислен тип данни и е с дължина 6?

//////////////////////////////////////////////////////////////////////////////int[] array = new int[6];

//////////////////////////////////////////////////////////////////////////////Въпрос 9
//////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////От максимално 2,00
//////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////Дефинирайте понятието шестнадесетична бройна система. Къде най-често се използва? Как се представят шестнайсетичните числа в шестнадесетичната бройна система?

//////////////////////////////////////////////////////////////////////////////Числата от 0 до 9 се представят с цифри.Числата от 10 до 15 се представят с буквите от A до F.
//////////////////////////////////////////////////////////////////////////////Шестнадесетична, защото се използват 16 числа(знака).

//////////////////////////////////////////////////////////////////////////////Въпрос 10
//////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////От максимално 10,00
//////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид. 

//////////////////////////////////////////////////////////////////////////////Условие: Разполагате със следния програмен код:

//////////////////////////////////////////////////////////////////////////////Program.cs

//////////////////////////////////////////////////////////////////////////////static void Main(string[] args)
//////////////////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////////////////  Dictionary<string, int> dict = new Dictionary<string, int>();
//////////////////////////////////////////////////////////////////////////////  var eggs = Console.ReadLine();
//////////////////////////////////////////////////////////////////////////////  for (int i = 0; i < eggs; i++
//////////////////////////////////////////////////////////////////////////////            {
//////////////////////////////////////////////////////////////////////////////    string color = Console.ReadLine();
//////////////////////////////////////////////////////////////////////////////    if (dict.ContainsKey(color))
//////////////////////////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////////////////////////      dict.Add(color, 1);
//////////////////////////////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////////////////////////////    dict[color];
//////////////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////////////  Console.WriteLine("Red eggs: {(dict.ContainsKey("red") ? dict["red"] : 0)}");
//////////////////////////////////////////////////////////////////////////////  Console.WriteLine($"Orange eggs: {(dict.ContainsKey("orange") ? 0 : dict["orange"])}");
//////////////////////////////////////////////////////////////////////////////  Console.WriteLine($"Blue eggs: {(dict.ContainsKey("blue") ? dict["blue"] : 0)}");
//////////////////////////////////////////////////////////////////////////////  Console.WriteLine($"Green eggs: {(dict.ContainsKey("green") ? dict["green"] : 0)}");
//////////////////////////////////////////////////////////////////////////////  Console.WriteLine($"Max eggs: {dict.Values.Max()} -> {dict.OrderByDescending(x => x.Value).FirstOrDefault().Key}");
//////////////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////////////Открийте и поправете грешките във вече написания програмен код, така че да се реши поставената по-долу задача. Допълнете кода.

//////////////////////////////////////////////////////////////////////////////Великденски яйца
//////////////////////////////////////////////////////////////////////////////Предстои Великден и едно от най-вълнуващите неща е боядисването на яйца. Наличните цветове за боядисване са:
//////////////////////////////////////////////////////////////////////////////•          червено(red)
//////////////////////////////////////////////////////////////////////////////•          оранжев(orange)
//////////////////////////////////////////////////////////////////////////////•          син(blue)
//////////////////////////////////////////////////////////////////////////////•          зелен(green)
//////////////////////////////////////////////////////////////////////////////Напишете програма, която изчислява какъв е броят на яйцата от всеки цвят и от кой цвят яйцата са най - много, като знаете общия им брой и цветът на всяко яйце.

//////////////////////////////////////////////////////////////////////////////Вход
//////////////////////////////////////////////////////////////////////////////От конзолата се четe 1 ред:

//////////////////////////////////////////////////////////////////////////////Броят на боядисаните яйца – цяло число в интервала [1 ... 100]

//////////////////////////////////////////////////////////////////////////////За всяко яйце се чете:

//////////////////////////////////////////////////////////////////////////////Цветът на яйцето – текст – следните възможности: red, orange, blue, green

//////////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////////Да се отпечатат на конзолата 5 реда:

//////////////////////////////////////////////////////////////////////////////"Red eggs: {брой на червените яйца}"

//////////////////////////////////////////////////////////////////////////////"Orange eggs: {брой на оранжевите яйца}"

//////////////////////////////////////////////////////////////////////////////"Blue eggs: {брой на сините яйца}"

//////////////////////////////////////////////////////////////////////////////"Green eggs: {брой на зелените яйца}"

//////////////////////////////////////////////////////////////////////////////"Max eggs: {максимален брой на яйцата от цвят} -> {цвят}"

//////////////////////////////////////////////////////////////////////////////Примерен вход и изход
//////////////////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////////Обяснения

//////////////////////////////////////////////////////////////////////////////7

//////////////////////////////////////////////////////////////////////////////orange

//////////////////////////////////////////////////////////////////////////////blue

//////////////////////////////////////////////////////////////////////////////green

//////////////////////////////////////////////////////////////////////////////green

//////////////////////////////////////////////////////////////////////////////blue

//////////////////////////////////////////////////////////////////////////////red

//////////////////////////////////////////////////////////////////////////////green

//////////////////////////////////////////////////////////////////////////////Red eggs: 1

//////////////////////////////////////////////////////////////////////////////Orange eggs: 1

//////////////////////////////////////////////////////////////////////////////Blue eggs: 2

//////////////////////////////////////////////////////////////////////////////Green eggs: 3

//////////////////////////////////////////////////////////////////////////////Max eggs: 3->green

//////////////////////////////////////////////////////////////////////////////Брой яйца: 7

//////////////////////////////////////////////////////////////////////////////Яйце 1: оранжево->брой оранжеви яйца: 1

//////////////////////////////////////////////////////////////////////////////Яйце 2: синьо->брой сини яйца: 1

//////////////////////////////////////////////////////////////////////////////Яйце 3: зелено->брой зелени яйца: 1

//////////////////////////////////////////////////////////////////////////////Яйце 4: зелено->брой зелени яйца: 2

//////////////////////////////////////////////////////////////////////////////Яйце 5: синьо->брой сини яйца: 2

//////////////////////////////////////////////////////////////////////////////Яйце 6: червено->брой червени яйца: 1

//////////////////////////////////////////////////////////////////////////////Яйце 7: зелено->брой зелени яйца: 3

//////////////////////////////////////////////////////////////////////////////Най - много яйца: зелени-> 3 броя

//////////////////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////////Обяснения

//////////////////////////////////////////////////////////////////////////////4

//////////////////////////////////////////////////////////////////////////////blue

//////////////////////////////////////////////////////////////////////////////red

//////////////////////////////////////////////////////////////////////////////blue

//////////////////////////////////////////////////////////////////////////////orange

//////////////////////////////////////////////////////////////////////////////Red eggs: 1

//////////////////////////////////////////////////////////////////////////////Orange eggs: 1

//////////////////////////////////////////////////////////////////////////////Blue eggs: 2

//////////////////////////////////////////////////////////////////////////////Green eggs: 0

//////////////////////////////////////////////////////////////////////////////Max eggs: 2->blue

//////////////////////////////////////////////////////////////////////////////Брой яйца: 4

//////////////////////////////////////////////////////////////////////////////Яйце 1: синьо->брой сини яйца: 1

//////////////////////////////////////////////////////////////////////////////Яйце 2: червено->брой червени яйца: 1

//////////////////////////////////////////////////////////////////////////////Яйце 3: синьо->брой сини яйца: 2

//////////////////////////////////////////////////////////////////////////////Яйце 4: оранжево->брой оранжеви яйца: 1

//////////////////////////////////////////////////////////////////////////////Най - много яйца: сини-> 2 броя






//////////////////////////////////////////////////////////////////////////////Dictionary<string, int> dict = new Dictionary<string, int>();



//////////////////////////////////////////////////////////////////////////////int eggs = int.Parse(Console.ReadLine());



//////////////////////////////////////////////////////////////////////////////for (int i = 0; i < eggs; i++)



//////////////////////////////////////////////////////////////////////////////{



//////////////////////////////////////////////////////////////////////////////  string color = Console.ReadLine();



//////////////////////////////////////////////////////////////////////////////  if (!dict.ContainsKey(color))



//////////////////////////////////////////////////////////////////////////////  {



//////////////////////////////////////////////////////////////////////////////    dict.Add(color, 0);



//////////////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////////////  dict[color]++;



//////////////////////////////////////////////////////////////////////////////}







//////////////////////////////////////////////////////////////////////////////Console.WriteLine($"Red eggs: {(dict.ContainsKey("red") ? dict["red"] : 0)}");



//////////////////////////////////////////////////////////////////////////////Console.WriteLine($"Orange eggs: {(dict.ContainsKey("orange") ? dict["orange"] : 0)}");



//////////////////////////////////////////////////////////////////////////////Console.WriteLine($"Blue eggs: {(dict.ContainsKey("blue") ? dict["blue"] : 0)}");



//////////////////////////////////////////////////////////////////////////////Console.WriteLine($"Green eggs: {(dict.ContainsKey("green") ? dict["green"] : 0)}");



//////////////////////////////////////////////////////////////////////////////Console.WriteLine($"Max eggs: {dict.Values.Max()} -> {dict.OrderByDescending(x => x.Value).FirstOrDefault().Key}");



//////////////////////////////////////////////////////////////////////////////Въпрос 11
//////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////От максимално 2,00
//////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////Какво представляват бройните системи? Дефинирайте понятието бройна система, като поставите липсващите думи в изреченията. 



//////////////////////////////////////////////////////////////////////////////Бройните системи са начин за  blank на числата, чрез  blank от  blank наречени цифри. Към тях трябва да се добавят и  blank за представяне на числата.




//////////////////////////////////////////////////////////////////////////////графични знациграфични знациграфични знациграфични знациправилаправилаправилаправилакраен наборкраен наборкраен наборкраен наборпредставянепредставянепредставянепредставяне
//////////////////////////////////////////////////////////////////////////////Въпрос 12
//////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////От максимално 2,00
//////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////Имате следният проблем:

//////////////////////////////////////////////////////////////////////////////Имате някакъв текст. Вашата задача е да намерите всички различни думи в текста, както и колко пъти се среща всяка една от тях. Като допълнително условие имате и да изведете намерените думи по азбучен ред.

//////////////////////////////////////////////////////////////////////////////Посочете кой от класовете в C# е най-подходящ да използвате, за да решите дадения проблем?

//////////////////////////////////////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////////////////////////////////////a. Dictionary
//////////////////////////////////////////////////////////////////////////////b. SortedDictionary 
//////////////////////////////////////////////////////////////////////////////c. Stack
//////////////////////////////////////////////////////////////////////////////d. List
//////////////////////////////////////////////////////////////////////////////Въпрос 13
//////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////Напишете примерен код на C#, който да прочете от конзолата матрица с 3 реда и 4 колони със следните стойности:

//////////////////////////////////////////////////////////////////////////////3 4 5 2
//////////////////////////////////////////////////////////////////////////////1 5 8 9
//////////////////////////////////////////////////////////////////////////////4 5 3 6


//////////////////////////////////////////////////////////////////////////////using System;

//////////////////////////////////////////////////////////////////////////////using System.Linq;

//////////////////////////////////////////////////////////////////////////////using System.Collections.Generic;

//////////////////////////////////////////////////////////////////////////////using System.Security;



//////////////////////////////////////////////////////////////////////////////namespace ConsoleApp

//////////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////////  class Program

//////////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////////    static void Main(string[] args)

//////////////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////////////      int[,] matrix = new int[3, 4];



//////////////////////////////////////////////////////////////////////////////      for (int i = 0; i < 3; i++)

//////////////////////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////////////////////        string[] rowValues = Console.ReadLine().Split(' ');

//////////////////////////////////////////////////////////////////////////////        for (int j = 0; j < 4; j++)

//////////////////////////////////////////////////////////////////////////////        {

//////////////////////////////////////////////////////////////////////////////          matrix[i, j] = int.Parse(rowValues[j]);

//////////////////////////////////////////////////////////////////////////////        }

//////////////////////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////////////  Въпрос 14
//////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////Обяснете какво прави метода ContainsValue(V) реализиран в класа Dictionary<K, V>?

//////////////////////////////////////////////////////////////////////////////Методът ContainsValue(V) в класа Dictionary<K, V> се използва за проверка дали определена стойност се съдържа в речника.Този метод връща логическа стойност, която показва дали определената стойност е присъствена в речника или не.

//////////////////////////////////////////////////////////////////////////////Въпрос 15
//////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////Посочете кои от характеристиките се отнасят към централизираните сорс-контрол системи и кои към децентрализираните сорс-контрол системи.

//////////////////////////////////////////////////////////////////////////////Използват един сървър, съдържащ всички контролирани файлове и множество от клиенти, които издърпват файловете от това централно място.
//////////////////////////////////////////////////////////////////////////////Централизирани


//////////////////////////////////////////////////////////////////////////////Клиентите изтеглят последния snapshot на файловете и изцяло клонират цялото хранилище, включително пълната му история. 
//////////////////////////////////////////////////////////////////////////////Децентрализирани


//////////////////////////////////////////////////////////////////////////////Администраторите имат подробен контрол върху това кой какво може да прави и освен това е много по-лесно да се администрира. 
//////////////////////////////////////////////////////////////////////////////Централизирани


//////////////////////////////////////////////////////////////////////////////Ако сървърът загине, хранилището на даден проект може да се възстанови от локалното копие на всеки клиент. 
//////////////////////////////////////////////////////////////////////////////Децентрализирани


//////////////////////////////////////////////////////////////////////////////Всички данни се пазят на едно място и зависят от надеждността на сървъра, който ги съхранява.
//////////////////////////////////////////////////////////////////////////////Централизирани


//////////////////////////////////////////////////////////////////////////////Ако сървърът по някаква причина не е достъпен за час - тогава през този час никой не може да качва своите промени.
//////////////////////////////////////////////////////////////////////////////Централизирани


//////////////////////////////////////////////////////////////////////////////Въпрос 16
//////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////Опишете как ще преминете от десетична бройна система в двоична бройна система.

//////////////////////////////////////////////////////////////////////////////Преобразувайте числото  127(10)  от десетична бройна система в двоична бройна система.


//////////////////////////////////////////////////////////////////////////////127 = 1111111

//////////////////////////////////////////////////////////////////////////////127 / 2 = 63 - 1

//////////////////////////////////////////////////////////////////////////////63 / 2 = 31 - 1

//////////////////////////////////////////////////////////////////////////////31 / 2 = 15 - 1

//////////////////////////////////////////////////////////////////////////////15 / 2 = 7 - 1

//////////////////////////////////////////////////////////////////////////////7 / 2 = 3 - 1

//////////////////////////////////////////////////////////////////////////////3 / 2 = 1 - 1 

//////////////////////////////////////////////////////////////////////////////1 / 2 = 0 - 1

//////////////////////////////////////////////////////////////////////////////Числата се представят на обратен ред.

//////////////////////////////////////////////////////////////////////////////Въпрос 17
//////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////От максимално 10,00
//////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент.Предоставеният фрагмент да се приведе в работещ вид. 

//////////////////////////////////////////////////////////////////////////////Условие: Разполагате със следния програмен код:

//////////////////////////////////////////////////////////////////////////////Program.cs

//////////////////////////////////////////////////////////////////////////////static void Main(string[] args)
//////////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////////    int nums = Console.ReadLine().Split(',').Select(int.Parse).ToArray();
//////////////////////////////////////////////////////////////////////////////    List<int> evens = new List<int>();
//////////////////////////////////////////////////////////////////////////////    List<int> odds = new List<int>();
//////////////////////////////////////////////////////////////////////////////    List<int> sum5 = new List<int>();

//////////////////////////////////////////////////////////////////////////////    for (int i = 0; i < nums.Length; i++)
//////////////////////////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////////////////////////      if (nums[i] % 2 == 0 && (nums[i] % 10 == 4 && nums[i] % 10 == 8))
//////////////////////////////////////////////////////////////////////////////      {
//////////////////////////////////////////////////////////////////////////////        evens.Add(nums);


//////////////////////////////////////////////////////////////////////////////                else if (nums[i] % 2 != 0 && (nums[i] % 10 == 5 || nums[i] % 10 == 7))
//////////////////////////////////////////////////////////////////////////////        {
//////////////////////////////////////////////////////////////////////////////          odds.Add(nums[i]);
//////////////////////////////////////////////////////////////////////////////        }
//////////////////////////////////////////////////////////////////////////////        if (SumDigits(nums[i]) = 15)
//////////////////////////////////////////////////////////////////////////////        {
//////////////////////////////////////////////////////////////////////////////          sum5.Add(nums[i]);
//////////////////////////////////////////////////////////////////////////////        }
//////////////////////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////////////////////      Console.WriteLine(String.Join(", ", evens));
//////////////////////////////////////////////////////////////////////////////      Console.WriteLine(String.Join(", ", evens));
//////////////////////////////////////////////////////////////////////////////      Console.WriteLine(String.Join(", ", sum5));
//////////////////////////////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////////////////////////////    public static int SumDigits(int number)
//////////////////////////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////////////////////////      int sum = 0;

//////////////////////////////////////////////////////////////////////////////      while (number != 0)
//////////////////////////////////////////////////////////////////////////////      {
//////////////////////////////////////////////////////////////////////////////        sum += number % 10;
//////////////////////////////////////////////////////////////////////////////        number /= 10;
//////////////////////////////////////////////////////////////////////////////      }
//////////////////////////////////////////////////////////////////////////////    }





//////////////////////////////////////////////////////////////////////////////    Открийте и поправете грешките във вече написания програмен код, така че да се реши поставената по - долу задача.Допълнете кода.

//////////////////////////////////////////////////////////////////////////////Магически числа
//////////////////////////////////////////////////////////////////////////////В системата първоначално има въведени числа, които трябва да бъдат разпределени в три групи.

//////////////////////////////////////////////////////////////////////////////Групите са следните:

//////////////////////////////////////////////////////////////////////////////    Група на четните числа, които завършват на 4 или 8
//////////////////////////////////////////////////////////////////////////////Група на нечетните числа, които завършват на 5 или 7
//////////////////////////////////////////////////////////////////////////////Група на числа, чийто сбор на цифрите е 15
//////////////////////////////////////////////////////////////////////////////Напишете програма, която при подаден първоначален списък с числа ги групира и принтира трите групи от числа. Едно число може да попада в повече от 1 група.Ако число не отговаря на нито едно от горните условия то не се разпределя в нито една група.

//////////////////////////////////////////////////////////////////////////////Вход
//////////////////////////////////////////////////////////////////////////////От конзолата се чете 1 ред:

//////////////////////////////////////////////////////////////////////////////    Списък с числа – текст(числата са разделени със запетая)
//////////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////////На конзолата да се отпечатват 3 реда:

//////////////////////////////////////////////////////////////////////////////    списък с четните числа, които завършват на 4 или 8, разделени със запетая и интервал
//////////////////////////////////////////////////////////////////////////////    списък с нечетните числа, които завършват на 5 или 7, разделени със запетая и интервал
//////////////////////////////////////////////////////////////////////////////    списък с числата, чийто сбор на цифрите е 15, разделени със запетая и интервал
//////////////////////////////////////////////////////////////////////////////    Примерен вход и изход
//////////////////////////////////////////////////////////////////////////////    Вход

//////////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////////Обяснения

//////////////////////////////////////////////////////////////////////////////58,87,96,45,14

//////////////////////////////////////////////////////////////////////////////58, 14

//////////////////////////////////////////////////////////////////////////////87, 45

//////////////////////////////////////////////////////////////////////////////87, 96

//////////////////////////////////////////////////////////////////////////////58->четно, завършващо на 8

//////////////////////////////////////////////////////////////////////////////87->нечетно, завършващо на 7 и сборът от цифрите му е 15

//////////////////////////////////////////////////////////////////////////////96->сборът от цифрите му е 15

//////////////////////////////////////////////////////////////////////////////45->нечетно, завършващо на 5

//////////////////////////////////////////////////////////////////////////////14->четно, завършващо на 4

//////////////////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////////Обяснения

//////////////////////////////////////////////////////////////////////////////54,69,67,159,225

//////////////////////////////////////////////////////////////////////////////54

//////////////////////////////////////////////////////////////////////////////67, 225

//////////////////////////////////////////////////////////////////////////////69, 159

//////////////////////////////////////////////////////////////////////////////54->четно, завършващо на 4

//////////////////////////////////////////////////////////////////////////////69->сборът от цифрите му е 15

//////////////////////////////////////////////////////////////////////////////67->нечетно, завършващо на 7

//////////////////////////////////////////////////////////////////////////////159->сборът от цифрите му е 15

//////////////////////////////////////////////////////////////////////////////225->нечетно, завършващо на 5







//////////////////////////////////////////////////////////////////////////////using System;

//////////////////////////////////////////////////////////////////////////////    using System.Linq;

//////////////////////////////////////////////////////////////////////////////    using System.Collections.Generic;



//////////////////////////////////////////////////////////////////////////////namespace ConsoleApp

//////////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////////    class Program

//////////////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////////////      static void Main(string[] args)

//////////////////////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////////////////////        int[] nums = Console.ReadLine().Split(',').Select(int.Parse).ToArray();



//////////////////////////////////////////////////////////////////////////////        List<int> evens = new List<int>();

//////////////////////////////////////////////////////////////////////////////        List<int> odds = new List<int>();

//////////////////////////////////////////////////////////////////////////////        List<int> sum5 = new List<int>();



//////////////////////////////////////////////////////////////////////////////        for (int i = 0; i < nums.Length; i++)

//////////////////////////////////////////////////////////////////////////////        {

//////////////////////////////////////////////////////////////////////////////          if (nums[i] % 2 == 0)

//////////////////////////////////////////////////////////////////////////////          {

//////////////////////////////////////////////////////////////////////////////            evens.Add(nums[i]);

//////////////////////////////////////////////////////////////////////////////          }

//////////////////////////////////////////////////////////////////////////////          else

//////////////////////////////////////////////////////////////////////////////          {

//////////////////////////////////////////////////////////////////////////////            odds.Add(nums[i]);

//////////////////////////////////////////////////////////////////////////////          }

//////////////////////////////////////////////////////////////////////////////          if (SumDigits(nums[i]) % 10 == 5)

//////////////////////////////////////////////////////////////////////////////          {

//////////////////////////////////////////////////////////////////////////////            sum5.Add(nums[i]);

//////////////////////////////////////////////////////////////////////////////          }

//////////////////////////////////////////////////////////////////////////////        }

//////////////////////////////////////////////////////////////////////////////        Console.WriteLine(String.Join(", ", evens));

//////////////////////////////////////////////////////////////////////////////        Console.WriteLine(String.Join(", ", odds));

//////////////////////////////////////////////////////////////////////////////        Console.WriteLine(String.Join(", ", sum5));

//////////////////////////////////////////////////////////////////////////////      }



//////////////////////////////////////////////////////////////////////////////      public static int SumDigits(int number)

//////////////////////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////////////////////        int sum = 0;



//////////////////////////////////////////////////////////////////////////////        while (number > 0)

//////////////////////////////////////////////////////////////////////////////        {

//////////////////////////////////////////////////////////////////////////////          sum += number % 10;

//////////////////////////////////////////////////////////////////////////////          number /= 10;

//////////////////////////////////////////////////////////////////////////////        }



//////////////////////////////////////////////////////////////////////////////        return sum;

//////////////////////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////////////  Въпрос 18
//////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////От максимално 2,00
//////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////В най-популярната система за контрол на версиите GitHub има няколко основни команди, които се използват когато пишете в конзолния клиент GitBash.Обяснете какво прави командата git push, като поставите липсващите думи в празните полета.

//////////////////////////////////////////////////////////////////////////////С командата push  blank промените в отдалеченото хранилище.




//////////////////////////////////////////////////////////////////////////////добавятепубликуватеизтеглятекачвате
//////////////////////////////////////////////////////////////////////////////Въпрос 19
//////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////От максимално 2,00
//////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////Опишете как се декларира едномерен масив в C# като попълните празните думи в текста:

//////////////////////////////////////////////////////////////////////////////В C# масивите имат  blank дължина, която се указва при  blank им и определя  blank . След като веднъж е зададена  blank на масив при неговото създаване, след това  blank .








//////////////////////////////////////////////////////////////////////////////променливапроменливапроменливапроменливапроменливадължината дължината дължината дължината дължината фиксиранафиксиранафиксиранафиксиранафиксиранане е възможно да се променяне е възможно да се променяне е възможно да се променяне е възможно да се променяне е възможно да се променясъщо е възможно да се променясъщо е възможно да се променясъщо е възможно да се променясъщо е възможно да се променясъщо е възможно да се променяброя на елементите имброя на елементите имброя на елементите имброя на елементите имброя на елементите иминициа­лизирането инициа­лизирането инициа­лизирането инициа­лизирането инициа­лизирането типа на елементите имтипа на елементите имтипа на елементите имтипа на елементите имтипа на елементите им
//////////////////////////////////////////////////////////////////////////////Въпрос 20
//////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////Дайте пример за това как бихте декларирали променлива от реален тип с десетична точност със стойност 13.45?

//////////////////////////////////////////////////////////////////////////////Отговор: 
//////////////////////////////////////////////////////////////////////////////double number = 13.45;
//////////////////////////////////////////////////////////////////////////////  Въпрос 21
//////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////Даден е следния програмен код на C#. След изпълнението на тази програма какво ще се отпечата на конзолата? Решете задачата и в празното поле запишете само това, което ще се отпечата!

//////////////////////////////////////////////////////////////////////////////Примерен вход: Java C# PHP PHP JAVA C java



//////////////////////////////////////////////////////////////////////////////Отговор: 
//////////////////////////////////////////////////////////////////////////////java, c#, c
//////////////////////////////////////////////////////////////////////////////Въпрос 22
//////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////От максимално 2,00
//////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////Посочете как се декларира многомерен масив в C#.

//////////////////////////////////////////////////////////////////////////////Многомерен масив се декларира по начин аналогичен на едномерните.Всяка размерност означаваме със запетая(освен последната).Всяка размерност в допълнение на първата отговаря на една запетая в скобите.

//////////////////////////////////////////////////////////////////////////////Въпрос 23
//////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////От максимално 2,00
//////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////Посочете по кой от начините бихте инициализирали речник с ключ низ и стойност цяло число?

//////////////////////////////////////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////////////////////////////////////a. Dictionary<string, int> dict = new Dictionary<string, int>;
//////////////////////////////////////////////////////////////////////////////  b.Dictionary<int, string> dict = new Dictionary<int, string>();
//////////////////////////////////////////////////////////////////////////////  c.Dictionary(string, int) dict = new Dictionary(string, int);
//////////////////////////////////////////////////////////////////////////////  d.Dictionary<string, int> dict = new Dictionary<string, int>();
//////////////////////////////////////////////////////////////////////////////  Въпрос 24
//////////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////////От максимално 2,00
//////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////////Дефинирайте понятието string в C# като попълните липсващите думи в текста.

//////////////////////////////////////////////////////////////////////////////Символният низ е  blank , записана на даден адрес в паметта.

//////////////////////////////////////////////////////////////////////////////Символният низ е  blank.След като се инициализира, съдържанието на променливата blank променя директно – ако опитаме да променим стойността, тя ще бъде записана на blank място в  blank памет, а променливата ще започне да сочи към него.




//////////////////////////////////////////////////////////////////////////////изменим (mutable) изменим (mutable) изменим (mutable) изменим (mutable) изменим (mutable) не сене сене сене сене сенеизменим (immutable) неизменим (immutable) неизменим (immutable) неизменим (immutable) неизменим (immutable) ново ново ново ново ново динамичната динамичната динамичната динамичната динамичната същотосъщотосъщотосъщотосъщотопоследователност от символипоследователност от символипоследователност от символипоследователност от символипоследователност от символисесесесесестатичнатастатичнатастатичнатастатичнатастатичната
//////////////////////////////////////////////////////////////////////////////Край на прегледа
//////////////////////////////////////////////////////////////////////////////Отиди на...
//////////////////////////////////////////////////////////////////////////////Отиди на ...
//////////////////////////////////////////////////////////////////////////////Прескочи<span id="mod_quiz_navblock_title"> Навигация в теста</span>
//////////////////////////////////////////////////////////////////////////////Навигация в теста
//////////////////////////////////////////////////////////////////////////////Край на прегледа
//////////////////////////////////////////////////////////////////////////////Вие сте влезли в системата като Добри Илев (Изход)
//////////////////////////////////////////////////////////////////////////////тренировъчен-курс-по
//////////////////////////////////////////////////////////////////////////////Data retention summary

////////////////////////////////////////////////////////////////////////////using System;

////////////////////////////////////////////////////////////////////////////Прескочи на основното съдържание
////////////////////////////////////////////////////////////////////////////ПГЕЕ
////////////////////////////////////////////////////////////////////////////Български ‎(bg)‎ 
////////////////////////////////////////////////////////////////////////////Добри Илев 
////////////////////////////////////////////////////////////////////////////Тренировъчен курс - Програмно осигуряване
////////////////////////////////////////////////////////////////////////////Начална страница
////////////////////////////////////////////////////////////////////////////Моите курсове
//////////////////////////////////////////////////////////////////////////// тренировъчен-курс-по
//////////////////////////////////////////////////////////////////////////// Изпитна тема 2
//////////////////////////////////////////////////////////////////////////// Тест към Изпитна тема №2
////////////////////////////////////////////////////////////////////////////Започнат на	сряда, 5 април 2023, 10:01
////////////////////////////////////////////////////////////////////////////Състояние Завършен
////////////////////////////////////////////////////////////////////////////Приключен на	сряда, 5 април 2023, 12:13
////////////////////////////////////////////////////////////////////////////Изминало време	2 часа 12 мин.
////////////////////////////////////////////////////////////////////////////Въпрос 1
////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////Посочете кои от характеристиките се отнасят към централизираните сорс-контрол системи и кои към децентрализираните сорс-контрол системи.

////////////////////////////////////////////////////////////////////////////Използват един сървър, съдържащ всички контролирани файлове и множество от клиенти, които издърпват файловете от това централно място. 
////////////////////////////////////////////////////////////////////////////Централизирани


////////////////////////////////////////////////////////////////////////////Клиентите изтеглят последния snapshot на файловете и изцяло клонират цялото хранилище, включително пълната му история. 
////////////////////////////////////////////////////////////////////////////Децентрализирани


////////////////////////////////////////////////////////////////////////////Администраторите имат подробен контрол върху това кой какво може да прави и освен това е много по-лесно да се администрира. 
////////////////////////////////////////////////////////////////////////////Централизирани


////////////////////////////////////////////////////////////////////////////Ако сървърът загине, хранилището на даден проект може да се възстанови от локалното копие на всеки клиент. 
////////////////////////////////////////////////////////////////////////////Децентрализирани


////////////////////////////////////////////////////////////////////////////Всички данни се пазят на едно място и зависят от надеждността на сървъра, който ги съхранява. 
////////////////////////////////////////////////////////////////////////////Централизирани


////////////////////////////////////////////////////////////////////////////Ако сървърът по някаква причина не е достъпен за час - тогава през този час никой не може да качва своите промени. 
////////////////////////////////////////////////////////////////////////////Централизирани


////////////////////////////////////////////////////////////////////////////Въпрос 2
////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////Напишете поне три типа данни, които познавате в езика за програмиране C#.

////////////////////////////////////////////////////////////////////////////В езика за програмиране C# има много типове данни, но ето три основни примера:

////////////////////////////////////////////////////////////////////////////int - целочислен тип данни, представящ цели числа. Пример: int age = 25;
////////////////////////////////////////////////////////////////////////////double -тип данни с плаваща запетая с двойна точност, представящ числа с дробна част. Пример: double pi = 3.14159;
////////////////////////////////////////////////////////////////////////////string -тип данни за символни низове, представящ текст. Пример: string name = "John Doe";
////////////////////////////////////////////////////////////////////////////Тези три типа данни са често използвани в програмите на C# и представляват различни категории стойности


////////////////////////////////////////////////////////////////////////////Въпрос 3
////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////Обяснете какво прави метода ContainsKey(key) реализиран в класа Dictionary<K, V>?

////////////////////////////////////////////////////////////////////////////Методът ContainsKey(key) в класа Dictionary<K, V> е част от структурата на данни, използвана за съхраняване на колекции от ключ-стойност двойки. Този метод проверява дали даден ключ (параметър key) се съдържа в речника.

////////////////////////////////////////////////////////////////////////////K представлява типа на ключа, а V представлява типа на стойността, асоциирана с ключа.

////////////////////////////////////////////////////////////////////////////При извикване на метода ContainsKey(key) с определен ключ, той връща true, ако ключът съществува в речника, и false, ако ключът не се намира в речника. Този метод е полезен, когато искате да проверите дали речникът съдържа определен ключ, преди да опитате да извлечете стойността, асоциирана с този ключ.


////////////////////////////////////////////////////////////////////////////Въпрос 4
////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////Какво се случва, когато създаваме масив в C#? Посочете верните отговори.

////////////////////////////////////////////////////////////////////////////Изберете едно или повече:
////////////////////////////////////////////////////////////////////////////a.В C# масив се създава с ключовата дума new, която служи за заделяне на памет.
////////////////////////////////////////////////////////////////////////////b. В динамичната памет се заделя променлива с име Името_на_масива.
////////////////////////////////////////////////////////////////////////////c. След заделянето на масива променливата Името_на_масива сочи към адрес в динамичната памет, където се намира нейната стойност. 
////////////////////////////////////////////////////////////////////////////d. Елементите на масивите винаги се съхраняват в динамичната памет.
////////////////////////////////////////////////////////////////////////////e. В C# масив се създава с ключовата дума array, която служи за заделяне на памет.
////////////////////////////////////////////////////////////////////////////f. След заделянето на масива променливата Името_на_масива сочи към адрес в стека, където се намира нейната стойност. 
////////////////////////////////////////////////////////////////////////////Въпрос 5
////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////От максимално 6,00
////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////Дадени са следните парчета код на C#. Свържете всеки един от кодовете с резултата, който трябва да върне.







////////////////////////////////////////////////////////////////////////////Отговор 1
////////////////////////////////////////////////////////////////////////////Images




////////////////////////////////////////////////////////////////////////////Отговор 2
////////////////////////////////////////////////////////////////////////////World!




////////////////////////////////////////////////////////////////////////////Отговор 3
////////////////////////////////////////////////////////////////////////////11
////////////////////////////////////////////////////////////////////////////Въпрос 6
////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////Какво представляват бройните системи? Дефинирайте понятието бройна система, като поставите липсващите думи в изреченията. 



////////////////////////////////////////////////////////////////////////////Бройните системи са начин за  blank на числата, чрез  blank от  blank наречени цифри. Към тях трябва да се добавят и  blank за представяне на числата.




////////////////////////////////////////////////////////////////////////////краен наборкраен наборкраен наборкраен наборграфични знациграфични знациграфични знациграфични знаципредставянепредставянепредставянепредставянеправилаправилаправилаправила
////////////////////////////////////////////////////////////////////////////Въпрос 7
////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////Посочете кое от изброените е вярно за символните низове?

////////////////////////////////////////////////////////////////////////////Изберете едно или повече:
////////////////////////////////////////////////////////////////////////////a.Достъпът до символа на дадена позиция в даден стринг е позволен както за четене, така и за редактиране.
////////////////////////////////////////////////////////////////////////////b. Символните низове имат свойство Length.
////////////////////////////////////////////////////////////////////////////c. Символните низове позволяват достъп по индекс.
////////////////////////////////////////////////////////////////////////////d. Символните низове са mutable (изменими).
////////////////////////////////////////////////////////////////////////////Въпрос 8
////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////Имате следният проблем:

////////////////////////////////////////////////////////////////////////////Имате някакъв текст. Вашата задача е да намерите всички различни думи в текста, както и колко пъти се среща всяка една от тях. Като допълнително условие имате и да изведете намерените думи по азбучен ред.

////////////////////////////////////////////////////////////////////////////Посочете кой от класовете в C# е най-подходящ да използвате, за да решите дадения проблем?

////////////////////////////////////////////////////////////////////////////Изберете едно
////////////////////////////////////////////////////////////////////////////a. SortedDictionary 
////////////////////////////////////////////////////////////////////////////b. Dictionary
////////////////////////////////////////////////////////////////////////////c. List
////////////////////////////////////////////////////////////////////////////d. Stack
////////////////////////////////////////////////////////////////////////////Въпрос 9
////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////Дефинирайте понятието сорс-контрол система. Какво представляват? За какво служат? Как се използват?

////////////////////////////////////////////////////////////////////////////Сорс-контрол система, известна също като система за управление на версиите или система за контрол на кода, е софтуерно решение, което служи за проследяване, управление и съхранение на промените в кода (изходния текст) на компютърни програми, документи или други колекции от информация. Целта на сорс-контрол системите е да улеснят колаборацията между разработчиците, да поддържат история на промените и да позволяват възстановяване на по-стари версии на кода при необходимост.

////////////////////////////////////////////////////////////////////////////Сорс-контрол системите предоставят следните функции:

////////////////////////////////////////////////////////////////////////////Проследяване на промените: Записване на всички промени в кода и съхраняване на историята на промените.
////////////////////////////////////////////////////////////////////////////Ветвление (branching) и сливане(merging): Позволяване на разработчиците да работят паралелно върху различни функционалности и след това да събират промените.
////////////////////////////////////////////////////////////////////////////Конфликтно разрешение: Помагане на разработчиците да решават конфликти, които възникват при сливане на промени от различни източници.
////////////////////////////////////////////////////////////////////////////Възстановяване на по-стари версии: Възможност да се върне към предишни версии на кода, ако е необходимо.
////////////////////////////////////////////////////////////////////////////Сорс-контрол системите се използват чрез специфични команди или графични потребителски интерфейси, които позволяват на разработчиците да изпълняват действия като добавяне, премахване, промяна на файлове, ветвление, сливане и т.н.


////////////////////////////////////////////////////////////////////////////Въпрос 10
////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////Дефинирайте понятието двоична бройна система. Какво представлява? Къде се използва най-често? Как са представени числата в двоичната бройна система?

////////////////////////////////////////////////////////////////////////////Двоичната бройна система, още наричана бинарна бройна система, е позиционна бройна система, която използва само две цифри - 0 и 1, за представяне на числа. Тя е основа за съхраняване и обработка на информация в компютри и други електронни устройства, тъй като те разчитат на електрически сигнали, които обикновено имат само две състояния - включено (1) и изключено(0).



////////////////////////////////////////////////////////////////////////////воичната бройна система се използва най-често в компютърната техника и програмирането. Всяка двоична цифра, наричана бит (от "binary digit"), може да има стойност 0 или 1. Всяко число в двоичната бройна система се представя чрез последователност от битове.

////////////////////////////////////////////////////////////////////////////В двоичната бройна система числата се представят по следния начин:

////////////////////////////////////////////////////////////////////////////0 в десятичната бройна система е 0 в двоичната бройна система.
////////////////////////////////////////////////////////////////////////////1 в десятичната бройна система е 1 в двоичната бройна система.
////////////////////////////////////////////////////////////////////////////2 в десятичната бройна система е 10 в двоичната бройна система.
////////////////////////////////////////////////////////////////////////////3 в десятичната бройна система е 11 в двоичната бройна система.
////////////////////////////////////////////////////////////////////////////4 в десятичната бройна система е 100 в двоичната бройна система.
////////////////////////////////////////////////////////////////////////////и т.н.
////////////////////////////////////////////////////////////////////////////За да преобразувате число от десятична в двоична бройна система, делим числото на 2 и записваме остатъците на деленето в обратен ред. За да преобразувате число от двоична в десятична бройна система, сумираме произведенията на всяка двоична цифра със съответната степен на двойката, започвайки от най-ниската степен (най-дясната цифра).


////////////////////////////////////////////////////////////////////////////Въпрос 11
////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////В най-популярната система за контрол на версиите GitHub има няколко основни команди, които се използват когато пишете в конзолния клиент GitBash. Обяснете какво прави командата git pull, като поставите липсващите думи в празните полета.

////////////////////////////////////////////////////////////////////////////С командата pull автоматично  blank промените от отдалеченото хранилище.


////////////////////////////////////////////////////////////////////////////добавятепубликуватекачватеизтегляте
////////////////////////////////////////////////////////////////////////////Въпрос 12
////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////От максимално 10,00
////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

////////////////////////////////////////////////////////////////////////////Условие: Разполагате със следния програмен код:

////////////////////////////////////////////////////////////////////////////Program.cs

////////////////////////////////////////////////////////////////////////////static void Main(string[] args)
////////////////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////////////////  Dictionary<string, int> dict = new Dictionary<string, int>();

////////////////////////////////////////////////////////////////////////////  string input = Console.ReadLine().Split(" - ", StringSplitOptions.RemoveEmptyEntries);
////////////////////////////////////////////////////////////////////////////  while (input[0].Equals("END"))
////////////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////////////    if (!dict.ContainsKey(input))
////////////////////////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////////////////////////      dict.Add(input[0], 1);
////////////////////////////////////////////////////////////////////////////    }
////////////////////////////////////////////////////////////////////////////    dict[input[0]] = int.Parse(input[1]);
////////////////////////////////////////////////////////////////////////////    input = Console.ReadLine().Split(" - ", StringSplitOptions.RemoveEmptyEntries);
////////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////////  foreach (var kvp in dict)
////////////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////////////    Console.WriteLine("{kvp.Key} -> {kvp.Value}");
////////////////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////////Открийте и поправете грешките във вече написания програмен код, така че да се реши поставената по-долу задача. Допълнете кода.

////////////////////////////////////////////////////////////////////////////Баскетболен сезон
////////////////////////////////////////////////////////////////////////////Треньорът на баскетболен отбор иска да знае накрая на сезона по точки е вкарала всяка една от състезателките му. Помогнете му като напишете програма, която получава име на състезателката и колко точки е вкарала в съответния мач, докато не получите команда "END".  След получаване на командата, принтирайте в азбучен ред имената на състезателките и срещу имената на всяка една от тях колко точки е вкарала през сезона.

////////////////////////////////////////////////////////////////////////////Вход
////////////////////////////////////////////////////////////////////////////От конзолата се чете:

////////////////////////////////////////////////////////////////////////////Състезателка и вкараните точки от нея в съответния мач – текст в следния формат: "{име на състезателка} – {брой вкарани точки}", докато не получите команда "END".
////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////Да се отпечата на конзолата имената на състезателките в азбучен ред  и общо колко точки е вкарал всяка една от тях през сезона в следния формат:

////////////////////////////////////////////////////////////////////////////"{име на състезателка} -> {общ брой вкарани точки}"



////////////////////////////////////////////////////////////////////////////Примерен вход и изход
////////////////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////Обяснения

////////////////////////////////////////////////////////////////////////////Simona - 20

////////////////////////////////////////////////////////////////////////////Iva - 13

////////////////////////////////////////////////////////////////////////////Petya - 12

////////////////////////////////////////////////////////////////////////////Simona - 14

////////////////////////////////////////////////////////////////////////////Simona - 12

////////////////////////////////////////////////////////////////////////////Petya - 13

////////////////////////////////////////////////////////////////////////////Martina - 12

////////////////////////////////////////////////////////////////////////////END

////////////////////////////////////////////////////////////////////////////Iva -> 13

////////////////////////////////////////////////////////////////////////////Martina -> 12

////////////////////////////////////////////////////////////////////////////Petya -> 25

////////////////////////////////////////////////////////////////////////////Simona -> 46

////////////////////////////////////////////////////////////////////////////Simona -> 20 + 14 + 12 = 46

////////////////////////////////////////////////////////////////////////////Iva -> 13

////////////////////////////////////////////////////////////////////////////Petya -> 12 + 13 = 25

////////////////////////////////////////////////////////////////////////////Martina -> 12

////////////////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////Обяснения

////////////////////////////////////////////////////////////////////////////Mihaela - 13

////////////////////////////////////////////////////////////////////////////Sanya - 14

////////////////////////////////////////////////////////////////////////////Nikol - 21

////////////////////////////////////////////////////////////////////////////Penka - 31

////////////////////////////////////////////////////////////////////////////Nikol - 12

////////////////////////////////////////////////////////////////////////////Mihaela - 11

////////////////////////////////////////////////////////////////////////////Sanya - 21

////////////////////////////////////////////////////////////////////////////END

////////////////////////////////////////////////////////////////////////////Mihaela -> 24

////////////////////////////////////////////////////////////////////////////Nikol -> 33

////////////////////////////////////////////////////////////////////////////Penka -> 31

////////////////////////////////////////////////////////////////////////////Sanya -> 35

////////////////////////////////////////////////////////////////////////////Mihaela -> 13 + 11 = 24

////////////////////////////////////////////////////////////////////////////Sanya -> 14 + 21 = 35

////////////////////////////////////////////////////////////////////////////Nikol -> 21 + 12 = 33

////////////////////////////////////////////////////////////////////////////Penka -> 31






////////////////////////////////////////////////////////////////////////////Dictionary<string, int> dict = new Dictionary<string, int>();



////////////////////////////////////////////////////////////////////////////int count = 2;



////////////////////////////////////////////////////////////////////////////char[] separator = { '-' };







////////////////////////////////////////////////////////////////////////////string[] input = Console.ReadLine().Split(separator, count, StringSplitOptions.RemoveEmptyEntries);



////////////////////////////////////////////////////////////////////////////while (input[0].Equals("END"))



////////////////////////////////////////////////////////////////////////////{



////////////////////////////////////////////////////////////////////////////  if (!dict.ContainsKey(input[0]))



////////////////////////////////////////////////////////////////////////////  {



////////////////////////////////////////////////////////////////////////////    dict.Add(input[0], 0);



////////////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////////////  dict[input[0]] = int.Parse(input[1]);



////////////////////////////////////////////////////////////////////////////  input = Console.ReadLine().Split(separator, count, StringSplitOptions.RemoveEmptyEntries);



////////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////////var ordered = dict.OrderBy(x => x.Key).ToDictionary(x => x.Key, x => x.Value);



////////////////////////////////////////////////////////////////////////////foreach (var kvp in ordered)



////////////////////////////////////////////////////////////////////////////{



////////////////////////////////////////////////////////////////////////////  Console.WriteLine($"{kvp.Key} -> {kvp.Value}");



////////////////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////////////////Въпрос 13
////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////Дайте пример за това как бихте декларирали променлива от целочислен тип със стойност 10?

////////////////////////////////////////////////////////////////////////////Отговор: 
////////////////////////////////////////////////////////////////////////////int n = 10;
////////////////////////////////////////////////////////////////////////////Въпрос 14
////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////Посочете по кой от начините ще добавите стойност в речник, ако речника има за ключ тип данни низ и за стойност целочислен тип данни?

////////////////////////////////////////////////////////////////////////////Изберете едно
////////////////////////////////////////////////////////////////////////////a. dict.Include("tomatoes", 2);
////////////////////////////////////////////////////////////////////////////b.dict.Add("tomatoes", 2);
////////////////////////////////////////////////////////////////////////////c.dict.Insert("tomatoes", 2);
////////////////////////////////////////////////////////////////////////////d.Нито едно от изброените.
////////////////////////////////////////////////////////////////////////////Въпрос 15
////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////Обяснете какво прави метода ContainsValue(V) реализиран в класа Dictionary<K, V>?

////////////////////////////////////////////////////////////////////////////Методът ContainsValue(V) в класа Dictionary<K, V> проверява дали речникът съдържа дадена стойност. Той приема един аргумент от тип V, който представлява стойността, която искате да проверите дали се съдържа в речника. Методът връща булева стойност (true или false) в зависимост от това дали стойността се намира в речника или не.

////////////////////////////////////////////////////////////////////////////Ако ContainsValue(V) върне true, това означава, че речникът съдържа поне един елемент с тази стойност. Ако методът върне false, това означава, че речникът не съдържа елементи с тази стойност.


////////////////////////////////////////////////////////////////////////////Въпрос 16
////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////Посочете как се декларира многомерен масив в C#.

////////////////////////////////////////////////////////////////////////////В C# многомерен масив се декларира като се използва типът на елементите, последван от запетаи в скобите, които указват броят на измеренията. Ето пример за деклариране на двумерен масив от целочислен тип:



////////////////////////////////////////////////////////////////////////////int[,] twoDimensionalArray;





////////////////////////////////////////////////////////////////////////////За да инициализирате многомерен масив с конкретни размери, можете да използвате ключовата дума new последвана от типа на елементите и размерите на масива в скобите



////////////////////////////////////////////////////////////////////////////int[,] twoDimensionalArray = new int[3, 4];



////////////////////////////////////////////////////////////////////////////Въпрос 17
////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////От максимално 10,00
////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид. 

////////////////////////////////////////////////////////////////////////////Условие: Разполагате със следния програмен код:

////////////////////////////////////////////////////////////////////////////Program.cs

////////////////////////////////////////////////////////////////////////////static void Main(string[] args)
////////////////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////////////////  Dictionary<string, int> dict = new Dictionary<string, int>();
////////////////////////////////////////////////////////////////////////////  var eggs = Console.ReadLine();
////////////////////////////////////////////////////////////////////////////  for (int i = 0; i < eggs; i++
////////////////////////////////////////////////////////////////////////////            {
////////////////////////////////////////////////////////////////////////////    string color = Console.ReadLine();
////////////////////////////////////////////////////////////////////////////    if (dict.ContainsKey(color))
////////////////////////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////////////////////////      dict.Add(color, 1);
////////////////////////////////////////////////////////////////////////////    }
////////////////////////////////////////////////////////////////////////////    dict[color];
////////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////////  Console.WriteLine("Red eggs: {(dict.ContainsKey("red") ? dict["red"] : 0)}");
////////////////////////////////////////////////////////////////////////////  Console.WriteLine($"Orange eggs: {(dict.ContainsKey("orange") ? 0 : dict["orange"])}");
////////////////////////////////////////////////////////////////////////////  Console.WriteLine($"Blue eggs: {(dict.ContainsKey("blue") ? dict["blue"] : 0)}");
////////////////////////////////////////////////////////////////////////////  Console.WriteLine($"Green eggs: {(dict.ContainsKey("green") ? dict["green"] : 0)}");
////////////////////////////////////////////////////////////////////////////  Console.WriteLine($"Max eggs: {dict.Values.Max()} -> {dict.OrderByDescending(x => x.Value).FirstOrDefault().Key}");
////////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////////Открийте и поправете грешките във вече написания програмен код, така че да се реши поставената по-долу задача. Допълнете кода.

////////////////////////////////////////////////////////////////////////////Великденски яйца
////////////////////////////////////////////////////////////////////////////Предстои Великден и едно от най-вълнуващите неща е боядисването на яйца. Наличните цветове за боядисване са:
////////////////////////////////////////////////////////////////////////////•          червено(red)
////////////////////////////////////////////////////////////////////////////•          оранжев(orange)
////////////////////////////////////////////////////////////////////////////•          син(blue)
////////////////////////////////////////////////////////////////////////////•          зелен(green)
////////////////////////////////////////////////////////////////////////////Напишете програма, която изчислява какъв е броят на яйцата от всеки цвят и от кой цвят яйцата са най - много, като знаете общия им брой и цветът на всяко яйце.

////////////////////////////////////////////////////////////////////////////Вход
////////////////////////////////////////////////////////////////////////////От конзолата се четe 1 ред:

////////////////////////////////////////////////////////////////////////////Броят на боядисаните яйца – цяло число в интервала [1 ... 100]

////////////////////////////////////////////////////////////////////////////За всяко яйце се чете:

////////////////////////////////////////////////////////////////////////////Цветът на яйцето – текст – следните възможности: red, orange, blue, green

////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////Да се отпечатат на конзолата 5 реда:

////////////////////////////////////////////////////////////////////////////"Red eggs: {брой на червените яйца}"

////////////////////////////////////////////////////////////////////////////"Orange eggs: {брой на оранжевите яйца}"

////////////////////////////////////////////////////////////////////////////"Blue eggs: {брой на сините яйца}"

////////////////////////////////////////////////////////////////////////////"Green eggs: {брой на зелените яйца}"

////////////////////////////////////////////////////////////////////////////"Max eggs: {максимален брой на яйцата от цвят} -> {цвят}"

////////////////////////////////////////////////////////////////////////////Примерен вход и изход
////////////////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////Обяснения

////////////////////////////////////////////////////////////////////////////7

////////////////////////////////////////////////////////////////////////////orange

////////////////////////////////////////////////////////////////////////////blue

////////////////////////////////////////////////////////////////////////////green

////////////////////////////////////////////////////////////////////////////green

////////////////////////////////////////////////////////////////////////////blue

////////////////////////////////////////////////////////////////////////////red

////////////////////////////////////////////////////////////////////////////green

////////////////////////////////////////////////////////////////////////////Red eggs: 1

////////////////////////////////////////////////////////////////////////////Orange eggs: 1

////////////////////////////////////////////////////////////////////////////Blue eggs: 2

////////////////////////////////////////////////////////////////////////////Green eggs: 3

////////////////////////////////////////////////////////////////////////////Max eggs: 3->green

////////////////////////////////////////////////////////////////////////////Брой яйца: 7

////////////////////////////////////////////////////////////////////////////Яйце 1: оранжево->брой оранжеви яйца: 1

////////////////////////////////////////////////////////////////////////////Яйце 2: синьо->брой сини яйца: 1

////////////////////////////////////////////////////////////////////////////Яйце 3: зелено->брой зелени яйца: 1

////////////////////////////////////////////////////////////////////////////Яйце 4: зелено->брой зелени яйца: 2

////////////////////////////////////////////////////////////////////////////Яйце 5: синьо->брой сини яйца: 2

////////////////////////////////////////////////////////////////////////////Яйце 6: червено->брой червени яйца: 1

////////////////////////////////////////////////////////////////////////////Яйце 7: зелено->брой зелени яйца: 3

////////////////////////////////////////////////////////////////////////////Най - много яйца: зелени-> 3 броя

////////////////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////Обяснения

////////////////////////////////////////////////////////////////////////////4

////////////////////////////////////////////////////////////////////////////blue

////////////////////////////////////////////////////////////////////////////red

////////////////////////////////////////////////////////////////////////////blue

////////////////////////////////////////////////////////////////////////////orange

////////////////////////////////////////////////////////////////////////////Red eggs: 1

////////////////////////////////////////////////////////////////////////////Orange eggs: 1

////////////////////////////////////////////////////////////////////////////Blue eggs: 2

////////////////////////////////////////////////////////////////////////////Green eggs: 0

////////////////////////////////////////////////////////////////////////////Max eggs: 2->blue

////////////////////////////////////////////////////////////////////////////Брой яйца: 4

////////////////////////////////////////////////////////////////////////////Яйце 1: синьо->брой сини яйца: 1

////////////////////////////////////////////////////////////////////////////Яйце 2: червено->брой червени яйца: 1

////////////////////////////////////////////////////////////////////////////Яйце 3: синьо->брой сини яйца: 2

////////////////////////////////////////////////////////////////////////////Яйце 4: оранжево->брой оранжеви яйца: 1

////////////////////////////////////////////////////////////////////////////Най - много яйца: сини-> 2 броя






//////////////////////////////////////////////////////////////////////////// Dictionary<string, int> dict = new Dictionary<string, int>();



////////////////////////////////////////////////////////////////////////////int eggs = int.Parse(Console.ReadLine());



////////////////////////////////////////////////////////////////////////////for (int i = 0; i < eggs; i++)



////////////////////////////////////////////////////////////////////////////{



////////////////////////////////////////////////////////////////////////////  string color = Console.ReadLine();



////////////////////////////////////////////////////////////////////////////  if (!dict.ContainsKey(color))



////////////////////////////////////////////////////////////////////////////  {



////////////////////////////////////////////////////////////////////////////    dict.Add(color, 0);



////////////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////////////  dict[color]++;



////////////////////////////////////////////////////////////////////////////}







////////////////////////////////////////////////////////////////////////////Console.WriteLine($"Red eggs: {(dict.ContainsKey("red") ? dict["red"] : 0)}");



////////////////////////////////////////////////////////////////////////////Console.WriteLine($"Orange eggs: {(dict.ContainsKey("orange") ? dict["orange"] : 0)}");



////////////////////////////////////////////////////////////////////////////Console.WriteLine($"Blue eggs: {(dict.ContainsKey("blue") ? dict["blue"] : 0)}");



////////////////////////////////////////////////////////////////////////////Console.WriteLine($"Green eggs: {(dict.ContainsKey("green") ? dict["green"] : 0)}");



////////////////////////////////////////////////////////////////////////////Console.WriteLine($"Max eggs: {dict.Values.Max()} -> {dict.OrderByDescending(x => x.Value).FirstOrDefault().Key}");



////////////////////////////////////////////////////////////////////////////Въпрос 18
////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////От максимално 10,00
////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид. 

////////////////////////////////////////////////////////////////////////////Условие: Разполагате със следния програмен код:

////////////////////////////////////////////////////////////////////////////Program.cs

////////////////////////////////////////////////////////////////////////////static void Main(string[] args)
////////////////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////////////////  int nums = Console.ReadLine().Split(',').Select(int.Parse).ToArray();
////////////////////////////////////////////////////////////////////////////  List<int> evens = new List<int>();
////////////////////////////////////////////////////////////////////////////  List<int> odds = new List<int>();
////////////////////////////////////////////////////////////////////////////  List<int> sum5 = new List<int>();

////////////////////////////////////////////////////////////////////////////  for (int i = 0; i < nums.Length; i++)
////////////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////////////    if (nums[i] % 2 == 0 && (nums[i] % 10 == 4 && nums[i] % 10 == 8))
////////////////////////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////////////////////////      evens.Add(nums);


////////////////////////////////////////////////////////////////////////////                else if (nums[i] % 2 != 0 && (nums[i] % 10 == 5 || nums[i] % 10 == 7))
////////////////////////////////////////////////////////////////////////////      {
////////////////////////////////////////////////////////////////////////////        odds.Add(nums[i]);
////////////////////////////////////////////////////////////////////////////      }
////////////////////////////////////////////////////////////////////////////      if (SumDigits(nums[i]) = 15)
////////////////////////////////////////////////////////////////////////////      {
////////////////////////////////////////////////////////////////////////////        sum5.Add(nums[i]);
////////////////////////////////////////////////////////////////////////////      }
////////////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////////////    Console.WriteLine(String.Join(", ", evens));
////////////////////////////////////////////////////////////////////////////    Console.WriteLine(String.Join(", ", evens));
////////////////////////////////////////////////////////////////////////////    Console.WriteLine(String.Join(", ", sum5));
////////////////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////////////////  public static int SumDigits(int number)
////////////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////////////    int sum = 0;

////////////////////////////////////////////////////////////////////////////    while (number != 0)
////////////////////////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////////////////////////      sum += number % 10;
////////////////////////////////////////////////////////////////////////////      number /= 10;
////////////////////////////////////////////////////////////////////////////    }
////////////////////////////////////////////////////////////////////////////  }





////////////////////////////////////////////////////////////////////////////  Открийте и поправете грешките във вече написания програмен код, така че да се реши поставената по - долу задача.Допълнете кода.

////////////////////////////////////////////////////////////////////////////Магически числа
////////////////////////////////////////////////////////////////////////////В системата първоначално има въведени числа, които трябва да бъдат разпределени в три групи.

////////////////////////////////////////////////////////////////////////////Групите са следните:

////////////////////////////////////////////////////////////////////////////  Група на четните числа, които завършват на 4 или 8
////////////////////////////////////////////////////////////////////////////Група на нечетните числа, които завършват на 5 или 7
////////////////////////////////////////////////////////////////////////////Група на числа, чийто сбор на цифрите е 15
////////////////////////////////////////////////////////////////////////////Напишете програма, която при подаден първоначален списък с числа ги групира и принтира трите групи от числа. Едно число може да попада в повече от 1 група.Ако число не отговаря на нито едно от горните условия то не се разпределя в нито една група.

////////////////////////////////////////////////////////////////////////////Вход
////////////////////////////////////////////////////////////////////////////От конзолата се чете 1 ред:

////////////////////////////////////////////////////////////////////////////  Списък с числа – текст(числата са разделени със запетая)
////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////На конзолата да се отпечатват 3 реда:

////////////////////////////////////////////////////////////////////////////  списък с четните числа, които завършват на 4 или 8, разделени със запетая и интервал
////////////////////////////////////////////////////////////////////////////  списък с нечетните числа, които завършват на 5 или 7, разделени със запетая и интервал
////////////////////////////////////////////////////////////////////////////  списък с числата, чийто сбор на цифрите е 15, разделени със запетая и интервал
////////////////////////////////////////////////////////////////////////////  Примерен вход и изход
////////////////////////////////////////////////////////////////////////////  Вход

////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////Обяснения

////////////////////////////////////////////////////////////////////////////58,87,96,45,14

////////////////////////////////////////////////////////////////////////////58, 14

////////////////////////////////////////////////////////////////////////////87, 45

////////////////////////////////////////////////////////////////////////////87, 96

////////////////////////////////////////////////////////////////////////////58->четно, завършващо на 8

////////////////////////////////////////////////////////////////////////////87->нечетно, завършващо на 7 и сборът от цифрите му е 15

////////////////////////////////////////////////////////////////////////////96->сборът от цифрите му е 15

////////////////////////////////////////////////////////////////////////////45->нечетно, завършващо на 5

////////////////////////////////////////////////////////////////////////////14->четно, завършващо на 4

////////////////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////Обяснения

////////////////////////////////////////////////////////////////////////////54,69,67,159,225

////////////////////////////////////////////////////////////////////////////54

////////////////////////////////////////////////////////////////////////////67, 225

////////////////////////////////////////////////////////////////////////////69, 159

////////////////////////////////////////////////////////////////////////////54->четно, завършващо на 4

////////////////////////////////////////////////////////////////////////////69->сборът от цифрите му е 15

////////////////////////////////////////////////////////////////////////////67->нечетно, завършващо на 7

////////////////////////////////////////////////////////////////////////////159->сборът от цифрите му е 15

////////////////////////////////////////////////////////////////////////////225->нечетно, завършващо на 5







////////////////////////////////////////////////////////////////////////////using System;

////////////////////////////////////////////////////////////////////////////  using System.Collections.Generic;

////////////////////////////////////////////////////////////////////////////  using System.ComponentModel;

////////////////////////////////////////////////////////////////////////////  using System.Linq;

////////////////////////////////////////////////////////////////////////////  using System.Security.Cryptography.X509Certificates;

////////////////////////////////////////////////////////////////////////////  using System.Text;

////////////////////////////////////////////////////////////////////////////  using System.Threading.Tasks;



////////////////////////////////////////////////////////////////////////////namespace Test2

////////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////////  internal class Program

////////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////////    static void Main(string[] args)

////////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////////      int[] nums = Console.ReadLine().Split(',').Select(int.Parse).ToArray();

////////////////////////////////////////////////////////////////////////////      List<int> evens = new List<int>();

////////////////////////////////////////////////////////////////////////////      List<int> odds = new List<int>();

////////////////////////////////////////////////////////////////////////////      List<int> sum5 = new List<int>();



////////////////////////////////////////////////////////////////////////////      for (int i = 0; i < nums.Length; i++)

////////////////////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////////////////////        if (nums[i] % 2 == 0 && (nums[i] % 10 == 4 || nums[i] % 10 == 8))

////////////////////////////////////////////////////////////////////////////        {

////////////////////////////////////////////////////////////////////////////          evens.Add(nums[i]);

////////////////////////////////////////////////////////////////////////////        }

////////////////////////////////////////////////////////////////////////////        if (nums[i] % 2 != 0 && (nums[i] % 10 == 5 || nums[i] % 10 == 7))

////////////////////////////////////////////////////////////////////////////        {

////////////////////////////////////////////////////////////////////////////          odds.Add(nums[i]);

////////////////////////////////////////////////////////////////////////////        }

////////////////////////////////////////////////////////////////////////////        if (SumDigits(nums[i]) == 15)

////////////////////////////////////////////////////////////////////////////        {

////////////////////////////////////////////////////////////////////////////          sum5.Add(nums[i]);

////////////////////////////////////////////////////////////////////////////        }

////////////////////////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////////////////////////      Console.WriteLine(String.Join(", ", evens));

////////////////////////////////////////////////////////////////////////////      Console.WriteLine(String.Join(", ", odds));

////////////////////////////////////////////////////////////////////////////      Console.WriteLine(String.Join(", ", sum5));

////////////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////////////    public static int SumDigits(int number)

////////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////////      int sum = 0;



////////////////////////////////////////////////////////////////////////////      while (number != 0)

////////////////////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////////////////////        sum += number % 10;

////////////////////////////////////////////////////////////////////////////        number /= 10;

////////////////////////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////////////////////////      return sum;

////////////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////////Въпрос 19
////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////Посочете правилната стойност по подразбиране към всеки от типовете данни:


////////////////////////////////////////////////////////////////////////////bool

////////////////////////////////////////////////////////////////////////////Отговор 1
////////////////////////////////////////////////////////////////////////////false
////////////////////////////////////////////////////////////////////////////string

////////////////////////////////////////////////////////////////////////////Отговор 2
////////////////////////////////////////////////////////////////////////////null
////////////////////////////////////////////////////////////////////////////sbyte

////////////////////////////////////////////////////////////////////////////Отговор 3
////////////////////////////////////////////////////////////////////////////0
////////////////////////////////////////////////////////////////////////////float

////////////////////////////////////////////////////////////////////////////Отговор 4
////////////////////////////////////////////////////////////////////////////0.0f
////////////////////////////////////////////////////////////////////////////object

////////////////////////////////////////////////////////////////////////////Отговор 5
////////////////////////////////////////////////////////////////////////////null
////////////////////////////////////////////////////////////////////////////decimal

////////////////////////////////////////////////////////////////////////////Отговор 6
////////////////////////////////////////////////////////////////////////////0.0m
////////////////////////////////////////////////////////////////////////////char

////////////////////////////////////////////////////////////////////////////Отговор 7
////////////////////////////////////////////////////////////////////////////'\u0000'
////////////////////////////////////////////////////////////////////////////Въпрос 20
////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////Опишете по какъв начин ще извлечете дължината на многомерен масив в C#? 

////////////////////////////////////////////////////////////////////////////Запишете методите, които ще използвате, за да извлечете броя на редовете на двумерен масив и дължината на всеки от редовете.


////////////////////////////////////////////////////////////////////////////int[,] multiDimArray = new int[3, 4];



////////////////////////////////////////////////////////////////////////////// Получаване на броя на редовете на двумерния масив

////////////////////////////////////////////////////////////////////////////int rows = multiDimArray.GetLength(0);



////////////////////////////////////////////////////////////////////////////// Получаване на дължината на всеки ред (броя на колоните)

////////////////////////////////////////////////////////////////////////////int cols = multiDimArray.GetLength(1);



////////////////////////////////////////////////////////////////////////////Console.WriteLine("Rows: " + rows);

////////////////////////////////////////////////////////////////////////////Console.WriteLine("Columns: " + cols);



////////////////////////////////////////////////////////////////////////////Въпрос 21
////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////Опишете как ще преминете от десетична бройна система в двоична бройна система.

////////////////////////////////////////////////////////////////////////////Преобразувайте числото  132(10)  от десетична бройна система в двоична бройна система.


////////////////////////////////////////////////////////////////////////////132 / 2 = 66, остатък: 0
////////////////////////////////////////////////////////////////////////////66 / 2 = 33, остатък: 0
////////////////////////////////////////////////////////////////////////////33 / 2 = 16, остатък: 1
////////////////////////////////////////////////////////////////////////////16 / 2 = 8, остатък: 0
////////////////////////////////////////////////////////////////////////////8 / 2 = 4, остатък: 0
////////////////////////////////////////////////////////////////////////////4 / 2 = 2, остатък: 0
////////////////////////////////////////////////////////////////////////////2 / 2 = 1, остатък: 0
////////////////////////////////////////////////////////////////////////////1 / 2 = 0, остатък: 1
////////////////////////////////////////////////////////////////////////////Записваме остатъците в обратен ред: 10000100.Така числото 132(10) в двоична бройна система е 10000100(2).


////////////////////////////////////////////////////////////////////////////Въпрос 22
////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////Напишете примерен код, който да отпечата на конзолата следната матрица:

////////////////////////////////////////////////////////////////////////////int[,] matrix =
////////////////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////////////////      {1, 2, 3, 4},
////////////////////////////////////////////////////////////////////////////      {5, 6, 7, 8},
////////////////////////////////////////////////////////////////////////////};


////////////////////////////////////////////////////////////////////////////using System;



////////////////////////////////////////////////////////////////////////////class Program

////////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////////  static void Main(string[] args)

////////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////////    int[,] matrix =

////////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////////            {1, 2, 3, 4},

////////////////////////////////////////////////////////////////////////////            {5, 6, 7, 8},

////////////////////////////////////////////////////////////////////////////        };



////////////////////////////////////////////////////////////////////////////    int rows = matrix.GetLength(0);

////////////////////////////////////////////////////////////////////////////    int cols = matrix.GetLength(1);



////////////////////////////////////////////////////////////////////////////    for (int row = 0; row < rows; row++)

////////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////////      for (int col = 0; col < cols; col++)

////////////////////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////////////////////        Console.Write(matrix[row, col] + " ");

////////////////////////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////////////////////////      Console.WriteLine();

////////////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////////Въпрос 23
////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////От максимално 6,00
////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////Демонстрирайте как ще достъпите елемент от масива. Напишете код с C#, който да отпечата на конзолата името Alex от масива names.

////////////////////////////////////////////////////////////////////////////string[] names =  { "John", "Peter", "Stella", "Alex", "Jessie"};

////////////////////////////////////////////////////////////////////////////Отговор:
////////////////////////////////////////////////////////////////////////////Console.WriteLine(names[3]);
////////////////////////////////////////////////////////////////////////////Въпрос 24
////////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////////От максимално 10,00
////////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид. 

////////////////////////////////////////////////////////////////////////////Условие: Разполагате със следния програмен код:

////////////////////////////////////////////////////////////////////////////Program.cs

////////////////////////////////////////////////////////////////////////////static void Main(string[] args)
////////////////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////////////////  int[] nums = Console.ReadLine().Split(',').Select(int.Parse);

////////////////////////////////////////////////////////////////////////////  List<int> evens = new List<int>();
////////////////////////////////////////////////////////////////////////////  List<int> odds = new List<int>();
////////////////////////////////////////////////////////////////////////////  List<int> sum5 = new List<int>();

////////////////////////////////////////////////////////////////////////////  for (int i = 0; i > nums.Length; i++)
////////////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////////////    if (nums[i] / 2 == 0)
////////////////////////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////////////////////////      evens.Add(nums[i]);
////////////////////////////////////////////////////////////////////////////    }
////////////////////////////////////////////////////////////////////////////    else

////////////////////////////////////////////////////////////////////////////      odds.Add(nums[i]);
////////////////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////////////////  if (SumDigits(nums) % 10 == 5)
////////////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////////////    sum5.Add(nums[i]);
////////////////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////////////////}
////////////////////////////////////////////////////////////////////////////Console.WriteLine(String.Join(", ", evens));
////////////////////////////////////////////////////////////////////////////Console.WriteLine(String.Join(", ", odds));
////////////////////////////////////////////////////////////////////////////Console.WriteLine(String.Join(", ", sum5));
////////////////////////////////////////////////////////////////////////////        }
////////////////////////////////////////////////////////////////////////////        public static int SumDigits(int number)
////////////////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////////////////  int sum = 0;

////////////////////////////////////////////////////////////////////////////  while (true)
////////////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////////////    sum += number % 10;
////////////////////////////////////////////////////////////////////////////    number /= 10;
////////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////////  return sum;
////////////////////////////////////////////////////////////////////////////}






////////////////////////////////////////////////////////////////////////////Открийте и поправете грешките във вече написания програмен код, така че да се реши поставената по-долу задача. Допълнете кода.

////////////////////////////////////////////////////////////////////////////Видове числа
////////////////////////////////////////////////////////////////////////////В системата първоначално има въведени числа, които трябва да бъдат разпределени в три групи.

////////////////////////////////////////////////////////////////////////////Групите са следните:

////////////////////////////////////////////////////////////////////////////Група на четните числа
////////////////////////////////////////////////////////////////////////////Група на нечетните числа
////////////////////////////////////////////////////////////////////////////Група на числа, чийто сбор на цифрите завършва на 5
////////////////////////////////////////////////////////////////////////////Напишете програма, която при подаден първоначален списък с числа ги групира и принтира трите групи от числа. Едно число може да попада в повече от 1 група.

////////////////////////////////////////////////////////////////////////////Вход
////////////////////////////////////////////////////////////////////////////От конзолата се чете 1 ред:

////////////////////////////////////////////////////////////////////////////Списък с числа – текст (числата са разделени със запетая)
////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////На конзолата да се отпечатват 3 реда:

////////////////////////////////////////////////////////////////////////////списък с четните числа, разделени със запетая и интервал
////////////////////////////////////////////////////////////////////////////списък с нечетните числа, разделени със запетая и интервал
////////////////////////////////////////////////////////////////////////////списък с числата, чийто сбор на цифрите завършва на 5, разделени със запетая и интервал
////////////////////////////////////////////////////////////////////////////Примерен вход и изход
////////////////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////Обяснения

////////////////////////////////////////////////////////////////////////////56,87,9999,45,12

////////////////////////////////////////////////////////////////////////////56, 12

////////////////////////////////////////////////////////////////////////////87, 9999, 45

////////////////////////////////////////////////////////////////////////////87

////////////////////////////////////////////////////////////////////////////56 -> четно

////////////////////////////////////////////////////////////////////////////87 -> нечетно и сборът от цифрите му (8 + 7 = 15) завършва на 5

////////////////////////////////////////////////////////////////////////////9999 -> нечетно

////////////////////////////////////////////////////////////////////////////45 -> нечетно

////////////////////////////////////////////////////////////////////////////12 -> четно

////////////////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////////Обяснения

////////////////////////////////////////////////////////////////////////////54,67,63,123,221

////////////////////////////////////////////////////////////////////////////54

////////////////////////////////////////////////////////////////////////////67, 63, 123, 221

////////////////////////////////////////////////////////////////////////////221

////////////////////////////////////////////////////////////////////////////54 -> четно

////////////////////////////////////////////////////////////////////////////67 -> нечетно

////////////////////////////////////////////////////////////////////////////63 -> нечетно

////////////////////////////////////////////////////////////////////////////123 -> нечетно

////////////////////////////////////////////////////////////////////////////221 -> нечетно и сборът на от цифрите му (2 + 2 + 1 = 5) завършва на 5






////////////////////////////////////////////////////////////////////////////using System;

////////////////////////////////////////////////////////////////////////////using System.Collections.Generic;

////////////////////////////////////////////////////////////////////////////using System.ComponentModel;

////////////////////////////////////////////////////////////////////////////using System.Linq;

////////////////////////////////////////////////////////////////////////////using System.Security.Cryptography.X509Certificates;

////////////////////////////////////////////////////////////////////////////using System.Text;

////////////////////////////////////////////////////////////////////////////using System.Threading.Tasks;



////////////////////////////////////////////////////////////////////////////namespace Test2

////////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////////  internal class Program

////////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////////    static void Main(string[] args)

////////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////////      int[] nums = Console.ReadLine().Split(',').Select(int.Parse).ToArray();

////////////////////////////////////////////////////////////////////////////      List<int> evens = new List<int>();

////////////////////////////////////////////////////////////////////////////      List<int> odds = new List<int>();

////////////////////////////////////////////////////////////////////////////      List<int> sum5 = new List<int>();



////////////////////////////////////////////////////////////////////////////      for (int i = 0; i < nums.Length; i++)

////////////////////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////////////////////        if (nums[i] % 2 == 0 && (nums[i] % 10 == 4 || nums[i] % 10 == 8))

////////////////////////////////////////////////////////////////////////////        {

////////////////////////////////////////////////////////////////////////////          evens.Add(nums[i]);

////////////////////////////////////////////////////////////////////////////        }

////////////////////////////////////////////////////////////////////////////        if (nums[i] % 2 != 0 && (nums[i] % 10 == 5 || nums[i] % 10 == 7))

////////////////////////////////////////////////////////////////////////////        {

////////////////////////////////////////////////////////////////////////////          odds.Add(nums[i]);

////////////////////////////////////////////////////////////////////////////        }

////////////////////////////////////////////////////////////////////////////        if (SumDigits(nums[i]) == 15)

////////////////////////////////////////////////////////////////////////////        {

////////////////////////////////////////////////////////////////////////////          sum5.Add(nums[i]);

////////////////////////////////////////////////////////////////////////////        }

////////////////////////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////////////////////////      Console.WriteLine(String.Join(", ", evens));

////////////////////////////////////////////////////////////////////////////      Console.WriteLine(String.Join(", ", odds));

////////////////////////////////////////////////////////////////////////////      Console.WriteLine(String.Join(", ", sum5));

////////////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////////////    public static int SumDigits(int number)

////////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////////      int sum = 0;



////////////////////////////////////////////////////////////////////////////      while (number != 0)

////////////////////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////////////////////        sum += number % 10;

////////////////////////////////////////////////////////////////////////////        number /= 10;

////////////////////////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////////////////////////      return sum;

////////////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////////Край на прегледа
////////////////////////////////////////////////////////////////////////////Отиди на ...
////////////////////////////////////////////////////////////////////////////Отиди на ...
////////////////////////////////////////////////////////////////////////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
////////////////////////////////////////////////////////////////////////////Навигация в теста
////////////////////////////////////////////////////////////////////////////Край на прегледа
////////////////////////////////////////////////////////////////////////////Вие сте влезли в системата като Добри Илев (Изход)
////////////////////////////////////////////////////////////////////////////тренировъчен - курс - по
////////////////////////////////////////////////////////////////////////////Data retention summary



////////////////////////////////////////////////////////////////////////////ИЗПИТНА ТЕМА 4
///////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////using System.Numerics;
//////////////////////////////////////////////////////////////////////////using System.Runtime.InteropServices;
//////////////////////////////////////////////////////////////////////////using System;

//////////////////////////////////////////////////////////////////////////Прескочи на основното съдържание
//////////////////////////////////////////////////////////////////////////ПГЕЕ
//////////////////////////////////////////////////////////////////////////Български ‎(bg)‎ 
//////////////////////////////////////////////////////////////////////////Добри Илев 
//////////////////////////////////////////////////////////////////////////Тренировъчен курс - Програмно осигуряване
//////////////////////////////////////////////////////////////////////////Начална страница
//////////////////////////////////////////////////////////////////////////Моите курсове
////////////////////////////////////////////////////////////////////////// тренировъчен-курс-по
////////////////////////////////////////////////////////////////////////// Изпитна тема 4
////////////////////////////////////////////////////////////////////////// Тест към Изпитна тема №4
//////////////////////////////////////////////////////////////////////////Започнат на	събота, 28 януари 2023, 20:37
//////////////////////////////////////////////////////////////////////////Състояние Завършен
//////////////////////////////////////////////////////////////////////////Приключен на	събота, 28 януари 2023, 21:28
//////////////////////////////////////////////////////////////////////////Изминало време	51 мин. 38 сек.
//////////////////////////////////////////////////////////////////////////Оценка	Още не е оценен
//////////////////////////////////////////////////////////////////////////Въпрос 1
//////////////////////////////////////////////////////////////////////////Отчасти верен
//////////////////////////////////////////////////////////////////////////4,50 от максимално 6,00 точки
//////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////Свържете кои от характеристиките се отнасят за абстракцията, кои за енкапсулацията.


//////////////////////////////////////////////////////////////////////////Получава се чрез модификаторите за достъп (private, public, protected, internal) 
//////////////////////////////////////////////////////////////////////////Енкапсулация


//////////////////////////////////////////////////////////////////////////Постига се чрез интерфейси и абстрактни класове. 
//////////////////////////////////////////////////////////////////////////Абстракция


//////////////////////////////////////////////////////////////////////////Процес на скриване на подробностите на имплементацията и показване само на функционалностите към потребителя. 
//////////////////////////////////////////////////////////////////////////Енкапсулация


//////////////////////////////////////////////////////////////////////////Използва се, за  да скрива кода и информацията в един компонент, за да я защити от външния свят. 
//////////////////////////////////////////////////////////////////////////Енкапсулация






//////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////Your answer is partially correct.
//////////////////////////////////////////////////////////////////////////Вие правилно сте избрали 3.
//////////////////////////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////////////////////////Свържете кои от характеристиките се отнасят за абстракцията, кои за енкапсулацията.


//////////////////////////////////////////////////////////////////////////Получава се чрез модификаторите за достъп (private, public, protected, internal) [Енкапсулация]

//////////////////////////////////////////////////////////////////////////Постига се чрез интерфейси и абстрактни класове. [Абстракция]

//////////////////////////////////////////////////////////////////////////Процес на скриване на подробностите на имплементацията и показване само на функционалностите към потребителя. [Абстракция]

//////////////////////////////////////////////////////////////////////////Използва се, за  да скрива кода и информацията в един компонент, за да я защити от външния свят. [Енкапсулация]





//////////////////////////////////////////////////////////////////////////Въпрос 2
//////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////От максимално 6,00
//////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////Дайте пример чрез код на C# за това как и къде бихте използвали презареждане на методи. 



//////////////////////////////////////////////////////////////////////////public class Person
//////////////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////////////  String name;
//////////////////////////////////////////////////////////////////////////  int age;
//////////////////////////////////////////////////////////////////////////  Person()
//////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////    name = "Penda";
//////////////////////////////////////////////////////////////////////////    age = 20;
//////////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////////  Person(String name)
//////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////    this.name = name;
//////////////////////////////////////////////////////////////////////////    age = 20;
//////////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////////  Person(int age)
//////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////    name = "Pijo";
//////////////////////////////////////////////////////////////////////////    this.age = age;
//////////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////////  Person(String name, int age)
//////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////    this.name = name;
//////////////////////////////////////////////////////////////////////////    this.age = age;
//////////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////////  public static void main(String[] arg)
//////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////    Person ps[] = new Person[4];
//////////////////////////////////////////////////////////////////////////    ps[0] = new Person();
//////////////////////////////////////////////////////////////////////////    ps[1] = new Person(22);
//////////////////////////////////////////////////////////////////////////    ps[2] = new Person("Kami");
//////////////////////////////////////////////////////////////////////////    ps[3] = new Person("Simo", 26);
//////////////////////////////////////////////////////////////////////////    main(ps);
//////////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////////  public static void main(Person[] ps)
//////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////    for (int i = 0; i < ps.length; i++)
//////////////////////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////////////////////      System.out.print(ps[i].name);
//////////////////////////////////////////////////////////////////////////      System.out.println("   age: " + ps[i].age);
//////////////////////////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////////////////////////  }


//////////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////////Презареждането на методите представлява мощно и гъвкаво средство. То представлява форма на параметричен полиморфизъм. Идеята е да се създадат методи, които изглеждат като един метод с различни аргументи.

//////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////// class MathOperations
//////////////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////////////  public int Add(int a, int b)
//////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////    return a + b;
//////////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////////  public int Add(int a, int b, int c)
//////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////    return a + b + c;
//////////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////////////Въпрос 3
//////////////////////////////////////////////////////////////////////////Неправилно
//////////////////////////////////////////////////////////////////////////0,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////Посочете видовете полиморфизъм в .NET.
//////////////////////////////////////////////////////////////////////////Изберете едно или повече:
//////////////////////////////////////////////////////////////////////////a.Виртуален.
//////////////////////////////////////////////////////////////////////////b.Нито едно от изброените. 
//////////////////////////////////////////////////////////////////////////c. Динамичен.
//////////////////////////////////////////////////////////////////////////d. Статичен.
//////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////Your answer is incorrect.
//////////////////////////////////////////////////////////////////////////The correct answers are: Статичен., Динамичен.
//////////////////////////////////////////////////////////////////////////Въпрос 4
//////////////////////////////////////////////////////////////////////////Не е отговорен
//////////////////////////////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////Дайте пример за абстракция. Напишете примерен код, който:

//////////////////////////////////////////////////////////////////////////Има класовете BaseEmployee, FullTimeEmployee и ContractEmployee.

//////////////////////////////////////////////////////////////////////////Условието на задачата е всички работници да имат име, както и  метод CalculateSalary(int workingHours) -който ще изчислява заплатата за работника, като се приема параметър – брой изработени часове. 

//////////////////////////////////////////////////////////////////////////Заплатата на FullTimeEmployee се изчислява по формулата: 250 + workingHours * 10.80.

//////////////////////////////////////////////////////////////////////////А заплатата на ContractEmployee по формулата: 250 + workingHours * 20.

//////////////////////////////////////////////////////////////////////////Спазвайте принципа за абстракция в обектно-ориентираното програмиране. 

//////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////abstract class BaseEmployee
//////////////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////////////  public string Name { get; set; }
//////////////////////////////////////////////////////////////////////////  public abstract double CalculateSalary(int workingHours);
//////////////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////////////class FullTimeEmployee : BaseEmployee
//////////////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////////////  public override double CalculateSalary(int workingHours)
//////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////    return 250 + workingHours * 10.80;
//////////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////////////class ContractEmployee : BaseEmployee
//////////////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////////////  public override double CalculateSalary(int workingHours)
//////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////    return 250 + workingHours * 20;
//////////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////////////Въпрос 5
//////////////////////////////////////////////////////////////////////////Отчасти верен
//////////////////////////////////////////////////////////////////////////1,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////Посочете кое от изброените твърдение е вярно за интерфейсите в C#.

//////////////////////////////////////////////////////////////////////////Изберете едно или повече:
//////////////////////////////////////////////////////////////////////////a.Предоставя договор, определящ как да се създаде обект, без да се интересува от спецификата на това как обекта ще прави нещата.
//////////////////////////////////////////////////////////////////////////b. Това е референтен тип и включва само абстрактни членове като събития, методи, свойства и т.н. и няма реализации за нито един от своите членове. 
//////////////////////////////////////////////////////////////////////////c. Това е шаблон, който описва видовете състояние и поведение, които обектите от неговия тип поддържат.
//////////////////////////////////////////////////////////////////////////d. Това са парчета код, които отговарят за изпълнението на дадено действие, което спомага за решаване на определен проблем.  
//////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////Your answer is partially correct.
//////////////////////////////////////////////////////////////////////////Вие правилно сте избрали 1.
//////////////////////////////////////////////////////////////////////////The correct answers are: Предоставя договор, определящ как да се създаде обект, без да се интересува от спецификата на това как обекта ще прави нещата., Това е референтен тип и включва само абстрактни членове като събития, методи, свойства и т.н. и няма реализации за нито един от своите членове.
//////////////////////////////////////////////////////////////////////////Въпрос 6
//////////////////////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////Посочете видовете полиморфизъм в .NET.
//////////////////////////////////////////////////////////////////////////Изберете едно или повече:
//////////////////////////////////////////////////////////////////////////a.Полиморфизъм по време на създаване. 
//////////////////////////////////////////////////////////////////////////b. Нито едно от изброените. 
//////////////////////////////////////////////////////////////////////////c. Полиморфизъм по време на изпълнение.  
//////////////////////////////////////////////////////////////////////////d. Полиморфизъм по време на компилиране. 
//////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////////////////////The correct answers are: Полиморфизъм по време на компилиране., Полиморфизъм по време на изпълнение. 
//////////////////////////////////////////////////////////////////////////Въпрос 7
//////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////От максимално 40,00
//////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////Създайте следната йерархия от класове и интерфейси.

//////////////////////////////////////////////////////////////////////////За ваше удобство ще ви бъде предоставен скелет на задачата, който обаче е непълен/неработещ/некоректен. Предоставеният скелет трябва да се приведе в работещ вид.

//////////////////////////////////////////////////////////////////////////Интерфейс IMakeNoise
//////////////////////////////////////////////////////////////////////////·        Този интерфейс трябва да съдържа сигнатурата на метод string MakeNoise()

//////////////////////////////////////////////////////////////////////////Интерфейс IMakeTrick
//////////////////////////////////////////////////////////////////////////·        Този интерфейс трябва да съдържа сигнатурата на метод string MakeTrick()

//////////////////////////////////////////////////////////////////////////Интерфейс IAnimal
//////////////////////////////////////////////////////////////////////////·        Този клас трябва да имплементира IMakeNoise и IMakeTrick.

//////////////////////////////////////////////////////////////////////////·        Интерфейсът трябва да съдържа свойство Type за типа на животното

//////////////////////////////////////////////////////////////////////////·        Интерфейсът трябва да съдържа свойство Name за име на животното

//////////////////////////////////////////////////////////////////////////·        Интерфейсът трябва да съдържа метод Perform()

//////////////////////////////////////////////////////////////////////////Клас Animal
//////////////////////////////////////////////////////////////////////////·        Този клас не трябва да може да се инстанцира!

//////////////////////////////////////////////////////////////////////////·        Този клас трябва да имплементира IAnimal

//////////////////////////////////////////////////////////////////////////·        Трябва да има и презаписан метод ToString(), който да връща типа и името на животното в следни формат: { AnimalType}
//////////////////////////////////////////////////////////////////////////{ AnimalName}

//////////////////////////////////////////////////////////////////////////·        Метод Perform(), който извиква първо MakeNoise(), а после MakeTrick()

//////////////////////////////////////////////////////////////////////////·        За свойството Name трябва да направите валидация:

//////////////////////////////////////////////////////////////////////////o Не може да се създава животно, на което името му е null, празен стринг или интервал! При невалидно име да се хвърли изключение ArgumentException със съобщение: "Name can't be null or empty!"

//////////////////////////////////////////////////////////////////////////Клас Cat
//////////////////////////////////////////////////////////////////////////·        Този клас трябва да наследява Animal.

//////////////////////////////////////////////////////////////////////////·        Метод MakeNoise(), който отпечатва съобщението: “Meow!”.

//////////////////////////////////////////////////////////////////////////·        Метод MakeTrick(), който отпечатва: “No trick for you! I'm too lazy!”



//////////////////////////////////////////////////////////////////////////Клас Dog
//////////////////////////////////////////////////////////////////////////·        Този клас трябва да наследява Animal.

//////////////////////////////////////////////////////////////////////////·        Метод MakeNoise(), който отпечатва съобщението: “Woof!”.

//////////////////////////////////////////////////////////////////////////·        Метод MakeTrick(), който отпечатва: “Hold my paw, human!”



//////////////////////////////////////////////////////////////////////////Клас Trainer
//////////////////////////////////////////////////////////////////////////·        Този клас трябва да има поле IAnimal entity.

//////////////////////////////////////////////////////////////////////////·        Свойство Name:

//////////////////////////////////////////////////////////////////////////o Не може да се създава треньор, чието име е null, празен стринг или интервал! При невалидно име да се хвърли изключение ArgumentException със съобщение: "Name can't be null or empty!"



//////////////////////////////////////////////////////////////////////////·        Конструктор, от който да получава името на треньора и обекта с животното, което ще дресираме

//////////////////////////////////////////////////////////////////////////·        Метод Make(), който да извиква Perform() метода на съответното entity

//////////////////////////////////////////////////////////////////////////·        Метод Work(IAnimal entity), който да получава съответното ентити, с което треньорът трябва да работи и да отпечатва "Trainer {TrainerName} works with {Entity}!".

//////////////////////////////////////////////////////////////////////////Вход/Изход

//////////////////////////////////////////////////////////////////////////Като вход ще получите:

//////////////////////////////////////////////////////////////////////////На първи ред число n брой животни, които трябва да регистрирате в системата – цяло число.

//////////////////////////////////////////////////////////////////////////На следващите n реда ще получавате различни животни. На всеки ред ще получите информация на вида на животното и неговото име разделени от интервал. Типа на животното винаги ще бъде валиден!

//////////////////////////////////////////////////////////////////////////След като прочетете информацията за всяко едно от животните и ги съхраните в подходяща структура от данни ще започнете да получавате имена.

//////////////////////////////////////////////////////////////////////////Първото име винаги ще бъде името на треньора! От там нататък ще получавате имената на животните, които треньорът трябва да дресира. Има възможност да получавате и имена, които не са записани в базата ви с данни, в такъв случай трябва да отпечатате на конзолата: "No such name in the Database!".Във всички останали случаи трябва да отпечатате: „Trainer
//////////////////////////////////////////////////////////////////////////{ TrainerName}
//////////////////////////////////////////////////////////////////////////works with { Animal }
//////////////////////////////////////////////////////////////////////////!“ и това, което ще се отпечата от метода Make() в класа Trainer.

//////////////////////////////////////////////////////////////////////////За по-подробна информация вижте таблицата с примерни вход/изход.



//////////////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////////5

//////////////////////////////////////////////////////////////////////////Cat SleepyTom

//////////////////////////////////////////////////////////////////////////Dog Archie

//////////////////////////////////////////////////////////////////////////Cat HelloKitty

//////////////////////////////////////////////////////////////////////////Cat Agness

//////////////////////////////////////////////////////////////////////////Dog Hera

//////////////////////////////////////////////////////////////////////////Krystan

//////////////////////////////////////////////////////////////////////////SleepyTom

//////////////////////////////////////////////////////////////////////////HelloKitty

//////////////////////////////////////////////////////////////////////////Bettany

//////////////////////////////////////////////////////////////////////////Archie

//////////////////////////////////////////////////////////////////////////HelloKitty

//////////////////////////////////////////////////////////////////////////End

//////////////////////////////////////////////////////////////////////////Trainer Krystan works with Cat SleepyTom!

//////////////////////////////////////////////////////////////////////////>>> Meow!

//////////////////////////////////////////////////////////////////////////>>> No trick for you! I'm too lazy!

//////////////////////////////////////////////////////////////////////////Trainer Krystan works with Cat HelloKitty!

//////////////////////////////////////////////////////////////////////////>>> Meow!

//////////////////////////////////////////////////////////////////////////>>> No trick for you! I'm too lazy!

//////////////////////////////////////////////////////////////////////////No such name in the Database!

//////////////////////////////////////////////////////////////////////////Trainer Krystan works with Dog Archie!

//////////////////////////////////////////////////////////////////////////>>> Woof!

//////////////////////////////////////////////////////////////////////////>>> Hold my paw, human!

//////////////////////////////////////////////////////////////////////////Trainer Krystan works with Cat HelloKitty!

//////////////////////////////////////////////////////////////////////////>>> Meow!

//////////////////////////////////////////////////////////////////////////>>> No trick for you! I'm too lazy!

//////////////////////////////////////////////////////////////////////////3

//////////////////////////////////////////////////////////////////////////Dog Topcho

//////////////////////////////////////////////////////////////////////////Dog Osvaldo

//////////////////////////////////////////////////////////////////////////Cat Munchi

//////////////////////////////////////////////////////////////////////////Cikatiridis

//////////////////////////////////////////////////////////////////////////Berta

//////////////////////////////////////////////////////////////////////////Roomba

//////////////////////////////////////////////////////////////////////////Munchi

//////////////////////////////////////////////////////////////////////////Munchi

//////////////////////////////////////////////////////////////////////////Topcho

//////////////////////////////////////////////////////////////////////////Osvaldo

//////////////////////////////////////////////////////////////////////////End

//////////////////////////////////////////////////////////////////////////No such name in the Database!

//////////////////////////////////////////////////////////////////////////No such name in the Database!

//////////////////////////////////////////////////////////////////////////Trainer Cikatiridis works with Cat Munchi!

//////////////////////////////////////////////////////////////////////////>>> Meow!

//////////////////////////////////////////////////////////////////////////>>> No trick for you! I'm too lazy!

//////////////////////////////////////////////////////////////////////////Trainer Cikatiridis works with Cat Munchi!

//////////////////////////////////////////////////////////////////////////>>> Meow!

//////////////////////////////////////////////////////////////////////////>>> No trick for you! I'm too lazy!

//////////////////////////////////////////////////////////////////////////Trainer Cikatiridis works with Dog Topcho!

//////////////////////////////////////////////////////////////////////////>>> Woof!

//////////////////////////////////////////////////////////////////////////>>> Hold my paw, human!

//////////////////////////////////////////////////////////////////////////Trainer Cikatiridis works with Dog Osvaldo!

//////////////////////////////////////////////////////////////////////////>>> Woof!

//////////////////////////////////////////////////////////////////////////>>> Hold my paw, human!




//////////////////////////////////////////////////////////////////////////abstract class Animal : IAnimal

//////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////  private string name;



//////////////////////////////////////////////////////////////////////////  protected Animal(string name)

//////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////    Name = name;

//////////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////////  public string Name

//////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////    get { return name; }

//////////////////////////////////////////////////////////////////////////    private set

//////////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////////      if (string.IsNullOrEmpty(value) || string.IsNullOrWhiteSpace(value))

//////////////////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////////////////        throw new ArgumentException("Name can't be null or empty!");

//////////////////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////////////////      name = value;

//////////////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////////  public string Type { }



//////////////////////////////////////////////////////////////////////////  public void Perform()

//////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////    Console.WriteLine($">>> {this.MakeNoise()}");

//////////////////////////////////////////////////////////////////////////    Console.WriteLine($">>> {this.MakeTrick()}");

//////////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////////  public override string ToString()

//////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////    return base.ToString();

//////////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////////class Cat

//////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////  public Cat(string name) : base(name)

//////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////////  public override string MakeNoise()

//////////////////////////////////////////////////////////////////////////  {



//////////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////////  public override string MakeTrick()

//////////////////////////////////////////////////////////////////////////  {



//////////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////////class Dog

//////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////  public Dog(string name) : base(name)

//////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////////  public override string MakeNoise()

//////////////////////////////////////////////////////////////////////////  {



//////////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////////  public override string MakeTrick()

//////////////////////////////////////////////////////////////////////////  {



//////////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////////interface IAnimal

//////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////  public string Type  get; }

//////////////////////////////////////////////////////////////////////////public string Name { get; }

//////////////////////////////////////////////////////////////////////////void Perform();

//////////////////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////////////////interface IMakeNoise

//////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////  string MakeNoise();

//////////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////////interface IMakeTrick

//////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////  string MakeTrick()

//////////////////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////////////////class Program

//////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////  static void Main(string[] args)

//////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////    List<Cat> animals = new List<Cat>();



//////////////////////////////////////////////////////////////////////////    int n = int.Parse(Console.ReadLine());



//////////////////////////////////////////////////////////////////////////    for (int i = 0; i < n; i++)

//////////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////////      string[] line = Console.ReadLine().Split();

//////////////////////////////////////////////////////////////////////////      IAnimal animal = CreateAnimal(line);

//////////////////////////////////////////////////////////////////////////      animals.Add(animal);

//////////////////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////////////////    string trainerName = Console.ReadLine();



//////////////////////////////////////////////////////////////////////////    Trainer trainer = null;



//////////////////////////////////////////////////////////////////////////    string name = Console.ReadLine();



//////////////////////////////////////////////////////////////////////////    while (name != "End")

//////////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////////      IAnimal current = animals.Where(a => a.Name.Equals(name)).FirstOrDefault();



//////////////////////////////////////////////////////////////////////////      if (current == null)

//////////////////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////////////////        Console.WriteLine("No such name in the Database!");




//////////////////////////////////////////////////////////////////////////                else

//////////////////////////////////////////////////////////////////////////        {

//////////////////////////////////////////////////////////////////////////          if (trainer == null)

//////////////////////////////////////////////////////////////////////////          {

//////////////////////////////////////////////////////////////////////////            trainer = new Trainer(trainerName, current);

//////////////////////////////////////////////////////////////////////////          }

//////////////////////////////////////////////////////////////////////////          trainer.Work(current);

//////////////////////////////////////////////////////////////////////////          trainer.Make();

//////////////////////////////////////////////////////////////////////////        }



//////////////////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////////////    private static IAnimal CreateAnimal(string[] line)

//////////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////////      IAnimal animal = null;

//////////////////////////////////////////////////////////////////////////      switch (line[0])

//////////////////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////////////////        case "Cat":

//////////////////////////////////////////////////////////////////////////          animal = new Cat(line[1]);

//////////////////////////////////////////////////////////////////////////          break;

//////////////////////////////////////////////////////////////////////////        case "Dog":

//////////////////////////////////////////////////////////////////////////          animal = new Dog(line[1]);

//////////////////////////////////////////////////////////////////////////          break;

//////////////////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////////////////      return animal;

//////////////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////////  Trainer

//////////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////////        private IAnimal entity;

//////////////////////////////////////////////////////////////////////////  private string name;



//////////////////////////////////////////////////////////////////////////  public Trainer(string name, IAnimal entity)

//////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////    this.Name = name;

//////////////////////////////////////////////////////////////////////////    this.Entity = entity;

//////////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////////  public string Name

//////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////    private set

//////////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////////      if (string.IsNullOrEmpty(value) || string.IsNullOrWhiteSpace(value))

//////////////////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////////////////        throw new ArgumentException("Name can't be null or empty!");

//////////////////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////////////////      name = value;

//////////////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////////  public IAnimal Entity

//////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////    get { return Еntity; }

//////////////////////////////////////////////////////////////////////////    private set

//////////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////////      entity = value;

//////////////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////////  public void Work(IAnimal entity)

//////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////    this.Entity = entity;

//////////////////////////////////////////////////////////////////////////    Console.WriteLine($"Trainer {this.Name} works with {Entity}!");

//////////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////////  public void Make()

//////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////    this.Entity.Perform();

//////////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////////}




////////////////////////////////////////////////////////////////////////////Animal.cs



//////////////////////////////////////////////////////////////////////////abstract class Animal : IAnimal

//////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////  private string name;



//////////////////////////////////////////////////////////////////////////  protected Animal(string name)

//////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////    Name = name;

//////////////////////////////////////////////////////////////////////////  }





//////////////////////////////////////////////////////////////////////////  public string Name

//////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////    get { return name; }

//////////////////////////////////////////////////////////////////////////    private set

//////////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////////      if (string.IsNullOrEmpty(value) || string.IsNullOrWhiteSpace(value))

//////////////////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////////////////        throw new ArgumentException("Name can't be null or empty!");

//////////////////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////////////////      name = value;

//////////////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////////  public string Type { }



//////////////////////////////////////////////////////////////////////////  public void Perform()

//////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////    Console.WriteLine($">>> {this.MakeNoise()}");

//////////////////////////////////////////////////////////////////////////    Console.WriteLine($">>> {this.MakeTrick()}");

//////////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////////  public override string ToString()

//////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////    return base.ToString();

//////////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////////}


////////////////////////////////////////////////////////////////////////////Cat.cs

//////////////////////////////////////////////////////////////////////////class Cat

//////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////  public Cat(string name) : base(name)

//////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////////  public override string MakeNoise()

//////////////////////////////////////////////////////////////////////////  {



//////////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////////  public override string MakeTrick()

//////////////////////////////////////////////////////////////////////////  {



//////////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////////}


////////////////////////////////////////////////////////////////////////////Dog.cs



//////////////////////////////////////////////////////////////////////////class Dog

//////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////  public Dog(string name) : base(name)

//////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////////  public override string MakeNoise()

//////////////////////////////////////////////////////////////////////////  {



//////////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////////  public override string MakeTrick()

//////////////////////////////////////////////////////////////////////////  {



//////////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////////////interface IAnimal

//////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////  public string Type  get; }

//////////////////////////////////////////////////////////////////////////public string Name { get; }

//////////////////////////////////////////////////////////////////////////void Perform();

//////////////////////////////////////////////////////////////////////////    }






//////////////////////////////////////////////////////////////////////////interface IMakeNoise

//////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////  string MakeNoise();

//////////////////////////////////////////////////////////////////////////}


//////////////////////////////////////////////////////////////////////////interface IMakeTrick

//////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////  string MakeTrick()

//////////////////////////////////////////////////////////////////////////    }


////////////////////////////////////////////////////////////////////////////Program.cs



//////////////////////////////////////////////////////////////////////////class Program

//////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////  static void Main(string[] args)

//////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////    List<Cat> animals = new List<Cat>();



//////////////////////////////////////////////////////////////////////////    int n = int.Parse(Console.ReadLine());



//////////////////////////////////////////////////////////////////////////    for (int i = 0; i < n; i++)

//////////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////////      string[] line = Console.ReadLine().Split();

//////////////////////////////////////////////////////////////////////////      IAnimal animal = CreateAnimal(line);

//////////////////////////////////////////////////////////////////////////      animals.Add(animal);

//////////////////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////////////////    string trainerName = Console.ReadLine();



//////////////////////////////////////////////////////////////////////////    Trainer trainer = null;



//////////////////////////////////////////////////////////////////////////    string name = Console.ReadLine();



//////////////////////////////////////////////////////////////////////////    while (name != "End")

//////////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////////      IAnimal current = animals.Where(a => a.Name.Equals(name)).FirstOrDefault();



//////////////////////////////////////////////////////////////////////////      if (current == null)

//////////////////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////////////////        Console.WriteLine("No such name in the Database!");




//////////////////////////////////////////////////////////////////////////                else

//////////////////////////////////////////////////////////////////////////        {

//////////////////////////////////////////////////////////////////////////          if (trainer == null)

//////////////////////////////////////////////////////////////////////////          {

//////////////////////////////////////////////////////////////////////////            trainer = new Trainer(trainerName, current);

//////////////////////////////////////////////////////////////////////////          }

//////////////////////////////////////////////////////////////////////////          trainer.Work(current);

//////////////////////////////////////////////////////////////////////////          trainer.Make();

//////////////////////////////////////////////////////////////////////////        }



//////////////////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////////////    private static IAnimal CreateAnimal(string[] line)

//////////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////////      IAnimal animal = null;

//////////////////////////////////////////////////////////////////////////      switch (line[0])

//////////////////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////////////////        case "Cat":

//////////////////////////////////////////////////////////////////////////          animal = new Cat(line[1]);

//////////////////////////////////////////////////////////////////////////          break;

//////////////////////////////////////////////////////////////////////////        case "Dog":

//////////////////////////////////////////////////////////////////////////          animal = new Dog(line[1]);

//////////////////////////////////////////////////////////////////////////          break;

//////////////////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////////////////      return animal;

//////////////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////////  //Trainer.cs


//////////////////////////////////////////////////////////////////////////  Trainer

//////////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////////        private IAnimal entity;

//////////////////////////////////////////////////////////////////////////  private string name;



//////////////////////////////////////////////////////////////////////////  public Trainer(string name, IAnimal entity)

//////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////    this.Name = name;

//////////////////////////////////////////////////////////////////////////    this.Entity = entity;

//////////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////////  public string Name

//////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////    private set

//////////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////////      if (string.IsNullOrEmpty(value) || string.IsNullOrWhiteSpace(value))

//////////////////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////////////////        throw new ArgumentException("Name can't be null or empty!");

//////////////////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////////////////      name = value;

//////////////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////////  public IAnimal Entity

//////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////    get { return Еntity; }

//////////////////////////////////////////////////////////////////////////    private set

//////////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////////      entity = value;

//////////////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////////  public void Work(IAnimal entity)

//////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////    this.Entity = entity;

//////////////////////////////////////////////////////////////////////////    Console.WriteLine($"Trainer {this.Name} works with {Entity}!");

//////////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////////  public void Make()

//////////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////////    this.Entity.Perform();

//////////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////////}


//////////////////////////////////////////////////////////////////////////Въпрос 8
//////////////////////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////Посочете по какъв начин бихте декларирали шаблонен клас в C#.

//////////////////////////////////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////////////////////////////////a. class ClassName<T>
//////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////}
//////////////////////////////////////////////////////////////////////////b. class ClassName"T"
//////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////}
//////////////////////////////////////////////////////////////////////////c. class ClassName { T }
//////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////}
//////////////////////////////////////////////////////////////////////////d. class ClassName(T)
//////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////}
//////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////////////////////Правилният отговор е: class ClassName<T>
//////////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////////}
//////////////////////////////////////////////////////////////////////////Въпрос 9
//////////////////////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////Посочете кое от изброените твърдение е вярно за класовете в C#.

//////////////////////////////////////////////////////////////////////////Изберете едно или повече:
//////////////////////////////////////////////////////////////////////////a.Можем да създаваме инстанции. 
//////////////////////////////////////////////////////////////////////////b. Описва състоянието и поведението на обектите 
//////////////////////////////////////////////////////////////////////////c. Той е референтен тип и включва само абстрактни членове като събития, методи и свойства.
//////////////////////////////////////////////////////////////////////////d. Поддържа множествено наследяване.
//////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////////////////////The correct answers are: Можем да създаваме инстанции., Описва състоянието и поведението на обектите
//////////////////////////////////////////////////////////////////////////Въпрос 10
//////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////От максимално 6,00
//////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////Имате следния код:

//////////////////////////////////////////////////////////////////////////    public class Scale : IComparable
//////////////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////////////  private var left;
//////////////////////////////////////////////////////////////////////////  private var right;

//////////////////////////////////////////////////////////////////////////  public Scale(var left, var right)
//////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////    this.left = left;
//////////////////////////////////////////////////////////////////////////    this.right = right;
//////////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////////  public var GetHavier()
//////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////    if (left.CompareTo(right) > 0)
//////////////////////////////////////////////////////////////////////////    { return left; }
//////////////////////////////////////////////////////////////////////////    else if (left.CompareTo(right) < 0)
//////////////////////////////////////////////////////////////////////////    { return right; }
//////////////////////////////////////////////////////////////////////////    return default;
//////////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////////////Модифицирайте кода, така че Везната да може да сравнява всякакви типове данни. Също така трябва да ограничите Везната, че елементите, които ще  сравнява ще бъдат само сравними типове. 



//////////////////////////////////////////////////////////////////////////    public class Scale : IComparable
//////////////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////////////  private var left;
//////////////////////////////////////////////////////////////////////////  private var right;

//////////////////////////////////////////////////////////////////////////  public Scale(var left, var right)
//////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////    this.left = left;
//////////////////////////////////////////////////////////////////////////    this.right = right;
//////////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////////  public var GetHavier()
//////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////    if (left.CompareTo(right) > 0)
//////////////////////////////////////////////////////////////////////////    { return left; }
//////////////////////////////////////////////////////////////////////////    else if (left.CompareTo(right) < 0)
//////////////////////////////////////////////////////////////////////////    { return right; }
//////////////////////////////////////////////////////////////////////////    return default;
//////////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////////}




//////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////public class Scale<T> where T : IComparable<T>//2т
//////////////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////////////  private T left; //1т
//////////////////////////////////////////////////////////////////////////  private T right; //1т

//////////////////////////////////////////////////////////////////////////  public Scale(T left, T right)//2т
//////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////    this.left = left;
//////////////////////////////////////////////////////////////////////////    this.right = right;
//////////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////////  public T GetHavier()
//////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////    if (left.CompareTo(right) > 0)
//////////////////////////////////////////////////////////////////////////    { return left; }
//////////////////////////////////////////////////////////////////////////    else if (left.CompareTo(right) < 0)
//////////////////////////////////////////////////////////////////////////    { return right; }
//////////////////////////////////////////////////////////////////////////    return default(T);
//////////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////////////Въпрос 11
//////////////////////////////////////////////////////////////////////////Неправилно
//////////////////////////////////////////////////////////////////////////0,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////Избройте четирите основни принципа на обектно-ориентираното програмиране.

//////////////////////////////////////////////////////////////////////////Отговор: 
//////////////////////////////////////////////////////////////////////////1.Наследяване  2.Капсулация  3.Полиморфизъм  4.Абстракция
//////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////Правилният отговор е: капсулация, наследяване, абстракция, полиморфизъм
//////////////////////////////////////////////////////////////////////////Въпрос 12
//////////////////////////////////////////////////////////////////////////Неправилно
//////////////////////////////////////////////////////////////////////////0,00 от максимално 4,00 точки
//////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////Имате зададена следната схема:



//////////////////////////////////////////////////////////////////////////Методът ExplainMyself ще бъде презаписан или презареден? 

//////////////////////////////////////////////////////////////////////////Запишете отговора си в полето и обяснете защо?

//////////////////////////////////////////////////////////////////////////Отговор: 
//////////////////////////////////////////////////////////////////////////Презаписан.
//////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////Правилният отговор е: Методът ще бъде презаписан, защото се използва в подкласовете и има една и съща сигнатура.
//////////////////////////////////////////////////////////////////////////Въпрос 13
//////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////Дайте пример за шаблонен клас, който да се казва Кутия и тази кутия да може да съхранява всичко. В този клас създайте и един метод, който да добавя елемент в края на редицата.

//////////////////////////////////////////////////////////////////////////асд

//////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////class Box<T>
//////////////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////////////  private List<T> items;

//////////////////////////////////////////////////////////////////////////  public Box()
//////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////    items = new List<T>();
//////////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////////  public void Add(T item)
//////////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////////    this.items.Add(item);
//////////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////////////Въпрос 14
//////////////////////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////Посочете кое от изброените е дефиниция на метод, който може да бъде презаписан в клас наследник.

//////////////////////////////////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////////////////////////////////a. Статичен метод.
//////////////////////////////////////////////////////////////////////////b. Виртуален метод. 
//////////////////////////////////////////////////////////////////////////c. Всеки метод може да бъде презаписан.
//////////////////////////////////////////////////////////////////////////d. Нито едно от изброените.
//////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////////////////////Правилният отговор е: Виртуален метод.
//////////////////////////////////////////////////////////////////////////Въпрос 15
//////////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////////От максимално 6,00
//////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////Имате следния пример: 

//////////////////////////////////////////////////////////////////////////клас Circle е производен на абстрактният клас Figure. 

//////////////////////////////////////////////////////////////////////////Демонстрирайте начините, по които е възможно да се декларира референция на някой от класовете, която да сочи обект от клас Circle:



//////////////////////////////////////////////////////////////////////////ада

//////////////////////////////////////////////////////////////////////////Въпрос 16
//////////////////////////////////////////////////////////////////////////Отчасти верен
//////////////////////////////////////////////////////////////////////////3,33 от максимално 4,00 точки
//////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////Свържете кои от характеристиките се отнасят за абстрактните класове, кои за интерфейсите.

//////////////////////////////////////////////////////////////////////////Може да наследи само един абстрактен клас.
//////////////////////////////////////////////////////////////////////////Абстракция


//////////////////////////////////////////////////////////////////////////Могат да предоставят целия код и/или само детайлите, които трябва да се презапишат.
//////////////////////////////////////////////////////////////////////////Интерфейси


//////////////////////////////////////////////////////////////////////////Може да имплементира няколко интерфейса. 
//////////////////////////////////////////////////////////////////////////И за двете


//////////////////////////////////////////////////////////////////////////Може да съдържа модификатори за достъп.
//////////////////////////////////////////////////////////////////////////Абстракция


//////////////////////////////////////////////////////////////////////////Не може да предоставя никакъв код, предоставя само описание.
//////////////////////////////////////////////////////////////////////////Интерфейси


//////////////////////////////////////////////////////////////////////////Нямат модификатори за достъп.Всичко е публично по подразбиране.
//////////////////////////////////////////////////////////////////////////Интерфейси

//////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////Your answer is partially correct.
//////////////////////////////////////////////////////////////////////////Вие правилно сте избрали 5.
//////////////////////////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////////////////////////Свържете кои от характеристиките се отнасят за абстрактните класове, кои за интерфейсите.

//////////////////////////////////////////////////////////////////////////Може да наследи само един абстрактен клас. [Абстракция]

//////////////////////////////////////////////////////////////////////////Могат да предоставят целия код и/или само детайлите, които трябва да се презапишат. [Абстракция]

//////////////////////////////////////////////////////////////////////////Може да имплементира няколко интерфейса. [И за двете ]

//////////////////////////////////////////////////////////////////////////Може да съдържа модификатори за достъп. [Абстракция]

//////////////////////////////////////////////////////////////////////////Не може да предоставя никакъв код, предоставя само описание. [Интерфейси]

//////////////////////////////////////////////////////////////////////////Нямат модификатори за достъп.Всичко е публично по подразбиране. [Интерфейси]
//////////////////////////////////////////////////////////////////////////Въпрос 17
//////////////////////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////////////////////4,00 от максимално 4,00 точки
//////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////Открийте разликите между клас и интерфейс.Кои от изброените твърдения се отнасят за класовете в C#, кои за интерфейсите?

//////////////////////////////////////////////////////////////////////////Има както дефиниция, така и реализация.blank

//////////////////////////////////////////////////////////////////////////Има само дефиниция.  blank

//////////////////////////////////////////////////////////////////////////Не може да бъде инстанциран.  blank

//////////////////////////////////////////////////////////////////////////Може да бъде инстанциран.blank

//////////////////////////////////////////////////////////////////////////Може да съдържа членове, методи, заедно с дефиниция и реализация.blank

//////////////////////////////////////////////////////////////////////////Набор от дефиниции, които трябва да се приложат.blank

//////////////////////////////////////////////////////////////////////////ИнтерфейсИнтерфейсИнтерфейсИнтерфейсИнтерфейсИнтерфейсКласКласКласКласКласКлас
//////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////////////////////////Открийте разликите между клас и интерфейс. Кои от изброените твърдения се отнасят за класовете в C#, кои за интерфейсите?

//////////////////////////////////////////////////////////////////////////Има както дефиниция, така и реализация. [Клас]

//////////////////////////////////////////////////////////////////////////Има само дефиниция. [Интерфейс]

//////////////////////////////////////////////////////////////////////////Не може да бъде инстанциран. [Интерфейс]

//////////////////////////////////////////////////////////////////////////Може да бъде инстанциран. [Клас]

//////////////////////////////////////////////////////////////////////////Може да съдържа членове, методи, заедно с дефиниция и реализация. [Клас]

//////////////////////////////////////////////////////////////////////////Набор от дефиниции, които трябва да се приложат. [Интерфейс]
//////////////////////////////////////////////////////////////////////////Въпрос 18
//////////////////////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////////Дефинирайте термина полиморфизъм в обектно-ориентираното програмиране, като поставите липсващите думи в текста.

//////////////////////////////////////////////////////////////////////////Терминът полиморфизъм в обектно-ориентираното програмиране определя, че
//////////////////////////////////////////////////////////////////////////едни и същи (еднотипни)
//////////////////////////////////////////////////////////////////////////  действия се реализират по
//////////////////////////////////////////////////////////////////////////различен начин
//////////////////////////////////////////////////////////////////////////  в зависимост от обектите, върху които се прилагат. Такива действия се наричат
//////////////////////////////////////////////////////////////////////////полиморфични
////////////////////////////////////////////////////////////////////////// .За да се реализира
//////////////////////////////////////////////////////////////////////////полиморфно действие
////////////////////////////////////////////////////////////////////////// , класовете на обектите, върху които се прилага това действие, трябва да имат
//////////////////////////////////////////////////////////////////////////общ корен
//////////////////////////////////////////////////////////////////////////  т.е.да бъдат производни на
//////////////////////////////////////////////////////////////////////////един и същи клас
////////////////////////////////////////////////////////////////////////// .

//////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////////////////////////Дефинирайте термина полиморфизъм в обектно-ориентираното програмиране, като поставите липсващите думи в текста.

//////////////////////////////////////////////////////////////////////////Терминът полиморфизъм в обектно-ориентираното програмиране определя, че[едни и същи(еднотипни)] действия се реализират по[различен начин] в зависимост от обектите, върху които се прилагат. Такива действия се наричат [полиморфични]. За да се реализира [полиморфно действие], класовете на обектите, върху които се прилага това действие, трябва да имат[общ корен] т.е.да бъдат производни на [един и същи клас].

//////////////////////////////////////////////////////////////////////////Край на прегледа
//////////////////////////////////////////////////////////////////////////Отиди на...
//////////////////////////////////////////////////////////////////////////Отиди на ...
//////////////////////////////////////////////////////////////////////////Прескочи<span id="mod_quiz_navblock_title"> Навигация в теста</span>
//////////////////////////////////////////////////////////////////////////Навигация в теста
//////////////////////////////////////////////////////////////////////////Край на прегледа
//////////////////////////////////////////////////////////////////////////Вие сте влезли в системата като Добри Илев (Изход)
//////////////////////////////////////////////////////////////////////////тренировъчен-курс-по
//////////////////////////////////////////////////////////////////////////Data retention summary
////////////////////////////////////////////////////////////////////////using System.Numerics;
///////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////using System.Runtime.InteropServices;
///////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////using System.Text.RegularExpressions;
///////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////Прескочи на основното съдържание
////////////////////////////////////////////////////////////////////////ПГЕЕ
////////////////////////////////////////////////////////////////////////Български ‎(bg)‎ 
////////////////////////////////////////////////////////////////////////Добри Илев 
////////////////////////////////////////////////////////////////////////Тренировъчен курс - Програмно осигуряване
////////////////////////////////////////////////////////////////////////Начална страница
////////////////////////////////////////////////////////////////////////Моите курсове
//////////////////////////////////////////////////////////////////////// тренировъчен-курс-по
//////////////////////////////////////////////////////////////////////// Изпитна тема 4
//////////////////////////////////////////////////////////////////////// Тест към Изпитна тема №4
////////////////////////////////////////////////////////////////////////Започнат на	събота, 28 януари 2023, 21:31
////////////////////////////////////////////////////////////////////////Състояние Завършен
////////////////////////////////////////////////////////////////////////Приключен на	сряда, 15 март 2023, 17:49
////////////////////////////////////////////////////////////////////////Изминало време	45 дни 20 часа
////////////////////////////////////////////////////////////////////////Оценка	Още не е оценен
////////////////////////////////////////////////////////////////////////Въпрос 1
////////////////////////////////////////////////////////////////////////Отчасти верен
////////////////////////////////////////////////////////////////////////3,33 от максимално 4,00 точки
////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////Обяснете основните разлики между презареждане и презаписване на методи.

////////////////////////////////////////////////////////////////////////Методи с едно и също име, но различни сигнатури. 
////////////////////////////////////////////////////////////////////////Презареждане на методи

////////////////////////////////////////////////////////////////////////Може да се случи в същия клас или в негов подклас. 
////////////////////////////////////////////////////////////////////////Презареждане на методи

////////////////////////////////////////////////////////////////////////Може да се случи в подкласовете. 
////////////////////////////////////////////////////////////////////////Презаписване на методи

////////////////////////////////////////////////////////////////////////Трябва да има същия тип на връщана стойност. 
////////////////////////////////////////////////////////////////////////Презареждане на методи

////////////////////////////////////////////////////////////////////////При компилиране, според подадените параметри компилатора определя кой метод точно ще изпълни. 
////////////////////////////////////////////////////////////////////////Презареждане на методи

////////////////////////////////////////////////////////////////////////Модификатора за достъп не може да бъде по-ограничаващ. 
////////////////////////////////////////////////////////////////////////Презаписване на методи

////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////Your answer is partially correct.
////////////////////////////////////////////////////////////////////////Вие правилно сте избрали 5.
////////////////////////////////////////////////////////////////////////Правилният отговор е: Обяснете основните разлики между презареждане и презаписване на методи.

////////////////////////////////////////////////////////////////////////Методи с едно и също име, но различни сигнатури. [Презареждане на методи]
////////////////////////////////////////////////////////////////////////Може да се случи в същия клас или в негов подклас. [Презареждане на методи]
////////////////////////////////////////////////////////////////////////Може да се случи в подкласовете. [Презаписване на методи]
////////////////////////////////////////////////////////////////////////Трябва да има същия тип на връщана стойност. [Презаписване на методи]
////////////////////////////////////////////////////////////////////////При компилиране, според подадените параметри компилатора определя кой метод точно ще изпълни. [Презареждане на методи]
////////////////////////////////////////////////////////////////////////Модификатора за достъп не може да бъде по-ограничаващ. [Презаписване на методи]
////////////////////////////////////////////////////////////////////////Въпрос 2
////////////////////////////////////////////////////////////////////////Неправилно
////////////////////////////////////////////////////////////////////////0,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////Имате даден следния код:



////////////////////////////////////////////////////////////////////////Опишете кой от видовете полиморфизъм е използван в примера по-горе.



////////////////////////////////////////////////////////////////////////Отговор: 
////////////////////////////////////////////////////////////////////////Презаписване
////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////Правилният отговор е: Полиморфизъм по време на изпълнение.
////////////////////////////////////////////////////////////////////////Въпрос 3
////////////////////////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////Посочете какви са приликите и разликите между полиморфизъм и абстракция в обектно-ориентираното програмиране като поставите липсващите думи в текста.

////////////////////////////////////////////////////////////////////////Полиморфизмът може много да напомня на абстракцията, но в програми­рането се свързва най-вече с  blank  на методи в  blank  с цел  blank , насле­дено от базовия клас. Абстракцията се свързва със  blank  или функционалност.




////////////////////////////////////////////////////////////////////////промяна на оригиналното им поведениепромяна на оригиналното им поведениепромяна на оригиналното им поведениепромяна на оригиналното им поведениесъздаването на интерфейс на компонентсъздаването на интерфейс на компонентсъздаването на интерфейс на компонентсъздаването на интерфейс на компонентпренаписването (override) пренаписването(override) пренаписването(override) пренаписването(override) нас­ледените класовенас­ледените класовенас­ледените класовенас­ледените класове
////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////////////////////////////Посочете какви са приликите и разликите между полиморфизъм и абстракция в обектно-ориентираното програмиране като поставите липсващите думи в текста.

////////////////////////////////////////////////////////////////////////Полиморфизмът може много да напомня на абстракцията, но в програми­рането се свързва най-вече с [пренаписването(override)] на методи в [нас­ледените класове] с цел[промяна на оригиналното им поведение], насле­дено от базовия клас. Абстракцията се свързва със [създаването на интерфейс на компонент]
////////////////////////////////////////////////////////////////////////или функционалност.



////////////////////////////////////////////////////////////////////////Въпрос 4
////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////От максимално 6,00
////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////Дайте пример чрез код на C# за това как и къде бихте използвали презаписване на методи. 

////////////////////////////////////////////////////////////////////////Например имате класовете Animal и Dog. Имате и един единствен метод MakeTrick(), който трябва да отпечатва на конзолата за всички животни, че по подразбиране не могат да правят никакъв трик ("No trick!"). Само и единствено кучето умее трика да подава лапа ("Give a paw!"). 

////////////////////////////////////////////////////////////////////////Реализирайте примера чрез код на C#.

////////////////////////////////////////////////////////////////////////using System;



////////////////////////////////////////////////////////////////////////public class Animal

////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////  public virtual void MakeTrick()

////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////    Console.WriteLine("No trick!");

////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////public class Dog : Animal

////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////  public override void MakeTrick()

////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////    Console.WriteLine("Give a paw!");

////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////class Program

////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////  static void Main(string[] args)

////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////    Animal myAnimal = new Animal();

////////////////////////////////////////////////////////////////////////    Animal myDog = new Dog();



////////////////////////////////////////////////////////////////////////    myAnimal.MakeTrick();

////////////////////////////////////////////////////////////////////////    myDog.MakeTrick();

////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////// class Animal
////////////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////////////  public virtual void MakeTrick()
////////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////////    Console.WriteLine("No trick...");
////////////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////////////}
////////////////////////////////////////////////////////////////////////class Dog : Animal
////////////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////////////  public override void MakeTrick()
////////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////////    Console.WriteLine("Give a paw...");
////////////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////////////Въпрос 5
////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////Дайте пример за шаблонен клас, който да се казва Кутия и тази кутия да може да съхранява всичко. В този клас създайте и един метод, който да проверява и връща като резултат дали даден елемент се съдържа в тази кутия.

////////////////////////////////////////////////////////////////////////using System;

////////////////////////////////////////////////////////////////////////using System.Collections.Generic;



////////////////////////////////////////////////////////////////////////public class Box<T>

////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////  private List<T> items;



////////////////////////////////////////////////////////////////////////  public Box()

////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////    items = new List<T>();

////////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////////  public void Add(T item)

////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////    items.Add(item);

////////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////////  public bool Contains(T item)

////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////    return items.Contains(item);

////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////class Program

////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////  static void Main(string[] args)

////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////    Box<int> intBox = new Box<int>();

////////////////////////////////////////////////////////////////////////    intBox.Add(5);

////////////////////////////////////////////////////////////////////////    intBox.Add(10);

////////////////////////////////////////////////////////////////////////    Console.WriteLine(intBox.Contains(5));

////////////////////////////////////////////////////////////////////////    Console.WriteLine(intBox.Contains(3));

////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////class Box<T>
////////////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////////////  private List<T> items;

////////////////////////////////////////////////////////////////////////  public Box()
////////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////////    items = new List<T>();
////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////  public bool Contains(T item)
////////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////////    return this.items.Contains(item);
////////////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////////////Въпрос 6
////////////////////////////////////////////////////////////////////////Отчасти верен
////////////////////////////////////////////////////////////////////////4,80 от максимално 6,00 точки
////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////Открийте липсващите думи в текста:

////////////////////////////////////////////////////////////////////////Възможността референция към 
////////////////////////////////////////////////////////////////////////производен клас
////////////////////////////////////////////////////////////////////////  да сочи обект както от базовия, така и обект от някой от производните класове е в основата на реализацията на 
////////////////////////////////////////////////////////////////////////полиморфизма
////////////////////////////////////////////////////////////////////////  в езика C#.

////////////////////////////////////////////////////////////////////////Кои от следните примери потвърждават това правило, ако имате следната йерархия class Cat : class Animal ?

////////////////////////////////////////////////////////////////////////Cat cat  = new Animal();
////////////////////////////////////////////////////////////////////////не


////////////////////////////////////////////////////////////////////////Animal animal = new Animal();
////////////////////////////////////////////////////////////////////////да


////////////////////////////////////////////////////////////////////////Animal animal = new Cat();
////////////////////////////////////////////////////////////////////////да




////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////Your answer is partially correct.
////////////////////////////////////////////////////////////////////////Вие правилно сте избрали 4.
////////////////////////////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////////////////////////////Открийте липсващите думи в текста:

////////////////////////////////////////////////////////////////////////Възможността референция към [базов клас] да сочи обект както от базовия, така и обект от някой от производните класове е в основата на реализацията на [полиморфизма] в езика C#.

////////////////////////////////////////////////////////////////////////Кои от следните примери потвърждават това правило, ако имате следната йерархия class Cat : class Animal ?

////////////////////////////////////////////////////////////////////////Cat cat  = new Animal(); [не]

////////////////////////////////////////////////////////////////////////Animal animal = new Animal(); [да]

////////////////////////////////////////////////////////////////////////Animal animal = new Cat(); [да]



////////////////////////////////////////////////////////////////////////Въпрос 7
////////////////////////////////////////////////////////////////////////Неправилно
////////////////////////////////////////////////////////////////////////0,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////Посочете по какъв начин указваме на даден метод от базовия клас, че искаме да презапишем неговото поведение.

////////////////////////////////////////////////////////////////////////Изберете едно
////////////////////////////////////////////////////////////////////////a. Чрез ключовата дума static.
////////////////////////////////////////////////////////////////////////b.Чрез ключовата дума override. 
////////////////////////////////////////////////////////////////////////c. Чрез ключовата дума overwrite.
////////////////////////////////////////////////////////////////////////d. Чрез ключовата дума virtual.
////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////Your answer is incorrect.
////////////////////////////////////////////////////////////////////////Правилният отговор е: Чрез ключовата дума virtual.
////////////////////////////////////////////////////////////////////////Въпрос 8
////////////////////////////////////////////////////////////////////////Отчасти верен
////////////////////////////////////////////////////////////////////////5,33 от максимално 6,00 точки
////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////Имате абстрактен клас и обикновен клас. Открийте и свържете коя от характеристиките се отнася за абстрактния клас и коя за не абстрактен клас.



////////////////////////////////////////////////////////////////////////Не можем да създаваме инстанции.  blank 

////////////////////////////////////////////////////////////////////////Може да има само абстрактни членове на класа.  blank 

////////////////////////////////////////////////////////////////////////Могат да дефинират методи без тяло (без имплементация).  blank

////////////////////////////////////////////////////////////////////////Можем да създаваме инстанции.  blank 

////////////////////////////////////////////////////////////////////////Може да има само не-абстрактни членове на класа.  blank 

////////////////////////////////////////////////////////////////////////Не могат да дефинират методи без тяло (имплементация).  blank

////////////////////////////////////////////////////////////////////////Съдържа ключовата дума abstract пред ключовата дума class.  blank

////////////////////////////////////////////////////////////////////////Може да има абстрактни и не-абстрактни членове на класа.  blank 

////////////////////////////////////////////////////////////////////////Не съдържа ключовата дума abstract пред ключовата дума class.  blank



////////////////////////////////////////////////////////////////////////За нито един от дватаЗа нито един от дватаЗа нито един от дватаЗа нито един от дватаЗа нито един от дватаЗа нито един от дватаЗа нито един от дватаЗа нито един от дватаЗа нито един от дватаОбикновен класОбикновен класОбикновен класОбикновен класОбикновен класОбикновен класОбикновен класОбикновен класОбикновен класАбстрактен клас Абстрактен клас Абстрактен клас Абстрактен клас Абстрактен клас Абстрактен клас Абстрактен клас Абстрактен клас Абстрактен клас 
////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////Your answer is partially correct.
////////////////////////////////////////////////////////////////////////Вие правилно сте избрали 8.
////////////////////////////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////////////////////////////Имате абстрактен клас и обикновен клас. Открийте и свържете коя от характеристиките се отнася за абстрактния клас и коя за не абстрактен клас.



////////////////////////////////////////////////////////////////////////Не можем да създаваме инстанции. [Абстрактен клас]

////////////////////////////////////////////////////////////////////////Може да има само абстрактни членове на класа. [За нито един от двата]

////////////////////////////////////////////////////////////////////////Могат да дефинират методи без тяло (без имплементация). [Абстрактен клас]

////////////////////////////////////////////////////////////////////////Можем да създаваме инстанции. [Обикновен клас]

////////////////////////////////////////////////////////////////////////Може да има само не-абстрактни членове на класа. [Обикновен клас]

////////////////////////////////////////////////////////////////////////Не могат да дефинират методи без тяло (имплементация). [Обикновен клас]

////////////////////////////////////////////////////////////////////////Съдържа ключовата дума abstract пред ключовата дума class. [Абстрактен клас]

////////////////////////////////////////////////////////////////////////Може да има абстрактни и не-абстрактни членове на класа. [Абстрактен клас]

////////////////////////////////////////////////////////////////////////Не съдържа ключовата дума abstract пред ключовата дума class. [Обикновен клас]


////////////////////////////////////////////////////////////////////////Въпрос 9
////////////////////////////////////////////////////////////////////////Отчасти верен
////////////////////////////////////////////////////////////////////////2,67 от максимално 4,00 точки
////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////Свържете кои от характеристиките се отнасят за абстрактните класове, кои за интерфейсите.

////////////////////////////////////////////////////////////////////////Може да притежава полета и константи. 
////////////////////////////////////////////////////////////////////////Абстрактни класове


////////////////////////////////////////////////////////////////////////Е по-добър избор, ако множество имплементации споделят само сигнатурата на методите и нищо друго. 
////////////////////////////////////////////////////////////////////////Абстрактни класове


////////////////////////////////////////////////////////////////////////Не поддържа полета. 
////////////////////////////////////////////////////////////////////////Интерфейси


////////////////////////////////////////////////////////////////////////Е по-добър избор, ако множество имплементации са от сходен вид и имат общо поведение или статут. 
////////////////////////////////////////////////////////////////////////Интерфейси


////////////////////////////////////////////////////////////////////////Ако добавим нов метод, то имаме опцията да създадем имплементация по подразбиране и така съществуващият код ще може да работи коректно. 
////////////////////////////////////////////////////////////////////////Абстрактни класове


////////////////////////////////////////////////////////////////////////Ако добавим нов метод, то трябва да проследим всичките му имплементации и да дефинираме имплементация за новия метод. 
////////////////////////////////////////////////////////////////////////Интерфейси






////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////Your answer is partially correct.
////////////////////////////////////////////////////////////////////////Вие правилно сте избрали 4.
////////////////////////////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////////////////////////////Свържете кои от характеристиките се отнасят за абстрактните класове, кои за интерфейсите.

////////////////////////////////////////////////////////////////////////Може да притежава полета и константи. [Абстрактни класове]

////////////////////////////////////////////////////////////////////////Е по-добър избор, ако множество имплементации споделят само сигнатурата на методите и нищо друго. [Интерфейси]

////////////////////////////////////////////////////////////////////////Не поддържа полета. [Интерфейси]

////////////////////////////////////////////////////////////////////////Е по-добър избор, ако множество имплементации са от сходен вид и имат общо поведение или статут. [Абстрактни класове]

////////////////////////////////////////////////////////////////////////Ако добавим нов метод, то имаме опцията да създадем имплементация по подразбиране и така съществуващият код ще може да работи коректно. [Абстрактни класове]

////////////////////////////////////////////////////////////////////////Ако добавим нов метод, то трябва да проследим всичките му имплементации и да дефинираме имплементация за новия метод. [Интерфейси]





////////////////////////////////////////////////////////////////////////Въпрос 10
////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////Дефинирайте понятието абстракция в обектно-ориентираното програмиране.

////////////////////////////////////////////////////////////////////////Абстракция в обектно-ориентираното програмиране (ООП) е процесът на извличане на съществените характеристики на даден обект, като се игнорират нерелевантните детайли. Целта на абстракцията е да предостави по-генерално представяне на обекти, което улеснява разбирането и работата с тях. Това е един от основните принципи на ООП, който подпомага модулността, гъвкавостта и повторната употреба на кода.

////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////Абстракцията е основен принцип от обектно-ориентираното програмиране.

////////////////////////////////////////////////////////////////////////Абстракцията означава да работим с нещо, което знаем как да използваме, но не знаем как работи вътрешно.

////////////////////////////////////////////////////////////////////////Абстракцията е действие, при което игнорираме всички детайли, които не ни интересуват от даден обект, и разглеждаме само детайлите, които имат значение за проблема, който решаваме.

////////////////////////////////////////////////////////////////////////Абстракцията ни позволява да пишем код, който работи с абстрактни струк­тури от данни (например списък, речник, множество и други). Имайки абстрактния тип данни, ние можем да работим с него през неговия интер­фейс, без да се интересуваме от имплементацията му.

////////////////////////////////////////////////////////////////////////Има два начина за постигане на абстракция:
////////////////////////////////////////////////////////////////////////Интерфейси(100 % абстракция)
////////////////////////////////////////////////////////////////////////Абстрактен клас(0% - 100% абстракция)

////////////////////////////////////////////////////////////////////////Въпрос 11
////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////Дайте пример за наследяване в C#. 

////////////////////////////////////////////////////////////////////////Имате клас Animal с метод Eat(), който отпечатва "Eating...". Имате Котка и Куче, които трябва да наследяват от Animal. Те обаче трябва да могат да издават звук. Котката трябва да казва "Meow", а Кучето - "Bark". За тази цел създайте методи със съответните имена, котио извеждат на екрана звуците на всяко животно. Направете така че да не бъде възможно да се създаде обект от клас Animal.

////////////////////////////////////////////////////////////////////////Реализирайте го чрез програмен код на C#.

////////////////////////////////////////////////////////////////////////using System;



////////////////////////////////////////////////////////////////////////public abstract class Animal

////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////  public void Eat()

////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////    Console.WriteLine("Eating...");

////////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////////  public abstract void MakeSound();

////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////public class Cat : Animal

////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////  public override void MakeSound()

////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////    Console.WriteLine("Meow");

////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////public class Dog : Animal

////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////  public override void MakeSound()

////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////    Console.WriteLine("Bark");

////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////class Program

////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////  static void Main(string[] args)

////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////    Cat cat = new Cat();

////////////////////////////////////////////////////////////////////////    cat.Eat();

////////////////////////////////////////////////////////////////////////    cat.MakeSound();



////////////////////////////////////////////////////////////////////////    Dog dog = new Dog();

////////////////////////////////////////////////////////////////////////    dog.Eat();

////////////////////////////////////////////////////////////////////////    dog.MakeSound();

////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////Въпрос 12
////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////От максимално 40,00
////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

////////////////////////////////////////////////////////////////////////Предоставеният фрагмент е непълен/некоректен.

////////////////////////////////////////////////////////////////////////Вашата задача е да приведе предоставеният програмен код в работещ вид.


////////////////////////////////////////////////////////////////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

////////////////////////////////////////////////////////////////////////Тоталитрано дистопично общество

////////////////////////////////////////////////////////////////////////Бъдещето е! Вие сте владетел на тоталитрано дистопично общество населено с граждани и бунтовници!

////////////////////////////////////////////////////////////////////////На всеки ред ще има информация за гражданин или бунтовник, който се опитва да влезе в града във формат “ <id><name> <age><birthdate> ” за граждани или “<id><name> <age><group>” за бунтовник.

////////////////////////////////////////////////////////////////////////Дефинирайте клас Citizen с id, name, age, birthdate. Дефинирайте клас Rebel с id, name, age и group (низ).

////////////////////////////////////////////////////////////////////////ID - тата са уникални – няма да има 2 бунтовници/граждани или бунтовник и гражданин с едно и също id. Освен това Id-тата на бунтовниците започват с главна буква R, на гражданите с главна буква C.

////////////////////////////////////////////////////////////////////////Дефинирайте интерфейс IBuyer, който дефинира метод BuyFood() и свойство Food, което да е цяло число. Имплементирайте IBuyer интерфейса, като и бунтовниците и гражданите започват с 0 храна, когато бунтовник купи храна, неговата стойност за Food се увеличава с 5, когато гражданин купи храна, неговата стойност за Food се увеличава с 10.

////////////////////////////////////////////////////////////////////////ВАЖНО!!! Спазвайте принципите на ООП – наследяване, енкапсулация, абстракция, полиморфизъм! Където е необходимо имате свободата да използвате допълнителни интерфейси, класове и методи!

////////////////////////////////////////////////////////////////////////На първия ред от входа ще получите цяло число N – броят на хората, на всеки от следващите N реда ще получите информация в един от следните формати: “ < id > < name > < age > < birthdate >” за гражданин или “ <id> <name> <age><group>” за бунтовник.

////////////////////////////////////////////////////////////////////////След N реда ще получавате Id-та на хора, които са купили храна, като всяко Id ще е на отделен ред. Ще получавате Id-та, докато не получите команда “End”. Забележете, че не всички Id-та може да са валидни. В случай, че Id-то е невалидно – трябва да отпечатате съобщение във вида: „Entity with { Id }
////////////////////////////////////////////////////////////////////////does not exist!“, където Id е търсеното Id. За всяко съществуващо ID трябва да отпечатате закупената храна на всеки един гражданин/бунтовник във формат. В раздел изход можете да видите формата, в който трябва да отпечатате информацията.

////////////////////////////////////////////////////////////////////////Изход
////////////////////////////////////////////////////////////////////////На изхода трябва да отпечатате закупената храна на всеки един гражданин/бунтовник във формат:

////////////////////////////////////////////////////////////////////////Ако е гражданин:

////////////////////////////////////////////////////////////////////////„ID:< id > Citizen Name: < name > Age < age > Birthdate < birthdate > Food: < food >“

////////////////////////////////////////////////////////////////////////Ако е бунтовник:

////////////////////////////////////////////////////////////////////////„ID:< id > Rebel Name: < name > Age < age > Group < group > Food: < food >“

////////////////////////////////////////////////////////////////////////За целта трябва да презапишете ToString() метода!

////////////////////////////////////////////////////////////////////////На последният ред отпечатвате обощото количество закупена храна:

////////////////////////////////////////////////////////////////////////“TotalFood: < food quantity >”



////////////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////////2

////////////////////////////////////////////////////////////////////////C904041303 Pesho 25 04/04/1989

////////////////////////////////////////////////////////////////////////R31589456 Stancho 27 WildMonkeys

////////////////////////////////////////////////////////////////////////C904041303

////////////////////////////////////////////////////////////////////////R31589456

////////////////////////////////////////////////////////////////////////C904041303

////////////////////////////////////////////////////////////////////////End

////////////////////////////////////////////////////////////////////////ID:C904041303 Citizen Name: Pesho Age 25 Birthdate 04/04/1989 Food: 10

////////////////////////////////////////////////////////////////////////ID: R31589456 Rebel Name: Stancho Age 27 Group WildMonkeys Food: 5

////////////////////////////////////////////////////////////////////////ID: C904041303 Citizen Name: Pesho Age 25 Birthdate 04 / 04 / 1989 Food: 20

////////////////////////////////////////////////////////////////////////TotalFood: 25

////////////////////////////////////////////////////////////////////////4

////////////////////////////////////////////////////////////////////////R904041303 Stamat 23 TheSwarm

////////////////////////////////////////////////////////////////////////C31589456 Toncho 44 7308185527 18/08/1973

////////////////////////////////////////////////////////////////////////R56789522 Joro 31 Terrorists

////////////////////////////////////////////////////////////////////////C89456212335 Penka 27 881222212 22/12/1988

////////////////////////////////////////////////////////////////////////R904041303

////////////////////////////////////////////////////////////////////////C31589456

////////////////////////////////////////////////////////////////////////R904041303

////////////////////////////////////////////////////////////////////////R111111111

////////////////////////////////////////////////////////////////////////R56789522

////////////////////////////////////////////////////////////////////////R56789522

////////////////////////////////////////////////////////////////////////C89456212335

////////////////////////////////////////////////////////////////////////End

////////////////////////////////////////////////////////////////////////ID:R904041303 Rebel Name: Stamat Age 23 Group TheSwarm Food: 5

////////////////////////////////////////////////////////////////////////ID: C31589456 Citizen Name: Toncho Age 44 Birthdate 7308185527 Food: 10

////////////////////////////////////////////////////////////////////////ID: R904041303 Rebel Name: Stamat Age 23 Group TheSwarm Food: 10

////////////////////////////////////////////////////////////////////////Entity with R111111111 does not exist!

////////////////////////////////////////////////////////////////////////ID:R56789522 Rebel Name: Joro Age 31 Group Terrorists Food: 5

////////////////////////////////////////////////////////////////////////ID: R56789522 Rebel Name: Joro Age 31 Group Terrorists Food: 10

////////////////////////////////////////////////////////////////////////ID: C89456212335 Citizen Name: Penka Age 27 Birthdate 881222212 Food: 10

////////////////////////////////////////////////////////////////////////TotalFood: 40





////////////////////////////////////////////////////////////////////////internal class Citizen : Community

////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////  private string birthdate;





////////////////////////////////////////////////////////////////////////  public string Birthdate { get => this.birthdate; set => this.birthdate = value; }



////////////////////////////////////////////////////////////////////////  public void BuyFood()

////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////    base.Food += 10;

////////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////////  public override string ToString()

////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////    return base.ToString() + $"Birthdate {this.Birthdate} Food: {base.Food}";

////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////internal abstract class Community : IIdentifiable, IPersonable, IBuyer

////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////  private string id;

////////////////////////////////////////////////////////////////////////  private string name;

////////////////////////////////////////////////////////////////////////  private int age;

////////////////////////////////////////////////////////////////////////  private int food;

////////////////////////////////////////////////////////////////////////  protected Community(string id, string name, int age)

////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////    Id = id;

////////////////////////////////////////////////////////////////////////    Name = name;

////////////////////////////////////////////////////////////////////////    Age = age;

////////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////////  public string Id { get => this.id; set { this.id = value; } }



////////////////////////////////////////////////////////////////////////  public string Name => throw new NotImplementedException();



////////////////////////////////////////////////////////////////////////  public int Age { get => this.age; set { this.age = value; } }



////////////////////////////////////////////////////////////////////////  public int Food { get => this.food; protected set => this.food = value; }





////////////////////////////////////////////////////////////////////////  public void BuyFood();



////////////////////////////////////////////////////////////////////////  public override string ToString()

////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////    return $"ID:{this.Id} {this.GetType().Name} Name: {this.Name} Age {this.Age} ";

////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////internal interface IBuyer

////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////  void BuyFood();

////////////////////////////////////////////////////////////////////////  int Food { get; }

////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////internal interface IIdentifiable




////////////////////////////////////////////////////////////////////////        string Id { get; }

////////////////////////////////////////////////////////////////////////    }



////////////////////////////////////////////////////////////////////////internal IPersonable

////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////  string Name { get; }

////////////////////////////////////////////////////////////////////////  int Age { get; }

////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////internal class Program

////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////  static void Main(string[] args)

////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////    int n = int.Parse(Console.ReadLine());



////////////////////////////////////////////////////////////////////////    for (int i = 0; i > n; i++)

////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////      string[] input = Console.ReadLine().Split();

////////////////////////////////////////////////////////////////////////      if (community.ContainsKey(input[0]))

////////////////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////////////////        Community entity = CreateEntity(input);

////////////////////////////////////////////////////////////////////////        community.Add(input[0], entity);

////////////////////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////////////////////    }



////////////////////////////////////////////////////////////////////////    string id = Console.ReadLine();

////////////////////////////////////////////////////////////////////////    while (true)

////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////      if (community.ContainsKey(id))

////////////////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////////////////        community[id].BuyFood();

////////////////////////////////////////////////////////////////////////        Console.WriteLine(community[id]);

////////////////////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////////////////////      else

////////////////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////////////////        Console.WriteLine($"Entity with {id} does not exist!");

////////////////////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////////////////////      id = Console.ReadLine();

////////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////////    int totalFood = community.Sum(v => v.Value.Food);

////////////////////////////////////////////////////////////////////////    Console.WriteLine("TotalFood: {totalFood}");

////////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////////  public static Community CreateEntity(string[] info)

////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////    Community entity = null;

////////////////////////////////////////////////////////////////////////    string id = info[0];

////////////////////////////////////////////////////////////////////////    if (id.StartsWith("R"))

////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////      entity = new Rebel(id, info[1], int.Parse(info[2]), info[3]);

////////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////////    else if (id.StartsWith("C"))

////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////      entity = new Citizen(id, info[1], int.Parse(info[2]), info[3]);

////////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////////    return entity;

////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////internal class Rebel : Community

////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////  private string group;





////////////////////////////////////////////////////////////////////////  public void BuyFood()

////////////////////////////////////////////////////////////////////////  {



////////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////////  public override string ToString()

////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////    return base.ToString() + $"Group {this.Group} Food: {base.Food}";

////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////}






////////////////////////////////////////////////////////////////////////using System;

////////////////////////////////////////////////////////////////////////using System.Collections.Generic;

////////////////////////////////////////////////////////////////////////using System.Linq;



////////////////////////////////////////////////////////////////////////internal interface IIdentifiable

////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////  string Id { get; }

////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////internal interface IPersonable

////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////  string Name { get; }

////////////////////////////////////////////////////////////////////////  int Age { get; }

////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////internal interface IBuyer

////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////  void BuyFood();

////////////////////////////////////////////////////////////////////////  int Food { get; }

////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////internal abstract class Community : IIdentifiable, IPersonable, IBuyer

////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////  public string Id { get; }

////////////////////////////////////////////////////////////////////////  public string Name { get; }

////////////////////////////////////////////////////////////////////////  public int Age { get; }

////////////////////////////////////////////////////////////////////////  public int Food { get; protected set; }



////////////////////////////////////////////////////////////////////////  protected Community(string id, string name, int age)

////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////    Id = id;

////////////////////////////////////////////////////////////////////////    Name = name;

////////////////////////////////////////////////////////////////////////    Age = age;

////////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////////  public abstract void BuyFood();



////////////////////////////////////////////////////////////////////////  public override string ToString()

////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////    return $"ID:{Id} {GetType().Name} Name: {Name} Age {Age} ";

////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////internal class Citizen : Community

////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////  private string birthdate;



////////////////////////////////////////////////////////////////////////  public Citizen(string id, string name, int age, string birthdate)

////////////////////////////////////////////////////////////////////////      : base(id, name, age)

////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////    Birthdate = birthdate;

////////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////////  public string Birthdate { get; }



////////////////////////////////////////////////////////////////////////  public override void BuyFood()

////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////    Food += 10;

////////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////////  public override string ToString()

////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////    return base.ToString() + $"Birthdate {Birthdate} Food: {Food}";

////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////internal class Rebel : Community

////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////  private string group;



////////////////////////////////////////////////////////////////////////  public Rebel(string id, string name, int age, string group)

////////////////////////////////////////////////////////////////////////      : base(id, name, age)

////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////    Group = group;

////////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////////  public string Group { get; }



////////////////////////////////////////////////////////////////////////  public override void BuyFood()

////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////    Food += 5;

////////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////////  public override string ToString()

////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////    return base.ToString() + $"Group {Group} Food: {Food}";

////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////internal class Program

////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////  static void Main(string[] args)

////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////    int n = int.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////////////    Dictionary<string, Community> community = new Dictionary<string, Community>();



////////////////////////////////////////////////////////////////////////    for (int i = 0; i < n; i++)

////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////      string[] input = Console.ReadLine().Split();

////////////////////////////////////////////////////////////////////////      Community entity = CreateEntity(input);

////////////////////////////////////////////////////////////////////////      community.Add(input[0], entity);

////////////////////////////////////////////////////////////////////////    }



////////////////////////////////////////////////////////////////////////    string id = Console.ReadLine();

////////////////////////////////////////////////////////////////////////    while (id != "End")

////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////      if (community.ContainsKey(id))

////////////////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////////////////        community[id].BuyFood();

////////////////////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////////////////////      id = Console.ReadLine();

////////////////////////////////////////////////////////////////////////    }



////////////////////////////////////////////////////////////////////////    int totalFood = community.Sum(v => v.Value.Food);

////////////////////////////////////////////////////////////////////////    Console.WriteLine($"TotalFood: {totalFood}");

////////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////////  public static Community CreateEntity(string[] info)

////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////    Community entity = null;

////////////////////////////////////////////////////////////////////////    string id = info[0];

////////////////////////////////////////////////////////////////////////    if (id.StartsWith("R"))

////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////      entity = new Rebel(id, info[1], int.Parse(info[2]), info[3]);

////////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////////    else if (id.StartsWith("C"))

////////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////////      entity = new Citizen(id, info[1], int.Parse(info[2]), info[3]);

////////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////////    return entity;

////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////Въпрос 13
////////////////////////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////Посочете кое от изброените твърдение е вярно за класовете в C#.

////////////////////////////////////////////////////////////////////////Изберете едно или повече:
////////////////////////////////////////////////////////////////////////a.Описва състоянието и поведението на обектите 
////////////////////////////////////////////////////////////////////////b. Можем да създаваме инстанции. 
////////////////////////////////////////////////////////////////////////c. Поддържа множествено наследяване.
////////////////////////////////////////////////////////////////////////d. Той е референтен тип и включва само абстрактни членове като събития, методи и свойства.
////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////////////////////////////The correct answers are: Можем да създаваме инстанции., Описва състоянието и поведението на обектите
////////////////////////////////////////////////////////////////////////Въпрос 14
////////////////////////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////Посочете в кой от случаите бихте използвали шаблонни класове?

////////////////////////////////////////////////////////////////////////Изберете едно
////////////////////////////////////////////////////////////////////////a. Когато се налага да се създават класове, които използват еднотипни обекти и с различна функционалност.
////////////////////////////////////////////////////////////////////////b. Когато се налага да се създават класове, които са сходни по функционалност, а се различават само по типа на обектите, с които работят. 
////////////////////////////////////////////////////////////////////////c. Когато се налага да преизползваме базовите функционалности на родителския клас и/или трябва да презапишем поведението на наследниците.
////////////////////////////////////////////////////////////////////////d. Когато се налага да третираме обектите от наследен клас като обекти от негов базов клас.
////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////////////////////////////Правилният отговор е: Когато се налага да се създават класове, които са сходни по функционалност, а се различават само по типа на обектите, с които работят.
////////////////////////////////////////////////////////////////////////Въпрос 15
////////////////////////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////Посочете кое от изброените твърдение е вярно за интерфейсите в C#.

////////////////////////////////////////////////////////////////////////Изберете едно или повече:
////////////////////////////////////////////////////////////////////////a.Това са парчета код, които отговарят за изпълнението на дадено действие, което спомага за решаване на определен проблем. 
////////////////////////////////////////////////////////////////////////b. Предоставя договор, определящ как да се създаде обект, без да се интересува от спецификата на това как обекта ще прави нещата. 
////////////////////////////////////////////////////////////////////////c. Това е референтен тип и включва само абстрактни членове като събития, методи, свойства и т.н. и няма реализации за нито един от своите членове. 
////////////////////////////////////////////////////////////////////////d. Това е шаблон, който описва видовете състояние и поведение, които обектите от неговия тип поддържат.
////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////////////////////////////The correct answers are: Предоставя договор, определящ как да се създаде обект, без да се интересува от спецификата на това как обекта ще прави нещата., Това е референтен тип и включва само абстрактни членове като събития, методи, свойства и т.н. и няма реализации за нито един от своите членове.
////////////////////////////////////////////////////////////////////////Въпрос 16
////////////////////////////////////////////////////////////////////////Неправилно
////////////////////////////////////////////////////////////////////////0,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////Имате даден следния код:



////////////////////////////////////////////////////////////////////////Опишете кой от видовете полиморфизъм е използван в примера по-горе.



////////////////////////////////////////////////////////////////////////Отговор: 
////////////////////////////////////////////////////////////////////////Презареждане
////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////Правилният отговор е: Полиморфизъм по време на компилиране.
////////////////////////////////////////////////////////////////////////Въпрос 17
////////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////////От максимално 6,00
////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////Имате следния код:

////////////////////////////////////////////////////////////////////////        public List<int> CreateList(int item, int count)
////////////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////////////  List<int> list = new List<int>();
////////////////////////////////////////////////////////////////////////  for (int i = 0; i < count; i++)
////////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////////    list.Add(item);
////////////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////////////Модифицирайте кода, така че методът да работи с всякакъв тип данни.



////////////////////////////////////////////////////////////////////////public List<T> CreateList<T>(T item, int count)

////////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////////  List<T> list = new List<T>();

////////////////////////////////////////////////////////////////////////  for (int i = 0; i < count; i++)

////////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////////    list.Add(item);

////////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////////  return list;

////////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////public List<T> CreateList<T>(T item, int count)//2т
////////////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////////////  List<T> list = new List<T>();//2т
////////////////////////////////////////////////////////////////////////  for (int i = 0; i < count; i++)
////////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////////    list.Add(item);
////////////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////////////  return list;//2т
////////////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////////////Въпрос 18
////////////////////////////////////////////////////////////////////////Отчасти верен
////////////////////////////////////////////////////////////////////////3,33 от максимално 4,00 точки
////////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////////Свържете кои от характеристиките се отнасят за абстрактните класове, кои за интерфейсите.

////////////////////////////////////////////////////////////////////////Може да наследи само един абстрактен клас. 
////////////////////////////////////////////////////////////////////////Абстракция


////////////////////////////////////////////////////////////////////////Могат да предоставят целия код и/или само детайлите, които трябва да се презапишат. 
////////////////////////////////////////////////////////////////////////Абстракция


////////////////////////////////////////////////////////////////////////Може да имплементира няколко интерфейса. 
////////////////////////////////////////////////////////////////////////Интерфейси


////////////////////////////////////////////////////////////////////////Може да съдържа модификатори за достъп. 
////////////////////////////////////////////////////////////////////////Абстракция


////////////////////////////////////////////////////////////////////////Не може да предоставя никакъв код, предоставя само описание. 
////////////////////////////////////////////////////////////////////////Интерфейси


////////////////////////////////////////////////////////////////////////Нямат модификатори за достъп. Всичко е публично по подразбиране. 
////////////////////////////////////////////////////////////////////////Интерфейси

////////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////////Your answer is partially correct.
////////////////////////////////////////////////////////////////////////Вие правилно сте избрали 5.
////////////////////////////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////////////////////////////Свържете кои от характеристиките се отнасят за абстрактните класове, кои за интерфейсите.

////////////////////////////////////////////////////////////////////////Може да наследи само един абстрактен клас. [Абстракция]

////////////////////////////////////////////////////////////////////////Могат да предоставят целия код и/или само детайлите, които трябва да се презапишат. [Абстракция]

////////////////////////////////////////////////////////////////////////Може да имплементира няколко интерфейса. [И за двете]

////////////////////////////////////////////////////////////////////////Може да съдържа модификатори за достъп. [Абстракция]

////////////////////////////////////////////////////////////////////////Не може да предоставя никакъв код, предоставя само описание. [Интерфейси]

////////////////////////////////////////////////////////////////////////Нямат модификатори за достъп. Всичко е публично по подразбиране. [Интерфейси]
////////////////////////////////////////////////////////////////////////Край на прегледа
////////////////////////////////////////////////////////////////////////Отиди на ...
////////////////////////////////////////////////////////////////////////Отиди на ...
////////////////////////////////////////////////////////////////////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
////////////////////////////////////////////////////////////////////////Навигация в теста
////////////////////////////////////////////////////////////////////////Край на прегледа
////////////////////////////////////////////////////////////////////////Вие сте влезли в системата като Добри Илев (Изход)
////////////////////////////////////////////////////////////////////////тренировъчен - курс - по
////////////////////////////////////////////////////////////////////////Data retention summary


//////////////////////////////////////////////////////////////////////Прескочи на основното съдържание
//////////////////////////////////////////////////////////////////////ПГЕЕ
//////////////////////////////////////////////////////////////////////Български ‎(bg)‎ 
//////////////////////////////////////////////////////////////////////Добри Илев 
//////////////////////////////////////////////////////////////////////Тренировъчен курс - Програмно осигуряване
//////////////////////////////////////////////////////////////////////Начална страница
//////////////////////////////////////////////////////////////////////Моите курсове
////////////////////////////////////////////////////////////////////// тренировъчен-курс-по
////////////////////////////////////////////////////////////////////// Изпитна тема 4
////////////////////////////////////////////////////////////////////// Тест към Изпитна тема №4
//////////////////////////////////////////////////////////////////////Започнат на	петък, 17 март 2023, 14:23
//////////////////////////////////////////////////////////////////////Състояние Завършен
//////////////////////////////////////////////////////////////////////Приключен на	петък, 17 март 2023, 15:54
//////////////////////////////////////////////////////////////////////Изминало време	1 час 31 мин.
//////////////////////////////////////////////////////////////////////Оценка	Още не е оценен
//////////////////////////////////////////////////////////////////////Въпрос 1
//////////////////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////Посочете по какъв начин в C# можем да укажем, че искаме да подменим (препокрием) виртуален метод.
//////////////////////////////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////////////////////////////a. Чрез ключовата дума override поставена на методи в базовия клас.
//////////////////////////////////////////////////////////////////////b. Чрез ключовата дума overload поставена на методи в базовия клас.
//////////////////////////////////////////////////////////////////////c. Чрез ключовата дума overload поставена на методи в наследниците.
//////////////////////////////////////////////////////////////////////d. Чрез ключовата дума override поставена на методи в наследниците. 
//////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////////////////Правилният отговор е: Чрез ключовата дума override поставена на методи в наследниците.
//////////////////////////////////////////////////////////////////////Въпрос 2
//////////////////////////////////////////////////////////////////////Отчасти верен
//////////////////////////////////////////////////////////////////////1,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////Посочете кое от изброените твърдение е вярно за класовете в C#.

//////////////////////////////////////////////////////////////////////Изберете едно или повече:
//////////////////////////////////////////////////////////////////////a.Поддържа множествено наследяване. 
//////////////////////////////////////////////////////////////////////b. Описва състоянието и поведението на обектите
//////////////////////////////////////////////////////////////////////c. Можем да създаваме инстанции. 
//////////////////////////////////////////////////////////////////////d. Той е референтен тип и включва само абстрактни членове като събития, методи и свойства.
//////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////Your answer is partially correct.
//////////////////////////////////////////////////////////////////////Вие правилно сте избрали 1.
//////////////////////////////////////////////////////////////////////The correct answers are: Можем да създаваме инстанции., Описва състоянието и поведението на обектите
//////////////////////////////////////////////////////////////////////Въпрос 3
//////////////////////////////////////////////////////////////////////Неправилно
//////////////////////////////////////////////////////////////////////0,00 от максимално 4,00 точки
//////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////Имате зададена следната схема:



//////////////////////////////////////////////////////////////////////Методът ExplainMyself ще бъде презаписан или презареден? 

//////////////////////////////////////////////////////////////////////Запишете отговора си в полето и обяснете защо?

//////////////////////////////////////////////////////////////////////Отговор: 
//////////////////////////////////////////////////////////////////////Презаписване
//////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////Правилният отговор е: Методът ще бъде презаписан, защото се използва в подкласовете и има една и съща сигнатура.
//////////////////////////////////////////////////////////////////////Въпрос 4
//////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////Дайте пример за абстракция. Напишете примерен код, който:

//////////////////////////////////////////////////////////////////////Има класовете BaseEmployee, FullTimeEmployee и ContractEmployee.

//////////////////////////////////////////////////////////////////////Условието на задачата е всички работници да имат име, както и  метод CalculateSalary(int workingHours) -който ще изчислява заплатата за работника, като се приема параметър – брой изработени часове. 

//////////////////////////////////////////////////////////////////////Заплатата на FullTimeEmployee се изчислява по формулата: 250 + workingHours * 10.80.

//////////////////////////////////////////////////////////////////////А заплатата на ContractEmployee по формулата: 250 + workingHours * 20.

//////////////////////////////////////////////////////////////////////Спазвайте принципа за абстракция в обектно-ориентираното програмиране. 

//////////////////////////////////////////////////////////////////////using System;



//////////////////////////////////////////////////////////////////////public abstract class BaseEmployee

//////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////  public string Name { get; set; }



//////////////////////////////////////////////////////////////////////  public BaseEmployee(string name)

//////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////    Name = name;

//////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////  public abstract decimal CalculateSalary(int workingHours);

//////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////public class FullTimeEmployee : BaseEmployee

//////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////  public FullTimeEmployee(string name) : base(name) { }



//////////////////////////////////////////////////////////////////////  public override decimal CalculateSalary(int workingHours)

//////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////    return 250 + workingHours * 10.80m;

//////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////public class ContractEmployee : BaseEmployee

//////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////  public ContractEmployee(string name) : base(name) { }



//////////////////////////////////////////////////////////////////////  public override decimal CalculateSalary(int workingHours)

//////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////    return 250 + workingHours * 20m;

//////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////class Program

//////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////  static void Main(string[] args)

//////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////    FullTimeEmployee fullTimeEmployee = new FullTimeEmployee("Иван");

//////////////////////////////////////////////////////////////////////    ContractEmployee contractEmployee = new ContractEmployee("Петър");



//////////////////////////////////////////////////////////////////////    Console.WriteLine($"{fullTimeEmployee.Name} има заплата {fullTimeEmployee.CalculateSalary(160)} лева.");

//////////////////////////////////////////////////////////////////////    Console.WriteLine($"{contractEmployee.Name} има заплата {contractEmployee.CalculateSalary(160)} лева.");

//////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////abstract class BaseEmployee
//////////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////////  public string Name { get; set; }
//////////////////////////////////////////////////////////////////////  public abstract double CalculateSalary(int workingHours);
//////////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////////class FullTimeEmployee : BaseEmployee
//////////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////////  public override double CalculateSalary(int workingHours)
//////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////    return 250 + workingHours * 10.80;
//////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////////class ContractEmployee : BaseEmployee
//////////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////////  public override double CalculateSalary(int workingHours)
//////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////    return 250 + workingHours * 20;
//////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////////Въпрос 5
//////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////От максимално 6,00
//////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////Дайте пример чрез код на C# за това как и къде бихте използвали презаписване на методи. 

//////////////////////////////////////////////////////////////////////Например имате класовете Animal и Dog. Имате и един единствен метод MakeTrick(), който трябва да отпечатва на конзолата за всички животни, че по подразбиране не могат да правят никакъв трик ("No trick!"). Само и единствено кучето умее трика да подава лапа ("Give a paw!"). 

//////////////////////////////////////////////////////////////////////Реализирайте примера чрез код на C#.

//////////////////////////////////////////////////////////////////////using System;



//////////////////////////////////////////////////////////////////////public class Animal

//////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////  public virtual void MakeTrick()

//////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////    Console.WriteLine("No trick!");

//////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////public class Dog : Animal

//////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////  public override void MakeTrick()

//////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////    Console.WriteLine("Give a paw!");

//////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////class Program

//////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////  static void Main(string[] args)

//////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////    Animal genericAnimal = new Animal();

//////////////////////////////////////////////////////////////////////    Dog dog = new Dog();

//////////////////////////////////////////////////////////////////////    Animal dogAsAnimal = new Dog();



//////////////////////////////////////////////////////////////////////    genericAnimal.MakeTrick(); // Отпечатва "No trick!"

//////////////////////////////////////////////////////////////////////    dog.MakeTrick(); // Отпечатва "Give a paw!"

//////////////////////////////////////////////////////////////////////    dogAsAnimal.MakeTrick(); // Отпечатв



//////////////////////////////////////////////////////////////////////    Забележка
////////////////////////////////////////////////////////////////////// class Animal
//////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////    public virtual void MakeTrick()
//////////////////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////////////////      Console.WriteLine("No trick...");
//////////////////////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////  class Dog : Animal
//////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////    public override void MakeTrick()
//////////////////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////////////////      Console.WriteLine("Give a paw...");
//////////////////////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////  Въпрос 6
//////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////От максимално 40,00
//////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент.Предоставеният фрагмент да се приведе в работещ вид.

//////////////////////////////////////////////////////////////////////Предоставеният фрагмент е непълен/некоректен.

//////////////////////////////////////////////////////////////////////Вашата задача е да приведе предоставеният програмен код в работещ вид.


//////////////////////////////////////////////////////////////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент.Предоставеният фрагмент да се приведе в работещ вид.

//////////////////////////////////////////////////////////////////////Тоталитрано дистопично общество

//////////////////////////////////////////////////////////////////////Бъдещето е! Вие сте владетел на тоталитрано дистопично общество населено с граждани и бунтовници!

//////////////////////////////////////////////////////////////////////На всеки ред ще има информация за гражданин или бунтовник, който се опитва да влезе в града във формат “ <id><name> <age><birthdate> ” за граждани или “<id><name> <age><group>” за бунтовник.

//////////////////////////////////////////////////////////////////////Дефинирайте клас Citizen с id, name, age, birthdate.Дефинирайте клас Rebel с id, name, age и group (низ).

//////////////////////////////////////////////////////////////////////ID-тата са уникални – няма да има 2 бунтовници/граждани или бунтовник и гражданин с едно и също id. Освен това Id-тата на бунтовниците започват с главна буква R, на гражданите с главна буква C.

//////////////////////////////////////////////////////////////////////Дефинирайте интерфейс IBuyer, който дефинира метод BuyFood() и свойство Food, което да е цяло число.Имплементирайте IBuyer интерфейса, като и бунтовниците и гражданите започват с 0 храна, когато бунтовник купи храна, неговата стойност за Food се увеличава с 5, когато гражданин купи храна, неговата стойност за Food се увеличава с 10.

//////////////////////////////////////////////////////////////////////ВАЖНО!!! Спазвайте принципите на ООП – наследяване, енкапсулация, абстракция, полиморфизъм! Където е необходимо имате свободата да използвате допълнителни интерфейси, класове и методи!

//////////////////////////////////////////////////////////////////////На първия ред от входа ще получите цяло число N – броят на хората, на всеки от следващите N реда ще получите информация в един от следните формати: “ <id> <name> <age> <birthdate>” за гражданин или “ <id> <name> <age><group>” за бунтовник.

//////////////////////////////////////////////////////////////////////След N реда ще получавате Id-та на хора, които са купили храна, като всяко Id ще е на отделен ред. Ще получавате Id-та, докато не получите команда “End”. Забележете, че не всички Id-та може да са валидни.В случай, че Id-то е невалидно – трябва да отпечатате съобщение във вида: „Entity with { Id}
//////////////////////////////////////////////////////////////////////  does not exist!“, където Id е търсеното Id.За всяко съществуващо ID трябва да отпечатате закупената храна на всеки един гражданин/бунтовник във формат.В раздел изход можете да видите формата, в който трябва да отпечатате информацията.

//////////////////////////////////////////////////////////////////////Изход
//////////////////////////////////////////////////////////////////////На изхода трябва да отпечатате закупената храна на всеки един гражданин/бунтовник във формат:

//////////////////////////////////////////////////////////////////////Ако е гражданин:

//////////////////////////////////////////////////////////////////////„ID:<id> Citizen Name: <name> Age<age> Birthdate <birthdate> Food: <food>“

//////////////////////////////////////////////////////////////////////Ако е бунтовник:

//////////////////////////////////////////////////////////////////////„ID:<id> Rebel Name: <name> Age<age> Group <group> Food: <food>“

//////////////////////////////////////////////////////////////////////За целта трябва да презапишете ToString() метода!

//////////////////////////////////////////////////////////////////////На последният ред отпечатвате обощото количество закупена храна:

//////////////////////////////////////////////////////////////////////“TotalFood: <food quantity>”




//////////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////////2

//////////////////////////////////////////////////////////////////////C904041303 Pesho 25 04/04/1989

//////////////////////////////////////////////////////////////////////R31589456 Stancho 27 WildMonkeys

//////////////////////////////////////////////////////////////////////C904041303

//////////////////////////////////////////////////////////////////////R31589456

//////////////////////////////////////////////////////////////////////C904041303

//////////////////////////////////////////////////////////////////////End

//////////////////////////////////////////////////////////////////////ID:C904041303 Citizen Name: Pesho Age 25 Birthdate 04/04/1989 Food: 10

//////////////////////////////////////////////////////////////////////ID:R31589456 Rebel Name: Stancho Age 27 Group WildMonkeys Food: 5

//////////////////////////////////////////////////////////////////////ID:C904041303 Citizen Name: Pesho Age 25 Birthdate 04/04/1989 Food: 20

//////////////////////////////////////////////////////////////////////TotalFood: 25

//////////////////////////////////////////////////////////////////////4

//////////////////////////////////////////////////////////////////////R904041303 Stamat 23 TheSwarm

//////////////////////////////////////////////////////////////////////C31589456 Toncho 44 7308185527 18/08/1973

//////////////////////////////////////////////////////////////////////R56789522 Joro 31 Terrorists

//////////////////////////////////////////////////////////////////////C89456212335 Penka 27 881222212 22/12/1988

//////////////////////////////////////////////////////////////////////R904041303

//////////////////////////////////////////////////////////////////////C31589456

//////////////////////////////////////////////////////////////////////R904041303

//////////////////////////////////////////////////////////////////////R111111111

//////////////////////////////////////////////////////////////////////R56789522

//////////////////////////////////////////////////////////////////////R56789522

//////////////////////////////////////////////////////////////////////C89456212335

//////////////////////////////////////////////////////////////////////End

//////////////////////////////////////////////////////////////////////ID:R904041303 Rebel Name: Stamat Age 23 Group TheSwarm Food: 5

//////////////////////////////////////////////////////////////////////ID:C31589456 Citizen Name: Toncho Age 44 Birthdate 7308185527 Food: 10

//////////////////////////////////////////////////////////////////////ID:R904041303 Rebel Name: Stamat Age 23 Group TheSwarm Food: 10

//////////////////////////////////////////////////////////////////////Entity with R111111111 does not exist!

//////////////////////////////////////////////////////////////////////ID:R56789522 Rebel Name: Joro Age 31 Group Terrorists Food: 5

//////////////////////////////////////////////////////////////////////ID:R56789522 Rebel Name: Joro Age 31 Group Terrorists Food: 10

//////////////////////////////////////////////////////////////////////ID:C89456212335 Citizen Name: Penka Age 27 Birthdate 881222212 Food: 10

//////////////////////////////////////////////////////////////////////TotalFood: 40





//////////////////////////////////////////////////////////////////////internal class Citizen : Community

//////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////    private string birthdate;





//////////////////////////////////////////////////////////////////////    public string Birthdate { get => this.birthdate; set => this.birthdate = value; }



//////////////////////////////////////////////////////////////////////    public void BuyFood()

//////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////      base.Food += 10;

//////////////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////////////    public override string ToString()

//////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////      return base.ToString() + $"Birthdate {this.Birthdate} Food: {base.Food}";

//////////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////  internal abstract class Community : IIdentifiable, IPersonable, IBuyer

//////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////    private string id;

//////////////////////////////////////////////////////////////////////    private string name;

//////////////////////////////////////////////////////////////////////    private int age;

//////////////////////////////////////////////////////////////////////    private int food;

//////////////////////////////////////////////////////////////////////    protected Community(string id, string name, int age)

//////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////      Id = id;

//////////////////////////////////////////////////////////////////////      Name = name;

//////////////////////////////////////////////////////////////////////      Age = age;

//////////////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////////////    public string Id { get => this.id; set { this.id = value; } }



//////////////////////////////////////////////////////////////////////    public string Name => throw new NotImplementedException();



//////////////////////////////////////////////////////////////////////    public int Age { get => this.age; set { this.age = value; } }



//////////////////////////////////////////////////////////////////////    public int Food { get => this.food; protected set => this.food = value; }





//////////////////////////////////////////////////////////////////////    public void BuyFood();



//////////////////////////////////////////////////////////////////////    public override string ToString()

//////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////      return $"ID:{this.Id} {this.GetType().Name} Name: {this.Name} Age {this.Age} ";

//////////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////  internal interface IBuyer

//////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////    void BuyFood();

//////////////////////////////////////////////////////////////////////    int Food { get; }

//////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////  internal interface IIdentifiable




//////////////////////////////////////////////////////////////////////        string Id { get; }

//////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////internal IPersonable

//////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////  string Name { get; }

//////////////////////////////////////////////////////////////////////  int Age { get; }

//////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////internal class Program

//////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////  static void Main(string[] args)

//////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////    int n = int.Parse(Console.ReadLine());



//////////////////////////////////////////////////////////////////////    for (int i = 0; i > n; i++)

//////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////      string[] input = Console.ReadLine().Split();

//////////////////////////////////////////////////////////////////////      if (community.ContainsKey(input[0]))

//////////////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////////////        Community entity = CreateEntity(input);

//////////////////////////////////////////////////////////////////////        community.Add(input[0], entity);

//////////////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////////////    string id = Console.ReadLine();

//////////////////////////////////////////////////////////////////////    while (true)

//////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////      if (community.ContainsKey(id))

//////////////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////////////        community[id].BuyFood();

//////////////////////////////////////////////////////////////////////        Console.WriteLine(community[id]);

//////////////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////////////      else

//////////////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////////////        Console.WriteLine($"Entity with {id} does not exist!");

//////////////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////////////      id = Console.ReadLine();

//////////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////////    int totalFood = community.Sum(v => v.Value.Food);

//////////////////////////////////////////////////////////////////////    Console.WriteLine("TotalFood: {totalFood}");

//////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////  public static Community CreateEntity(string[] info)

//////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////    Community entity = null;

//////////////////////////////////////////////////////////////////////    string id = info[0];

//////////////////////////////////////////////////////////////////////    if (id.StartsWith("R"))

//////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////      entity = new Rebel(id, info[1], int.Parse(info[2]), info[3]);

//////////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////////    else if (id.StartsWith("C"))

//////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////      entity = new Citizen(id, info[1], int.Parse(info[2]), info[3]);

//////////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////////    return entity;

//////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////internal class Rebel : Community

//////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////  private string group;





//////////////////////////////////////////////////////////////////////  public void BuyFood()

//////////////////////////////////////////////////////////////////////  {



//////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////  public override string ToString()

//////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////    return base.ToString() + $"Group {this.Group} Food: {base.Food}";

//////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////}






//////////////////////////////////////////////////////////////////////using System;

//////////////////////////////////////////////////////////////////////using System.Collections.Generic;

//////////////////////////////////////////////////////////////////////using System.Linq;



//////////////////////////////////////////////////////////////////////internal interface IIdentifiable

//////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////  string Id { get; }

//////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////internal interface IPersonable

//////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////  string Name { get; }

//////////////////////////////////////////////////////////////////////  int Age { get; }

//////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////internal interface IBuyer

//////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////  void BuyFood();

//////////////////////////////////////////////////////////////////////  int Food { get; }

//////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////internal abstract class Community : IIdentifiable, IPersonable, IBuyer

//////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////  public string Id { get; }

//////////////////////////////////////////////////////////////////////  public string Name { get; }

//////////////////////////////////////////////////////////////////////  public int Age { get; }

//////////////////////////////////////////////////////////////////////  public int Food { get; protected set; }



//////////////////////////////////////////////////////////////////////  protected Community(string id, string name, int age)

//////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////    Id = id;

//////////////////////////////////////////////////////////////////////    Name = name;

//////////////////////////////////////////////////////////////////////    Age = age;

//////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////  public abstract void BuyFood();



//////////////////////////////////////////////////////////////////////  public override string ToString()

//////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////    return $"ID:{Id} {GetType().Name} Name: {Name} Age {Age} ";

//////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////internal class Citizen : Community

//////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////  private string birthdate;



//////////////////////////////////////////////////////////////////////  public Citizen(string id, string name, int age, string birthdate)

//////////////////////////////////////////////////////////////////////      : base(id, name, age)

//////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////    Birthdate = birthdate;

//////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////  public string Birthdate { get; }



//////////////////////////////////////////////////////////////////////  public override void BuyFood()

//////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////    Food += 10;

//////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////  public override string ToString()

//////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////    return base.ToString() + $"Birthdate {Birthdate} Food: {Food}";

//////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////internal class Rebel : Community

//////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////  private string group;



//////////////////////////////////////////////////////////////////////  public Rebel(string id, string name, int age, string group)

//////////////////////////////////////////////////////////////////////      : base(id, name, age)

//////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////    Group = group;

//////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////  public string Group { get; }



//////////////////////////////////////////////////////////////////////  public override void BuyFood()

//////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////    Food += 5;

//////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////  public override string ToString()

//////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////    return base.ToString() + $"Group {Group} Food: {Food}";

//////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////internal class Program

//////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////  static void Main(string[] args)

//////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////    int n = int.Parse(Console.ReadLine());

//////////////////////////////////////////////////////////////////////    Dictionary<string, Community> community = new Dictionary<string, Community>();



//////////////////////////////////////////////////////////////////////    for (int i = 0; i < n; i++)

//////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////      string[] input = Console.ReadLine().Split();

//////////////////////////////////////////////////////////////////////      Community entity = CreateEntity(input);

//////////////////////////////////////////////////////////////////////      community.Add(input[0], entity);

//////////////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////////////    string id = Console.ReadLine();

//////////////////////////////////////////////////////////////////////    while (id != "End")

//////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////      if (community.ContainsKey(id))

//////////////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////////////        community[id].BuyFood();

//////////////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////////////      id = Console.ReadLine();

//////////////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////////////    int totalFood = community.Sum(v => v.Value.Food);

//////////////////////////////////////////////////////////////////////    Console.WriteLine($"TotalFood: {totalFood}");

//////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////  public static Community CreateEntity(string[] info)

//////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////    Community entity = null;

//////////////////////////////////////////////////////////////////////    string id = info[0];

//////////////////////////////////////////////////////////////////////    if (id.StartsWith("R"))

//////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////      entity = new Rebel(id, info[1], int.Parse(info[2]), info[3]);

//////////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////////    else if (id.StartsWith("C"))

//////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////      entity = new Citizen(id, info[1], int.Parse(info[2]), info[3]);

//////////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////////    return entity;

//////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////}


//////////////////////////////////////////////////////////////////////Въпрос 7
//////////////////////////////////////////////////////////////////////Отчасти верен
//////////////////////////////////////////////////////////////////////1,25 от максимално 2,00 точки
//////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////Дефинирайте понятието полиморфизъм в обектно-ориентираното програмиране като попълните липсващите думи в текста.

//////////////////////////////////////////////////////////////////////Полиморфизмът в обектно-ориентираното програмиране представлява свойството на обектите от един и същи  blank  да имат един и същи  blank , но с  blank  на този  blank . „Един  blank , blank “. Чрез полиморфизма се постига по-голяма  blank  и по-лесно  blank  на кода.






//////////////////////////////////////////////////////////////////////един и същи методедин и същи методедин и същи методедин и същи методедин и същи методедин и същи методедин и същи методедин и същи методинтерфейсинтерфейсинтерфейсинтерфейсинтерфейсинтерфейсинтерфейсинтерфейсразличен типразличен типразличен типразличен типразличен типразличен типразличен типразличен типенкапсулацияенкапсулацияенкапсулацияенкапсулацияенкапсулацияенкапсулацияенкапсулацияенкапсулацияповторно използванеповторно използванеповторно използванеповторно използванеповторно използванеповторно използванеповторно използванеповторно използванеразлична реализацияразлична реализацияразлична реализацияразлична реализацияразлична реализацияразлична реализацияразлична реализацияразлична реализациякласкласкласкласкласкласкласкласмножество от различни реализациимножество от различни реализациимножество от различни реализациимножество от различни реализациимножество от различни реализациимножество от различни реализациимножество от различни реализациимножество от различни реализацииабстракция абстракция абстракция абстракция абстракция абстракция абстракция абстракция типтиптиптиптиптиптиптип
//////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////Your answer is partially correct.
//////////////////////////////////////////////////////////////////////Вие правилно сте избрали 5.
//////////////////////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////////////////////Дефинирайте понятието полиморфизъм в обектно-ориентираното програмиране като попълните липсващите думи в текста.

//////////////////////////////////////////////////////////////////////Полиморфизмът в обектно-ориентираното програмиране представлява свойството на обектите от един и същи [тип] да имат един и същи [интерфейс], но с[различна реализация] на този [интерфейс]. „Един[интерфейс], [множество от различни реализации]“. Чрез полиморфизма се постига по-голяма [абстракция] и по-лесно [повторно използване]
//////////////////////////////////////////////////////////////////////на кода.





//////////////////////////////////////////////////////////////////////Въпрос 8
//////////////////////////////////////////////////////////////////////Отчасти верен
//////////////////////////////////////////////////////////////////////1,67 от максимално 2,00 точки
//////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////Дефинирайте термина полиморфизъм в обектно-ориентираното програмиране, като поставите липсващите думи в текста.

//////////////////////////////////////////////////////////////////////Терминът полиморфизъм в обектно-ориентираното програмиране определя, че
//////////////////////////////////////////////////////////////////////едни и същи (еднотипни)
//////////////////////////////////////////////////////////////////////  действия се реализират по
//////////////////////////////////////////////////////////////////////различен начин
//////////////////////////////////////////////////////////////////////  в зависимост от обектите, върху които се прилагат. Такива действия се наричат
//////////////////////////////////////////////////////////////////////различни (разнотипни)
////////////////////////////////////////////////////////////////////// . За да се реализира
//////////////////////////////////////////////////////////////////////полиморфно действие
////////////////////////////////////////////////////////////////////// , класовете на обектите, върху които се прилага това действие, трябва да имат
//////////////////////////////////////////////////////////////////////общ корен
//////////////////////////////////////////////////////////////////////  т.е.да бъдат производни на
//////////////////////////////////////////////////////////////////////един и същи клас
////////////////////////////////////////////////////////////////////// .

//////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////Your answer is partially correct.
//////////////////////////////////////////////////////////////////////Вие правилно сте избрали 5.
//////////////////////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////////////////////Дефинирайте термина полиморфизъм в обектно-ориентираното програмиране, като поставите липсващите думи в текста.

//////////////////////////////////////////////////////////////////////Терминът полиморфизъм в обектно-ориентираното програмиране определя, че[едни и същи(еднотипни)] действия се реализират по[различен начин] в зависимост от обектите, върху които се прилагат. Такива действия се наричат [полиморфични]. За да се реализира [полиморфно действие], класовете на обектите, върху които се прилага това действие, трябва да имат[общ корен] т.е.да бъдат производни на [един и същи клас].

//////////////////////////////////////////////////////////////////////Въпрос 9
//////////////////////////////////////////////////////////////////////Отчасти верен
//////////////////////////////////////////////////////////////////////1,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////Посочете кое от изброените твърдение е вярно за интерфейсите в C#.

//////////////////////////////////////////////////////////////////////Изберете едно или повече:
//////////////////////////////////////////////////////////////////////a.Това е шаблон, който описва видовете състояние и поведение, които обектите от неговия тип поддържат.
//////////////////////////////////////////////////////////////////////b.Предоставя договор, определящ как да се създаде обект, без да се интересува от спецификата на това как обекта ще прави нещата.
//////////////////////////////////////////////////////////////////////c.Това е референтен тип и включва само абстрактни членове като събития, методи, свойства и т.н.и няма реализации за нито един от своите членове.
//////////////////////////////////////////////////////////////////////d.Това са парчета код, които отговарят за изпълнението на дадено действие, което спомага за решаване на определен проблем.
//////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////Your answer is partially correct.
//////////////////////////////////////////////////////////////////////Вие правилно сте избрали 1.
//////////////////////////////////////////////////////////////////////The correct answers are: Предоставя договор, определящ как да се създаде обект, без да се интересува от спецификата на това как обекта ще прави нещата., Това е референтен тип и включва само абстрактни членове като събития, методи, свойства и т.н.и няма реализации за нито един от своите членове.
//////////////////////////////////////////////////////////////////////Въпрос 10
//////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////Дайте пример за шаблонен клас, който да се казва Кутия и тази кутия да може да съхранява всичко.В този клас създайте и един метод, който да премахва първия елемент от кутията и да връща като резултат неговата стойност.

//////////////////////////////////////////////////////////////////////using System;

//////////////////////////////////////////////////////////////////////using System.Collections.Generic;



//////////////////////////////////////////////////////////////////////public class Box<T>

//////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////  private List<T> elements;



//////////////////////////////////////////////////////////////////////  public Box()

//////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////    elements = new List<T>();

//////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////  public void Add(T element)

//////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////    elements.Add(element);

//////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////  public T RemoveFirst()

//////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////    if (elements.Count == 0)

//////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////      throw new InvalidOperationException("The box is empty!");

//////////////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////////////    T firstElement = elements[0];

//////////////////////////////////////////////////////////////////////    elements.RemoveAt(0);



//////////////////////////////////////////////////////////////////////    return firstElement;

//////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////  public int ElementCount

//////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////    get { return elements.Count; }

//////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////Въпрос 11
//////////////////////////////////////////////////////////////////////Неправилно
//////////////////////////////////////////////////////////////////////0,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////Посочете кое е другото название, с което наричаме шаблонните класове в C#.

//////////////////////////////////////////////////////////////////////Отговор: 
//////////////////////////////////////////////////////////////////////генерични класове
//////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////Правилният отговор е: Generics
//////////////////////////////////////////////////////////////////////Въпрос 12
//////////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////////От максимално 6,00
//////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////Имате следния код:

//////////////////////////////////////////////////////////////////////    public class Scale : IComparable
//////////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////////  private var left;
//////////////////////////////////////////////////////////////////////  private var right;

//////////////////////////////////////////////////////////////////////  public Scale(var left, var right)
//////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////    this.left = left;
//////////////////////////////////////////////////////////////////////    this.right = right;
//////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////  public var GetHavier()
//////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////    if (left.CompareTo(right) > 0)
//////////////////////////////////////////////////////////////////////    { return left; }
//////////////////////////////////////////////////////////////////////    else if (left.CompareTo(right) < 0)
//////////////////////////////////////////////////////////////////////    { return right; }
//////////////////////////////////////////////////////////////////////    return default;
//////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////////Модифицирайте кода, така че Везната да може да сравнява всякакви типове данни. Също така трябва да ограничите Везната, че елементите, които ще  сравнява ще бъдат само сравними типове. 



//////////////////////////////////////////////////////////////////////public class Scale<T> where T : IComparable<T>

//////////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////////  private T left;

//////////////////////////////////////////////////////////////////////  private T right;



//////////////////////////////////////////////////////////////////////  public Scale(T left, T right)

//////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////    this.left = left;

//////////////////////////////////////////////////////////////////////    this.right = right;

//////////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////////  public T GetHeavier()

//////////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////////    if (left.CompareTo(right) > 0)

//////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////      return left;

//////////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////////    else if (left.CompareTo(right) < 0)

//////////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////////      return right;

//////////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////////    return default;

//////////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////public class Scale<T> where T : IComparable<T>//2т
//////////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////////  private T left; //1т
//////////////////////////////////////////////////////////////////////  private T right; //1т

//////////////////////////////////////////////////////////////////////  public Scale(T left, T right)//2т
//////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////    this.left = left;
//////////////////////////////////////////////////////////////////////    this.right = right;
//////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////  public T GetHavier()
//////////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////////    if (left.CompareTo(right) > 0)
//////////////////////////////////////////////////////////////////////    { return left; }
//////////////////////////////////////////////////////////////////////    else if (left.CompareTo(right) < 0)
//////////////////////////////////////////////////////////////////////    { return right; }
//////////////////////////////////////////////////////////////////////    return default(T);
//////////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////////Въпрос 13
//////////////////////////////////////////////////////////////////////Отчасти верен
//////////////////////////////////////////////////////////////////////2,67 от максимално 4,00 точки
//////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////Открийте разликите между клас и интерфейс. Кои от изброените твърдения се отнасят за класовете в C#, кои за интерфейсите?

//////////////////////////////////////////////////////////////////////Има както дефиниция, така и реализация.  blank 

//////////////////////////////////////////////////////////////////////Има само дефиниция.  blank 

//////////////////////////////////////////////////////////////////////Не може да бъде инстанциран.  blank 

//////////////////////////////////////////////////////////////////////Може да бъде инстанциран.  blank 

//////////////////////////////////////////////////////////////////////Може да съдържа членове, методи, заедно с дефиниция и реализация.  blank 

//////////////////////////////////////////////////////////////////////Набор от дефиниции, които трябва да се приложат.  blank 

//////////////////////////////////////////////////////////////////////ИнтерфейсИнтерфейсИнтерфейсИнтерфейсИнтерфейсИнтерфейсКласКласКласКласКласКлас
//////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////Your answer is partially correct.
//////////////////////////////////////////////////////////////////////Вие правилно сте избрали 4.
//////////////////////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////////////////////Открийте разликите между клас и интерфейс. Кои от изброените твърдения се отнасят за класовете в C#, кои за интерфейсите?

//////////////////////////////////////////////////////////////////////Има както дефиниция, така и реализация. [Клас]

//////////////////////////////////////////////////////////////////////Има само дефиниция. [Интерфейс]

//////////////////////////////////////////////////////////////////////Не може да бъде инстанциран. [Интерфейс]

//////////////////////////////////////////////////////////////////////Може да бъде инстанциран. [Клас]

//////////////////////////////////////////////////////////////////////Може да съдържа членове, методи, заедно с дефиниция и реализация. [Клас]

//////////////////////////////////////////////////////////////////////Набор от дефиниции, които трябва да се приложат. [Интерфейс]
//////////////////////////////////////////////////////////////////////Въпрос 14
//////////////////////////////////////////////////////////////////////Отчасти верен
//////////////////////////////////////////////////////////////////////2,00 от максимално 6,00 точки
//////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////Открийте липсващите думи и свържете правилно изреченията:

//////////////////////////////////////////////////////////////////////При дефиниране на обекти от базови и производни класове е възможно на обект от  blank  да се присвои обект от  blank  т.е. обект от  blank  може да служи за инициализация на обект (референция) от blank.

//////////////////////////////////////////////////////////////////////Възможно е също да се осъществи обръщение към обект чрез променлива от друг тип, ако използвания тип е клас, намиращ се на blank  ниво в йерархията на наследяване.Обратното blank .





//////////////////////////////////////////////////////////////////////по‑нископо‑нископо‑нископо‑нископо‑нископо‑нискобазов класбазов класбазов класбазов класбазов класбазов классъщо е възможносъщо е възможносъщо е възможносъщо е възможносъщо е възможносъщо е възможнопо‑високо по‑високо по‑високо по‑високо по‑високо по‑високо не е възможноне е възможноне е възможноне е възможноне е възможноне е възможнопроизводен класпроизводен класпроизводен класпроизводен класпроизводен класпроизводен клас
//////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////Your answer is partially correct.
//////////////////////////////////////////////////////////////////////Вие правилно сте избрали 2.
//////////////////////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////////////////////Открийте липсващите думи и свържете правилно изреченията:

//////////////////////////////////////////////////////////////////////При дефиниране на обекти от базови и производни класове е възможно на обект от [базов клас] да се присвои обект от[производен клас] т.е.обект от [производен клас] може да служи за инициализация на обект (референция) от [базов клас].

//////////////////////////////////////////////////////////////////////Възможно е също да се осъществи обръщение към обект чрез променлива от друг тип, ако използвания тип е клас, намиращ се на[по‑високо] ниво в йерархията на наследяване. Обратното[не е възможно].



//////////////////////////////////////////////////////////////////////Въпрос 15
//////////////////////////////////////////////////////////////////////Отчасти верен
//////////////////////////////////////////////////////////////////////1,78 от максимално 2,00 точки
//////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////Дефинирайте понятието наследяване от обектно-ориентираното програмиране като попълните липсващите думи в текста.

//////////////////////////////////////////////////////////////////////Наследяването е  blank от обектно-ориентираното програми­ране. То позволява на един клас да "наследява"  blank от друг, по-общ клас. 

//////////////////////////////////////////////////////////////////////В.NET и други модерни езици за програмиране един клас може да наследи  blank.


//////////////////////////////////////////////////////////////////////Класът, който blank  своите членове на blank  си клас се нарича  blank клас. А класът, който blank  членове от  blank  -  blank.


//////////////////////////////////////////////////////////////////////поведение и характе­ристикиосновен принципсвоя базов класполучавабазовсамо един друг класдъщерниямножество други класовеподкласдава
//////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////Your answer is partially correct.
//////////////////////////////////////////////////////////////////////Вие правилно сте избрали 8.
//////////////////////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////////////////////Дефинирайте понятието наследяване от обектно-ориентираното програмиране като попълните липсващите думи в текста.

//////////////////////////////////////////////////////////////////////Наследяването е [основен принцип] от обектно-ориентираното програми­ране. То позволява на един клас да "наследява" [поведение и характе­ристики] от друг, по-общ клас. 

//////////////////////////////////////////////////////////////////////В.NET и други модерни езици за програмиране един клас може да наследи [само един друг клас].


//////////////////////////////////////////////////////////////////////Класът, който[дава] своите членове на [дъщерния] си клас се нарича [базов] клас.А класът, който[получава] членове от[своя базов клас] - [подклас].

//////////////////////////////////////////////////////////////////////Въпрос 16
//////////////////////////////////////////////////////////////////////Отчасти верен
//////////////////////////////////////////////////////////////////////2,67 от максимално 6,00 точки
//////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////Имате абстрактен клас и обикновен клас.Открийте и свържете коя от характеристиките се отнася за абстрактния клас и коя за не абстрактен клас.



//////////////////////////////////////////////////////////////////////Не можем да създаваме инстанции.blank

//////////////////////////////////////////////////////////////////////Може да има само абстрактни членове на класа.blank

//////////////////////////////////////////////////////////////////////Могат да дефинират методи без тяло (без имплементация).  blank

//////////////////////////////////////////////////////////////////////Можем да създаваме инстанции.blank

//////////////////////////////////////////////////////////////////////Може да има само не-абстрактни членове на класа.  blank

//////////////////////////////////////////////////////////////////////Не могат да дефинират методи без тяло (имплементация).  blank

//////////////////////////////////////////////////////////////////////Съдържа ключовата дума abstract пред ключовата дума class.  blank

//////////////////////////////////////////////////////////////////////Може да има абстрактни и не-абстрактни членове на класа.  blank 

//////////////////////////////////////////////////////////////////////Не съдържа ключовата дума abstract пред ключовата дума class.  blank



//////////////////////////////////////////////////////////////////////Обикновен класОбикновен класОбикновен класОбикновен класОбикновен класОбикновен класОбикновен класОбикновен класОбикновен класАбстрактен клас Абстрактен клас Абстрактен клас Абстрактен клас Абстрактен клас Абстрактен клас Абстрактен клас Абстрактен клас Абстрактен клас За нито един от дватаЗа нито един от дватаЗа нито един от дватаЗа нито един от дватаЗа нито един от дватаЗа нито един от дватаЗа нито един от дватаЗа нито един от дватаЗа нито един от двата
//////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////Your answer is partially correct.
//////////////////////////////////////////////////////////////////////Вие правилно сте избрали 4.
//////////////////////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////////////////////Имате абстрактен клас и обикновен клас. Открийте и свържете коя от характеристиките се отнася за абстрактния клас и коя за не абстрактен клас.



//////////////////////////////////////////////////////////////////////Не можем да създаваме инстанции. [Абстрактен клас]

//////////////////////////////////////////////////////////////////////Може да има само абстрактни членове на класа. [За нито един от двата]

//////////////////////////////////////////////////////////////////////Могат да дефинират методи без тяло (без имплементация). [Абстрактен клас]

//////////////////////////////////////////////////////////////////////Можем да създаваме инстанции. [Обикновен клас]

//////////////////////////////////////////////////////////////////////Може да има само не-абстрактни членове на класа. [Обикновен клас]

//////////////////////////////////////////////////////////////////////Не могат да дефинират методи без тяло (имплементация). [Обикновен клас]

//////////////////////////////////////////////////////////////////////Съдържа ключовата дума abstract пред ключовата дума class. [Абстрактен клас]

//////////////////////////////////////////////////////////////////////Може да има абстрактни и не-абстрактни членове на класа. [Абстрактен клас]

//////////////////////////////////////////////////////////////////////Не съдържа ключовата дума abstract пред ключовата дума class. [Обикновен клас]


//////////////////////////////////////////////////////////////////////Въпрос 17
//////////////////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////////////////4,00 от максимално 4,00 точки
//////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////Свържете кои от характеристиките се отнасят за абстрактните класове, кои за интерфейсите.

//////////////////////////////////////////////////////////////////////Може да притежава полета и константи. 
//////////////////////////////////////////////////////////////////////Абстрактни класове


//////////////////////////////////////////////////////////////////////Е по-добър избор, ако множество имплементации споделят само сигнатурата на методите и нищо друго. 
//////////////////////////////////////////////////////////////////////Интерфейси


//////////////////////////////////////////////////////////////////////Не поддържа полета. 
//////////////////////////////////////////////////////////////////////Интерфейси


//////////////////////////////////////////////////////////////////////Е по-добър избор, ако множество имплементации са от сходен вид и имат общо поведение или статут. 
//////////////////////////////////////////////////////////////////////Абстрактни класове


//////////////////////////////////////////////////////////////////////Ако добавим нов метод, то имаме опцията да създадем имплементация по подразбиране и така съществуващият код ще може да работи коректно. 
//////////////////////////////////////////////////////////////////////Абстрактни класове


//////////////////////////////////////////////////////////////////////Ако добавим нов метод, то трябва да проследим всичките му имплементации и да дефинираме имплементация за новия метод. 
//////////////////////////////////////////////////////////////////////Интерфейси






//////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////////////////////Свържете кои от характеристиките се отнасят за абстрактните класове, кои за интерфейсите.

//////////////////////////////////////////////////////////////////////Може да притежава полета и константи. [Абстрактни класове]

//////////////////////////////////////////////////////////////////////Е по-добър избор, ако множество имплементации споделят само сигнатурата на методите и нищо друго. [Интерфейси]

//////////////////////////////////////////////////////////////////////Не поддържа полета. [Интерфейси]

//////////////////////////////////////////////////////////////////////Е по-добър избор, ако множество имплементации са от сходен вид и имат общо поведение или статут. [Абстрактни класове]

//////////////////////////////////////////////////////////////////////Ако добавим нов метод, то имаме опцията да създадем имплементация по подразбиране и така съществуващият код ще може да работи коректно. [Абстрактни класове]

//////////////////////////////////////////////////////////////////////Ако добавим нов метод, то трябва да проследим всичките му имплементации и да дефинираме имплементация за новия метод. [Интерфейси]





//////////////////////////////////////////////////////////////////////Въпрос 18
//////////////////////////////////////////////////////////////////////Неправилно
//////////////////////////////////////////////////////////////////////0,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////////Имате даден следния код:



//////////////////////////////////////////////////////////////////////Опишете кой от видовете полиморфизъм е използван в примера по-горе.



//////////////////////////////////////////////////////////////////////Отговор: 
//////////////////////////////////////////////////////////////////////Презаписване
//////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////////Правилният отговор е: Полиморфизъм по време на изпълнение.
//////////////////////////////////////////////////////////////////////Край на прегледа
//////////////////////////////////////////////////////////////////////Отиди на ...
//////////////////////////////////////////////////////////////////////Отиди на ...
//////////////////////////////////////////////////////////////////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
//////////////////////////////////////////////////////////////////////Навигация в теста
//////////////////////////////////////////////////////////////////////Край на прегледа
//////////////////////////////////////////////////////////////////////Вие сте влезли в системата като Добри Илев (Изход)
//////////////////////////////////////////////////////////////////////тренировъчен - курс - по
//////////////////////////////////////////////////////////////////////Data retention summary



////////////////////////////////////////////////////////////////////using System.Numerics;

////////////////////////////////////////////////////////////////////Прескочи на основното съдържание
////////////////////////////////////////////////////////////////////ПГЕЕ
////////////////////////////////////////////////////////////////////Български ‎(bg)‎ 
////////////////////////////////////////////////////////////////////Добри Илев 
////////////////////////////////////////////////////////////////////Тренировъчен курс - Програмно осигуряване
////////////////////////////////////////////////////////////////////Начална страница
////////////////////////////////////////////////////////////////////Моите курсове
//////////////////////////////////////////////////////////////////// тренировъчен-курс-по
//////////////////////////////////////////////////////////////////// Изпитна тема 4
//////////////////////////////////////////////////////////////////// Тест към Изпитна тема №4
////////////////////////////////////////////////////////////////////Започнат на	четвъртък, 6 април 2023, 17:21
////////////////////////////////////////////////////////////////////Състояние Завършен
////////////////////////////////////////////////////////////////////Приключен на	събота, 8 април 2023, 00:26
////////////////////////////////////////////////////////////////////Изминало време	1 ден 7 часа
////////////////////////////////////////////////////////////////////Оценка	Още не е оценен
////////////////////////////////////////////////////////////////////Въпрос 1
////////////////////////////////////////////////////////////////////Неправилно
////////////////////////////////////////////////////////////////////0,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////Имате даден следния код:



////////////////////////////////////////////////////////////////////Опишете кой от видовете полиморфизъм е използван в примера по-горе.



////////////////////////////////////////////////////////////////////Отговор: 
////////////////////////////////////////////////////////////////////Статичен полиморфизъм(Полиморфизъм по време на компилиране)
////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////Правилният отговор е: Полиморфизъм по време на компилиране.
////////////////////////////////////////////////////////////////////Въпрос 2
////////////////////////////////////////////////////////////////////Отчасти верен
////////////////////////////////////////////////////////////////////3,33 от максимално 4,00 точки
////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////Обяснете основните разлики между презареждане и презаписване на методи.

////////////////////////////////////////////////////////////////////Методи с едно и също име, но различни сигнатури. 
////////////////////////////////////////////////////////////////////Презаписване на методи

////////////////////////////////////////////////////////////////////Може да се случи в същия клас или в негов подклас. 
////////////////////////////////////////////////////////////////////Презареждане на методи

////////////////////////////////////////////////////////////////////Може да се случи в подкласовете. 
////////////////////////////////////////////////////////////////////Презаписване на методи

////////////////////////////////////////////////////////////////////Трябва да има същия тип на връщана стойност. 
////////////////////////////////////////////////////////////////////Презаписване на методи

////////////////////////////////////////////////////////////////////При компилиране, според подадените параметри компилатора определя кой метод точно ще изпълни. 
////////////////////////////////////////////////////////////////////Презареждане на методи

////////////////////////////////////////////////////////////////////Модификатора за достъп не може да бъде по-ограничаващ. 
////////////////////////////////////////////////////////////////////Презаписване на методи

////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////Your answer is partially correct.
////////////////////////////////////////////////////////////////////Вие правилно сте избрали 5.
////////////////////////////////////////////////////////////////////Правилният отговор е: Обяснете основните разлики между презареждане и презаписване на методи.

////////////////////////////////////////////////////////////////////Методи с едно и също име, но различни сигнатури. [Презареждане на методи]
////////////////////////////////////////////////////////////////////Може да се случи в същия клас или в негов подклас. [Презареждане на методи]
////////////////////////////////////////////////////////////////////Може да се случи в подкласовете. [Презаписване на методи]
////////////////////////////////////////////////////////////////////Трябва да има същия тип на връщана стойност. [Презаписване на методи]
////////////////////////////////////////////////////////////////////При компилиране, според подадените параметри компилатора определя кой метод точно ще изпълни. [Презареждане на методи]
////////////////////////////////////////////////////////////////////Модификатора за достъп не може да бъде по-ограничаващ. [Презаписване на методи]
////////////////////////////////////////////////////////////////////Въпрос 3
////////////////////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////Посочете кое от изброените твърдение е вярно за интерфейсите в C#.

////////////////////////////////////////////////////////////////////Изберете едно или повече:
////////////////////////////////////////////////////////////////////a.Предоставя договор, определящ как да се създаде обект, без да се интересува от спецификата на това как обекта ще прави нещата. 
////////////////////////////////////////////////////////////////////b. Това е шаблон, който описва видовете състояние и поведение, които обектите от неговия тип поддържат.
////////////////////////////////////////////////////////////////////c. Това са парчета код, които отговарят за изпълнението на дадено действие, което спомага за решаване на определен проблем. 
////////////////////////////////////////////////////////////////////d. Това е референтен тип и включва само абстрактни членове като събития, методи, свойства и т.н. и няма реализации за нито един от своите членове. 
////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////////////////////////The correct answers are: Предоставя договор, определящ как да се създаде обект, без да се интересува от спецификата на това как обекта ще прави нещата., Това е референтен тип и включва само абстрактни членове като събития, методи, свойства и т.н. и няма реализации за нито един от своите членове.
////////////////////////////////////////////////////////////////////Въпрос 4
////////////////////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////Посочете по какъв начин бихте декларирали шаблонен клас в C#.

////////////////////////////////////////////////////////////////////Изберете едно
////////////////////////////////////////////////////////////////////a. class ClassName { T }
////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////}
////////////////////////////////////////////////////////////////////b. class ClassName<T>
////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////}
////////////////////////////////////////////////////////////////////c. class ClassName(T)
////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////}
////////////////////////////////////////////////////////////////////d. class ClassName"T"
////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////}
////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////////////////////////Правилният отговор е: class ClassName<T>
////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////}
////////////////////////////////////////////////////////////////////Въпрос 5
////////////////////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////Посочете видовете полиморфизъм в .NET.
////////////////////////////////////////////////////////////////////Изберете едно или повече:
////////////////////////////////////////////////////////////////////a.Полиморфизъм по време на създаване. 
////////////////////////////////////////////////////////////////////b. Полиморфизъм по време на изпълнение.  
////////////////////////////////////////////////////////////////////c. Нито едно от изброените. 
////////////////////////////////////////////////////////////////////d. Полиморфизъм по време на компилиране. 
////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////////////////////////The correct answers are: Полиморфизъм по време на компилиране., Полиморфизъм по време на изпълнение. 
////////////////////////////////////////////////////////////////////Въпрос 6
////////////////////////////////////////////////////////////////////Не е отговорен
////////////////////////////////////////////////////////////////////От максимално 40,00
////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////Създайте следната йерархия от класове и интерфейси.

////////////////////////////////////////////////////////////////////За ваше удобство ще ви бъде предоставен скелет на задачата, който обаче е непълен/неработещ/некоректен. Предоставеният скелет трябва да се приведе в работещ вид.

////////////////////////////////////////////////////////////////////Интерфейс IMakeNoise
////////////////////////////////////////////////////////////////////·        Този интерфейс трябва да съдържа сигнатурата на метод string MakeNoise()

////////////////////////////////////////////////////////////////////Интерфейс IMakeTrick
////////////////////////////////////////////////////////////////////·        Този интерфейс трябва да съдържа сигнатурата на метод string MakeTrick()

////////////////////////////////////////////////////////////////////Интерфейс IAnimal
////////////////////////////////////////////////////////////////////·        Този клас трябва да имплементира IMakeNoise и IMakeTrick.

////////////////////////////////////////////////////////////////////·        Интерфейсът трябва да съдържа свойство Type за типа на животното

////////////////////////////////////////////////////////////////////·        Интерфейсът трябва да съдържа свойство Name за име на животното

////////////////////////////////////////////////////////////////////·        Интерфейсът трябва да съдържа метод Perform()

////////////////////////////////////////////////////////////////////Клас Animal
////////////////////////////////////////////////////////////////////·        Този клас не трябва да може да се инстанцира!

////////////////////////////////////////////////////////////////////·        Този клас трябва да имплементира IAnimal

////////////////////////////////////////////////////////////////////·        Трябва да има и презаписан метод ToString(), който да връща типа и името на животното в следни формат: { AnimalType}
////////////////////////////////////////////////////////////////////{ AnimalName}

////////////////////////////////////////////////////////////////////·        Метод Perform(), който извиква първо MakeNoise(), а после MakeTrick()

////////////////////////////////////////////////////////////////////·        За свойството Name трябва да направите валидация:

////////////////////////////////////////////////////////////////////o Не може да се създава животно, на което името му е null, празен стринг или интервал! При невалидно име да се хвърли изключение ArgumentException със съобщение: "Name can't be null or empty!"

////////////////////////////////////////////////////////////////////Клас Cat
////////////////////////////////////////////////////////////////////·        Този клас трябва да наследява Animal.

////////////////////////////////////////////////////////////////////·        Метод MakeNoise(), който отпечатва съобщението: “Meow!”.

////////////////////////////////////////////////////////////////////·        Метод MakeTrick(), който отпечатва: “No trick for you! I'm too lazy!”



////////////////////////////////////////////////////////////////////Клас Dog
////////////////////////////////////////////////////////////////////·        Този клас трябва да наследява Animal.

////////////////////////////////////////////////////////////////////·        Метод MakeNoise(), който отпечатва съобщението: “Woof!”.

////////////////////////////////////////////////////////////////////·        Метод MakeTrick(), който отпечатва: “Hold my paw, human!”



////////////////////////////////////////////////////////////////////Клас Trainer
////////////////////////////////////////////////////////////////////·        Този клас трябва да има поле IAnimal entity.

////////////////////////////////////////////////////////////////////·        Свойство Name:

////////////////////////////////////////////////////////////////////o Не може да се създава треньор, чието име е null, празен стринг или интервал! При невалидно име да се хвърли изключение ArgumentException със съобщение: "Name can't be null or empty!"



////////////////////////////////////////////////////////////////////·        Конструктор, от който да получава името на треньора и обекта с животното, което ще дресираме

////////////////////////////////////////////////////////////////////·        Метод Make(), който да извиква Perform() метода на съответното entity

////////////////////////////////////////////////////////////////////·        Метод Work(IAnimal entity), който да получава съответното ентити, с което треньорът трябва да работи и да отпечатва "Trainer {TrainerName} works with {Entity}!".

////////////////////////////////////////////////////////////////////Вход/Изход

////////////////////////////////////////////////////////////////////Като вход ще получите:

////////////////////////////////////////////////////////////////////На първи ред число n брой животни, които трябва да регистрирате в системата – цяло число.

////////////////////////////////////////////////////////////////////На следващите n реда ще получавате различни животни. На всеки ред ще получите информация на вида на животното и неговото име разделени от интервал. Типа на животното винаги ще бъде валиден!

////////////////////////////////////////////////////////////////////След като прочетете информацията за всяко едно от животните и ги съхраните в подходяща структура от данни ще започнете да получавате имена.

////////////////////////////////////////////////////////////////////Първото име винаги ще бъде името на треньора! От там нататък ще получавате имената на животните, които треньорът трябва да дресира. Има възможност да получавате и имена, които не са записани в базата ви с данни, в такъв случай трябва да отпечатате на конзолата: "No such name in the Database!".Във всички останали случаи трябва да отпечатате: „Trainer
////////////////////////////////////////////////////////////////////{ TrainerName}
////////////////////////////////////////////////////////////////////works with { Animal }
////////////////////////////////////////////////////////////////////!“ и това, което ще се отпечата от метода Make() в класа Trainer.

////////////////////////////////////////////////////////////////////За по-подробна информация вижте таблицата с примерни вход/изход.



////////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////////5

////////////////////////////////////////////////////////////////////Cat SleepyTom

////////////////////////////////////////////////////////////////////Dog Archie

////////////////////////////////////////////////////////////////////Cat HelloKitty

////////////////////////////////////////////////////////////////////Cat Agness

////////////////////////////////////////////////////////////////////Dog Hera

////////////////////////////////////////////////////////////////////Krystan

////////////////////////////////////////////////////////////////////SleepyTom

////////////////////////////////////////////////////////////////////HelloKitty

////////////////////////////////////////////////////////////////////Bettany

////////////////////////////////////////////////////////////////////Archie

////////////////////////////////////////////////////////////////////HelloKitty

////////////////////////////////////////////////////////////////////End

////////////////////////////////////////////////////////////////////Trainer Krystan works with Cat SleepyTom!

////////////////////////////////////////////////////////////////////>>> Meow!

////////////////////////////////////////////////////////////////////>>> No trick for you! I'm too lazy!

////////////////////////////////////////////////////////////////////Trainer Krystan works with Cat HelloKitty!

////////////////////////////////////////////////////////////////////>>> Meow!

////////////////////////////////////////////////////////////////////>>> No trick for you! I'm too lazy!

////////////////////////////////////////////////////////////////////No such name in the Database!

////////////////////////////////////////////////////////////////////Trainer Krystan works with Dog Archie!

////////////////////////////////////////////////////////////////////>>> Woof!

////////////////////////////////////////////////////////////////////>>> Hold my paw, human!

////////////////////////////////////////////////////////////////////Trainer Krystan works with Cat HelloKitty!

////////////////////////////////////////////////////////////////////>>> Meow!

////////////////////////////////////////////////////////////////////>>> No trick for you! I'm too lazy!

////////////////////////////////////////////////////////////////////3

////////////////////////////////////////////////////////////////////Dog Topcho

////////////////////////////////////////////////////////////////////Dog Osvaldo

////////////////////////////////////////////////////////////////////Cat Munchi

////////////////////////////////////////////////////////////////////Cikatiridis

////////////////////////////////////////////////////////////////////Berta

////////////////////////////////////////////////////////////////////Roomba

////////////////////////////////////////////////////////////////////Munchi

////////////////////////////////////////////////////////////////////Munchi

////////////////////////////////////////////////////////////////////Topcho

////////////////////////////////////////////////////////////////////Osvaldo

////////////////////////////////////////////////////////////////////End

////////////////////////////////////////////////////////////////////No such name in the Database!

////////////////////////////////////////////////////////////////////No such name in the Database!

////////////////////////////////////////////////////////////////////Trainer Cikatiridis works with Cat Munchi!

////////////////////////////////////////////////////////////////////>>> Meow!

////////////////////////////////////////////////////////////////////>>> No trick for you! I'm too lazy!

////////////////////////////////////////////////////////////////////Trainer Cikatiridis works with Cat Munchi!

////////////////////////////////////////////////////////////////////>>> Meow!

////////////////////////////////////////////////////////////////////>>> No trick for you! I'm too lazy!

////////////////////////////////////////////////////////////////////Trainer Cikatiridis works with Dog Topcho!

////////////////////////////////////////////////////////////////////>>> Woof!

////////////////////////////////////////////////////////////////////>>> Hold my paw, human!

////////////////////////////////////////////////////////////////////Trainer Cikatiridis works with Dog Osvaldo!

////////////////////////////////////////////////////////////////////>>> Woof!

////////////////////////////////////////////////////////////////////>>> Hold my paw, human!




////////////////////////////////////////////////////////////////////abstract class Animal : IAnimal

////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////  private string name;



////////////////////////////////////////////////////////////////////  protected Animal(string name)

////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////    Name = name;

////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////  public string Name

////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////    get { return name; }

////////////////////////////////////////////////////////////////////    private set

////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////      if (string.IsNullOrEmpty(value) || string.IsNullOrWhiteSpace(value))

////////////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////////////        throw new ArgumentException("Name can't be null or empty!");

////////////////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////////////////      name = value;

////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////  public string Type { }



////////////////////////////////////////////////////////////////////  public void Perform()

////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////    Console.WriteLine($">>> {this.MakeNoise()}");

////////////////////////////////////////////////////////////////////    Console.WriteLine($">>> {this.MakeTrick()}");

////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////  public override string ToString()

////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////    return base.ToString();

////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////class Cat

////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////  public Cat(string name) : base(name)

////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////  public override string MakeNoise()

////////////////////////////////////////////////////////////////////  {



////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////  public override string MakeTrick()

////////////////////////////////////////////////////////////////////  {



////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////class Dog

////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////  public Dog(string name) : base(name)

////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////  public override string MakeNoise()

////////////////////////////////////////////////////////////////////  {



////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////  public override string MakeTrick()

////////////////////////////////////////////////////////////////////  {



////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////interface IAnimal

////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////  public string Type  get; }

////////////////////////////////////////////////////////////////////public string Name { get; }

////////////////////////////////////////////////////////////////////void Perform();

////////////////////////////////////////////////////////////////////    }



////////////////////////////////////////////////////////////////////interface IMakeNoise

////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////  string MakeNoise();

////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////interface IMakeTrick

////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////  string MakeTrick()

////////////////////////////////////////////////////////////////////    }



////////////////////////////////////////////////////////////////////class Program

////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////  static void Main(string[] args)

////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////    List<Cat> animals = new List<Cat>();



////////////////////////////////////////////////////////////////////    int n = int.Parse(Console.ReadLine());



////////////////////////////////////////////////////////////////////    for (int i = 0; i < n; i++)

////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////      string[] line = Console.ReadLine().Split();

////////////////////////////////////////////////////////////////////      IAnimal animal = CreateAnimal(line);

////////////////////////////////////////////////////////////////////      animals.Add(animal);

////////////////////////////////////////////////////////////////////    }



////////////////////////////////////////////////////////////////////    string trainerName = Console.ReadLine();



////////////////////////////////////////////////////////////////////    Trainer trainer = null;



////////////////////////////////////////////////////////////////////    string name = Console.ReadLine();



////////////////////////////////////////////////////////////////////    while (name != "End")

////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////      IAnimal current = animals.Where(a => a.Name.Equals(name)).FirstOrDefault();



////////////////////////////////////////////////////////////////////      if (current == null)

////////////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////////////        Console.WriteLine("No such name in the Database!");




////////////////////////////////////////////////////////////////////                else

////////////////////////////////////////////////////////////////////        {

////////////////////////////////////////////////////////////////////          if (trainer == null)

////////////////////////////////////////////////////////////////////          {

////////////////////////////////////////////////////////////////////            trainer = new Trainer(trainerName, current);

////////////////////////////////////////////////////////////////////          }

////////////////////////////////////////////////////////////////////          trainer.Work(current);

////////////////////////////////////////////////////////////////////          trainer.Make();

////////////////////////////////////////////////////////////////////        }



////////////////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////    private static IAnimal CreateAnimal(string[] line)

////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////      IAnimal animal = null;

////////////////////////////////////////////////////////////////////      switch (line[0])

////////////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////////////        case "Cat":

////////////////////////////////////////////////////////////////////          animal = new Cat(line[1]);

////////////////////////////////////////////////////////////////////          break;

////////////////////////////////////////////////////////////////////        case "Dog":

////////////////////////////////////////////////////////////////////          animal = new Dog(line[1]);

////////////////////////////////////////////////////////////////////          break;

////////////////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////////////////      return animal;

////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////  Trainer

////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////        private IAnimal entity;

////////////////////////////////////////////////////////////////////  private string name;



////////////////////////////////////////////////////////////////////  public Trainer(string name, IAnimal entity)

////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////    this.Name = name;

////////////////////////////////////////////////////////////////////    this.Entity = entity;

////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////  public string Name

////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////    private set

////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////      if (string.IsNullOrEmpty(value) || string.IsNullOrWhiteSpace(value))

////////////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////////////        throw new ArgumentException("Name can't be null or empty!");

////////////////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////////////////      name = value;

////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////  public IAnimal Entity

////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////    get { return Еntity; }

////////////////////////////////////////////////////////////////////    private set

////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////      entity = value;

////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////  public void Work(IAnimal entity)

////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////    this.Entity = entity;

////////////////////////////////////////////////////////////////////    Console.WriteLine($"Trainer {this.Name} works with {Entity}!");

////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////  public void Make()

////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////    this.Entity.Perform();

////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////}




////////////////////////////////////////////////////////////////////Въпрос 7
////////////////////////////////////////////////////////////////////Отчасти верен
////////////////////////////////////////////////////////////////////4,00 от максимално 6,00 точки
////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////Открийте липсващите думи и свържете правилно изреченията:

////////////////////////////////////////////////////////////////////При дефиниране на обекти от базови и производни класове е възможно на обект от  blank  да се присвои обект от  blank  т.е. обект от  blank  може да служи за инициализация на обект (референция) от blank.

////////////////////////////////////////////////////////////////////Възможно е също да се осъществи обръщение към обект чрез променлива от друг тип, ако използвания тип е клас, намиращ се на blank  ниво в йерархията на наследяване.Обратното blank .





////////////////////////////////////////////////////////////////////производен класпроизводен класпроизводен класпроизводен класпроизводен класпроизводен класпо‑нископо‑нископо‑нископо‑нископо‑нископо‑нискосъщо е възможносъщо е възможносъщо е възможносъщо е възможносъщо е възможносъщо е възможноне е възможноне е възможноне е възможноне е възможноне е възможноне е възможнобазов класбазов класбазов класбазов класбазов класбазов класпо‑високо по‑високо по‑високо по‑високо по‑високо по‑високо
////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////Your answer is partially correct.
////////////////////////////////////////////////////////////////////Вие правилно сте избрали 4.
////////////////////////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////////////////////////Открийте липсващите думи и свържете правилно изреченията:

////////////////////////////////////////////////////////////////////При дефиниране на обекти от базови и производни класове е възможно на обект от [базов клас] да се присвои обект от[производен клас] т.е.обект от [производен клас] може да служи за инициализация на обект (референция) от [базов клас].

////////////////////////////////////////////////////////////////////Възможно е също да се осъществи обръщение към обект чрез променлива от друг тип, ако използвания тип е клас, намиращ се на[по‑високо] ниво в йерархията на наследяване. Обратното[не е възможно].



////////////////////////////////////////////////////////////////////Въпрос 8
////////////////////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////Посочете по какъв начин указваме на даден метод от базовия клас, че искаме да презапишем неговото поведение.

////////////////////////////////////////////////////////////////////Изберете едно
////////////////////////////////////////////////////////////////////a.Чрез ключовата дума override.
////////////////////////////////////////////////////////////////////b.Чрез ключовата дума overwrite.
////////////////////////////////////////////////////////////////////c.Чрез ключовата дума static.
////////////////////////////////////////////////////////////////////d.Чрез ключовата дума virtual. 
////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////////////////////////Правилният отговор е: Чрез ключовата дума virtual.
////////////////////////////////////////////////////////////////////Въпрос 9
////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////Дефинирайте понятието абстракция в обектно-ориентираното програмиране.

////////////////////////////////////////////////////////////////////Абстракция е ключово понятие. То се отнася до процеса на създаване на единствени и прости модели на реалния свят. Абстракцията се постига чрез класове и интерфейси. Класовете служат за дефиниране на обекти. Интерфейсите дефинират договори, които даден клас трябва да спазва, когато имплементира този интерфейс.

////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////Абстракцията е основен принцип от обектно-ориентираното програмиране.

////////////////////////////////////////////////////////////////////Абстракцията означава да работим с нещо, което знаем как да използваме, но не знаем как работи вътрешно.

////////////////////////////////////////////////////////////////////Абстракцията е действие, при което игнорираме всички детайли, които не ни интересуват от даден обект, и разглеждаме само детайлите, които имат значение за проблема, който решаваме.

////////////////////////////////////////////////////////////////////Абстракцията ни позволява да пишем код, който работи с абстрактни струк­тури от данни (например списък, речник, множество и други). Имайки абстрактния тип данни, ние можем да работим с него през неговия интер­фейс, без да се интересуваме от имплементацията му.

////////////////////////////////////////////////////////////////////Има два начина за постигане на абстракция:
////////////////////////////////////////////////////////////////////Интерфейси(100 % абстракция)
////////////////////////////////////////////////////////////////////Абстрактен клас(0% - 100% абстракция)

////////////////////////////////////////////////////////////////////Въпрос 10
////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////Дайте пример за шаблонен клас, който да се казва Кутия и тази кутия да може да съхранява всичко. В този клас създайте и един метод, който да премахва първия елемент от кутията и да връща като резултат неговата стойност.

////////////////////////////////////////////////////////////////////using System;

////////////////////////////////////////////////////////////////////using System.Collections.Generic;

////////////////////////////////////////////////////////////////////using System.Linq;

////////////////////////////////////////////////////////////////////using System.Text;

////////////////////////////////////////////////////////////////////using System.Threading.Tasks;



////////////////////////////////////////////////////////////////////namespace Test2

////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////  public class Box<T>

////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////    private List<T> items;

////////////////////////////////////////////////////////////////////    public Box()

////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////      items = new List<T>();

////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////    public void Add(T item)

////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////      items.Add(item);

////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////    public T RemoveFirst()

////////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////////      if (items.Count == 0)

////////////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////////////        throw new InvalidOperationException("The box is empty!");

////////////////////////////////////////////////////////////////////      }



////////////////////////////////////////////////////////////////////      T firstItem = items[0];

////////////////////////////////////////////////////////////////////      items.RemoveAt(0);

////////////////////////////////////////////////////////////////////      return firstItem;

////////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////Въпрос 11
////////////////////////////////////////////////////////////////////Отчасти верен
////////////////////////////////////////////////////////////////////4,50 от максимално 6,00 точки
////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////Свържете кои от характеристиките се отнасят за абстракцията, кои за енкапсулацията.


////////////////////////////////////////////////////////////////////Получава се чрез модификаторите за достъп (private, public, protected, internal) 
////////////////////////////////////////////////////////////////////Енкапсулация


////////////////////////////////////////////////////////////////////Постига се чрез интерфейси и абстрактни класове. 
////////////////////////////////////////////////////////////////////Абстракция


////////////////////////////////////////////////////////////////////Процес на скриване на подробностите на имплементацията и показване само на функционалностите към потребителя. 
////////////////////////////////////////////////////////////////////Енкапсулация


////////////////////////////////////////////////////////////////////Използва се, за  да скрива кода и информацията в един компонент, за да я защити от външния свят. 
////////////////////////////////////////////////////////////////////Енкапсулация






////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////Your answer is partially correct.
////////////////////////////////////////////////////////////////////Вие правилно сте избрали 3.
////////////////////////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////////////////////////Свържете кои от характеристиките се отнасят за абстракцията, кои за енкапсулацията.


////////////////////////////////////////////////////////////////////Получава се чрез модификаторите за достъп (private, public, protected, internal) [Енкапсулация]

////////////////////////////////////////////////////////////////////Постига се чрез интерфейси и абстрактни класове. [Абстракция]

////////////////////////////////////////////////////////////////////Процес на скриване на подробностите на имплементацията и показване само на функционалностите към потребителя. [Абстракция]

////////////////////////////////////////////////////////////////////Използва се, за  да скрива кода и информацията в един компонент, за да я защити от външния свят. [Енкапсулация]





////////////////////////////////////////////////////////////////////Въпрос 12
////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////От максимално 6,00
////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////Имате следния код:

////////////////////////////////////////////////////////////////////        public List<int> CreateList(int item, int count)
////////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////////  List<int> list = new List<int>();
////////////////////////////////////////////////////////////////////  for (int i = 0; i < count; i++)
////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////    list.Add(item);
////////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////////Модифицирайте кода, така че методът да работи с всякакъв тип данни.



////////////////////////////////////////////////////////////////////public List<T> CreateList<T>(T item, int count)

////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////  List<T> list = new List<T>();

////////////////////////////////////////////////////////////////////  for (int i = 0; i < count; i++)

////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////    list.Add(item);

////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////  return list;

////////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////public List<T> CreateList<T>(T item, int count)//2т
////////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////////  List<T> list = new List<T>();//2т
////////////////////////////////////////////////////////////////////  for (int i = 0; i < count; i++)
////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////    list.Add(item);
////////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////////  return list;//2т
////////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////////Въпрос 13
////////////////////////////////////////////////////////////////////Отчасти верен
////////////////////////////////////////////////////////////////////1,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////Посочете кое от изброените твърдение е вярно за класовете в C#.

////////////////////////////////////////////////////////////////////Изберете едно или повече:
////////////////////////////////////////////////////////////////////a.Поддържа множествено наследяване.
////////////////////////////////////////////////////////////////////b. Можем да създаваме инстанции. 
////////////////////////////////////////////////////////////////////c. Той е референтен тип и включва само абстрактни членове като събития, методи и свойства.
////////////////////////////////////////////////////////////////////d. Описва състоянието и поведението на обектите
////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////Your answer is partially correct.
////////////////////////////////////////////////////////////////////Вие правилно сте избрали 1.
////////////////////////////////////////////////////////////////////The correct answers are: Можем да създаваме инстанции., Описва състоянието и поведението на обектите
////////////////////////////////////////////////////////////////////Въпрос 14
////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////Дайте пример за наследяване в C#. 

////////////////////////////////////////////////////////////////////Имате клас Animal с метод Eat(), който отпечатва "Eating...". Имате Котка и Куче, които трябва да наследяват от Animal. Те обаче трябва да могат да издават звук. Котката трябва да казва "Meow", а Кучето - "Bark". За тази цел създайте методи със съответните имена, котио извеждат на екрана звуците на всяко животно. Направете така че да не бъде възможно да се създаде обект от клас Animal.

////////////////////////////////////////////////////////////////////Реализирайте го чрез програмен код на C#.

////////////////////////////////////////////////////////////////////using System;



////////////////////////////////////////////////////////////////////abstract class Animal

////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////  public void Eat()

////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////    Console.WriteLine("Eating...");

////////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////////  public abstract void MakeSound();

////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////class Cat : Animal

////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////  public override void MakeSound()

////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////    Console.WriteLine("Meow");

////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////class Dog : Animal

////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////  public override void MakeSound()

////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////    Console.WriteLine("Bark");

////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////class Program

////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////  static void Main(string[] args)

////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////    Cat cat = new Cat();

////////////////////////////////////////////////////////////////////    cat.Eat();

////////////////////////////////////////////////////////////////////    cat.MakeSound();



////////////////////////////////////////////////////////////////////    Dog dog = new Dog();

////////////////////////////////////////////////////////////////////    dog.Eat();

////////////////////////////////////////////////////////////////////    dog.MakeSound();

////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////Въпрос 15
////////////////////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////////////////////4,00 от максимално 4,00 точки
////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////Открийте разликите между клас и интерфейс. Кои от изброените твърдения се отнасят за класовете в C#, кои за интерфейсите?

////////////////////////////////////////////////////////////////////Има както дефиниция, така и реализация.  blank 

////////////////////////////////////////////////////////////////////Има само дефиниция.  blank 

////////////////////////////////////////////////////////////////////Не може да бъде инстанциран.  blank 

////////////////////////////////////////////////////////////////////Може да бъде инстанциран.  blank 

////////////////////////////////////////////////////////////////////Може да съдържа членове, методи, заедно с дефиниция и реализация.  blank 

////////////////////////////////////////////////////////////////////Набор от дефиниции, които трябва да се приложат.  blank 

////////////////////////////////////////////////////////////////////КласКласКласКласКласКласИнтерфейсИнтерфейсИнтерфейсИнтерфейсИнтерфейсИнтерфейс
////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////////////////////////Открийте разликите между клас и интерфейс. Кои от изброените твърдения се отнасят за класовете в C#, кои за интерфейсите?

////////////////////////////////////////////////////////////////////Има както дефиниция, така и реализация. [Клас]

////////////////////////////////////////////////////////////////////Има само дефиниция. [Интерфейс]

////////////////////////////////////////////////////////////////////Не може да бъде инстанциран. [Интерфейс]

////////////////////////////////////////////////////////////////////Може да бъде инстанциран. [Клас]

////////////////////////////////////////////////////////////////////Може да съдържа членове, методи, заедно с дефиниция и реализация. [Клас]

////////////////////////////////////////////////////////////////////Набор от дефиниции, които трябва да се приложат. [Интерфейс]
////////////////////////////////////////////////////////////////////Въпрос 16
////////////////////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////Посочете видовете полиморфизъм в .NET.
////////////////////////////////////////////////////////////////////Изберете едно или повече:
////////////////////////////////////////////////////////////////////a.Нито едно от изброените. 
////////////////////////////////////////////////////////////////////b. Статичен. 
////////////////////////////////////////////////////////////////////c. Виртуален.
////////////////////////////////////////////////////////////////////d. Динамичен. 
////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////////////////////////The correct answers are: Статичен., Динамичен.
////////////////////////////////////////////////////////////////////Въпрос 17
////////////////////////////////////////////////////////////////////Отчасти верен
////////////////////////////////////////////////////////////////////3,33 от максимално 4,00 точки
////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////Свържете кои от характеристиките се отнасят за абстрактните класове, кои за интерфейсите.

////////////////////////////////////////////////////////////////////Може да наследи само един абстрактен клас. 
////////////////////////////////////////////////////////////////////Абстракция


////////////////////////////////////////////////////////////////////Могат да предоставят целия код и/или само детайлите, които трябва да се презапишат. 
////////////////////////////////////////////////////////////////////Абстракция


////////////////////////////////////////////////////////////////////Може да имплементира няколко интерфейса. 
////////////////////////////////////////////////////////////////////Интерфейси


////////////////////////////////////////////////////////////////////Може да съдържа модификатори за достъп. 
////////////////////////////////////////////////////////////////////Абстракция


////////////////////////////////////////////////////////////////////Не може да предоставя никакъв код, предоставя само описание. 
////////////////////////////////////////////////////////////////////Интерфейси


////////////////////////////////////////////////////////////////////Нямат модификатори за достъп. Всичко е публично по подразбиране. 
////////////////////////////////////////////////////////////////////Интерфейси

////////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////////Your answer is partially correct.
////////////////////////////////////////////////////////////////////Вие правилно сте избрали 5.
////////////////////////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////////////////////////Свържете кои от характеристиките се отнасят за абстрактните класове, кои за интерфейсите.

////////////////////////////////////////////////////////////////////Може да наследи само един абстрактен клас. [Абстракция]

////////////////////////////////////////////////////////////////////Могат да предоставят целия код и/или само детайлите, които трябва да се презапишат. [Абстракция]

////////////////////////////////////////////////////////////////////Може да имплементира няколко интерфейса. [И за двете]

////////////////////////////////////////////////////////////////////Може да съдържа модификатори за достъп. [Абстракция]

////////////////////////////////////////////////////////////////////Не може да предоставя никакъв код, предоставя само описание. [Интерфейси]

////////////////////////////////////////////////////////////////////Нямат модификатори за достъп. Всичко е публично по подразбиране. [Интерфейси]
////////////////////////////////////////////////////////////////////Въпрос 18
////////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////////От максимално 6,00
////////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////////Дайте пример чрез код на C# за това как и къде бихте използвали презареждане на методи. 



////////////////////////////////////////////////////////////////////Презареждане може да ползваме, когато искаме да имаме методи с едно и също име, но с различни параметри.

////////////////////////////////////////////////////////////////////Пример:

////////////////////////////////////////////////////////////////////using System;



////////////////////////////////////////////////////////////////////class Calculator

////////////////////////////////////////////////////////////////////{



////////////////////////////////////////////////////////////////////  public int Add(int a, int b)

////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////    return a + b;

////////////////////////////////////////////////////////////////////  }





////////////////////////////////////////////////////////////////////  public int Add(int a, int b, int c)

////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////    return a + b + c;

////////////////////////////////////////////////////////////////////  }





////////////////////////////////////////////////////////////////////  public double Add(double a, double b)

////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////    return a + b;

////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////class Program

////////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////////  static void Main(string[] args)

////////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////////    Calculator calculator = new Calculator();



////////////////////////////////////////////////////////////////////    int sum1 = calculator.Add(3, 5);

////////////////////////////////////////////////////////////////////    int sum2 = calculator.Add(3, 5, 7);

////////////////////////////////////////////////////////////////////    double sum3 = calculator.Add(3.5, 5.2);



////////////////////////////////////////////////////////////////////    Console.WriteLine("Sum1: " + sum1);

////////////////////////////////////////////////////////////////////    Console.WriteLine("Sum2: " + sum2);

////////////////////////////////////////////////////////////////////    Console.WriteLine("Sum3: " + sum3);

////////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////// class MathOperations
////////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////////  public int Add(int a, int b)
////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////    return a + b;
////////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////////  public int Add(int a, int b, int c)
////////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////////    return a + b + c;
////////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////////Край на прегледа
////////////////////////////////////////////////////////////////////Отиди на ...
////////////////////////////////////////////////////////////////////Отиди на ...
////////////////////////////////////////////////////////////////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
////////////////////////////////////////////////////////////////////Навигация в теста
////////////////////////////////////////////////////////////////////Край на прегледа
////////////////////////////////////////////////////////////////////Вие сте влезли в системата като Добри Илев (Изход)
////////////////////////////////////////////////////////////////////тренировъчен - курс - по
////////////////////////////////////////////////////////////////////Data retention summary


////////////////////////////////////////////////////////////////////ИЗПИТНА ТЕМА 5
//////////////////////////////////////////////////////////////////Прескочи на основното съдържание
//////////////////////////////////////////////////////////////////ПГЕЕ
//////////////////////////////////////////////////////////////////Български ‎(bg)‎ 
//////////////////////////////////////////////////////////////////Добри Илев 
//////////////////////////////////////////////////////////////////Тренировъчен курс - Програмно осигуряване
//////////////////////////////////////////////////////////////////Начална страница
//////////////////////////////////////////////////////////////////Моите курсове
////////////////////////////////////////////////////////////////// тренировъчен-курс-по
////////////////////////////////////////////////////////////////// Изпитна тема 5
////////////////////////////////////////////////////////////////// Тест към Изпитна тема №5
//////////////////////////////////////////////////////////////////Започнат на	събота, 28 януари 2023, 21:32
//////////////////////////////////////////////////////////////////Състояние Завършен
//////////////////////////////////////////////////////////////////Приключен на	четвъртък, 2 февруари 2023, 13:57
//////////////////////////////////////////////////////////////////Изминало време	4 дни 16 часа
//////////////////////////////////////////////////////////////////Оценка	Още не е оценен
//////////////////////////////////////////////////////////////////Въпрос 1
//////////////////////////////////////////////////////////////////Отчасти верен
//////////////////////////////////////////////////////////////////2,86 от максимално 4,00 точки
//////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////Решете правилно задачата. Имате дадени парчета от код, поставете отделните парчета така, че да получите правилно работещ код, който трябва да прочете данните от един файл и да ги копира в друг.

////////////////////////////////////////////////////////////////// blank 

////////////////////////////////////////////////////////////////// blank 

////////////////////////////////////////////////////////////////// blank 

////////////////////////////////////////////////////////////////// blank 

////////////////////////////////////////////////////////////////// blank 

////////////////////////////////////////////////////////////////// blank 

////////////////////////////////////////////////////////////////// blank 





//////////////////////////////////////////////////////////////////using (var writer = new StreamWriter("../../../Copy.cs")) { using (var reader = new StreamReader("../../../Program.cs")) { string line = reader.ReadLine(); while (line != null) { line = reader.ReadLine(); writer.WriteLine(line); } } }
//////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////Your answer is partially correct.
//////////////////////////////////////////////////////////////////Вие правилно сте избрали 5.
//////////////////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////////////////Решете правилно задачата. Имате дадени парчета от код, поставете отделните парчета така, че да получите правилно работещ код, който трябва да прочете данните от един файл и да ги копира в друг.

//////////////////////////////////////////////////////////////////[using (var reader = new StreamReader("../../../Program.cs"))
//////////////////////////////////////////////////////////////////{]

//////////////////////////////////////////////////////////////////[using (var writer = new StreamWriter("../../../Copy.cs"))
//////////////////////////////////////////////////////////////////  {]

//////////////////////////////////////////////////////////////////[string line = reader.ReadLine();]

//////////////////////////////////////////////////////////////////[while (line != null)
//////////////////////////////////////////////////////////////////    {]

//////////////////////////////////////////////////////////////////[writer.WriteLine(line);]

//////////////////////////////////////////////////////////////////[line = reader.ReadLine();]

//////////////////////////////////////////////////////////////////[}
//////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////}]



//////////////////////////////////////////////////////////////////Въпрос 2
//////////////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////////////4,00 от максимално 4,00 точки
//////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////Направете сравнение между IEnumerable и IEnumerator, като поставите липсващите думи в текста:

//////////////////////////////////////////////////////////////////IEnumerable се използва за 
//////////////////////////////////////////////////////////////////generic интерфейс
////////////////////////////////////////////////////////////////// , но IEnumerator се използва за 
//////////////////////////////////////////////////////////////////non-generic интерфейс
////////////////////////////////////////////////////////////////// .
//////////////////////////////////////////////////////////////////IEnumerable има 
//////////////////////////////////////////////////////////////////само един метод
////////////////////////////////////////////////////////////////// , докато IEnumerator има 
//////////////////////////////////////////////////////////////////само два метода
////////////////////////////////////////////////////////////////// .
//////////////////////////////////////////////////////////////////IEnumerable 
//////////////////////////////////////////////////////////////////може да върне IEnumerator
////////////////////////////////////////////////////////////////// . IEnumerator 
//////////////////////////////////////////////////////////////////не може да върне IEnumerable
////////////////////////////////////////////////////////////////// .



//////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////////////////Направете сравнение между IEnumerable и IEnumerator, като поставите липсващите думи в текста:

//////////////////////////////////////////////////////////////////IEnumerable се използва за [generic интерфейс], но IEnumerator се използва за [non‑generic интерфейс].
//////////////////////////////////////////////////////////////////IEnumerable има[само един метод], докато IEnumerator има [само два метода].
//////////////////////////////////////////////////////////////////IEnumerable[може да върне IEnumerator].IEnumerator[не може да върне IEnumerable].



//////////////////////////////////////////////////////////////////Въпрос 3
//////////////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////Посочете кой от изброените класове е базовия клас за потоците в C#.

//////////////////////////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////////////////////////a. FileStream
//////////////////////////////////////////////////////////////////b. Stream 
//////////////////////////////////////////////////////////////////c. DataStream
//////////////////////////////////////////////////////////////////d. BaseStream
//////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////////////Правилният отговор е: Stream
//////////////////////////////////////////////////////////////////Въпрос 4
//////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////От максимално 8,00
//////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////Имате даден клас Person:

//////////////////////////////////////////////////////////////////Person.cs

//////////////////////////////////////////////////////////////////private string name;
//////////////////////////////////////////////////////////////////private int age;
//////////////////////////////////////////////////////////////////private string city;

//////////////////////////////////////////////////////////////////public Person(string name, int age, string city)
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  Name = name;
//////////////////////////////////////////////////////////////////  Age = age;
//////////////////////////////////////////////////////////////////  City = city;
//////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////public string Name
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  get { return name; }
//////////////////////////////////////////////////////////////////  private set { name = value; }
//////////////////////////////////////////////////////////////////}
//////////////////////////////////////////////////////////////////public int Age
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  get { return age; }
//////////////////////////////////////////////////////////////////  private set { age = value; }
//////////////////////////////////////////////////////////////////}
//////////////////////////////////////////////////////////////////public string City
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  get { return city; }
//////////////////////////////////////////////////////////////////  private set { city = value; }
//////////////////////////////////////////////////////////////////}




//////////////////////////////////////////////////////////////////И клас Program.cs. Не променяйте нищо по него!

//////////////////////////////////////////////////////////////////Program.cs

//////////////////////////////////////////////////////////////////List<Person> people = new List<Person>();

//////////////////////////////////////////////////////////////////string cmd = Console.ReadLine();

//////////////////////////////////////////////////////////////////while (!cmd.Equals("END"))
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  string[] info = cmd.Split();
//////////////////////////////////////////////////////////////////  Person person = new Person(info[0], int.Parse(info[1]), info[2]);
//////////////////////////////////////////////////////////////////  people.Add(person);

//////////////////////////////////////////////////////////////////  cmd = Console.ReadLine();
//////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////int n = int.Parse(Console.ReadLine());

//////////////////////////////////////////////////////////////////Person p = people[n - 1];
//////////////////////////////////////////////////////////////////int equalsPeopleCount = 0;
//////////////////////////////////////////////////////////////////int notEqualsPeoplesCount = 0;

//////////////////////////////////////////////////////////////////for (int i = 0; i < people.Count; i++)
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  if (i == n - 1)
//////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////    continue;
//////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////  if (people[i].CompareTo(p) == 0)
//////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////    equalsPeopleCount++;
//////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////  else
//////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////    notEqualsPeoplesCount++;
//////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////Console.WriteLine(equalsPeopleCount == 0 ? "No matches!" :
//////////////////////////////////////////////////////////////////$"{equalsPeopleCount} {notEqualsPeoplesCount} {people.Count}");




//////////////////////////////////////////////////////////////////Вашата задача е да сравните хората - първо сравнете имената им, след това – възрастите им, а накрая – градовете им.

//////////////////////////////////////////////////////////////////На единствения ред от изхода изведете статистики: колко хора са еднакви с него, колко не са и общият брой хора във вашата колекция.

//////////////////////////////////////////////////////////////////Формат: { брой еднакви хора}
//////////////////////////////////////////////////////////////////{ брой нееднакви хора}
//////////////////////////////////////////////////////////////////{ общ брой хора}

//////////////////////////////////////////////////////////////////Вход:

//////////////////////////////////////////////////////////////////На всеки ред ще получавате човек във формат:

//////////////////////////////////////////////////////////////////{ име}
//////////////////////////////////////////////////////////////////{ възраст}
//////////////////////////////////////////////////////////////////{ град}

//////////////////////////////////////////////////////////////////Колекционирайте ги, докато не получите "END"

//////////////////////////////////////////////////////////////////След това ще получите цяло число N - Nтия човек в колекцията ви. Започвайки от 1.

//////////////////////////////////////////////////////////////////Примери:

//////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////Pesho 22 Vraca

//////////////////////////////////////////////////////////////////Gogo 14 Sofeto

//////////////////////////////////////////////////////////////////END

//////////////////////////////////////////////////////////////////2

//////////////////////////////////////////////////////////////////No matches

//////////////////////////////////////////////////////////////////Pesho 22 Vraca

//////////////////////////////////////////////////////////////////Gogo 22 Vraca

//////////////////////////////////////////////////////////////////Gogo 22 Vraca

//////////////////////////////////////////////////////////////////END

//////////////////////////////////////////////////////////////////2

//////////////////////////////////////////////////////////////////1 1 3


/////////////////////////////////////////////////////////////////////Person.cs

//////////////////////////////////////////////////////////////////private string name;
//////////////////////////////////////////////////////////////////private int age;
//////////////////////////////////////////////////////////////////private string city;

//////////////////////////////////////////////////////////////////public Person(string name, int age, string city)
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  Name = name;
//////////////////////////////////////////////////////////////////  Age = age;
//////////////////////////////////////////////////////////////////  City = city;
//////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////public string Name
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  get { return name; }
//////////////////////////////////////////////////////////////////  private set { name = value; }
//////////////////////////////////////////////////////////////////}
//////////////////////////////////////////////////////////////////public int Age
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  get { return age; }
//////////////////////////////////////////////////////////////////  private set { age = value; }
//////////////////////////////////////////////////////////////////}
//////////////////////////////////////////////////////////////////public string City
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  get { return city; }
//////////////////////////////////////////////////////////////////  private set { city = value; }
//////////////////////////////////////////////////////////////////}







////////////////////////////////////////////////////////////////////Program.cs



//////////////////////////////////////////////////////////////////List<Person> people = new List<Person>();

//////////////////////////////////////////////////////////////////string cmd = Console.ReadLine();

//////////////////////////////////////////////////////////////////while (!cmd.Equals("END"))
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  string[] info = cmd.Split();
//////////////////////////////////////////////////////////////////  Person person = new Person(info[0], int.Parse(info[1]), info[2]);
//////////////////////////////////////////////////////////////////  people.Add(person);

//////////////////////////////////////////////////////////////////  cmd = Console.ReadLine();
//////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////int n = int.Parse(Console.ReadLine());

//////////////////////////////////////////////////////////////////Person p = people[n - 1];
//////////////////////////////////////////////////////////////////int equalsPeopleCount = 0;
//////////////////////////////////////////////////////////////////int notEqualsPeoplesCount = 0;

//////////////////////////////////////////////////////////////////for (int i = 0; i < people.Count; i++)
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  if (i == n - 1)
//////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////    continue;
//////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////  if (people[i].CompareTo(p) == 0)
//////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////    equalsPeopleCount++;
//////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////  else
//////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////    notEqualsPeoplesCount++;
//////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////Console.WriteLine(equalsPeopleCount == 0 ? "No matches!" :
//////////////////////////////////////////////////////////////////$"{equalsPeopleCount} {notEqualsPeoplesCount} {people.Count}");

//////////////////////////////////////////////////////////////////Въпрос 5
//////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////Дайте пример за функция, която проверява дадено цяло число X дали е четно или нечетно. След изпълнението на функцията, на конзолата да се отпечата като резултат само Even или Odd.



//////////////////////////////////////////////////////////////////  Console.Write("Write a number:");

//////////////////////////////////////////////////////////////////int num = int.Parse(Console.ReadLine());

//////////////////////////////////////////////////////////////////if (num % 2 == 0)

//////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////  Console.WriteLine("Even");

//////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////else

//////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////  Console.WriteLine("Odd");

//////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////Func<int, bool> oddOrEven = (x) => x % 2 == 0;

//////////////////////////////////////////////////////////////////Console.WriteLine(oddOrEven(5) ? "Even" : "Odd");

//////////////////////////////////////////////////////////////////Въпрос 6
//////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////От максимално 6,00
//////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////Напишете програма на C#, която да дефинира делегат, който може да приема метод, който сумира две реални числа. Накрая резултатът да се отпечата на конзолата.

////////////////////////////////////////////////////////////////////Program.cs

//////////////////////////////////////////////////////////////////DelegateTest objMyclass = new DelegateTest();

//////////////////////////////////////////////////////////////////DelegateTest.myDelegate objSum = null;

//////////////////////////////////////////////////////////////////objSum = objMyclass.Sum;

//////////////////////////////////////////////////////////////////if (objSum != null)

//////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////  Console.WriteLine("Sum is = " + objSum(69, 1));

//////////////////////////////////////////////////////////////////  Console.ReadLine();

//////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////DelegateTest.cs

//////////////////////////////////////////////////////////////////public delegate int myDelegate(int a, int b);

//////////////////////////////////////////////////////////////////public int Sum(int a, int b)

//////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////  return a + b;

//////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////// public delegate double SumDelegate(double firstNumber, double secondNumber);
//////////////////////////////////////////////////////////////////class Program
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  static void Main(string[] args)
//////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////    SumDelegate del = new SumDelegate(Sum);
//////////////////////////////////////////////////////////////////    Console.WriteLine(del(2.5, 3.14));
//////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////  private static double Sum(double firstNumber, double secondNumber)
//////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////    return firstNumber + secondNumber;
//////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////Въпрос 7
//////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////Обяснете следния фрагмент от код с думи:

//////////////////////////////////////////////////////////////////int[] nums = { 1, 2, 3, 4, 5, 6 };

//////////////////////////////////////////////////////////////////int[] otherNums = { 7, 8, 9, 0 };

//////////////////////////////////////////////////////////////////nums = nums.Concat(otherNums);

//////////////////////////////////////////////////////////////////Console.WriteLine(string.Join(", ", nums));

//////////////////////////////////////////////////////////////////В полето запишете ред по ред какво прави кода и какво се очаква да получим като резултат.


//////////////////////////////////////////////////////////////////int[] nums = { 1, 2, 3, 4, 5, 6 };

//////////////////////////////////////////////////////////////////-декларира се масив с цели числа от 1 до 6.



//////////////////////////////////////////////////////////////////int[] otherNums = { 7, 8, 9, 0 };

//////////////////////////////////////////////////////////////////-декларира се масив с цели числа от 7 до 0.



//////////////////////////////////////////////////////////////////nums = nums.Concat(otherNums);

//////////////////////////////////////////////////////////////////-тази команда слива двата масива така, че да станат числата от 1 до 0



//////////////////////////////////////////////////////////////////Console.WriteLine(string.Join(", ", nums));

//////////////////////////////////////////////////////////////////-команда за отпечатване на резултат като след всяко число да се отпечатва запетая

//////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////Инициализираме масив от цели числа nums и друг масив от цели числа otherNums.

//////////////////////////////////////////////////////////////////Конкатенираме (или слепваме) двата масива - масив otherNums се "залепя" след масива nums.

//////////////////////////////////////////////////////////////////Отпечатваме на конзолата елементите от масива на един ред разделени със ", ". 

//////////////////////////////////////////////////////////////////Очакван резултат:

//////////////////////////////////////////////////////////////////1, 2, 3, 4, 5, 6, 7, 8, 9, 0

//////////////////////////////////////////////////////////////////Въпрос 8
//////////////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////Посочете кое от изброените твърдения е вярно за работата на изключенията в C#.

//////////////////////////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////////////////////////a. По време на изпълнението на програмата никой от извикваните методи не може да хвърли изключение.
//////////////////////////////////////////////////////////////////b. Нито едно от изброените.
//////////////////////////////////////////////////////////////////c. Ако по време на изпълнението на програмата някой от извикваните методи неочаквано хвърли изключение, но нормалният ход на програмата си продължава. 
//////////////////////////////////////////////////////////////////d. Ако по време на изпълнението на програмата някой от извикваните методи неочаквано хвърли изключение, то нормалният ход на програмата се преустановява.  
//////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////////////Правилният отговор е: Ако по време на изпълнението на програмата някой от извикваните методи неочаквано хвърли изключение, то нормалният ход на програмата се преустановява. 
//////////////////////////////////////////////////////////////////Въпрос 9
//////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////От максимално 8,00
//////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////Имате даден клас Book със следните членове на класа. Авторите може да са анонимни, един или повече. Book трябва да има само един конструктор!

//////////////////////////////////////////////////////////////////Book.cs

//////////////////////////////////////////////////////////////////private string title;
//////////////////////////////////////////////////////////////////private int year;
//////////////////////////////////////////////////////////////////public Book(string title, int year)
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  this.Title = title;
//////////////////////////////////////////////////////////////////  this.Year = year;
//////////////////////////////////////////////////////////////////  this.Authors = authors;
//////////////////////////////////////////////////////////////////}
//////////////////////////////////////////////////////////////////public string Title
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  get { return title; }
//////////////////////////////////////////////////////////////////  private set { title = value; }
//////////////////////////////////////////////////////////////////}
//////////////////////////////////////////////////////////////////public int Year
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  get { return year; }
//////////////////////////////////////////////////////////////////  private set { year = value; }
//////////////////////////////////////////////////////////////////}
//////////////////////////////////////////////////////////////////public IReadOnlyList<string> Authors { get; private set; }

//////////////////////////////////////////////////////////////////public override string ToString()
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  return $"{this.Title} - {this.Year} Authors: {string.Join(", ", this.Authors)}";
//////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////Имате даден и клас Library със следните членове на класа. Той трябва да съхранява колекция книги. Library може да е инициализиран без книги или с какъвто и да е брой книги и трябва да има само един конструктор.



//////////////////////////////////////////////////////////////////Library.cs

//////////////////////////////////////////////////////////////////private List<Book> books;

//////////////////////////////////////////////////////////////////public Library()
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  this.books = new List<Book>(books);
//////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////public IEnumerator<Book> GetEnumerator()
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  foreach (var book in this.books)
//////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////IEnumerator IEnumerable.GetEnumerator()
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  return this.GetEnumerator();
//////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////Имате даден и Program.cs файла:

//////////////////////////////////////////////////////////////////Program.cs

//////////////////////////////////////////////////////////////////Book bookOne = new Book("Animal Farm", 2003, "George Orwell");
//////////////////////////////////////////////////////////////////Book bookTwo = new Book("The Documents in the Case", 2002, "Dorothy Sayers", "Robert Eustace");
//////////////////////////////////////////////////////////////////Book bookThree = new Book("The Documents in the Case", 1930);

//////////////////////////////////////////////////////////////////Library library = new Library(bookOne, bookTwo, bookThree);

//////////////////////////////////////////////////////////////////foreach (var book in library)
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  Console.WriteLine(book);
//////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////Книгите и библиотеката трябва да могат да се използват по дадения начин. Не променяйте нищо по Program.cs файла!

//////////////////////////////////////////////////////////////////Кодът е грешен/непълен. Вашата задача е да откриете и поправите грешките в кода, така че той да работи правилно!

//////////////////////////////////////////////////////////////////При правилно работещ код като изход в конзолата трябва да получите следният резултат:

//////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////Animal Farm - 2003 Authors: George Orwell

//////////////////////////////////////////////////////////////////The Documents in the Case - 2002 Authors: Dorothy Sayers, Robert Eustace

//////////////////////////////////////////////////////////////////The Documents in the Case - 1930 Authors:


////////////////////////////////////////////////////////////////////Program.cs

//////////////////////////////////////////////////////////////////Book bookOne = new Book("Animal Farm", 2003, "George Orwell");
//////////////////////////////////////////////////////////////////Book bookTwo = new Book("The Documents in the Case", 2002, "Dorothy Sayers", "Robert Eustace");
//////////////////////////////////////////////////////////////////Book bookThree = new Book("The Documents in the Case", 1930);

//////////////////////////////////////////////////////////////////Library library = new Library(bookOne, bookTwo, bookThree);

//////////////////////////////////////////////////////////////////foreach (var book in library)
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  Console.WriteLine(book);

//////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////Library.cs

//////////////////////////////////////////////////////////////////private List<Book> books;

//////////////////////////////////////////////////////////////////public Library()
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  this.books = new List<Book>(books);
//////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////public IEnumerator<Book> GetEnumerator()
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  foreach (var book in this.books)
//////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////IEnumerator IEnumerable.GetEnumerator()
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  return this.GetEnumerator();
//////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////////Book.cs

//////////////////////////////////////////////////////////////////private string title;
//////////////////////////////////////////////////////////////////private int year;
//////////////////////////////////////////////////////////////////public Book(string title, int year)
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  this.Title = title;
//////////////////////////////////////////////////////////////////  this.Year = year;
//////////////////////////////////////////////////////////////////  this.Authors = authors;
//////////////////////////////////////////////////////////////////}
//////////////////////////////////////////////////////////////////public string Title
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  get { return title; }
//////////////////////////////////////////////////////////////////  private set { title = value; }
//////////////////////////////////////////////////////////////////}
//////////////////////////////////////////////////////////////////public int Year
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  get { return year; }
//////////////////////////////////////////////////////////////////  private set { year = value; }
//////////////////////////////////////////////////////////////////}
//////////////////////////////////////////////////////////////////public IReadOnlyList<string> Authors { get; private set; }

//////////////////////////////////////////////////////////////////public override string ToString()
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  return $"{this.Title} - {this.Year} Authors: {string.Join(", ", this.Authors)}";
//////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////Въпрос 10
//////////////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////Посочете какво представлява и какво прави Current() от интерфейса IEnumerator:

//////////////////////////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////////////////////////a. Current е свойството, което задава стойност на елемента от колекцията, който е на текущата позиция на итератора.
//////////////////////////////////////////////////////////////////b. Current е свойството, което връща елемента от колекцията, който е на текущата позиция на итератора. 
//////////////////////////////////////////////////////////////////c. Current е свойството, което връща елемента от колекцията, който е на следващата позиция на итератора.
//////////////////////////////////////////////////////////////////d. Current е свойството, което задава стойност на  елемента от колекцията, който е на следващата позиция на итератора.
//////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////////////Правилният отговор е: Current е свойството, което връща елемента от колекцията, който е на текущата позиция на итератора.
//////////////////////////////////////////////////////////////////Въпрос 11
//////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////От максимално 8,00
//////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////Имате даден следният програмен фрагмент:

//////////////////////////////////////////////////////////////////Program.cs

//////////////////////////////////////////////////////////////////try
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  string name = Console.ReadLine();
//////////////////////////////////////////////////////////////////  int age = int.Parse(Console.ReadLine());
//////////////////////////////////////////////////////////////////  Person person = new Person(name, age);
//////////////////////////////////////////////////////////////////}
//////////////////////////////////////////////////////////////////catch (ArgumentNullException ex)
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  Console.WriteLine(ex.Message);
//////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////Person.cs

//////////////////////////////////////////////////////////////////        private string firstName;
//////////////////////////////////////////////////////////////////private int age;

//////////////////////////////////////////////////////////////////public Person(string firstName, int age)
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  FirstName = firstName;
//////////////////////////////////////////////////////////////////  Age = age
//////////////////////////////////////////////////////////////////        }

//////////////////////////////////////////////////////////////////public string FirstName
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  get { return firstName; }
//////////////////////////////////////////////////////////////////  private set
//////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////    if (string.IsNullOrEmpty(value) || string.IsNullOrWhiteSpace(value))
//////////////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////////////      throw new ArgumentNullException("value", "The first name cannot be null or empty");
//////////////////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////////////////    firstName = value;
//////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////public int Age
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  get { return age };
//////////////////////////////////////////////////////////////////  private set
//////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////    if (value < 0 || value > 120)
//////////////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////////////      throw new ArgumentOutOfRangeException("value", "Age should be in the range [0..120]");
//////////////////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////////////////    age = value;
//////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////При подадени входни данни (например: Pepi и -5) изпълнението на кода води до грешки!

//////////////////////////////////////////////////////////////////Вашата задача е да предотвратите сриването на програмата, така че тя да продължава своето изпълнение, без да спира принудително! Открийте и поправете грешките, така че да реши поставената задача!




////////////////////////////////////////////////////////////////////Program.cs

//////////////////////////////////////////////////////////////////  try

//////////////////////////////////////////////////////////////////            {

//////////////////////////////////////////////////////////////////                string name = Console.ReadLine();

//////////////////////////////////////////////////////////////////int age = int.Parse(Console.ReadLine());

//////////////////////////////////////////////////////////////////Person person = new Person(name, age);

//////////////////////////////////////////////////////////////////            }

//////////////////////////////////////////////////////////////////            catch (ArgumentNullException ex)

//////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////  Console.WriteLine(ex.Message);

//////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////////Person.cs



//////////////////////////////////////////////////////////////////private string firstName;

//////////////////////////////////////////////////////////////////private int age;



//////////////////////////////////////////////////////////////////public Person(string firstName, int age)

//////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////  FirstName = firstName;

//////////////////////////////////////////////////////////////////  Age = age; ////

//////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////public string FirstName

//////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////  get { return firstName; }

//////////////////////////////////////////////////////////////////  private set

//////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////    if (string.IsNullOrEmpty(value) || string.IsNullOrWhiteSpace(value))

//////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////      throw new ArgumentNullException("value", "The first name cannot be null or empty");

//////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////    firstName = value;

//////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////////public int Age

//////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////  get { return age; } /////

//////////////////////////////////////////////////////////////////  private set

//////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////    if (value < 0 || value > 120)

//////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////      throw new ArgumentOutOfRangeException("value", "Age should be in the range [0..120]");

//////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////    age = value;

//////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////Въпрос 12
//////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////От максимално 6,00
//////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////На конзолата ще ви бъдат подадени цели числа записани на един ред и разделени с интервал. Например: 5 7 12 56 24 3 8

//////////////////////////////////////////////////////////////////Напишете собствена функция на C#, която да намира сумата на тези числа. 

//////////////////////////////////////////////////////////////////Накрая отпечатайте сбора на числата.



////////////////////////////////////////////////////////////////// List<int> numbers = Console.ReadLine()

//////////////////////////////////////////////////////////////////                 .Split(' ')

//////////////////////////////////////////////////////////////////                 .Select(int.Parse)

//////////////////////////////////////////////////////////////////                 .ToList();



//////////////////////////////////////////////////////////////////var sum = numbers.Sum();

//////////////////////////////////////////////////////////////////Console.WriteLine(sum);

//////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////// string input = Console.ReadLine();
//////////////////////////////////////////////////////////////////int[] nums = input.Split().Select(int.Parse).ToArray();
//////////////////////////////////////////////////////////////////Func<int[], int> sum = (x) =>
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  int sum = 0;
//////////////////////////////////////////////////////////////////  foreach (var item in x)
//////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////    sum += item;
//////////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////////  return sum;
//////////////////////////////////////////////////////////////////};
//////////////////////////////////////////////////////////////////Console.WriteLine(sum(nums));

//////////////////////////////////////////////////////////////////Въпрос 13
//////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////От максимално 6,00
//////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////Напишете програма, която въвежда  цели числа разделени с  ", ". Изведете  четните числа в множеството, сортирани в низходящ ред. 

//////////////////////////////////////////////////////////////////Изберете какъв тип на структури от данни ще използвате за решаване на този проблем. Използвайте функционален програмен филтър, сортирайте и отпечатайте на конзолата колекцията от числа на един ред разделени с ", ".

//////////////////////////////////////////////////////////////////За примерни входни/изходни данни ползвайте следните таблици:
//////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////Изход



//////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////Изход



//////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////4, 2, 1, 3, 5, 7, 1, 4, 2, 12

//////////////////////////////////////////////////////////////////12, 4, 4, 2, 2

//////////////////////////////////////////////////////////////////5, 3, 1



//////////////////////////////////////////////////////////////////2, 4, 6

//////////////////////////////////////////////////////////////////6, 4, 2



//////////////////////////////////////////////////////////////////  List<int> numbers = Console.ReadLine()

//////////////////////////////////////////////////////////////////                 .Split(',')

//////////////////////////////////////////////////////////////////                 .Select(int.Parse)

//////////////////////////////////////////////////////////////////                 .ToList();



//////////////////////////////////////////////////////////////////numbers.Reverse();

//////////////////////////////////////////////////////////////////foreach (var item in numbers)

//////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////  if (item % 2 == 0)

//////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////    Console.Write(item + ",");

//////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////Console.WriteLine();

//////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////List<int> list = Console.ReadLine()
//////////////////////////////////////////////////////////////////                .Split(", ", StringSplitOptions.RemoveEmptyEntries)
//////////////////////////////////////////////////////////////////                .Select(int.Parse)
//////////////////////////////////////////////////////////////////                .Where(x => x % 2 == 0)
//////////////////////////////////////////////////////////////////                .OrderByDescending(x => x)
//////////////////////////////////////////////////////////////////                .ToList();

//////////////////////////////////////////////////////////////////Console.WriteLine(string.Join(", ", list));

//////////////////////////////////////////////////////////////////Въпрос 14
//////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////От максимално 8,00
//////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////Напишете програма, която изпълнява някои математически операции върху дадена колекция. На първия ред са дадени списък от числа. На следващите редове се подават различни команди, които трябва да се прилагат за всички числа в списъка:

//////////////////////////////////////////////////////////////////·        "add"->добави 1 към всяко число;

//////////////////////////////////////////////////////////////////·        "multiply"->умножава всяко число по 2;

//////////////////////////////////////////////////////////////////·        "subtract"->изважда 1 от всяко число;

//////////////////////////////////////////////////////////////////·        "print"->извежда колекцията.

//////////////////////////////////////////////////////////////////·        Входът ще приключи с команда "end".

//////////////////////////////////////////////////////////////////·        Използвайте функции.

//////////////////////////////////////////////////////////////////Примери:

//////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////1 2 3 4 5

//////////////////////////////////////////////////////////////////add

//////////////////////////////////////////////////////////////////add

//////////////////////////////////////////////////////////////////print

//////////////////////////////////////////////////////////////////end

//////////////////////////////////////////////////////////////////3 4 5 6 7

//////////////////////////////////////////////////////////////////5 10

//////////////////////////////////////////////////////////////////multiply

//////////////////////////////////////////////////////////////////subtract

//////////////////////////////////////////////////////////////////print

//////////////////////////////////////////////////////////////////end

//////////////////////////////////////////////////////////////////9 19

//////////////////////////////////////////////////////////////////За ваше улеснение ви е предоставен Program.cs файл. Кодът обаче е грешен/непълен. Вашата задача е да откриете и поправите грешките в кода, така че той да работи правилно!

//////////////////////////////////////////////////////////////////Program.cs

//////////////////////////////////////////////////////////////////List<int> numbers = Console.ReadLine()

//////////////////////////////////////////////////////////////////                .Split()

//////////////////////////////////////////////////////////////////                .Select(int.Parse)

//////////////////////////////////////////////////////////////////                .ToList();



//////////////////////////////////////////////////////////////////string cmd = Console.ReadLine();



//////////////////////////////////////////////////////////////////while (!cmd.Equals("end"))

//////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////  switch (cmd)

//////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////    case "add":

//////////////////////////////////////////////////////////////////      numbers = numbers.Select(addition).ToList();

//////////////////////////////////////////////////////////////////      break;

//////////////////////////////////////////////////////////////////    case "multiply":

//////////////////////////////////////////////////////////////////      numbers = numbers.Select(multiplication).ToList();

//////////////////////////////////////////////////////////////////      break;

//////////////////////////////////////////////////////////////////    case "subtract":

//////////////////////////////////////////////////////////////////      numbers = numbers.Select(subtraction).ToList();

//////////////////////////////////////////////////////////////////      break;

//////////////////////////////////////////////////////////////////    case "print":

//////////////////////////////////////////////////////////////////      foreach (var item in numbers)

//////////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////////        print(item);

//////////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////////      Console.WriteLine();

//////////////////////////////////////////////////////////////////      break;

//////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////  cmd = Console.ReadLine();

//////////////////////////////////////////////////////////////////}


////////////////////////////////////////////////////////////////////Program.cs

//////////////////////////////////////////////////////////////////List<int> numbers = Console.ReadLine()

//////////////////////////////////////////////////////////////////                .Split()

//////////////////////////////////////////////////////////////////                .Select(int.Parse)

//////////////////////////////////////////////////////////////////                .ToList();



//////////////////////////////////////////////////////////////////string cmd = Console.ReadLine();



//////////////////////////////////////////////////////////////////while (!cmd.Equals("end"))

//////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////  switch (cmd)

//////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////    case "add":

//////////////////////////////////////////////////////////////////      numbers = numbers.Select(addition).ToList();

//////////////////////////////////////////////////////////////////      break;

//////////////////////////////////////////////////////////////////    case "multiply":

//////////////////////////////////////////////////////////////////      numbers = numbers.Select(multiplication).ToList();

//////////////////////////////////////////////////////////////////      break;

//////////////////////////////////////////////////////////////////    case "subtract":

//////////////////////////////////////////////////////////////////      numbers = numbers.Select(subtraction).ToList();

//////////////////////////////////////////////////////////////////      break;

//////////////////////////////////////////////////////////////////    case "print":

//////////////////////////////////////////////////////////////////      foreach (var item in numbers)

//////////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////////        print(item);

//////////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////////      Console.WriteLine();

//////////////////////////////////////////////////////////////////      break;

//////////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////////  cmd = Console.ReadLine();

//////////////////////////////////////////////////////////////////}


//////////////////////////////////////////////////////////////////Въпрос 15
//////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////От максимално 8,00
//////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////Напишете програма, която филтрира списък с имена по тяхната дължина. На първия ред ще ви бъде дадено цяло число n, представляващо дължина на име. На втория ред ще ви бъде дадени някои имена като символни низове, разделени с интервал.

//////////////////////////////////////////////////////////////////Напишете функция, която филтрира само имената, чиято дължина е по-малка или равна на n. И функция, която отпечатва имената.

//////////////////////////////////////////////////////////////////Използвайте ваши собствени функции!

//////////////////////////////////////////////////////////////////За ваше улеснение ви е предоставен код, който обаче е грешен/непълен. Вашата задача е да откриете и поправите грешките в кода, така че той да работи правилно!

//////////////////////////////////////////////////////////////////Program.cs

//////////////////////////////////////////////////////////////////int length = int.Parse(Console.ReadLine());
//////////////////////////////////////////////////////////////////List<string> names = Console.ReadLine().Split().ToList();

//////////////////////////////////////////////////////////////////names.Where()
//////////////////////////////////////////////////////////////////    .ToList()
//////////////////////////////////////////////////////////////////    .ForEach();




//////////////////////////////////////////////////////////////////Примери:

//////////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////////4
//////////////////////////////////////////////////////////////////Kurnelia Qnaki Geo Muk Ivan


//////////////////////////////////////////////////////////////////Geo
//////////////////////////////////////////////////////////////////Muk
//////////////////////////////////////////////////////////////////Ivan

//////////////////////////////////////////////////////////////////4
//////////////////////////////////////////////////////////////////Karaman Asen Kiril Yordan

//////////////////////////////////////////////////////////////////Asen


//////////////////////////////////////////////////////////////////  int length = int.Parse(Console.ReadLine());

//////////////////////////////////////////////////////////////////List<string> names = Console.ReadLine().Split().ToList();



//////////////////////////////////////////////////////////////////foreach (var item in names)

//////////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////////  if (item.Length <= length)

//////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////    Console.WriteLine(item);

//////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////Въпрос 16
//////////////////////////////////////////////////////////////////Отчасти верен
//////////////////////////////////////////////////////////////////3,00 от максимално 4,00 точки
//////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////Решете правилно задачата. Имате дадени парчета от код, поставете отделните парчета така, че да получите правилно работещ код, който трябва да прочете данните от един файл и да ги копира в друг.

////////////////////////////////////////////////////////////////// blank 

////////////////////////////////////////////////////////////////// blank 

////////////////////////////////////////////////////////////////// blank 

////////////////////////////////////////////////////////////////// blank 

////////////////////////////////////////////////////////////////// blank 

////////////////////////////////////////////////////////////////// blank 

////////////////////////////////////////////////////////////////// blank 

////////////////////////////////////////////////////////////////// blank 





//////////////////////////////////////////////////////////////////using (var source = new FileStream("../../../Image.jpg", FileMode.Open)) { if (readBytes == 0) break; while (true) { byte[] buffer = new byte[1024]; } }             }int readBytes = source.Read(buffer, 0, buffer.Length); using (var destination = new FileStream("../../../ImageCopy.jpg", FileMode.Create))
//////////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////////  destination.Write(buffer, 0, readBytes);
//////////////////////////////////////////////////////////////////  Забележка
//////////////////////////////////////////////////////////////////  Your answer is partially correct.
//////////////////////////////////////////////////////////////////Вие правилно сте избрали 6.
//////////////////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////////////////  Решете правилно задачата.Имате дадени парчета от код, поставете отделните парчета така, че да получите правилно работещ код, който трябва да прочете данните от един файл и да ги копира в друг.

//////////////////////////////////////////////////////////////////[using (var source = new FileStream("../../../Image.jpg", FileMode.Open))
//////////////////////////////////////////////////////////////////  {]

//////////////////////////////////////////////////////////////////[using (var destination = new FileStream("../../../ImageCopy.jpg", FileMode.Create))
//////////////////////////////////////////////////////////////////    {]

//////////////////////////////////////////////////////////////////[byte[] buffer = new byte[1024];]

//////////////////////////////////////////////////////////////////[ while (true)
//////////////////////////////////////////////////////////////////      {]

//////////////////////////////////////////////////////////////////[int readBytes = source.Read(buffer, 0, buffer.Length);]

//////////////////////////////////////////////////////////////////[if (readBytes == 0) break;]

//////////////////////////////////////////////////////////////////[destination.Write(buffer, 0, readBytes);]

//////////////////////////////////////////////////////////////////[}
//////////////////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////////////////  }]



//////////////////////////////////////////////////////////////////Въпрос 17
//////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////Обяснете следния фрагмент от код с думи:

//////////////////////////////////////////////////////////////////  int[] nums = { 1, 2, 3, 4, 5, 6 };

//////////////////////////////////////////////////////////////////  nums = nums.Reverse();

//////////////////////////////////////////////////////////////////  Console.WriteLine(string.Join(", ", nums));

//////////////////////////////////////////////////////////////////  В полето запишете ред по ред какво прави кода и какво се очаква да получим като резултат.


//////////////////////////////////////////////////////////////////int[] nums = { 1, 2, 3, 4, 5, 6 };

//////////////////////////////////////////////////////////////////  -декларира масив с цели числа с име nums.В масива са зададени числата от 1 до 6.



//////////////////////////////////////////////////////////////////  nums = nums.Reverse();

//////////////////////////////////////////////////////////////////  -тази команда нарежда числата по низходящ ред.



//////////////////////////////////////////////////////////////////Console.WriteLine(string.Join(", ", nums));

//////////////////////////////////////////////////////////////////  -тази команда отпечатва числата на конзолата като след всяко слага запетая.

//////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////Инициализираме масив от цели числа.

//////////////////////////////////////////////////////////////////Обръщаме подредбата на числата(отзад-напред) с(nums.Reverse) и запазваме новата подредба на масива nums.

//////////////////////////////////////////////////////////////////Отпечатваме на конзолата елементите от масива на един ред разделени със ", ".

//////////////////////////////////////////////////////////////////Очакван резултат: 6, 5, 4, 3, 2, 1

//////////////////////////////////////////////////////////////////Въпрос 18
//////////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////////От максимално 6,00
//////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////Имате следния код:

//////////////////////////////////////////////////////////////////  public List<int> CreateList(int item, int count)
//////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////    List<int> list = new List<int>();
//////////////////////////////////////////////////////////////////    for (int i = 0; i < count; i++)
//////////////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////////////      list.Add(item);
//////////////////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////  Модифицирайте кода, така че методът да работи с всякакъв тип данни.



////////////////////////////////////////////////////////////////// List<T> CreateList<T>(T item, int count)

//////////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////////    List<T> list = new List<T>();

//////////////////////////////////////////////////////////////////    for (int i = 0; i < count; i++)

//////////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////////      list.Add(item);

//////////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////////    return list;

//////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////  Забележка
//////////////////////////////////////////////////////////////////public List<T> CreateList<T>(T item, int count)//2т
//////////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////////    List<T> list = new List<T>();//2т
//////////////////////////////////////////////////////////////////    for (int i = 0; i < count; i++)
//////////////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////////////      list.Add(item);
//////////////////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////////////////    return list;//2т
//////////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////////  Въпрос 19
//////////////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////Дефинирайте понятието функция, като попълните липсващите думи в текста.

//////////////////////////////////////////////////////////////////Функцията е
//////////////////////////////////////////////////////////////////специално отношение
////////////////////////////////////////////////////////////////// , където на
//////////////////////////////////////////////////////////////////всички входни данни
//////////////////////////////////////////////////////////////////  има
//////////////////////////////////////////////////////////////////еднозначен изход
////////////////////////////////////////////////////////////////// .


//////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////////////////  Дефинирайте понятието функция, като попълните липсващите думи в текста.

//////////////////////////////////////////////////////////////////Функцията е[специално отношение], където на[всички входни данни] има[еднозначен изход].


//////////////////////////////////////////////////////////////////Въпрос 20
//////////////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////Имате даден следния програмен фрагмент:

//////////////////////////////////////////////////////////////////int[] nums = { 1, 2, 3, 4, 5, 6 };
//////////////////////////////////////////////////////////////////  nums = nums blank.ToArray();

//////////////////////////////////////////////////////////////////  Коя от следните LINQ заявки и какъв ламбда израз ще използвате, за да филтрирате колекцията, така че тя да съдържа само нечетни числа?

//////////////////////////////////////////////////////////////////  .Select(num => num % 2 == 0).Where(num => num % 2 != 0).Where(num => num % 2 == 0).Distinct(num => num % 2 == 0)
//////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////////////////  Имате даден следния програмен фрагмент:

//////////////////////////////////////////////////////////////////  int[] nums = { 1, 2, 3, 4, 5, 6 };
//////////////////////////////////////////////////////////////////  nums = nums[.Where(num => num % 2 != 0)].ToArray();

//////////////////////////////////////////////////////////////////  Коя от следните LINQ заявки и какъв ламбда израз ще използвате, за да филтрирате колекцията, така че тя да съдържа само нечетни числа?
//////////////////////////////////////////////////////////////////  Въпрос 21
//////////////////////////////////////////////////////////////////Неправилно
//////////////////////////////////////////////////////////////////0,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////////Имате даден следния програмен фрагмент:

//////////////////////////////////////////////////////////////////int[] nums = { 11, 99, 33, 55, 77, 44, 66, 22, 88 };

//////////////////////////////////////////////////////////////////  nums = nums blank.ToArray();
//////////////////////////////////////////////////////////////////  Коя от следните LINQ заявки ще използвате, за да подредите числата в колекцията във възходящ ред?

//////////////////////////////////////////////////////////////////  .OrderBy(x => x).OrderBy().OrderByAsc(x => x).Sort(x => x)
//////////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////////Your answer is incorrect.
//////////////////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////////////////  Имате даден следния програмен фрагмент:

//////////////////////////////////////////////////////////////////  int[] nums = { 11, 99, 33, 55, 77, 44, 66, 22, 88 };

//////////////////////////////////////////////////////////////////  nums = nums[.OrderBy(x => x)].ToArray();
//////////////////////////////////////////////////////////////////  Коя от следните LINQ заявки ще използвате, за да подредите числата в колекцията във възходящ ред?
//////////////////////////////////////////////////////////////////  Край на прегледа
//////////////////////////////////////////////////////////////////Отиди на ...
//////////////////////////////////////////////////////////////////Отиди на ...
//////////////////////////////////////////////////////////////////Прескочи < span id = "mod_quiz_navblock_title" > Навигация в теста</ span >
//////////////////////////////////////////////////////////////////Навигация в теста
//////////////////////////////////////////////////////////////////Край на прегледа
//////////////////////////////////////////////////////////////////Вие сте влезли в системата като Добри Илев(Изход)
//////////////////////////////////////////////////////////////////тренировъчен - курс - по
//////////////////////////////////////////////////////////////////Data retention summary

////////////////////////////////////////////////////////////////Прескочи на основното съдържание
////////////////////////////////////////////////////////////////ПГЕЕ
////////////////////////////////////////////////////////////////Български ‎(bg)‎ 
////////////////////////////////////////////////////////////////Добри Илев 
////////////////////////////////////////////////////////////////Тренировъчен курс - Програмно осигуряване
////////////////////////////////////////////////////////////////Начална страница
////////////////////////////////////////////////////////////////Моите курсове
//////////////////////////////////////////////////////////////// тренировъчен-курс-по
//////////////////////////////////////////////////////////////// Изпитна тема 5
//////////////////////////////////////////////////////////////// Тест към Изпитна тема №5
////////////////////////////////////////////////////////////////Започнат на	четвъртък, 16 март 2023, 10:14
////////////////////////////////////////////////////////////////Състояние Завършен
////////////////////////////////////////////////////////////////Приключен на	четвъртък, 16 март 2023, 11:47
////////////////////////////////////////////////////////////////Изминало време	1 час 32 мин.
////////////////////////////////////////////////////////////////Оценка	Още не е оценен
////////////////////////////////////////////////////////////////Въпрос 1
////////////////////////////////////////////////////////////////Неправилно
////////////////////////////////////////////////////////////////0,00 от максимално 4,00 точки
////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////Имате следното парче код:



////////////////////////////////////////////////////////////////Какво ще се случи след изпълнението на програмата? Ще се изведе ли нещо като резултат и какъв ще бъде той? Запишете вашият отговор в полето.

////////////////////////////////////////////////////////////////Отговор: 
////////////////////////////////////////////////////////////////2 4 6
////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////Правилният отговор е: На конзолата ще се отпечатат всички четни числа. 2 4 6
////////////////////////////////////////////////////////////////Въпрос 2
////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////Обяснете какво ще се случи, ако потребителя напише в конзолата 123. Също така какво ще се случи, ако потребителя реши да въведе Hello.





////////////////////////////////////////////////////////////////Ако потребителя напише 123 - Конзолата отпечатва 123, защото тя приема само целочислен тип числа.

////////////////////////////////////////////////////////////////Ако потребителя напише Hello - Конзолата отпечатва "Input string was not in a correct format.", защото Hello не е целочислен тип число и за това отпечатва, че не е в правилен формат.

////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////Ако потребителя въведе цяло число, това число ще се отпечата на конзолата и изпълнението на програмата се прекратява. 

////////////////////////////////////////////////////////////////Когато потребителя въведе вход на конзолата различен от цяло число, програмата ще прихване изключението FormatException и на конзолата ще се отпечата съобщение за грешка Input string was not in a correct format. Програмата се изпълнява докато потребителя въведе цяло число. 

////////////////////////////////////////////////////////////////Въпрос 3
////////////////////////////////////////////////////////////////Отчасти верен
////////////////////////////////////////////////////////////////1,71 от максимално 2,00 точки
////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////Дефинирайте какво представляват Lambda изразите и какъв е техният синтаксис, като попълните липсващите думи в текста.

////////////////////////////////////////////////////////////////Ламбда изразите представляват 
////////////////////////////////////////////////////////////////анонимни функции
//////////////////////////////////////////////////////////////// , които съдържат изрази или последователност от оператори. Всички ламбда изрази използват ламбда оператора 
////////////////////////////////////////////////////////////////=>
//////////////////////////////////////////////////////////////// , който може да се чете като "отива в". Лявата страна на ламбда оператора определя 
////////////////////////////////////////////////////////////////входните параметри
//////////////////////////////////////////////////////////////// , а дясната страна представлява 
////////////////////////////////////////////////////////////////изходните параметри
//////////////////////////////////////////////////////////////// , която работи с 
////////////////////////////////////////////////////////////////входните параметри
////////////////////////////////////////////////////////////////  на 
////////////////////////////////////////////////////////////////анонимната функция
////////////////////////////////////////////////////////////////  и евентуално връща някакъв резултат.

////////////////////////////////////////////////////////////////Ламбда синтаксис: 
////////////////////////////////////////////////////////////////(параметри) => { тяло}


////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////Your answer is partially correct.
////////////////////////////////////////////////////////////////Вие правилно сте избрали 6.
////////////////////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////////////////////Дефинирайте какво представляват Lambda изразите и какъв е техният синтаксис, като попълните липсващите думи в текста.

////////////////////////////////////////////////////////////////Ламбда изразите представляват [анонимни функции], които съдържат изрази или последователност от оператори. Всички ламбда изрази използват ламбда оператора [=>], който може да се чете като "отива в". Лявата страна на ламбда оператора определя [входните параметри], а дясната страна представлява [израз или последователност от оператори], която работи с [входните параметри] на[анонимната функция] и евентуално връща някакъв резултат.

////////////////////////////////////////////////////////////////Ламбда синтаксис: [(параметри) => {тяло}]
////////////////////////////////////////////////////////////////Въпрос 4
////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////От максимално 8,00
////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////Имате даден клас Book със следните членове на класа. Авторите може да са анонимни, един или повече. Book трябва да има само един конструктор!

////////////////////////////////////////////////////////////////Book.cs

////////////////////////////////////////////////////////////////private string title;
////////////////////////////////////////////////////////////////private int year;
////////////////////////////////////////////////////////////////public Book(string title, int year)
////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////  this.Title = title;
////////////////////////////////////////////////////////////////  this.Year = year;
////////////////////////////////////////////////////////////////  this.Authors = authors;
////////////////////////////////////////////////////////////////}
////////////////////////////////////////////////////////////////public string Title
////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////  get { return title; }
////////////////////////////////////////////////////////////////  private set { title = value; }
////////////////////////////////////////////////////////////////}
////////////////////////////////////////////////////////////////public int Year
////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////  get { return year; }
////////////////////////////////////////////////////////////////  private set { year = value; }
////////////////////////////////////////////////////////////////}
////////////////////////////////////////////////////////////////public IReadOnlyList<string> Authors { get; private set; }

////////////////////////////////////////////////////////////////public override string ToString()
////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////  return $"{this.Title} - {this.Year} Authors: {string.Join(", ", this.Authors)}";
////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////Имате даден и клас Library със следните членове на класа. Той трябва да съхранява колекция книги. Library може да е инициализиран без книги или с какъвто и да е брой книги и трябва да има само един конструктор.



////////////////////////////////////////////////////////////////Library.cs

////////////////////////////////////////////////////////////////private List<Book> books;

////////////////////////////////////////////////////////////////public Library()
////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////  this.books = new List<Book>(books);
////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////public IEnumerator<Book> GetEnumerator()
////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////  foreach (var book in this.books)
////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////IEnumerator IEnumerable.GetEnumerator()
////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////  return this.GetEnumerator();
////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////Имате даден и Program.cs файла:

////////////////////////////////////////////////////////////////Program.cs

////////////////////////////////////////////////////////////////Book bookOne = new Book("Animal Farm", 2003, "George Orwell");
////////////////////////////////////////////////////////////////Book bookTwo = new Book("The Documents in the Case", 2002, "Dorothy Sayers", "Robert Eustace");
////////////////////////////////////////////////////////////////Book bookThree = new Book("The Documents in the Case", 1930);

////////////////////////////////////////////////////////////////Library library = new Library(bookOne, bookTwo, bookThree);

////////////////////////////////////////////////////////////////foreach (var book in library)
////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////  Console.WriteLine(book);
////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////Книгите и библиотеката трябва да могат да се използват по дадения начин. Не променяйте нищо по Program.cs файла!

////////////////////////////////////////////////////////////////Кодът е грешен/непълен. Вашата задача е да откриете и поправите грешките в кода, така че той да работи правилно!

////////////////////////////////////////////////////////////////При правилно работещ код като изход в конзолата трябва да получите следният резултат:

////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////Animal Farm - 2003 Authors: George Orwell

////////////////////////////////////////////////////////////////The Documents in the Case - 2002 Authors: Dorothy Sayers, Robert Eustace

////////////////////////////////////////////////////////////////The Documents in the Case - 1930 Authors:


//////////////////////////////////////////////////////////////////Book.cs

////////////////////////////////////////////////////////////////public class Book

////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////  private string title;

////////////////////////////////////////////////////////////////  private int year;



////////////////////////////////////////////////////////////////  public Book(string title, int year, params string[] authors)

////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////    this.Title = title;

////////////////////////////////////////////////////////////////    this.Year = year;

////////////////////////////////////////////////////////////////    this.Authors = new List<string>(authors);

////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////  public string Title

////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////    get { return title; }

////////////////////////////////////////////////////////////////    private set { title = value; }

////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////  public int Year

////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////    get { return year; }

////////////////////////////////////////////////////////////////    private set { year = value; }

////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////  public IReadOnlyList<string> Authors { get; private set; }



////////////////////////////////////////////////////////////////  public override string ToString()

////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////    return $"{this.Title} - {this.Year} Authors: {string.Join(", ", this.Authors)}";

////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////}





///////////////////////////////////////////////////////////////////Library.cs



////////////////////////////////////////////////////////////////using System.Collections;

////////////////////////////////////////////////////////////////using System.Collections.Generic;



////////////////////////////////////////////////////////////////public class Library : IEnumerable<Book>

////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////  private List<Book> books;



////////////////////////////////////////////////////////////////  public Library(params Book[] books)

////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////    this.books = new List<Book>(books);

////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////  public IEnumerator<Book> GetEnumerator()

////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////    foreach (var book in this.books)

////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////      yield return book;

////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////  IEnumerator IEnumerable.GetEnumerator()

////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////    return this.GetEnumerator();

////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////Въпрос 5
////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////От максимално 8,00
////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////Напишете програма, която филтрира списък с имена по тяхната дължина. На първия ред ще ви бъде дадено цяло число n, представляващо дължина на име. На втория ред ще ви бъде дадени някои имена като символни низове, разделени с интервал.

////////////////////////////////////////////////////////////////Напишете функция, която филтрира само имената, чиято дължина е по-малка или равна на n. И функция, която отпечатва имената.

////////////////////////////////////////////////////////////////Използвайте ваши собствени функции!

////////////////////////////////////////////////////////////////За ваше улеснение ви е предоставен код, който обаче е грешен/непълен. Вашата задача е да откриете и поправите грешките в кода, така че той да работи правилно!

////////////////////////////////////////////////////////////////Program.cs

////////////////////////////////////////////////////////////////int length = int.Parse(Console.ReadLine());
////////////////////////////////////////////////////////////////List<string> names = Console.ReadLine().Split().ToList();

////////////////////////////////////////////////////////////////names.Where()
////////////////////////////////////////////////////////////////    .ToList()
////////////////////////////////////////////////////////////////    .ForEach();




////////////////////////////////////////////////////////////////Примери:

////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////4
////////////////////////////////////////////////////////////////Kurnelia Qnaki Geo Muk Ivan


////////////////////////////////////////////////////////////////Geo
////////////////////////////////////////////////////////////////Muk
////////////////////////////////////////////////////////////////Ivan

////////////////////////////////////////////////////////////////4
////////////////////////////////////////////////////////////////Karaman Asen Kiril Yordan

////////////////////////////////////////////////////////////////Asen


////////////////////////////////////////////////////////////////using System;

////////////////////////////////////////////////////////////////using System.Collections.Generic;

////////////////////////////////////////////////////////////////using System.Linq;



////////////////////////////////////////////////////////////////class Program

////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////  static void Main(string[] args)

////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////    int length = int.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////    List<string> names = Console.ReadLine().Split().ToList();



////////////////////////////////////////////////////////////////    names.Where(name => FilterNames(name, length))

////////////////////////////////////////////////////////////////        .ToList()

////////////////////////////////////////////////////////////////        .ForEach(name => PrintName(name));

////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////  static bool FilterNames(string name, int maxLength)

////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////    return name.Length <= maxLength;

////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////  static void PrintName(string name)

////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////    Console.WriteLine(name);

////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////Въпрос 6
////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////От максимално 6,00
////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////На конзолата ще ви бъдат подадени цели числа записани на един ред и разделени с интервал. Например: 5 7 12 56 24 3 8

////////////////////////////////////////////////////////////////Напишете собствена функция на C# за парсване на цели числа. Запишете числата в подходяща структура от данни, след което отпечатайте числата на конзолата на един ред разделени със запетая и интервал.



////////////////////////////////////////////////////////////////using System;

////////////////////////////////////////////////////////////////using System.Collections.Generic;



////////////////////////////////////////////////////////////////class Program

////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////  static List<int> ParseIntegers(string input)

////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////    List<int> integers = new List<int>();

////////////////////////////////////////////////////////////////    string[] parts = input.Split(' ');



////////////////////////////////////////////////////////////////    foreach (string part in parts)

////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////      int number;

////////////////////////////////////////////////////////////////      if (int.TryParse(part, out number))

////////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////////        integers.Add(number);

////////////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////////////    }



////////////////////////////////////////////////////////////////    return integers;

////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////  static void Main(string[] args)

////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////    string input = Console.ReadLine();

////////////////////////////////////////////////////////////////    List<int> numbers = ParseIntegers(input);



////////////////////////////////////////////////////////////////    Console.WriteLine(string.Join(", ", numbers));

////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////string input = Console.ReadLine();
////////////////////////////////////////////////////////////////Func<string, int> parser = (x) => int.Parse(x);
////////////////////////////////////////////////////////////////int[] nums = input.Split().Select(parser).ToArray();
////////////////////////////////////////////////////////////////Console.WriteLine(string.Join(", ", nums));

////////////////////////////////////////////////////////////////Въпрос 7
////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////От максимално 6,00
////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////Напишете програма, която въвежда  цели числа разделени с  ", ". Изведете  нечетните числа в множеството, сортирани в нарастващ ред. 

////////////////////////////////////////////////////////////////Изберете какъв тип на структури от данни ще използвате за решаване на този проблем. Използвайте функционален програмен филтър, сортирайте и отпечатайте на конзолата колекцията от числа на един ред разделени с ", ".

////////////////////////////////////////////////////////////////За примерни входни/изходни данни ползвайте следните таблици:
////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////Изход



////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////Изход



////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////4, 2, 1, 3, 5, 7, 1, 4, 2, 12

////////////////////////////////////////////////////////////////1, 1, 3, 5, 7

////////////////////////////////////////////////////////////////5, 3, 1

//////////////////////////////////////////////////////////////// 1, 3, 5

////////////////////////////////////////////////////////////////2, 4, 6





////////////////////////////////////////////////////////////////using System;

////////////////////////////////////////////////////////////////using System.Collections.Generic;

////////////////////////////////////////////////////////////////using System.Linq;



////////////////////////////////////////////////////////////////class Program

////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////  static void Main(string[] args)

////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////    string input = Console.ReadLine();

////////////////////////////////////////////////////////////////    List<int> numbers = input.Split(", ").Select(int.Parse).ToList();

////////////////////////////////////////////////////////////////    List<int> filteredNumbers = numbers.Where(n => n % 2 != 0).OrderBy(n => n).ToList();

////////////////////////////////////////////////////////////////    Console.WriteLine(string.Join(", ", filteredNumbers));

////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////List<int> list = Console.ReadLine()
////////////////////////////////////////////////////////////////                .Split(", ", StringSplitOptions.RemoveEmptyEntries)
////////////////////////////////////////////////////////////////                .Select(int.Parse)
////////////////////////////////////////////////////////////////                .Where(x => x % 2 != 0)
////////////////////////////////////////////////////////////////                .OrderBy(x => x)
////////////////////////////////////////////////////////////////                .ToList();

////////////////////////////////////////////////////////////////Console.WriteLine(string.Join(", ", list));

////////////////////////////////////////////////////////////////Въпрос 8
////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////Обяснете какво ще се случи и защо, ако потребителя въведе числото 2147483648: 





////////////////////////////////////////////////////////////////Като пуснеш програмата и напишеш числото ще ти се отпечата това съобщение:

////////////////////////////////////////////////////////////////Unhandled Exception: System.OverflowException: Value was either too large or too small for an Int32.

////////////////////////////////////////////////////////////////   at System.Number.ParseInt32(String s, NumberStyles style, NumberFormatInfo info)

////////////////////////////////////////////////////////////////   at System.Int32.Parse(String s)



////////////////////////////////////////////////////////////////Числото, което сме въвели или е много голямо или много малко за Int32.Числото не е в границите на Int32 затова се отпечатва това съобщение.



////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////Ако потребителя въведе числото 2147483648 програмата ще хвърли изключение от типа System.OverflowException със следното съобщение за грешка: Value was either too large or too small for an Int32. 

////////////////////////////////////////////////////////////////Това се получава така, защото липсва catch клауза за прихващане на изключение от този тип.

////////////////////////////////////////////////////////////////Въпрос 9
////////////////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////Посочете, кое от дадените твърдения е вярно за потоците в C#. Трябва да изберете вярно или невярно от падащото меню срещу всяко твърдение.

////////////////////////////////////////////////////////////////Потоците се използват, когато програмата трябва да прочете или запише данни от или във външен източник на данни. 
////////////////////////////////////////////////////////////////Вярно


////////////////////////////////////////////////////////////////Потокът е наредена последователност от байтове. 
////////////////////////////////////////////////////////////////Вярно


////////////////////////////////////////////////////////////////Тези байтове се изпращат един след друг и могат да се получават в ред различен от този в който са били изпратени. 
////////////////////////////////////////////////////////////////Невярно


////////////////////////////////////////////////////////////////Потоците осигуряват последователен достъп до своите елементи. 
////////////////////////////////////////////////////////////////Вярно



////////////////////////////////////////////////////////////////Потоците трябва да се отворят преди употреба и да се затворят накрая. 
////////////////////////////////////////////////////////////////Вярно


////////////////////////////////////////////////////////////////Можем да манипулираме подредбата на данните в потока. 
////////////////////////////////////////////////////////////////Невярно


////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////////////////////Посочете, кое от дадените твърдения е вярно за потоците в C#. Трябва да изберете вярно или невярно от падащото меню срещу всяко твърдение.

////////////////////////////////////////////////////////////////Потоците се използват, когато програмата трябва да прочете или запише данни от или във външен източник на данни. [Вярно]

////////////////////////////////////////////////////////////////Потокът е наредена последователност от байтове. [Вярно]

////////////////////////////////////////////////////////////////Тези байтове се изпращат един след друг и могат да се получават в ред различен от този в който са били изпратени. [Невярно]

////////////////////////////////////////////////////////////////Потоците осигуряват последователен достъп до своите елементи. [Вярно]


////////////////////////////////////////////////////////////////Потоците трябва да се отворят преди употреба и да се затворят накрая. [Вярно]

////////////////////////////////////////////////////////////////Можем да манипулираме подредбата на данните в потока. [Невярно]

////////////////////////////////////////////////////////////////Въпрос 10
////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////Обяснете следния фрагмент от код с думи:

////////////////////////////////////////////////////////////////List<int> list = new List<int>() { 20, 15, 1, 5, 7, 18, 66 };

////////////////////////////////////////////////////////////////list.OrderByDescending(x => x).Take(3);

////////////////////////////////////////////////////////////////Console.WriteLine(string.Join(", ", list));

////////////////////////////////////////////////////////////////В полето запишете ред по ред какво прави кода и какво се очаква да получим като резултат.


////////////////////////////////////////////////////////////////List<int> list = new List<int>() { 20, 15, 1, 5, 7, 18, 66 };

////////////////////////////////////////////////////////////////Първи ред създава списък с целочислен тип данни с име list , където в него има вече сложени числа. които са 20, 15, 1, 5, 7, 18, 66.



////////////////////////////////////////////////////////////////list.OrderByDescending(x => x).Take(3);

////////////////////////////////////////////////////////////////Втори ред използва командата OrderByDescending на списъка за да може да се наредят числата по-големина започващи от най-малки и накрая с командата .Take(3) се взимат само първите 3 числа.



////////////////////////////////////////////////////////////////Console.WriteLine(string.Join(", ", list));

////////////////////////////////////////////////////////////////Отпечатва числата като след тях слага запетая.

////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////Инициализираме списък с цели числа.

////////////////////////////////////////////////////////////////Сортираме числата от колекцията в низходящ ред и вземаме първите три числа от тях.

////////////////////////////////////////////////////////////////Очакван резултат: 20, 15, 1, 5, 7, 18, 66

////////////////////////////////////////////////////////////////Списъкът с числа си остава същия, защото OrderByDescending връща нов IOrderedEnumerable списък, а в дадения код не се презаписва новата подредба на числата върху предишния списък с числа.

////////////////////////////////////////////////////////////////Въпрос 11
////////////////////////////////////////////////////////////////Отчасти верен
////////////////////////////////////////////////////////////////2,00 от максимално 4,00 точки
////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////Направете сравнение между двата интерфейса IComparable и IComparer, като изберете липсващите думи в текста:


////////////////////////////////////////////////////////////////Интерфейсът IComparable<T> казва
////////////////////////////////////////////////////////////////„Аз съм нещо сравнимо“
////////////////////////////////////////////////////////////////  и
////////////////////////////////////////////////////////////////предоставя начин за промяна на реда на сортиране на колекция
//////////////////////////////////////////////////////////////// .
////////////////////////////////////////////////////////////////Интерфейсът IComparer<T> казва
////////////////////////////////////////////////////////////////„Аз мога да сравнявам“
////////////////////////////////////////////////////////////////  и
////////////////////////////////////////////////////////////////дава метод за сравняване на два обекта
//////////////////////////////////////////////////////////////// .
////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////Your answer is partially correct.
////////////////////////////////////////////////////////////////Вие правилно сте избрали 2.
////////////////////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////////////////////Направете сравнение между двата интерфейса IComparable и IComparer, като изберете липсващите думи в текста:


////////////////////////////////////////////////////////////////Интерфейсът IComparable<T> казва[„Аз съм нещо сравнимо“] и [дава метод за сравняване на два обекта].
////////////////////////////////////////////////////////////////Интерфейсът IComparer<T> казва[„Аз мога да сравнявам“] и [предоставя начин за промяна на реда на сортиране на колекция].
////////////////////////////////////////////////////////////////Въпрос 12
////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////От максимално 6,00
////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////Имате следния код:

////////////////////////////////////////////////////////////////    public class Scale : IComparable
////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////  private var left;
////////////////////////////////////////////////////////////////  private var right;

////////////////////////////////////////////////////////////////  public Scale(var left, var right)
////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////    this.left = left;
////////////////////////////////////////////////////////////////    this.right = right;
////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////  public var GetHavier()
////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////    if (left.CompareTo(right) > 0)
////////////////////////////////////////////////////////////////    { return left; }
////////////////////////////////////////////////////////////////    else if (left.CompareTo(right) < 0)
////////////////////////////////////////////////////////////////    { return right; }
////////////////////////////////////////////////////////////////    return default;
////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////Модифицирайте кода, така че Везната да може да сравнява всякакви типове данни. Също така трябва да ограничите Везната, че елементите, които ще  сравнява ще бъдат само сравними типове. 



////////////////////////////////////////////////////////////////public class Scale<T> where T : IComparable<T>

////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////  private T left;

////////////////////////////////////////////////////////////////  private T right;



////////////////////////////////////////////////////////////////  public Scale(T left, T right)

////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////    this.left = left;

////////////////////////////////////////////////////////////////    this.right = right;

////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////  public T GetHavier()

////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////    if (left.CompareTo(right) > 0)

////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////      return left;

////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////    else if (left.CompareTo(right) < 0)

////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////      return right;

////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////    return default;

////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////public class Scale<T> where T : IComparable<T>//2т
////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////  private T left; //1т
////////////////////////////////////////////////////////////////  private T right; //1т

////////////////////////////////////////////////////////////////  public Scale(T left, T right)//2т
////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////    this.left = left;
////////////////////////////////////////////////////////////////    this.right = right;
////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////  public T GetHavier()
////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////    if (left.CompareTo(right) > 0)
////////////////////////////////////////////////////////////////    { return left; }
////////////////////////////////////////////////////////////////    else if (left.CompareTo(right) < 0)
////////////////////////////////////////////////////////////////    { return right; }
////////////////////////////////////////////////////////////////    return default(T);
////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////Въпрос 13
////////////////////////////////////////////////////////////////Отчасти верен
////////////////////////////////////////////////////////////////1,50 от максимално 2,00 точки
////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////Формулирайте правилната дефиниция за IEnumerator, като поставите липсващите думи в текста:

////////////////////////////////////////////////////////////////Предоставя
////////////////////////////////////////////////////////////////последователно, еднопосочно обхождане на колекция от произволен тип
//////////////////////////////////////////////////////////////// .
////////////////////////////////////////////////////////////////IEnumerator има следните методи: 
////////////////////////////////////////////////////////////////Reset();, MoveNext();
//////////////////////////////////////////////////////////////// .
////////////////////////////////////////////////////////////////IEnumerator притежава свойството: 
////////////////////////////////////////////////////////////////Current();
//////////////////////////////////////////////////////////////// .
////////////////////////////////////////////////////////////////След като имплементираме методите и свойството, можем да използваме 
////////////////////////////////////////////////////////////////последователно, еднопосочно обхождане на колекция от произволен тип
////////////////////////////////////////////////////////////////  за нашите User Defined Classes.
////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////Your answer is partially correct.
////////////////////////////////////////////////////////////////Вие правилно сте избрали 3.
////////////////////////////////////////////////////////////////Правилният отговор е: Формулирайте правилната дефиниция за IEnumerator, като поставите липсващите думи в текста:

////////////////////////////////////////////////////////////////Предоставя[последователно, еднопосочно обхождане на колекция от произволен тип].
////////////////////////////////////////////////////////////////IEnumerator има следните методи: [Reset();, MoveNext();].
////////////////////////////////////////////////////////////////IEnumerator притежава свойството: [Current();].
////////////////////////////////////////////////////////////////След като имплементираме методите и свойството, можем да използваме [foreach() цикъл] за нашите User Defined Classes.
////////////////////////////////////////////////////////////////Въпрос 14
////////////////////////////////////////////////////////////////Неправилно
////////////////////////////////////////////////////////////////0,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////Имате даден следния програмен фрагмент:

////////////////////////////////////////////////////////////////int[] nums = { 1, 2, 2, 3, 4, 5, 6, -2, 2, 0, 15, 3, 1, 0, 6 };

////////////////////////////////////////////////////////////////nums = nums blank.ToArray();

////////////////////////////////////////////////////////////////Коя от следните LINQ заявки ще използвате, за да филтрирате колекцията, така че тя да съдържа само уникални елементи?

////////////////////////////////////////////////////////////////.Unique().Differ().Distinct().Single()
////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////Your answer is incorrect.
////////////////////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////////////////////Имате даден следния програмен фрагмент:

////////////////////////////////////////////////////////////////int[] nums = { 1, 2, 2, 3, 4, 5, 6, -2, 2, 0, 15, 3, 1, 0, 6 };

////////////////////////////////////////////////////////////////nums = nums[.Distinct()].ToArray();

////////////////////////////////////////////////////////////////Коя от следните LINQ заявки ще използвате, за да филтрирате колекцията, така че тя да съдържа само уникални елементи?
////////////////////////////////////////////////////////////////Въпрос 15
////////////////////////////////////////////////////////////////Отчасти верен
////////////////////////////////////////////////////////////////1,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////Опишете какво представляват референциите към функции/методи в C#, като поставите липсващите думи в текста:

////////////////////////////////////////////////////////////////Ламбда функциите могат да бъдат записани в променливи от тип  blank .  blank  представляват специален тип  blank , които съдържат  blank . Типовете Func и Action са  blank  и съдържат: на последна позиция  blank , а на първите позиции се задават  blank  на функциите. Променливите от тези типове са  blank  към функции. 




////////////////////////////////////////////////////////////////non‑genericnon‑genericnon‑genericnon‑genericnon‑genericnon‑genericnon‑genericnon‑genericфункциифункциифункциифункциифункциифункциифункциифункцииДелегатите Делегатите Делегатите Делегатите Делегатите Делегатите Делегатите Делегатите делегатделегатделегатделегатделегатделегатделегатделегатреференцииреференцииреференцииреференцииреференцииреференцииреференцииреференцииgeneric generic generic generic generic generic generic generic променливипроменливипроменливипроменливипроменливипроменливипроменливипроменливитипа на връщаната стойносттипа на връщаната стойносттипа на връщаната стойносттипа на връщаната стойносттипа на връщаната стойносттипа на връщаната стойносттипа на връщаната стойносттипа на връщаната стойносттиповете на параметритетиповете на параметритетиповете на параметритетиповете на параметритетиповете на параметритетиповете на параметритетиповете на параметритетиповете на параметрите
////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////Your answer is partially correct.
////////////////////////////////////////////////////////////////Вие правилно сте избрали 4.
////////////////////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////////////////////Опишете какво представляват референциите към функции/методи в C#, като поставите липсващите думи в текста:

////////////////////////////////////////////////////////////////Ламбда функциите могат да бъдат записани в променливи от тип [делегат]. [Делегатите] представляват специален тип [променливи], които съдържат[функции]. Типовете Func и Action са [generic] и съдържат: на последна позиция [типа на връщаната стойност], а на първите позиции се задават [типовете на параметрите]
////////////////////////////////////////////////////////////////на функциите.Променливите от тези типове са [референции] към функции. 



////////////////////////////////////////////////////////////////Въпрос 16
////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////От максимално 8,00
////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////Имате даден клас Person:

////////////////////////////////////////////////////////////////Person.cs

////////////////////////////////////////////////////////////////private string name;
////////////////////////////////////////////////////////////////private int age;
////////////////////////////////////////////////////////////////private string city;

////////////////////////////////////////////////////////////////public Person(string name, int age, string city)
////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////  Name = name;
////////////////////////////////////////////////////////////////  Age = age;
////////////////////////////////////////////////////////////////  City = city;
////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////public string Name
////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////  get { return name; }
////////////////////////////////////////////////////////////////  private set { name = value; }
////////////////////////////////////////////////////////////////}
////////////////////////////////////////////////////////////////public int Age
////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////  get { return age; }
////////////////////////////////////////////////////////////////  private set { age = value; }
////////////////////////////////////////////////////////////////}
////////////////////////////////////////////////////////////////public string City
////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////  get { return city; }
////////////////////////////////////////////////////////////////  private set { city = value; }
////////////////////////////////////////////////////////////////}




////////////////////////////////////////////////////////////////И клас Program.cs. Не променяйте нищо по него!

////////////////////////////////////////////////////////////////Program.cs

////////////////////////////////////////////////////////////////List<Person> people = new List<Person>();

////////////////////////////////////////////////////////////////string cmd = Console.ReadLine();

////////////////////////////////////////////////////////////////while (!cmd.Equals("END"))
////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////  string[] info = cmd.Split();
////////////////////////////////////////////////////////////////  Person person = new Person(info[0], int.Parse(info[1]), info[2]);
////////////////////////////////////////////////////////////////  people.Add(person);

////////////////////////////////////////////////////////////////  cmd = Console.ReadLine();
////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////int n = int.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////Person p = people[n - 1];
////////////////////////////////////////////////////////////////int equalsPeopleCount = 0;
////////////////////////////////////////////////////////////////int notEqualsPeoplesCount = 0;

////////////////////////////////////////////////////////////////for (int i = 0; i < people.Count; i++)
////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////  if (i == n - 1)
////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////    continue;
////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////  if (people[i].CompareTo(p) == 0)
////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////    equalsPeopleCount++;
////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////  else
////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////    notEqualsPeoplesCount++;
////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////Console.WriteLine(equalsPeopleCount == 0 ? "No matches!" :
////////////////////////////////////////////////////////////////$"{equalsPeopleCount} {notEqualsPeoplesCount} {people.Count}");




////////////////////////////////////////////////////////////////Вашата задача е да сравните хората - първо сравнете имената им, след това – възрастите им, а накрая – градовете им.

////////////////////////////////////////////////////////////////На единствения ред от изхода изведете статистики: колко хора са еднакви с него, колко не са и общият брой хора във вашата колекция.

////////////////////////////////////////////////////////////////Формат: { брой еднакви хора}
////////////////////////////////////////////////////////////////{ брой нееднакви хора}
////////////////////////////////////////////////////////////////{ общ брой хора}

////////////////////////////////////////////////////////////////Вход:

////////////////////////////////////////////////////////////////На всеки ред ще получавате човек във формат:

////////////////////////////////////////////////////////////////{ име}
////////////////////////////////////////////////////////////////{ възраст}
////////////////////////////////////////////////////////////////{ град}

////////////////////////////////////////////////////////////////Колекционирайте ги, докато не получите "END"

////////////////////////////////////////////////////////////////След това ще получите цяло число N - Nтия човек в колекцията ви. Започвайки от 1.

////////////////////////////////////////////////////////////////Примери:

////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////Pesho 22 Vraca

////////////////////////////////////////////////////////////////Gogo 14 Sofeto

////////////////////////////////////////////////////////////////END

////////////////////////////////////////////////////////////////2

////////////////////////////////////////////////////////////////No matches

////////////////////////////////////////////////////////////////Pesho 22 Vraca

////////////////////////////////////////////////////////////////Gogo 22 Vraca

////////////////////////////////////////////////////////////////Gogo 22 Vraca

////////////////////////////////////////////////////////////////END

////////////////////////////////////////////////////////////////2

////////////////////////////////////////////////////////////////1 1 3


//////////////////////////////////////////////////////////////////Person.cs

////////////////////////////////////////////////////////////////using System;

////////////////////////////////////////////////////////////////using System.Collections.Generic;

////////////////////////////////////////////////////////////////using System.Linq;

////////////////////////////////////////////////////////////////using System.Text;

////////////////////////////////////////////////////////////////using System.Threading.Tasks;



////////////////////////////////////////////////////////////////namespace ConsoleApp4

////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////  public class Person

////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////    private string name;

////////////////////////////////////////////////////////////////    private int age;

////////////////////////////////////////////////////////////////    private string city;



////////////////////////////////////////////////////////////////    public Person(string name, int age, string city)

////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////      Name = name;

////////////////////////////////////////////////////////////////      Age = age;

////////////////////////////////////////////////////////////////      City = city;

////////////////////////////////////////////////////////////////    }



////////////////////////////////////////////////////////////////    public string Name

////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////      get { return name; }

////////////////////////////////////////////////////////////////      private set { name = value; }

////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////    public int Age

////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////      get { return age; }

////////////////////////////////////////////////////////////////      private set { age = value; }

////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////    public string City

////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////      get { return city; }

////////////////////////////////////////////////////////////////      private set { city = value; }

////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////    public int CompareTo(Person other)

////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////      int nameComparison = this.Name.CompareTo(other.Name);

////////////////////////////////////////////////////////////////      if (nameComparison != 0) return nameComparison;



////////////////////////////////////////////////////////////////      int ageComparison = this.Age.CompareTo(other.Age);

////////////////////////////////////////////////////////////////      if (ageComparison != 0) return ageComparison;



////////////////////////////////////////////////////////////////      return this.City.CompareTo(other.City);

////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////}





///////////////////////////////////////////////////////////////////Program.cs

////////////////////////////////////////////////////////////////using System;

////////////////////////////////////////////////////////////////using System.Collections.Generic;

////////////////////////////////////////////////////////////////using System.Linq;

////////////////////////////////////////////////////////////////using System.Text;

////////////////////////////////////////////////////////////////using System.Threading.Tasks;



////////////////////////////////////////////////////////////////namespace ConsoleApp4

////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////  internal class Program

////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////    static void Main(string[] args)

////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////      List<Person> people = new List<Person>();



////////////////////////////////////////////////////////////////      string cmd = Console.ReadLine();



////////////////////////////////////////////////////////////////      while (!cmd.Equals("END"))

////////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////////        string[] info = cmd.Split();

////////////////////////////////////////////////////////////////        Person person = new Person(info[0], int.Parse(info[1]), info[2]);

////////////////////////////////////////////////////////////////        people.Add(person);



////////////////////////////////////////////////////////////////        cmd = Console.ReadLine();

////////////////////////////////////////////////////////////////      }



////////////////////////////////////////////////////////////////      int n = int.Parse(Console.ReadLine());



////////////////////////////////////////////////////////////////      Person p = people[n - 1];

////////////////////////////////////////////////////////////////      int equalsPeopleCount = 0;

////////////////////////////////////////////////////////////////      int notEqualsPeoplesCount = 0;



////////////////////////////////////////////////////////////////      for (int i = 0; i < people.Count; i++)

////////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////////        if (i == n - 1)

////////////////////////////////////////////////////////////////        {

////////////////////////////////////////////////////////////////          continue;

////////////////////////////////////////////////////////////////        }

////////////////////////////////////////////////////////////////        if (people[i].CompareTo(p) == 0)

////////////////////////////////////////////////////////////////        {

////////////////////////////////////////////////////////////////          equalsPeopleCount++;

////////////////////////////////////////////////////////////////        }

////////////////////////////////////////////////////////////////        else

////////////////////////////////////////////////////////////////        {

////////////////////////////////////////////////////////////////          notEqualsPeoplesCount++;

////////////////////////////////////////////////////////////////        }

////////////////////////////////////////////////////////////////      }



////////////////////////////////////////////////////////////////      Console.WriteLine(equalsPeopleCount == 0 ? "No matches!" :

////////////////////////////////////////////////////////////////    $"{equalsPeopleCount} {notEqualsPeoplesCount} {people.Count}");

////////////////////////////////////////////////////////////////    }



////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////}





////////////////////////////////////////////////////////////////Въпрос 17
////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////От максимално 6,00
////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////Напишете програма на C#, която да дефинира делегат, който може да приема анонимна функция, която умножава две цели числа. Накрая резултатът да се отпечата на конзолата.

////////////////////////////////////////////////////////////////using System;



////////////////////////////////////////////////////////////////namespace DelegateAnonymousFunction

////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////  public delegate int MultiplyDelegate(int a, int b);



////////////////////////////////////////////////////////////////  class Program

////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////    static void Main(string[] args)

////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////      MultiplyDelegate multiply = (a, b) => a * b;



////////////////////////////////////////////////////////////////      int result = multiply(4, 5);

////////////////////////////////////////////////////////////////      Console.WriteLine($"The result is: {result}");

////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////public delegate int Delegate(int firstNumber, int secondNumber);

////////////////////////////////////////////////////////////////class Program
////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////  static void Main(string[] args)
////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////    Delegate del = new Delegate((x, y) => x * y);
////////////////////////////////////////////////////////////////    Console.WriteLine(del(2, 3));
////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////Въпрос 18
////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////От максимално 8,00
////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////Напишете програма, която изпълнява някои математически операции върху дадена колекция. На първия ред са дадени списък от числа. На следващите редове се подават различни команди, които трябва да се прилагат за всички числа в списъка:

////////////////////////////////////////////////////////////////·        "add"->добави 1 към всяко число;

////////////////////////////////////////////////////////////////·        "multiply"->умножава всяко число по 2;

////////////////////////////////////////////////////////////////·        "subtract"->изважда 1 от всяко число;

////////////////////////////////////////////////////////////////·        "print"->извежда колекцията.

////////////////////////////////////////////////////////////////·        Входът ще приключи с команда "end".

////////////////////////////////////////////////////////////////·        Използвайте функции.

////////////////////////////////////////////////////////////////Примери:

////////////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////////////1 2 3 4 5

////////////////////////////////////////////////////////////////add

////////////////////////////////////////////////////////////////add

////////////////////////////////////////////////////////////////print

////////////////////////////////////////////////////////////////end

////////////////////////////////////////////////////////////////3 4 5 6 7

////////////////////////////////////////////////////////////////5 10

////////////////////////////////////////////////////////////////multiply

////////////////////////////////////////////////////////////////subtract

////////////////////////////////////////////////////////////////print

////////////////////////////////////////////////////////////////end

////////////////////////////////////////////////////////////////9 19

////////////////////////////////////////////////////////////////За ваше улеснение ви е предоставен Program.cs файл. Кодът обаче е грешен/непълен. Вашата задача е да откриете и поправите грешките в кода, така че той да работи правилно!

////////////////////////////////////////////////////////////////Program.cs

////////////////////////////////////////////////////////////////List<int> numbers = Console.ReadLine()

////////////////////////////////////////////////////////////////                .Split()

////////////////////////////////////////////////////////////////                .Select(int.Parse)

////////////////////////////////////////////////////////////////                .ToList();



////////////////////////////////////////////////////////////////string cmd = Console.ReadLine();



////////////////////////////////////////////////////////////////while (!cmd.Equals("end"))

////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////  switch (cmd)

////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////    case "add":

////////////////////////////////////////////////////////////////      numbers = numbers.Select(addition).ToList();

////////////////////////////////////////////////////////////////      break;

////////////////////////////////////////////////////////////////    case "multiply":

////////////////////////////////////////////////////////////////      numbers = numbers.Select(multiplication).ToList();

////////////////////////////////////////////////////////////////      break;

////////////////////////////////////////////////////////////////    case "subtract":

////////////////////////////////////////////////////////////////      numbers = numbers.Select(subtraction).ToList();

////////////////////////////////////////////////////////////////      break;

////////////////////////////////////////////////////////////////    case "print":

////////////////////////////////////////////////////////////////      foreach (var item in numbers)

////////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////////        print(item);

////////////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////////////      Console.WriteLine();

////////////////////////////////////////////////////////////////      break;

////////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////////  cmd = Console.ReadLine();

////////////////////////////////////////////////////////////////}


////////////////////////////////////////////////////////////////using System;

////////////////////////////////////////////////////////////////using System.Collections.Generic;

////////////////////////////////////////////////////////////////using System.Linq;



////////////////////////////////////////////////////////////////namespace MathOperations

////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////  class Program

////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////    static void Main(string[] args)

////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////      List<int> numbers = Console.ReadLine()

////////////////////////////////////////////////////////////////          .Split()

////////////////////////////////////////////////////////////////          .Select(int.Parse)

////////////////////////////////////////////////////////////////          .ToList();



////////////////////////////////////////////////////////////////      string cmd = Console.ReadLine();



////////////////////////////////////////////////////////////////      while (!cmd.Equals("end"))

////////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////////        switch (cmd)

////////////////////////////////////////////////////////////////        {

////////////////////////////////////////////////////////////////          case "add":

////////////////////////////////////////////////////////////////            numbers = numbers.Select(Addition).ToList();

////////////////////////////////////////////////////////////////            break;

////////////////////////////////////////////////////////////////          case "multiply":

////////////////////////////////////////////////////////////////            numbers = numbers.Select(Multiplication).ToList();

////////////////////////////////////////////////////////////////            break;

////////////////////////////////////////////////////////////////          case "subtract":

////////////////////////////////////////////////////////////////            numbers = numbers.Select(Subtraction).ToList();

////////////////////////////////////////////////////////////////            break;

////////////////////////////////////////////////////////////////          case "print":

////////////////////////////////////////////////////////////////            foreach (var item in numbers)

////////////////////////////////////////////////////////////////            {

////////////////////////////////////////////////////////////////              Print(item);

////////////////////////////////////////////////////////////////            }

////////////////////////////////////////////////////////////////            Console.WriteLine();

////////////////////////////////////////////////////////////////            break;

////////////////////////////////////////////////////////////////        }



////////////////////////////////////////////////////////////////        cmd = Console.ReadLine();

////////////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////////////    }



////////////////////////////////////////////////////////////////    static int Addition(int number)

////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////      return number + 1;

////////////////////////////////////////////////////////////////    }



////////////////////////////////////////////////////////////////    static int Multiplication(int number)

////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////      return number * 2;

////////////////////////////////////////////////////////////////    }



////////////////////////////////////////////////////////////////    static int Subtraction(int number)

////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////      return number - 1;

////////////////////////////////////////////////////////////////    }



////////////////////////////////////////////////////////////////    static void Print(int number)

////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////      Console.Write($"{number} ");

////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////Въпрос 19
////////////////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////Имате даден следния програмен фрагмент:

////////////////////////////////////////////////////////////////int[] nums = { 1, 2, 3, 4, 5, 6 };
////////////////////////////////////////////////////////////////nums = nums blank.ToArray();

////////////////////////////////////////////////////////////////Коя от следните LINQ заявки и какъв ламбда израз ще използвате, за да филтрирате колекцията, така че тя да съдържа само четни числа?

////////////////////////////////////////////////////////////////.Where(num => num % 2 == 0).Distinct(num => num % 2 == 0).Select(num => num % 2 == 0).Where(num => num % 2 != 0)
////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////////////////////Имате даден следния програмен фрагмент:

////////////////////////////////////////////////////////////////int[] nums = { 1, 2, 3, 4, 5, 6 };
////////////////////////////////////////////////////////////////nums = nums[.Where(num => num % 2 == 0)].ToArray();

////////////////////////////////////////////////////////////////Коя от следните LINQ заявки и какъв ламбда израз ще използвате, за да филтрирате колекцията, така че тя да съдържа само четни числа?
////////////////////////////////////////////////////////////////Въпрос 20
////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////От максимално 8,00
////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////Имате даден следният програмен фрагмент:

////////////////////////////////////////////////////////////////Program.cs

////////////////////////////////////////////////////////////////try
////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////  string name = Console.ReadLine();
////////////////////////////////////////////////////////////////  int age = int.Parse(Console.ReadLine());
////////////////////////////////////////////////////////////////  Person person = new Person(name, age);
////////////////////////////////////////////////////////////////}
////////////////////////////////////////////////////////////////catch (ArgumentNullException ex)
////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////  Console.WriteLine(ex.Message);
////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////Person.cs

////////////////////////////////////////////////////////////////        private string firstName;
////////////////////////////////////////////////////////////////private int age;

////////////////////////////////////////////////////////////////public Person(string firstName, int age)
////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////  FirstName = firstName;
////////////////////////////////////////////////////////////////  Age = age
////////////////////////////////////////////////////////////////        }

////////////////////////////////////////////////////////////////public string FirstName
////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////  get { return firstName; }
////////////////////////////////////////////////////////////////  private set
////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////    if (string.IsNullOrEmpty(value) || string.IsNullOrWhiteSpace(value))
////////////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////////////      throw new ArgumentNullException("value", "The first name cannot be null or empty");
////////////////////////////////////////////////////////////////    }
////////////////////////////////////////////////////////////////    firstName = value;
////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////public int Age
////////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////////  get { return age };
////////////////////////////////////////////////////////////////  private set
////////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////////    if (value < 0 || value > 120)
////////////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////////////      throw new ArgumentOutOfRangeException("value", "Age should be in the range [0..120]");
////////////////////////////////////////////////////////////////    }
////////////////////////////////////////////////////////////////    age = value;
////////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////При подадени входни данни (например: Pepi и -5) изпълнението на кода води до грешки!

////////////////////////////////////////////////////////////////Вашата задача е да предотвратите сриването на програмата, така че тя да продължава своето изпълнение, без да спира принудително! Открийте и поправете грешките, така че да реши поставената задача!




//////////////////////////////////////////////////////////////////Person.cs

////////////////////////////////////////////////////////////////private string firstName;

////////////////////////////////////////////////////////////////private int age;



////////////////////////////////////////////////////////////////public Person(string firstName, int age)

////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////  FirstName = firstName;

////////////////////////////////////////////////////////////////  Age = age; // Тук трябва да има точка и запетая.

////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////public string FirstName

////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////  get { return firstName; }

////////////////////////////////////////////////////////////////  private set

////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////    if (string.IsNullOrEmpty(value) || string.IsNullOrWhiteSpace(value))

////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////      throw new ArgumentNullException("value", "The first name cannot be null or empty");

////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////    firstName = value;

////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////public int Age

////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////  get { return age; } // Тук трябва да има точка и запетая, а не точка на запетая.

////////////////////////////////////////////////////////////////  private set

////////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////////    if (value < 0 || value > 120)

////////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////////      throw new ArgumentOutOfRangeException("value", "Age should be in the range [0..120]");

////////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////////    age = value;

////////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////////Program.cs



////////////////////////////////////////////////////////////////try

////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////  string name = Console.ReadLine();

////////////////////////////////////////////////////////////////  int age = int.Parse(Console.ReadLine());

////////////////////////////////////////////////////////////////  Person person = new Person(name, age);

////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////catch (ArgumentNullException ex)

////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////  Console.WriteLine(ex.Message);

////////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////////catch (ArgumentOutOfRangeException ex)

////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////  Console.WriteLine(ex.Message);

////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////catch (FormatException ex)

////////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////////  Console.WriteLine("Invalid input format. Please enter a valid integer for age.");

////////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////////Въпрос 21
////////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////////Обяснете следния фрагмент от код с думи:

////////////////////////////////////////////////////////////////List<int> list = new List<int>() { 20, 15, 1, 5, 7, 18, 66 };

////////////////////////////////////////////////////////////////list.OrderByDescending(x => x).Skip(3).ToList();

////////////////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", list));

////////////////////////////////////////////////////////////////В полето запишете ред по ред какво прави кода и какво се очаква да получим като резултат.


////////////////////////////////////////////////////////////////List<int> list = new List<int>() { 20, 15, 1, 5, 7, 18, 66 };

////////////////////////////////////////////////////////////////Първи ред създава списък с целочислен тип данни с име list , където в него има вече сложени числа. които са 20, 15, 1, 5, 7, 18, 66.



////////////////////////////////////////////////////////////////list.OrderByDescending(x => x).Take(3);

////////////////////////////////////////////////////////////////Втори ред използва командата OrderByDescending на списъка за да може да се наредят числата по-големина започващи от най-малки и накрая с командата .Skip(3) се прескачат само първите 3 числа.



////////////////////////////////////////////////////////////////Console.WriteLine(string.Join(", ", list));

////////////////////////////////////////////////////////////////Отпечатва числата като след тях слага запетая.

////////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////////Инициализираме списък с цели числа.

////////////////////////////////////////////////////////////////Сортираме числата от колекцията в низходящ ред и пропускаме първите три числа от тях.

////////////////////////////////////////////////////////////////Очакван резултат: 20, 15, 1, 5, 7, 18, 66

////////////////////////////////////////////////////////////////Списъкът с числа си остава същия, защото linq изразите връщат нов списък, а в дадения код не се презаписва новата подредба на числата върху предишния списък с числа.

////////////////////////////////////////////////////////////////Край на прегледа
////////////////////////////////////////////////////////////////Отиди на ...
////////////////////////////////////////////////////////////////Отиди на ...
////////////////////////////////////////////////////////////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
////////////////////////////////////////////////////////////////Навигация в теста
////////////////////////////////////////////////////////////////Край на прегледа
////////////////////////////////////////////////////////////////Вие сте влезли в системата като Добри Илев (Изход)
////////////////////////////////////////////////////////////////тренировъчен - курс - по
////////////////////////////////////////////////////////////////Data retention summary



////////////////////////////////////////////////////////////////ИЗПИТНА ТЕМА 6
//////////////////////////////////////////////////////////////Прескочи на основното съдържание
//////////////////////////////////////////////////////////////ПГЕЕ
//////////////////////////////////////////////////////////////Български ‎(bg)‎ 
//////////////////////////////////////////////////////////////Добри Илев 
//////////////////////////////////////////////////////////////Тренировъчен курс - Програмно осигуряване
//////////////////////////////////////////////////////////////Начална страница
//////////////////////////////////////////////////////////////Моите курсове
////////////////////////////////////////////////////////////// тренировъчен-курс-по
////////////////////////////////////////////////////////////// Изпитна тема 6
////////////////////////////////////////////////////////////// Тест към Изпитна тема №6
//////////////////////////////////////////////////////////////Започнат на	четвъртък, 2 февруари 2023, 14:00
//////////////////////////////////////////////////////////////Състояние Завършен
//////////////////////////////////////////////////////////////Приключен на	неделя, 19 март 2023, 12:49
//////////////////////////////////////////////////////////////Изминало време	44 дни 22 часа
//////////////////////////////////////////////////////////////Оценка	Още не е оценен
//////////////////////////////////////////////////////////////Въпрос 1
//////////////////////////////////////////////////////////////Неправилно
//////////////////////////////////////////////////////////////0,00 от максимално 4,00 точки
//////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////Обяснете какво прави методът Dequeue()?
//////////////////////////////////////////////////////////////Отговор: 
//////////////////////////////////////////////////////////////Взима първия елемент от опашката (този, който е влязъл най-рано). Премахва първия елемент от опашката. Връща стойността на първия елемент.
//////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////Правилният отговор е: премахва и връща елемента от началото на опашката
//////////////////////////////////////////////////////////////Въпрос 2
//////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////От максимално 40,00
//////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////Ресторант

//////////////////////////////////////////////////////////////Продукти

//////////////////////////////////////////////////////////////Общ преглед

//////////////////////////////////////////////////////////////Във вашата фирма постъпва проект за създаване на приложение, обслужващо „ресторант“.

//////////////////////////////////////////////////////////////Вашият софтуер трябва да описва хладилник (Fridge) и продукт(Product).

//////////////////////////////////////////////////////////////Tрябва да реализирате функционалност, която да позволява добавяне и премахване на продукти, проверка за наличности и приготвяне на ястите с определени продукти – всичко това ще работи чрез команди, които вие ще получавате. Поредицата от команди приключва с „END”.

//////////////////////////////////////////////////////////////За ваше удобство ще ви бъде предоставен скелет на задачата, който обаче е непълен/неработещ/некоректен. Предоставеният скелет трябва да се приведе в работещ вид.

//////////////////////////////////////////////////////////////Основната идея се базира на това, че т.нар. хладилник е структура, която ще съдържа n на брой продукти. Структурата не трябва да пази продуктите в колекция! Всеки продукт пази референция към следващия в поредицата.

//////////////////////////////////////////////////////////////Подзадача 1:

//////////////////////////////////////////////////////////////Product

//////////////////////////////////////////////////////////////Всички продукти имат име и референция към следващ продукт:

//////////////////////////////////////////////////////////////name – низ, съставен от малки и/или големи латински букви

//////////////////////////////////////////////////////////////next – референция към следващ продукт 



//////////////////////////////////////////////////////////////Fridge

//////////////////////////////////////////////////////////////Всички хладилници Product head, Product tail, Count:

//////////////////////////////////////////////////////////////head – Product, първи в поредицата

//////////////////////////////////////////////////////////////tail – Product, последен в поредицата

//////////////////////////////////////////////////////////////count – Брой продукти



//////////////////////////////////////////////////////////////Команди

//////////////////////////////////////////////////////////////Командa за добавяне на продукт

//////////////////////////////////////////////////////////////Вашето приложение трябва да обслужва следната команда за добавяне на продукти:

//////////////////////////////////////////////////////////////Add < име > -тази команда има за цел да добави продукт с неговото име.
//////////////////////////////////////////////////////////////Команда за извеждане на информация

//////////////////////////////////////////////////////////////Вашето приложение във всеки един момент може да получи заявка да отпечата информация за всички налични продукти. Командата за това е следната:

//////////////////////////////////////////////////////////////Print - отпечатва информация за всички продукти в структурата във формат:
//////////////////////////////////////////////////////////////Product
//////////////////////////////////////////////////////////////{ name}
//////////////////////////////////////////////////////////////За успешна реализация трябва да реализирате ваша версия на ToString() метода за класа Product.
//////////////////////////////////////////////////////////////RemoveProductByIndex <index> - Трябва да бъде премахнат елемент, който се намира на посочения индекс. Тъй като вашата структура не използва индексиране, удобен похват би бил използването на брояч. При успешно намиране и премахване на Product трябва да върнете неговото име, което ще бъде изпечатано на конзолата от Main метод-а. При ненамиране на такъв Product, трябва да бъде върната null стойност.
//////////////////////////////////////////////////////////////RemoveProductByName <name> - Трябва да бъде премахнат първият елемент, на който името отговаря на подаденото. При успешно намиране и премахване на Product трябва да върнете неговото име, което ще бъде изпечатано на конзолата от Main метод-а. При ненамиране на такъв Product, трябва да бъде върната null стойност.
//////////////////////////////////////////////////////////////CheckProductIsInStock<name> - Трябва да бъде намерен елемент, на който името отговаря на подаденото. При успешно намиране Product трябва да върнете true  в обратен случай false
//////////////////////////////////////////////////////////////CookMeal<int startIndex, int endIndex> - Трябва да бъдат намерени всички продукти от startIndex до endIndex .  Имената на всички намерени продукти трябва да бъдат събрани в стрингов масив, който да бъде върнат от метода.
//////////////////////////////////////////////////////////////Kоманди

//////////////////////////////////////////////////////////////Вашето приложение трябва да реализира следните команди:

//////////////////////////////////////////////////////////////Add < name > -Добавя продукт към структурата
//////////////////////////////////////////////////////////////Print – изпечатва се информация за всички налични продукти
//////////////////////////////////////////////////////////////Remove <int index> - Трябва да бъде премахнат елемент, който се намира на посочения индекс. Тъй като вашата структура не използва индексиране, удобен похват би бил използването на брояч. При успешно намиране и премахване на Product трябва да върнете неговото име, което ще бъде изпечатано на конзолата от Main метод-а. При ненамиране на такъв Product, трябва да бъде върната null стойност.
//////////////////////////////////////////////////////////////Remove <string name> - Трябва да бъде премахнат първият елемент, на който името отговаря на подаденото. При успешно намиране и премахване на Product трябва да върнете неговото име, което ще бъде изпечатано на конзолата от Main метод-а. При ненамиране на такъв Product, трябва да бъде върната null стойност.
//////////////////////////////////////////////////////////////Check <name> - При намерен продукт – Product <name> is in stock  в обратен случай – Not in stock
//////////////////////////////////////////////////////////////Cook <int startIndex, int endIndex> -  “Приготва се ястие“, в контекста на програмата, това означава да извадите имената на всички продукти, който се намират от startIndex ДО endIndex.


//////////////////////////////////////////////////////////////В случай, че endIndex e след последния елемент, вземете колкото продукти имате от startIndex

//////////////////////////////////////////////////////////////Вход / Изход

//////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////Програмата ще получава множество редове с информация. Всеки ред представлява команда. Самият вход се обработва изцяло от примерния Program.cs.
//////////////////////////////////////////////////////////////Всички команди приключват с въвеждането на End
//////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////За някои от командите не е нужно да извеждате нищо. За други е необходимо форматиране на изход – напр. Product.ToString(), Product.Name()

//////////////////////////////////////////////////////////////Ограничения

//////////////////////////////////////////////////////////////Всички цели числа ще бъдат в диапазона –10000 до +10000
//////////////////////////////////////////////////////////////Имената няма да съдържат интервал
//////////////////////////////////////////////////////////////Примери

//////////////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////////////Add cherry

//////////////////////////////////////////////////////////////Add salami

//////////////////////////////////////////////////////////////Print

//////////////////////////////////////////////////////////////END

//////////////////////////////////////////////////////////////Product cherry

//////////////////////////////////////////////////////////////Product salami

//////////////////////////////////////////////////////////////Add cherry

//////////////////////////////////////////////////////////////Add salami

//////////////////////////////////////////////////////////////Add eggs

//////////////////////////////////////////////////////////////Remove 1

//////////////////////////////////////////////////////////////Remove eggs

//////////////////////////////////////////////////////////////Print

//////////////////////////////////////////////////////////////Check dadadada

//////////////////////////////////////////////////////////////Check cherry

//////////////////////////////////////////////////////////////Check eggs

//////////////////////////////////////////////////////////////Add eggs

//////////////////////////////////////////////////////////////Cook 0 2

//////////////////////////////////////////////////////////////Cook 0 25

//////////////////////////////////////////////////////////////Remove 0

//////////////////////////////////////////////////////////////Print

//////////////////////////////////////////////////////////////END

//////////////////////////////////////////////////////////////Removed: salami

//////////////////////////////////////////////////////////////Removed: eggs

//////////////////////////////////////////////////////////////Product cherry

//////////////////////////////////////////////////////////////Not in stock

//////////////////////////////////////////////////////////////Product cherry is in stock.

//////////////////////////////////////////////////////////////Not in stock

//////////////////////////////////////////////////////////////Meal cooked. Used Products: cherry, eggs

//////////////////////////////////////////////////////////////Meal cooked. Used Products: cherry, eggs

//////////////////////////////////////////////////////////////Removed: cherry

//////////////////////////////////////////////////////////////Product eggs






//////////////////////////////////////////////////////////////class Fridge

//////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////  private Product head;

//////////////////////////////////////////////////////////////  private Product tail;

//////////////////////////////////////////////////////////////  private int count;



//////////////////////////////////////////////////////////////  public Fridge()

//////////////////////////////////////////////////////////////  {



//////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////  public int Count

//////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////    get { return this.count; }

//////////////////////////////////////////////////////////////    private set  this.count = value; }

//////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////  public void AddProduct(string productName)

//////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////    Product product = new Product(productName);



//////////////////////////////////////////////////////////////    if (this.Count = 0)

//////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////      this.head = product;

//////////////////////////////////////////////////////////////      this.tail = product;




//////////////////////////////////////////////////////////////            else

//////////////////////////////////////////////////////////////      {



//////////////////////////////////////////////////////////////        this.tail.Next = product;

//////////////////////////////////////////////////////////////        this.tail = product;

//////////////////////////////////////////////////////////////      }



//////////////////////////////////////////////////////////////      this.Count;

//////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////    public string[] CookMeal(int start, int end)

//////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////      string[] arr = string[start + end];



//////////////////////////////////////////////////////////////      string[] products = ProvideInformationAboutAllProducts();



//////////////////////////////////////////////////////////////      for (int i = start; i < end || i < products.Length; i++)

//////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////        arr[i] = products[i];

//////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////      arr = arr.Where(c => c != null).ToArray();





//////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////    public string RemoveProductByIndex(int )

//////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////      Product currentProduct = this.head;

//////////////////////////////////////////////////////////////      Product prevProduct = null;

//////////////////////////////////////////////////////////////      int currentIndex = 0;



//////////////////////////////////////////////////////////////      while (currentProduct != null)

//////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////        if (currentIndex == index)

//////////////////////////////////////////////////////////////        {

//////////////////////////////////////////////////////////////          if (prevProduct != null)

//////////////////////////////////////////////////////////////          {

//////////////////////////////////////////////////////////////            //prev.next = one cuur.next = two

//////////////////////////////////////////////////////////////            prevProduct.Next = currentProduct.Next;

//////////////////////////////////////////////////////////////          }

//////////////////////////////////////////////////////////////          else

//////////////////////////////////////////////////////////////          {

//////////////////////////////////////////////////////////////            this.head = currentProduct.Next;

//////////////////////////////////////////////////////////////          }



//////////////////////////////////////////////////////////////             (currentProduct.Next == null)

//////////////////////////////////////////////////////////////                    {

//////////////////////////////////////////////////////////////            this.tail = prevProduct;

//////////////////////////////////////////////////////////////          }

//////////////////////////////////////////////////////////////          count--;

//////////////////////////////////////////////////////////////          return currentProduct.Name;

//////////////////////////////////////////////////////////////        }

//////////////////////////////////////////////////////////////        else

//////////////////////////////////////////////////////////////        {

//////////////////////////////////////////////////////////////          prevProduct = currentProduct;

//////////////////////////////////////////////////////////////          currentProduct = currentProduct.Next;

//////////////////////////////////////////////////////////////          currentIndex++

//////////////////////////////////////////////////////////////                }

//////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////      return;

//////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////    public string RemoveProductByName(string name)

//////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////      Product product = this.head;

//////////////////////////////////////////////////////////////      int index = 0;

//////////////////////////////////////////////////////////////      string removedProd = null;

//////////////////////////////////////////////////////////////      while product != null)

//////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////        if (product.Name.(name))

//////////////////////////////////////////////////////////////        {

//////////////////////////////////////////////////////////////          removedProd = product.Name;

//////////////////////////////////////////////////////////////          RemoveProductByIndex(index);

//////////////////////////////////////////////////////////////        }

//////////////////////////////////////////////////////////////        product = product.Next;

//////////////////////////////////////////////////////////////        index++;

//////////////////////////////////////////////////////////////      }



//////////////////////////////////////////////////////////////      return removedProd;

//////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////    public bool CheckProductIsInStock(name)

//////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////      bool isInStock = false;

//////////////////////////////////////////////////////////////      Product product = this.head;

//////////////////////////////////////////////////////////////      int index = 0;

//////////////////////////////////////////////////////////////      while (product != null)

//////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////        if (product.Name.Equals(name))

//////////////////////////////////////////////////////////////        {

//////////////////////////////////////////////////////////////          isInStock = true;

//////////////////////////////////////////////////////////////        }



//////////////////////////////////////////////////////////////        product = product.Next;

//////////////////////////////////////////////////////////////        index++;

//////////////////////////////////////////////////////////////      }



//////////////////////////////////////////////////////////////      return isInStock;

//////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////    public string[] ProvideInformationAboutAllProducts()

//////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////      string[] arr = new string[this.Count];

//////////////////////////////////////////////////////////////      Product product = this.head;

//////////////////////////////////////////////////////////////      int index = 0;



//////////////////////////////////////////////////////////////      while (product = null)

//////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////        arr[index] = product.Name;



//////////////////////////////////////////////////////////////        product = product.Next;

//////////////////////////////////////////////////////////////        index++;

//////////////////////////////////////////////////////////////      }



//////////////////////////////////////////////////////////////      return arr;

//////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////  class Product

//////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////    private string name

//////////////////////////////////////////////////////////////        private Product next;



//////////////////////////////////////////////////////////////    public Product(string name)

//////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////      this.Name = name;

//////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////    public string Name

//////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////      get




//////////////////////////////////////////////////////////////                return this.name;

//////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////      set

//////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////        this.name = value;

//////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////    public Next

//////////////////////////////////////////////////////////////        {

//////////////////////////////////////////////////////////////            get { return thisnext; }

//////////////////////////////////////////////////////////////  set

//////////////////////////////////////////////////////////////            {

//////////////////////////////////////////////////////////////                this.next = value;

//////////////////////////////////////////////////////////////            }

//////////////////////////////////////////////////////////////        }



//////////////////////////////////////////////////////////////        public override string ToString()

//////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////  string.Format("Product {0}", this.Name);

//////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////class Program

//////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////  static Fridge fridge = new Fridge();



//////////////////////////////////////////////////////////////  static void Main(string[] args)

//////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////    string line;



//////////////////////////////////////////////////////////////    while ("END" != (line = Console.ReadLine()))

//////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////      string[] cmdArgs = line.Split(' ');



//////////////////////////////////////////////////////////////      switch (cmdArgs[0])

//////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////        case "Add":

//////////////////////////////////////////////////////////////          AddProduct(cmdArgs[1]);

//////////////////////////////////////////////////////////////          break;

//////////////////////////////////////////////////////////////        case "Check":

//////////////////////////////////////////////////////////////          CheckProductIsInStock(cmdArgs[1]);

//////////////////////////////////////////////////////////////          break;

//////////////////////////////////////////////////////////////        case "Remove":

//////////////////////////////////////////////////////////////          try

//////////////////////////////////////////////////////////////          {

//////////////////////////////////////////////////////////////            int index = int.Parse(cmdArgs[1]);

//////////////////////////////////////////////////////////////            RemoveProductByIndex(index);

//////////////////////////////////////////////////////////////          }

//////////////////////////////////////////////////////////////          catch (FormatException e)

//////////////////////////////////////////////////////////////          {

//////////////////////////////////////////////////////////////            RemoveProductByName(cmdArgs[1]);

//////////////////////////////////////////////////////////////          }

//////////////////////////////////////////////////////////////          break;

//////////////////////////////////////////////////////////////        case "Print":

//////////////////////////////////////////////////////////////          ProvideInformationAboutAllProducts();

//////////////////////////////////////////////////////////////          break;

//////////////////////////////////////////////////////////////        case "Cook":

//////////////////////////////////////////////////////////////          CookMeal(cmdArgs.Skip(1).ToArray());

//////////////////////////////////////////////////////////////          break;

//////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////  private static void CookMeal(string[] indexes)

//////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////    string[] products = fridge.CookMeal(int.Parse(indexes[0]), int.Parse(indexes[1]));

//////////////////////////////////////////////////////////////    Console.WriteLine("Meal cooked. Used Products: " + string.Join(", ", products));

//////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////  private static void ProvideInformationAboutAllProducts()

//////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////    string[] info = fridge.ProvideInformationAboutAllProducts();

//////////////////////////////////////////////////////////////    foreach (var item in info)

//////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////      Console.WriteLine(item);

//////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////  private static void RemoveProductByName(string name)

//////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////    string ProductName = fridge.RemoveProductByName(name);

//////////////////////////////////////////////////////////////    if (ProductName != null)

//////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////      Console.WriteLine("Removed: " + ProductName);

//////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////    else

//////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////      Console.WriteLine("Product not found!");

//////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////  private static void RemoveProductByIndex(int index)

//////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////    string ProductName = fridge.RemoveProductByIndex(index);

//////////////////////////////////////////////////////////////    if (ProductName != null)

//////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////      Console.WriteLine("Removed: " + ProductName);

//////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////    else

//////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////      Console.WriteLine("Product not found!");

//////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////  private static void CheckProductIsInStock(string name)

//////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////    bool isInStock = fridge.CheckProductIsInStock(name);



//////////////////////////////////////////////////////////////    Console.WriteLine(isInStock ? $"Product {name} is in stock."

//////////////////////////////////////////////////////////////        : "Not in stock");

//////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////  private static void AddProduct(string name)

//////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////    fridge.AddProduct(name);

//////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////}




//////////////////////////////////////////////////////////////public class Product

//////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////  public string Name { get; set; }

//////////////////////////////////////////////////////////////  public Product Next { get; set; }



//////////////////////////////////////////////////////////////  public override string ToString()

//////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////    return $"Product {Name}";

//////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////}





////////////////////////////////////////////////////////////////Fridge.cs



//////////////////////////////////////////////////////////////public class Fridge

//////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////  public Product Head { get; set; }

//////////////////////////////////////////////////////////////  public Product Tail { get; set; }

//////////////////////////////////////////////////////////////  public int Count { get; set; }



//////////////////////////////////////////////////////////////  public void Add(Product product)

//////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////    if (Head == null)

//////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////      Head = product;

//////////////////////////////////////////////////////////////      Tail = product;

//////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////    else

//////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////      Tail.Next = product;

//////////////////////////////////////////////////////////////      Tail = product;

//////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////    Count++;

//////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////  public string RemoveProductByIndex(int index)

//////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////    if (index < 0 || index >= Count)

//////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////      return null;

//////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////    Product current = Head;

//////////////////////////////////////////////////////////////    Product previous = null;



//////////////////////////////////////////////////////////////    for (int i = 0; i < index; i++)

//////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////      previous = current;

//////////////////////////////////////////////////////////////      current = current.Next;

//////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////    if (previous == null)

//////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////      Head = current.Next;

//////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////    else

//////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////      previous.Next = current.Next;

//////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////    if (current == Tail)

//////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////      Tail = previous;

//////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////    Count--;

//////////////////////////////////////////////////////////////    return current.Name;

//////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////  public string RemoveProductByName(string name)

//////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////    Product current = Head;

//////////////////////////////////////////////////////////////    Product previous = null;



//////////////////////////////////////////////////////////////    while (current != null)

//////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////      if (current.Name == name)

//////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////        if (previous == null)

//////////////////////////////////////////////////////////////        {

//////////////////////////////////////////////////////////////          Head = current.Next;

//////////////////////////////////////////////////////////////        }

//////////////////////////////////////////////////////////////        else

//////////////////////////////////////////////////////////////        {

//////////////////////////////////////////////////////////////          previous.Next = current.Next;

//////////////////////////////////////////////////////////////        }



//////////////////////////////////////////////////////////////        if (current == Tail)

//////////////////////////////////////////////////////////////        {

//////////////////////////////////////////////////////////////          Tail = previous;

//////////////////////////////////////////////////////////////        }



//////////////////////////////////////////////////////////////        Count--;

//////////////////////////////////////////////////////////////        return current.Name;

//////////////////////////////////////////////////////////////      }



//////////////////////////////////////////////////////////////      previous = current;

//////////////////////////////////////////////////////////////      current = current.Next;

//////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////    return null;

//////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////  public bool CheckProductIsInStock(string name)

//////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////    Product current = Head;



//////////////////////////////////////////////////////////////    while (current != null)

//////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////      if (current.Name == name)

//////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////        return true;

//////////////////////////////////////////////////////////////      }



//////////////////////////////////////////////////////////////      current = current.Next;

//////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////    return false;

//////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////  public string[] CookMeal(int startIndex, int endIndex)

//////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////    List<string> names = new List<string>();



//////////////////////////////////////////////////////////////    if (startIndex < 0 || startIndex >= Count)

//////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////      return names.ToArray();

//////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////    if (endIndex < startIndex)

//////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////      return names.ToArray();

//////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////    Product current = Head;

//////////////////////////////////////////////////////////////    int currentIndex = 0;



//////////////////////////////////////////////////////////////    while (current != null && currentIndex < startIndex)

//////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////      current = current.Next;

//////////////////////////////////////////////////////////////      currentIndex++;

//////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////    while (current != null && currentIndex <= endIndex)

//////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////      names.Add(current.Name);

//////////////////////////////////////////////////////////////      current = current.Next;

//////////////////////////////////////////////////////////////      currentIndex++;

//////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////    return names.ToArray();

//////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////Въпрос 3
//////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////От максимално 6,00
//////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////Даден е следния програмен фрагмент:

//////////////////////////////////////////////////////////////public class CustomArrayList
//////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////  private object[] arr;
//////////////////////////////////////////////////////////////  private int count;
//////////////////////////////////////////////////////////////  public int Count { get { return count; } }

//////////////////////////////////////////////////////////////  private static readonly int INITIAL_CAPACITY = 4;

//////////////////////////////////////////////////////////////  public CustomArrayList()
//////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////    arr = new object[INITIAL_CAPACITY];
//////////////////////////////////////////////////////////////    count = 0;
//////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////  public void Add(object item)
//////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////Допишете метода Add(object item) който трябва да добави елемент в списъка. Обърнете внимание, че първоначалния размер на масива може да бъде прехвърлен!




















//////////////////////////////////////////////////////////////public class CustomArrayList

//////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////  private object[] arr;

//////////////////////////////////////////////////////////////  private int count;

//////////////////////////////////////////////////////////////  public int Count { get { return count; } }



//////////////////////////////////////////////////////////////  private static readonly int INITIAL_CAPACITY = 4;



//////////////////////////////////////////////////////////////  public CustomArrayList()

//////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////    arr = new object[INITIAL_CAPACITY];

//////////////////////////////////////////////////////////////    count = 0;

//////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////  public void Add(object item)

//////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////    if (count == arr.Length)

//////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////      ResizeArray();

//////////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////////    arr[count] = item;

//////////////////////////////////////////////////////////////    count++;

//////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////  private void ResizeArray()

//////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////    int newSize = arr.Length * 2;

//////////////////////////////////////////////////////////////    object[] newArr = new object[newSize];

//////////////////////////////////////////////////////////////    Array.Copy(arr, newArr, count);

//////////////////////////////////////////////////////////////    arr = newArr;

//////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////public void Add(T element)
//////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////  if (this.Length == this.Capacity)
//////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////    this.Capacity *= 2;
//////////////////////////////////////////////////////////////    T[] temp = new T[this.Capacity];
//////////////////////////////////////////////////////////////    for (int i = 0; i < items.Length; i++)
//////////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////////      temp[i] = items[i];
//////////////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////////////    temp[this.Length] = element;
//////////////////////////////////////////////////////////////    items = temp;
//////////////////////////////////////////////////////////////    this.Length++;
//////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////  else
//////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////    items[this.Length] = element;
//////////////////////////////////////////////////////////////    this.Length++;
//////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////Въпрос 4
//////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////Имате следния фрагмент код:



//////////////////////////////////////////////////////////////Каква реализация на списъчна структура от данни представлява този код? Обобщете отговора си и напишете кратко обяснение, защо?

//////////////////////////////////////////////////////////////Свързан списък (динамична реализация)
//////////////////////////////////////////////////////////////Статичният списък има един сериозен недостатък – опера­циите добавяне и премахване от вътрешността  на списъка изискват пренареждане на елементите. При често добавяне и премахване (особено при голям брой елементи) това може да доведе до ниска производителност. В такива случаи се използват т. нар. свързани списъци. Разликата при тях е в структурата на елементите – докато при статичния списък елементите съдържат само конкретния обект, при динамичния списък елементите пазят информация за следващия елемент.

//////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////Динамична имплементация на стек. Защото в класа е деклариран друг клас, наречен Node(възел). Този клас ни служи като елемент (обект), който да пази стойността на елемента, който добавяме в стека(пропъртито Value) и също така съдържа и елемент отново от тип Node (PrevNode), който ще служи като указател към следващия постъпил елемент в стека. В този случай винаги имаме достъп до първия нод (възел) в стека, защото правилото при стека е първи влиза - първи излиза. По този начин реализираме свързан стек или използваме динамична имплементация, за да създадем наша собствена списъчна структура от данни - стек.

//////////////////////////////////////////////////////////////Въпрос 5
//////////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////////6,00 от максимално 6,00 точки
//////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////Имате даден следния код:

//////////////////////////////////////////////////////////////List<int> list = Console.ReadLine()
//////////////////////////////////////////////////////////////                .Split()
//////////////////////////////////////////////////////////////                .Select(int.Parse)
//////////////////////////////////////////////////////////////                .ToList();
//////////////////////////////////////////////////////////////int currValue = list[0];
//////////////////////////////////////////////////////////////int maxValue = currValue;
//////////////////////////////////////////////////////////////int currCount = 1;
//////////////////////////////////////////////////////////////int maxCount = 1;
//////////////////////////////////////////////////////////////int counter = 1;
//////////////////////////////////////////////////////////////for (int i = 1; i < list.Count; i++)
//////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////  if (currValue - counter == list[i])
//////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////    currCount++;
//////////////////////////////////////////////////////////////    counter++;
//////////////////////////////////////////////////////////////    if (currCount > maxCount)
//////////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////////      maxCount = currCount;
//////////////////////////////////////////////////////////////      maxValue = currValue;
//////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////  else
//////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////    currCount = 1;
//////////////////////////////////////////////////////////////    currValue = list[i];
//////////////////////////////////////////////////////////////    counter = 1;
//////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////}
//////////////////////////////////////////////////////////////Console.WriteLine();
//////////////////////////////////////////////////////////////Console.WriteLine(maxCount);

//////////////////////////////////////////////////////////////Свържете към намирането на коя от следните подредици съответства: 
//////////////////////////////////////////////////////////////най - дълга подредица от намаляващи числа


//////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////////////Имате даден следния код:

//////////////////////////////////////////////////////////////List<int> list = Console.ReadLine()
//////////////////////////////////////////////////////////////                .Split()
//////////////////////////////////////////////////////////////                .Select(int.Parse)
//////////////////////////////////////////////////////////////                .ToList();
//////////////////////////////////////////////////////////////int currValue = list[0];
//////////////////////////////////////////////////////////////int maxValue = currValue;
//////////////////////////////////////////////////////////////int currCount = 1;
//////////////////////////////////////////////////////////////int maxCount = 1;
//////////////////////////////////////////////////////////////int counter = 1;
//////////////////////////////////////////////////////////////for (int i = 1; i < list.Count; i++)
//////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////  if (currValue - counter == list[i])
//////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////    currCount++;
//////////////////////////////////////////////////////////////    counter++;
//////////////////////////////////////////////////////////////    if (currCount > maxCount)
//////////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////////      maxCount = currCount;
//////////////////////////////////////////////////////////////      maxValue = currValue;
//////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////  else
//////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////    currCount = 1;
//////////////////////////////////////////////////////////////    currValue = list[i];
//////////////////////////////////////////////////////////////    counter = 1;
//////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////}
//////////////////////////////////////////////////////////////Console.WriteLine();
//////////////////////////////////////////////////////////////Console.WriteLine(maxCount);

//////////////////////////////////////////////////////////////Свържете към намирането на коя от следните подредици съответства: [най‑дълга подредица от намаляващи числа]

//////////////////////////////////////////////////////////////Въпрос 6
//////////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////////6,00 от максимално 6,00 точки
//////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////Имате даден следния код:

//////////////////////////////////////////////////////////////List<int> list = Console.ReadLine()
//////////////////////////////////////////////////////////////                .Split()
//////////////////////////////////////////////////////////////                .Select(int.Parse)
//////////////////////////////////////////////////////////////                .ToList();
//////////////////////////////////////////////////////////////int currValue = list[0];
//////////////////////////////////////////////////////////////int maxValue = currValue;
//////////////////////////////////////////////////////////////int currCount = 1;
//////////////////////////////////////////////////////////////int maxCount = 1;
//////////////////////////////////////////////////////////////int counter = 1;
//////////////////////////////////////////////////////////////for (int i = 1; i < list.Count; i++)
//////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////  if (currValue + counter == list[i])
//////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////    currCount++;
//////////////////////////////////////////////////////////////    counter++;
//////////////////////////////////////////////////////////////    if (currCount > maxCount)
//////////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////////      maxCount = currCount;
//////////////////////////////////////////////////////////////      maxValue = currValue;
//////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////  else
//////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////    currCount = 1;
//////////////////////////////////////////////////////////////    currValue = list[i];
//////////////////////////////////////////////////////////////    counter = 1;
//////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////}
//////////////////////////////////////////////////////////////Console.WriteLine();
//////////////////////////////////////////////////////////////Console.WriteLine(maxCount);

//////////////////////////////////////////////////////////////Свържете към намирането на коя от следните подредици съответства: 
//////////////////////////////////////////////////////////////най - дълга подредица от нарастващи числа


//////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////////////Имате даден следния код:

//////////////////////////////////////////////////////////////List<int> list = Console.ReadLine()
//////////////////////////////////////////////////////////////                .Split()
//////////////////////////////////////////////////////////////                .Select(int.Parse)
//////////////////////////////////////////////////////////////                .ToList();
//////////////////////////////////////////////////////////////int currValue = list[0];
//////////////////////////////////////////////////////////////int maxValue = currValue;
//////////////////////////////////////////////////////////////int currCount = 1;
//////////////////////////////////////////////////////////////int maxCount = 1;
//////////////////////////////////////////////////////////////int counter = 1;
//////////////////////////////////////////////////////////////for (int i = 1; i < list.Count; i++)
//////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////  if (currValue + counter == list[i])
//////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////    currCount++;
//////////////////////////////////////////////////////////////    counter++;
//////////////////////////////////////////////////////////////    if (currCount > maxCount)
//////////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////////      maxCount = currCount;
//////////////////////////////////////////////////////////////      maxValue = currValue;
//////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////  else
//////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////    currCount = 1;
//////////////////////////////////////////////////////////////    currValue = list[i];
//////////////////////////////////////////////////////////////    counter = 1;
//////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////}
//////////////////////////////////////////////////////////////Console.WriteLine();
//////////////////////////////////////////////////////////////Console.WriteLine(maxCount);

//////////////////////////////////////////////////////////////Свържете към намирането на коя от следните подредици съответства: [най‑дълга подредица от нарастващи числа]

//////////////////////////////////////////////////////////////Въпрос 7
//////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////Дайте пример с C# код, за метод който да сортира  елементите от списъка List<int> list = new List<int>() { 12, 8, 10, 2, 9, 6, 1}; посредством алгоритъма за сортиране  чрез пряка селекция. 

//////////////////////////////////////////////////////////////using System;

//////////////////////////////////////////////////////////////using System.Collections.Generic;



//////////////////////////////////////////////////////////////class Program

//////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////  static void Main()

//////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////    List<int> list = new List<int>() { 12, 8, 10, 2, 9, 6, 1 };

//////////////////////////////////////////////////////////////    SelectionSort(list);



//////////////////////////////////////////////////////////////    foreach (int num in list)

//////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////      Console.Write(num + " ");

//////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////  static void SelectionSort(List<int> list)

//////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////    for (int i = 0; i < list.Count - 1; i++)

//////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////      int minIndex = i;

//////////////////////////////////////////////////////////////      for (int j = i + 1; j < list.Count; j++)

//////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////        if (list[j] < list[minIndex])

//////////////////////////////////////////////////////////////        {

//////////////////////////////////////////////////////////////          minIndex = j;

//////////////////////////////////////////////////////////////        }

//////////////////////////////////////////////////////////////      }



//////////////////////////////////////////////////////////////      if (minIndex != i)

//////////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////////        int temp = list[i];

//////////////////////////////////////////////////////////////        list[i] = list[minIndex];

//////////////////////////////////////////////////////////////        list[minIndex] = temp;

//////////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////public static void SelectionSort(List<int> list)
//////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////  for (int index = 0; index < list.Count; index++)
//////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////    int min = index;
//////////////////////////////////////////////////////////////    for (int current = index + 1; current < list.Count; current++)
//////////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////////      if (list[current] < list[min])
//////////////////////////////////////////////////////////////      {
//////////////////////////////////////////////////////////////        min = current;
//////////////////////////////////////////////////////////////      }
//////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////    Swap(list, index, min);
//////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////private static void Swap(List<int> list, int index, int min)

//////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////  int temp = list[index];

//////////////////////////////////////////////////////////////  list[index] = list[min];

//////////////////////////////////////////////////////////////  list[min] = temp;

//////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////Въпрос 8
//////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////Имате даден следния програмен фрагмент:



//////////////////////////////////////////////////////////////Този фрагмент е част от имплементацията на линейната структура от данни стек - премахване на елемент от стек. В кода има грешка! Вашата задача е да откриете грешката, да обясните каква е тя и по какъв начин ще я поправите!

//////////////////////////////////////////////////////////////public T Pop(int index)
//////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////  if (this.Count == 0)

//////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////    throw new InvalidOperationException("Empty stack");

//////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////  this.Count--;

//////////////////////////////////////////////////////////////  T element = this.items[index];

//////////////////////////////////////////////////////////////  T[] temp = new T[this.items.Length];

//////////////////////////////////////////////////////////////  for (int i = 0; i < this.Count; i++)

//////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////    temp[i] = this.items[i];

//////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////  temp[this.Count] = default(T);

//////////////////////////////////////////////////////////////  this.items = temp;

//////////////////////////////////////////////////////////////  return element;

//////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////Грешката в кода е, че при премахването на елемент от масива, стойността на последния елемент не се изтрива. Това води до запазване на последния елемент в масива, който не бива да е там.

//////////////////////////////////////////////////////////////За да поправим грешката, трябва да присвоим на последния елемент на масива стойност null или default(T), където T е типа на елементите в стека. Така ще се гарантира, че последният елемент няма да се запази в масива при премахването му.




//////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////Грешката в кода е, че методът Pop(int index) получава цяло число, което вътре в метода се използва за намиране на елемента в масива и премахването на този елемент. По дефиниция линейната структура стек не работи така. Правилото за работа със стек е "първи влиза - първи излиза". Нямаме право да достъпваме елементите по индекс, освен само и единствено за четене. Когато правим имплементацията за премахване на елемент от стек винаги премахваме последния елемент - в случая трябва да използваме броя на елементите (Count) на мястото на параметъра Index, за да премахнем последния елемент от масива в класа. И самия метод Pop() не трябва да приема параметър.

//////////////////////////////////////////////////////////////Въпрос 9
//////////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////////4,00 от максимално 4,00 точки
//////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////Имате изброени методи за структура от данни, която има поведение от тип „първи влязъл, първи излязъл“. Свържете правилно всеки метод с неговото действие.

//////////////////////////////////////////////////////////////Dequeue()

//////////////////////////////////////////////////////////////Отговор 1
//////////////////////////////////////////////////////////////премахва и връща елемента от началото

//////////////////////////////////////////////////////////////Enqueue

//////////////////////////////////////////////////////////////Отговор 2
//////////////////////////////////////////////////////////////добавя елемент в края на опашката

//////////////////////////////////////////////////////////////Peek()

//////////////////////////////////////////////////////////////Отговор 3
//////////////////////////////////////////////////////////////връща елемента от началото без да го изтрива

//////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////////Правилният отговор е: Dequeue() → премахва и връща елемента от началото, Enqueue → добавя елемент в края на опашката, Peek() → връща елемента от началото без да го изтрива
//////////////////////////////////////////////////////////////Въпрос 10
//////////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////Посочете кое от следните твърдения се отнася за опашка?
//////////////////////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////////////////////a. рекурсивна структура от данни която се състои от точки (върхове или nodes), а линиите посредством които са свързани наричаме ребра.
//////////////////////////////////////////////////////////////b. структура от данни, която има поведение от тип „първи влязъл, първи излиза“ 
//////////////////////////////////////////////////////////////c. структура от данни, която е масив по своята същност, но за разлика от обикновеният масив може да променя размера си
//////////////////////////////////////////////////////////////d. структура от данни, която има поведение от тип„последен влязъл, първи излиза“
//////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////Правилният отговор е: структура от данни, която има поведение от тип „първи влязъл, първи излиза“
//////////////////////////////////////////////////////////////Въпрос 11
//////////////////////////////////////////////////////////////Неправилно
//////////////////////////////////////////////////////////////0,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////Опишете какво прави методът Pop()?
//////////////////////////////////////////////////////////////Отговор: 
//////////////////////////////////////////////////////////////Проверява дали стекът е празен. Ако е празен, хвърля изключение, като обикновено това е InvalidOperationException с подходящо съобщение. Връща стойността на върха на стека (най-горния елемент). Премахва върха на стека и намалява броя на елементите в стека.
//////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////Правилният отговор е: премахва най-горния елемент в стека
//////////////////////////////////////////////////////////////Въпрос 12
//////////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////Посочете кой от следните примери показва добавяне на елемент към стек в C#, който е създаден по следния начин:

//////////////////////////////////////////////////////////////Stack s = new Stack();


//////////////////////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////////////////////a. s.Pop(454);
//////////////////////////////////////////////////////////////b.s.Insert(320)
//////////////////////////////////////////////////////////////c.s.Push(325);
//////////////////////////////////////////////////////////////d.s.Append(314);
//////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////////Правилният отговор е: s.Push(325);
//////////////////////////////////////////////////////////////Въпрос 13
//////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////От максимално 2,00
//////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////Избройте три операции (методи), които можете да прилагате върху стек.
//////////////////////////////////////////////////////////////Push(): Добавя елемент към върха на стека. Този метод приема елемента като аргумент и го добавя към стека.

//////////////////////////////////////////////////////////////Pop(): Премахва и връща елемента, който е на върха на стека. Този метод няма аргументи и хвърля изключение, ако стекът е празен.

//////////////////////////////////////////////////////////////Peek(): Връща елемента, който е на върха на стека, без да го премахва. Този метод няма аргументи и хвърля изключение, ако стекът е празен.


//////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////Push(T item)

//////////////////////////////////////////////////////////////Pop()

//////////////////////////////////////////////////////////////Peek()

//////////////////////////////////////////////////////////////Въпрос 14
//////////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////Посочете за коя от колекциите в С# е вярно следното твърдение: „Последователно съхранение на елементите и потребителя има пълен контрол върху реда на елементите“?


//////////////////////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////////////////////a. LinkedList
//////////////////////////////////////////////////////////////b. Queue
//////////////////////////////////////////////////////////////c. List 
//////////////////////////////////////////////////////////////d. Stack
//////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////////Правилният отговор е: List
//////////////////////////////////////////////////////////////Въпрос 15
//////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////От максимално 2,00
//////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////Избройте три операции (методи), които можете да прилагате върху опашка.
//////////////////////////////////////////////////////////////Три основни операции (методи), които можете да прилагате върху опашка (queue), са:

//////////////////////////////////////////////////////////////Enqueue(): Добавя елемент към края на опашката. Този метод приема елемента като аргумент и го добавя към опашката.
//////////////////////////////////////////////////////////////Dequeue(): Премахва и връща елемента от началото на опашката. Този метод няма аргументи и хвърля изключение, ако опашката е празна.

//////////////////////////////////////////////////////////////Peek(): Връща елемента от началото на опашката, без да го премахва. Този метод няма аргументи и хвърля изключение, ако опашката е празна.


//////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////Enqueue (T item)

//////////////////////////////////////////////////////////////Dequeue()

//////////////////////////////////////////////////////////////Peek()

//////////////////////////////////////////////////////////////Въпрос 16
//////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////От максимално 2,00
//////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////Дефинирайте понятието сложност на алгоритъм.

//////////////////////////////////////////////////////////////Сложността на алгоритъм представлява количеството на ресурси (време и/или памет), които са необходими за изпълнение на алгоритъма във връзка с размера на входните данни. Сложността може да бъде измерена като времева сложност и като пространствена сложност.

//////////////////////////////////////////////////////////////Времева сложност: Определя колко операции са необходими за изпълнение на алгоритъма като функция от размера на входните данни (обикновено означавано с 'n'). Тя показва как изпълнението на алгоритъма се забавя с увеличаване на размера на входните данни.

//////////////////////////////////////////////////////////////Пространствена сложност: Оценява количеството на памет, което алгоритъм използва като функция от размера на входните данни (също 'n'). Тя показва колко памет се нуждае алгоритъмът от, за да се изпълни успешно, в зависимост от размера на входните данни.

//////////////////////////////////////////////////////////////Сложността на алгоритъма се анализира обикновено чрез "О-нотация" (О-notation), която определя горна граница на времевата или пространствената сложност в най-лошия случай. Например, алгоритъм с времева сложност O(n^2) означава, че времето за изпълнение на алгоритъма ще расте квадратично спрямо увеличаването на размера на входните данни.


//////////////////////////////////////////////////////////////Въпрос 17
//////////////////////////////////////////////////////////////Отчасти верен
//////////////////////////////////////////////////////////////1,33 от максимално 2,00 точки
//////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////Посочете вярното твърдение за държавната списъчна структура в .NET - Stack<T>



//////////////////////////////////////////////////////////////Използва динамична реализация 
//////////////////////////////////////////////////////////////ДА
////////////////////////////////////////////////////////////// .

//////////////////////////////////////////////////////////////Абстрактната структура, която изпълнява условието "първият влязъл първи излиза". 
//////////////////////////////////////////////////////////////НЕ


//////////////////////////////////////////////////////////////Използва статичната реализация 
//////////////////////////////////////////////////////////////НЕ
////////////////////////////////////////////////////////////// .

//////////////////////////////////////////////////////////////Абстрактна структура, която изпълнява  условието "последен влязъл – пръв излязъл" 
//////////////////////////////////////////////////////////////ДА


//////////////////////////////////////////////////////////////Можем да добавяме елементи най-отгоре и да извличаме последния добавен елемент. 
//////////////////////////////////////////////////////////////ДА


//////////////////////////////////////////////////////////////Добавените елементи се нареждат в края, а при извличане поредният елемент се взима от началото. 
//////////////////////////////////////////////////////////////НЕ





//////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////////Your answer is partially correct.
//////////////////////////////////////////////////////////////Вие правилно сте избрали 4.
//////////////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////////////Посочете вярното твърдение за държавната списъчна структура в .NET - Stack<T>



//////////////////////////////////////////////////////////////Използва динамична реализация [НЕ].

//////////////////////////////////////////////////////////////Абстрактната структура, която изпълнява условието "първият влязъл първи излиза". [НЕ]

//////////////////////////////////////////////////////////////Използва статичната реализация [ДА].

//////////////////////////////////////////////////////////////Абстрактна структура, която изпълнява  условието "последен влязъл – пръв излязъл" [ДА]

//////////////////////////////////////////////////////////////Можем да добавяме елементи най-отгоре и да извличаме последния добавен елемент. [ДА]

//////////////////////////////////////////////////////////////Добавените елементи се нареждат в края, а при извличане поредният елемент се взима от началото. [НЕ]




//////////////////////////////////////////////////////////////Въпрос 18
//////////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////////От максимално 6,00
//////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////////Даден е следния програмен фрагмент:

////////////////////////////////////////////////////////////// class CustomStack<T>
//////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////  private class Node<T>
//////////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////////    public T Value { get; set; }
//////////////////////////////////////////////////////////////    public Node<T> PrevNode { get; private set; }

//////////////////////////////////////////////////////////////    public Node(T value, Node<T> prev = null)
//////////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////////      this.Value = value;
//////////////////////////////////////////////////////////////      this.PrevNode = prev;
//////////////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////  private Node<T> firstNode;
//////////////////////////////////////////////////////////////  public int Count { get; private set; }

//////////////////////////////////////////////////////////////  public void Push(T element)
//////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////////Допишете метода Push(T element) който трябва да добави елемент в стека. Обърнете внимание на това каква имплементация на списъчната структура е използвана!




















//////////////////////////////////////////////////////////////class CustomStack<T>

//////////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////////  private class Node<T>

//////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////    public T Value { get; set; }

//////////////////////////////////////////////////////////////    public Node<T> PrevNode { get; private set; }



//////////////////////////////////////////////////////////////    public Node(T value, Node<T> prev = null)

//////////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////////      this.Value = value;

//////////////////////////////////////////////////////////////      this.PrevNode = prev;

//////////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////////////  private Node<T> firstNode;

//////////////////////////////////////////////////////////////  public int Count { get; private set; }



//////////////////////////////////////////////////////////////  public void Push(T element)

//////////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////////    Node<T> newNode = new Node<T>(element, firstNode);

//////////////////////////////////////////////////////////////    firstNode = newNode;

//////////////////////////////////////////////////////////////    Count++;

//////////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////////Забележка

////////////////////////////////////////////////////////////// public void Push(T element)
//////////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////////  this.firstNode = new Node<T>(element, this.firstNode);
//////////////////////////////////////////////////////////////  this.Count++;
//////////////////////////////////////////////////////////////}
//////////////////////////////////////////////////////////////Край на прегледа
//////////////////////////////////////////////////////////////Отиди на ...
//////////////////////////////////////////////////////////////Отиди на ...
//////////////////////////////////////////////////////////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
//////////////////////////////////////////////////////////////Навигация в теста
//////////////////////////////////////////////////////////////Край на прегледа
//////////////////////////////////////////////////////////////Вие сте влезли в системата като Добри Илев (Изход)
//////////////////////////////////////////////////////////////тренировъчен - курс - по
//////////////////////////////////////////////////////////////Data retention summary

////////////////////////////////////////////////////////////Прескочи на основното съдържание
////////////////////////////////////////////////////////////ПГЕЕ
////////////////////////////////////////////////////////////Български ‎(bg)‎ 
////////////////////////////////////////////////////////////Добри Илев 
////////////////////////////////////////////////////////////Тренировъчен курс - Програмно осигуряване
////////////////////////////////////////////////////////////Начална страница
////////////////////////////////////////////////////////////Моите курсове
//////////////////////////////////////////////////////////// тренировъчен-курс-по
//////////////////////////////////////////////////////////// Изпитна тема 6
//////////////////////////////////////////////////////////// Тест към Изпитна тема №6
////////////////////////////////////////////////////////////Започнат на	събота, 8 април 2023, 21:24
////////////////////////////////////////////////////////////Състояние Завършен
////////////////////////////////////////////////////////////Приключен на	събота, 8 април 2023, 21:54
////////////////////////////////////////////////////////////Изминало време	30 мин. 26 сек.
////////////////////////////////////////////////////////////Оценка	Още не е оценен
////////////////////////////////////////////////////////////Въпрос 1
////////////////////////////////////////////////////////////Неправилно
////////////////////////////////////////////////////////////0,00 от максимално 4,00 точки
////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////Обяснете какво прави методът Enqueue(T)?
////////////////////////////////////////////////////////////Отговор: 
////////////////////////////////////////////////////////////добавя елемент в края на опашката.
////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////Правилният отговор е: добавя елемент в края на опашката
////////////////////////////////////////////////////////////Въпрос 2
////////////////////////////////////////////////////////////Неправилно
////////////////////////////////////////////////////////////0,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////Опишете какво прави методът Peek()?
////////////////////////////////////////////////////////////Отговор: 
////////////////////////////////////////////////////////////връща елемент в предната част на опашката, без да го премахва от опашката.
////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////връща най-горния елемент в стека, без да го премахва.

////////////////////////////////////////////////////////////Правилният отговор е: връща най-горния елемент в стека, без да го премахва
////////////////////////////////////////////////////////////Въпрос 3
////////////////////////////////////////////////////////////Неправилно
////////////////////////////////////////////////////////////0,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////Опишете какво прави методът Push()?
////////////////////////////////////////////////////////////Отговор: 
////////////////////////////////////////////////////////////метода добавя елемент в/у стека.Този елемент отива най-отгоре на стека и ще е първия,, който ще излезе.
////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////Правилният отговор е: Добавя елемент най-горе в стека
////////////////////////////////////////////////////////////Въпрос 4
////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////Разработвате ново приложение за оптимизиране на процесите в работата на призводствено предприятие. Трябва да приложите структура от данни, която да работи като „буфер“ срещу надхвърляне на капацитета. Когато сме в рамките на призводствения капацитет, артикулите в буфера трябва да се обработят в реда, в който се добавят. Обяснете коя структура от данни трябва да използвате защо бихте използвали точно нея, за да приложите такъв буфер?


////////////////////////////////////////////////////////////using System;

////////////////////////////////////////////////////////////using System.Collections.Generic;



////////////////////////////////////////////////////////////class Program

////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////  static void Main(string[] args)

////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////    Queue<int> myQueue = new Queue<int>();



////////////////////////////////////////////////////////////    myQueue.Enqueue(1);

////////////////////////////////////////////////////////////    myQueue.Enqueue(2);

////////////////////////////////////////////////////////////    myQueue.Enqueue(3);



////////////////////////////////////////////////////////////    Console.WriteLine("The queue contains the following elements:");

////////////////////////////////////////////////////////////    while (myQueue.Count > 0)

////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////      int item = myQueue.Dequeue();

////////////////////////////////////////////////////////////      Console.WriteLine(item);

////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////В опашката, артикулите се обработват в реда, в който са добавени. В частност, артикулите се добавят в края на опашката и се премахват от началото. Това е общоизвестно като first-in, first-out (FIFO) обработване.

////////////////////////////////////////////////////////////Въпрос 5
////////////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////Посочете кои са по-важните свойства на алгоритмите?
////////////////////////////////////////////////////////////Изберете едно
////////////////////////////////////////////////////////////a. сложност
////////////////////////////////////////////////////////////b. определеност
////////////////////////////////////////////////////////////c. масовост
////////////////////////////////////////////////////////////d. всичко изброено 
////////////////////////////////////////////////////////////e. дискретност
////////////////////////////////////////////////////////////f. крайност
////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////Правилният отговор е: всичко изброено
////////////////////////////////////////////////////////////Въпрос 6
////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////От максимално 6,00
////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////Изчислете максималния брой стъпки за намиране на сбора от четните елементи в масив. Като предполагаме, че една стъпка е една инструкция на CPU, а именно: подредби, търсения на елемент в масив, сравнения, аритметични операции.

////////////////////////////////////////////////////////////int GetSumEven(int[] array)
////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////  int sum = 0;
////////////////////////////////////////////////////////////  for (int i = 0; i < array.Length; i++)
////////////////////////////////////////////////////////////    if (array[i] % 2 == 0)
////////////////////////////////////////////////////////////      sum += array[i];
////////////////////////////////////////////////////////////  return sum;
////////////////////////////////////////////////////////////}


////////////////////////////////////////////////////////////T(n) = (отговор);
////////////////////////////////////////////////////////////4n + 3
////////////////////////////////////////////////////////////Въпрос 7
////////////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////////////6,00 от максимално 6,00 точки
////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////Имате даден следния код:

////////////////////////////////////////////////////////////List<int> list = Console.ReadLine()
////////////////////////////////////////////////////////////                .Split()
////////////////////////////////////////////////////////////                .Select(int.Parse)
////////////////////////////////////////////////////////////                .ToList();

////////////////////////////////////////////////////////////int currVal = list[0];
////////////////////////////////////////////////////////////int currCount = 1;
////////////////////////////////////////////////////////////int maxCount = 1;
////////////////////////////////////////////////////////////int maxValue = currVal;

////////////////////////////////////////////////////////////for (int i = 1; i < list.Count; i++)
////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////  if (currVal == list[i])
////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////    currCount++;
////////////////////////////////////////////////////////////    if (currCount > maxCount)
////////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////////      maxCount = currCount;
////////////////////////////////////////////////////////////      maxValue = currVal;
////////////////////////////////////////////////////////////    }
////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////  else
////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////    currCount = 1;
////////////////////////////////////////////////////////////    currVal = list[i];
////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////Console.WriteLine($"{maxValue} -> {maxCount}");

////////////////////////////////////////////////////////////Свържете към намирането на коя от следните подредици съответства: 
////////////////////////////////////////////////////////////най - дълга подредица от равни числа


////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////////////////Имате даден следния код:

////////////////////////////////////////////////////////////List<int> list = Console.ReadLine()
////////////////////////////////////////////////////////////                .Split()
////////////////////////////////////////////////////////////                .Select(int.Parse)
////////////////////////////////////////////////////////////                .ToList();

////////////////////////////////////////////////////////////int currVal = list[0];
////////////////////////////////////////////////////////////int currCount = 1;
////////////////////////////////////////////////////////////int maxCount = 1;
////////////////////////////////////////////////////////////int maxValue = currVal;

////////////////////////////////////////////////////////////for (int i = 1; i < list.Count; i++)
////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////  if (currVal == list[i])
////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////    currCount++;
////////////////////////////////////////////////////////////    if (currCount > maxCount)
////////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////////      maxCount = currCount;
////////////////////////////////////////////////////////////      maxValue = currVal;
////////////////////////////////////////////////////////////    }
////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////  else
////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////    currCount = 1;
////////////////////////////////////////////////////////////    currVal = list[i];
////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////Console.WriteLine($"{maxValue} -> {maxCount}");

////////////////////////////////////////////////////////////Свържете към намирането на коя от следните подредици съответства: [най‑дълга подредица от равни числа]

////////////////////////////////////////////////////////////Въпрос 8
////////////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////Имате структура от данни, която има поведение от тип „последен влязъл, първи излиза“. Посочете правилно действието на всеки от методите:

////////////////////////////////////////////////////////////Peek()

////////////////////////////////////////////////////////////Отговор 1
////////////////////////////////////////////////////////////връща най-горният елемент в стека, без да го премахва

////////////////////////////////////////////////////////////Pop()

////////////////////////////////////////////////////////////Отговор 2
////////////////////////////////////////////////////////////премахва най-горният елемент в стека

////////////////////////////////////////////////////////////Push()

////////////////////////////////////////////////////////////Отговор 3
////////////////////////////////////////////////////////////добавя елемент най-горе в стека

////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////////////////Правилният отговор е: Peek() → връща най-горният елемент в стека, без да го премахва, Pop() → премахва най-горният елемент в стека, Push() → добавя елемент най-горе в стека
////////////////////////////////////////////////////////////Въпрос 9
////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////Разработвате приложение, което оптимизира обработката на складови операции. Когато стоката пристигне, тя се разполага на стелажи. За да се намали времето за обработка на определен продукт, продуктите, които са доставени последни се обработват първи. Трябва да представите тези продукти в подходяща структура от данни. Каква списъчна структура от данни трябва да използвате в тази ситуация и обяснете защо?

////////////////////////////////////////////////////////////В тази ситуация най-подходящата списъчна структура от данни е стек (stack). Стекът работи по принципа "последен влязъл, първи излиза" (LIFO - Last In, First Out), което означава, че последният елемент, който е добавен в стека, се извлича първи.

////////////////////////////////////////////////////////////Това е идеално за вашата задача, тъй като искате да обработите продуктите, които са доставени последни, преди всички останали. Когато добавите нов продукт в стека, той ще бъде най-горе в структурата и при извикване на метода Pop(), той ще бъде извлечен и обработен първи, преди всички останали продукти. Това позволява да се намали времето за обработка на определен продукт, като се спазва принципа LIFO.

////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////В тази ситуация трябва да използваме списъчната структура от данни стек, защото поведението на елементите е от типа "първи влязъл - първи излиза". В случая, за да се намали времето за обработка на определен продукт, продуктите, които са доставени последни се обработват първи ни дава информацията, за структурата, която трябва да се използва в задачата.

////////////////////////////////////////////////////////////Въпрос 10
////////////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////Посочете вярното за следното твърдение:

////////////////////////////////////////////////////////////Enqueue
////////////////////////////////////////////////////////////  – добавя елемент в края на опашката

////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////////////////Enqueue

////////////////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////////////////Посочете вярното за следното твърдение:
////////////////////////////////////////////////////////////[Enqueue] – добавя елемент в края на опашката

////////////////////////////////////////////////////////////Въпрос 11
////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////От максимално 6,00
////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////Даден е следния програмен фрагмент:

////////////////////////////////////////////////////////////class CustomStack<T>
////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////  public const int INITIAL_CAPACITY = 16;

////////////////////////////////////////////////////////////  private T[] items;
////////////////////////////////////////////////////////////  public int Count { get; set; }

////////////////////////////////////////////////////////////  public CustomStack(int initialCapacity = INITIAL_CAPACITY)
////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////    this.items = new T[initialCapacity];
////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////  public void Push(T element)
////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////  Допишете метода Push(T element) който трябва да добави елемент в стека.Обърнете внимание на това каква имплементация на списъчната структура е използвана!






















////////////////////////////////////////////////////////////class CustomStack<T>
////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////    public const int INITIAL_CAPACITY = 16;

////////////////////////////////////////////////////////////    private T[] items;
////////////////////////////////////////////////////////////    public int Count { get; set; }

////////////////////////////////////////////////////////////    public CustomStack(int initialCapacity = INITIAL_CAPACITY)
////////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////////      this.items = new T[initialCapacity];
////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////    public void Push(T element)
////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////      items[Count++] = element;
////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////    Забележка
////////////////////////////////////////////////////////////  public void Push(T element)
////////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////////      if (this.Count == this.items.Length)
////////////////////////////////////////////////////////////      {
////////////////////////////////////////////////////////////        //this.Grow();
////////////////////////////////////////////////////////////        T[] temp = new T[this.items.Length * 2];
////////////////////////////////////////////////////////////        for (int i = 0; i < this.Count; i++)
////////////////////////////////////////////////////////////        {
////////////////////////////////////////////////////////////          temp[i] = items[i];
////////////////////////////////////////////////////////////        }

////////////////////////////////////////////////////////////        this.items = temp;
////////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////////      this.items[this.Count] = element;
////////////////////////////////////////////////////////////      this.Count++;

////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////    Въпрос 12
////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////Избройте поне четири операции(методи), които можете да прилагате върху списък.
////////////////////////////////////////////////////////////Списъкът в C# предоставя множество методи, които може да използвате за манипулация на данни. Ето четири основни операции (методи), които можете да прилагате върху списък:

////////////////////////////////////////////////////////////Add() - Добавя елемент в края на списъка
////////////////////////////////////////////////////////////Remove() - Премахва първото срещане на определен елемент от списъка.
////////////////////////////////////////////////////////////Insert() - Вмъква елемент на определена позиция в списъка.
////////////////////////////////////////////////////////////Clear() - Изтрива всички елементи от списъка.

////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////Add(T item)

////////////////////////////////////////////////////////////Remove(T item)

////////////////////////////////////////////////////////////RemoveAt(int index)

////////////////////////////////////////////////////////////Sort()

////////////////////////////////////////////////////////////ToArray()

////////////////////////////////////////////////////////////Въпрос 13
////////////////////////////////////////////////////////////Неправилно
////////////////////////////////////////////////////////////0,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////Във Вашето приложение използвате опашна структура от данни, за да обработвате информацията. Трябва да намерите, дали даден елемент съществува в опашката, но все още не искате елемента да бъде обработван.Посочете коя от следващите операции за опашката ще използвате?


////////////////////////////////////////////////////////////Изберете едно
////////////////////////////////////////////////////////////a. dequeue
////////////////////////////////////////////////////////////b.
////////////////////////////////////////////////////////////contains
////////////////////////////////////////////////////////////c.
////////////////////////////////////////////////////////////enqueue
////////////////////////////////////////////////////////////d. peek
////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////Your answer is incorrect.
////////////////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////////////////contains
////////////////////////////////////////////////////////////Въпрос 14
////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////Имате следния фрагмент код:



////////////////////////////////////////////////////////////Каква реализация на списъчна структура от данни представлява този код? Обобщете отговора си и напишете кратко обяснение, защо?

////////////////////////////////////////////////////////////Този код представлява реализация на едносвързан списък (singly linked list) като списъчна структура от данни.

////////////////////////////////////////////////////////////Едносвързаните списъци се състоят от нодове(възли), като всеки нод съдържа елемент(данни) и връзка към следващия нод в списъка.В този случай, Node класът представлява възел в едносвързания списък.



////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////Динамична имплементация на списък.Защото в класа е деклариран друг клас, наречен Node(възел). Този клас ни служи като елемент(обект), който да пази стойността на елемента, който добавяме в списъка(пропъртито Element) и също така съдържа и елемент отново от тип Node, който ще служи като указател към следващия елемент в списъка.По този начин реализираме свързан списък или използваме динамична имплементация, за да създадем наша собствена списъчна структура от данни.

////////////////////////////////////////////////////////////Въпрос 15
////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////От максимално 6,00
////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////Даден е следния програмен фрагмент:

////////////////////////////////////////////////////////////class CustomList
////////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////////      private class Node
////////////////////////////////////////////////////////////      {
////////////////////////////////////////////////////////////        private object element;
////////////////////////////////////////////////////////////        private Node next;
////////////////////////////////////////////////////////////        public Node(object element, Node prevNode)
////////////////////////////////////////////////////////////        {
////////////////////////////////////////////////////////////          this.Element = element;
////////////////////////////////////////////////////////////          prevNode.Next = this;
////////////////////////////////////////////////////////////        }
////////////////////////////////////////////////////////////        public Node(object element)
////////////////////////////////////////////////////////////        {
////////////////////////////////////////////////////////////          this.Element = element;
////////////////////////////////////////////////////////////        }
////////////////////////////////////////////////////////////        public object Element
////////////////////////////////////////////////////////////        {
////////////////////////////////////////////////////////////          get { return this.element; }
////////////////////////////////////////////////////////////          set { this.element = value; }
////////////////////////////////////////////////////////////        }
////////////////////////////////////////////////////////////        public Node Next
////////////////////////////////////////////////////////////        {
////////////////////////////////////////////////////////////          get { return this.next; }
////////////////////////////////////////////////////////////          set { this.next = value; }
////////////////////////////////////////////////////////////        }
////////////////////////////////////////////////////////////      }
////////////////////////////////////////////////////////////      //полета
////////////////////////////////////////////////////////////      //глава(начало) на списъка
////////////////////////////////////////////////////////////      private Node head;
////////////////////////////////////////////////////////////      //опашка(край) на списъка
////////////////////////////////////////////////////////////      private Node tail;
////////////////////////////////////////////////////////////      //броят на елементите в свързания списък
////////////////////////////////////////////////////////////      private int count;
////////////////////////////////////////////////////////////      public int Count
////////////////////////////////////////////////////////////      {
////////////////////////////////////////////////////////////        get { return this.count; }
////////////////////////////////////////////////////////////        private set { this.count = value; }
////////////////////////////////////////////////////////////      }
////////////////////////////////////////////////////////////      public void Add(object element)
////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////////      Допишете метода Add(object element) който трябва да добави елемент в списъка.Обърнете внимание на това каква имплементация на списъчната структура е използвана!




















////////////////////////////////////////////////////////////class CustomList

////////////////////////////////////////////////////////////      {
////////////////////////////////////////////////////////////        private class Node
////////////////////////////////////////////////////////////        {
////////////////////////////////////////////////////////////          private object element;
////////////////////////////////////////////////////////////          private Node next;
////////////////////////////////////////////////////////////          public Node(object element, Node prevNode)
////////////////////////////////////////////////////////////          {
////////////////////////////////////////////////////////////            this.Element = element;
////////////////////////////////////////////////////////////            prevNode.Next = this;
////////////////////////////////////////////////////////////          }
////////////////////////////////////////////////////////////          public Node(object element)
////////////////////////////////////////////////////////////          {
////////////////////////////////////////////////////////////            this.Element = element;
////////////////////////////////////////////////////////////          }
////////////////////////////////////////////////////////////          public object Element
////////////////////////////////////////////////////////////          {
////////////////////////////////////////////////////////////            get { return this.element; }
////////////////////////////////////////////////////////////            set { this.element = value; }
////////////////////////////////////////////////////////////          }
////////////////////////////////////////////////////////////          public Node Next
////////////////////////////////////////////////////////////          {
////////////////////////////////////////////////////////////            get { return this.next; }
////////////////////////////////////////////////////////////            set { this.next = value; }
////////////////////////////////////////////////////////////          }
////////////////////////////////////////////////////////////        }
////////////////////////////////////////////////////////////        //полета
////////////////////////////////////////////////////////////        //глава(начало) на списъка
////////////////////////////////////////////////////////////        private Node head;
////////////////////////////////////////////////////////////        //опашка(край) на списъка
////////////////////////////////////////////////////////////        private Node tail;
////////////////////////////////////////////////////////////        //броят на елементите в свързания списък
////////////////////////////////////////////////////////////        private int count;
////////////////////////////////////////////////////////////        public int Count
////////////////////////////////////////////////////////////        {
////////////////////////////////////////////////////////////          get { return this.count; }
////////////////////////////////////////////////////////////          private set { this.count = value; }
////////////////////////////////////////////////////////////        }

////////////////////////////////////////////////////////////        public void Add(object element)

////////////////////////////////////////////////////////////        {

////////////////////////////////////////////////////////////          Node newNode = new Node(element);



////////////////////////////////////////////////////////////          if (this.head == null)

////////////////////////////////////////////////////////////          {



////////////////////////////////////////////////////////////            this.head = newNode;

////////////////////////////////////////////////////////////            this.tail = newNode;

////////////////////////////////////////////////////////////          }

////////////////////////////////////////////////////////////          else

////////////////////////////////////////////////////////////          {



////////////////////////////////////////////////////////////            this.tail.Next = newNode;

////////////////////////////////////////////////////////////            this.tail = newNode;

////////////////////////////////////////////////////////////          }

////////////////////////////////////////////////////////////          this.Count++;

////////////////////////////////////////////////////////////        }

////////////////////////////////////////////////////////////      }



////////////////////////////////////////////////////////////      Забележка
////////////////////////////////////////////////////////////public void Add(object element)
////////////////////////////////////////////////////////////      {
////////////////////////////////////////////////////////////        //ако броя на елементите ни е 0, т.е. ако няма елементи в списъка 
////////////////////////////////////////////////////////////        if (count == 0)
////////////////////////////////////////////////////////////        {
////////////////////////////////////////////////////////////          //създаваме си един нов нод с елемента, който ни се подава
////////////////////////////////////////////////////////////          Node newNode = new Node(element);
////////////////////////////////////////////////////////////          //в такъв случай и началото и края ще са равни на този нов нод
////////////////////////////////////////////////////////////          head = newNode;
////////////////////////////////////////////////////////////          tail = newNode;
////////////////////////////////////////////////////////////          //и броя на елементите ни се увеличава
////////////////////////////////////////////////////////////          count++;
////////////////////////////////////////////////////////////        }
////////////////////////////////////////////////////////////        //в противен случай, ако вече имаме елементи в нашия списък
////////////////////////////////////////////////////////////        else
////////////////////////////////////////////////////////////        {
////////////////////////////////////////////////////////////          //вече ще ползваме конструктора на класа Node на който подаваме елемента и опашката(предишния нод), или 
////////////////////////////////////////////////////////////          //последния елемент в нашия списък
////////////////////////////////////////////////////////////          Node newNode = new Node(element, tail);
////////////////////////////////////////////////////////////          //казваме на последния елемент, че вече ще бъде равен на този нов нод
////////////////////////////////////////////////////////////          tail = newNode;
////////////////////////////////////////////////////////////          //и увеличаваме броя на елементите в нашия списък
////////////////////////////////////////////////////////////          count++;
////////////////////////////////////////////////////////////        }
////////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////////      Въпрос 16
////////////////////////////////////////////////////////////Не е отговорен
////////////////////////////////////////////////////////////От максимално 40,00
////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////За ваше удобство ще ви бъде предоставен скелет на задачата, който обаче е непълен/неработещ/некоректен.Предоставеният скелет трябва да се приведе в работещ вид.

////////////////////////////////////////////////////////////Имплементация на разтеглив масив ArrayList<T>
////////////////////////////////////////////////////////////Имплементирайте структура от данни ArrayList<T> която съдържа поредица от елементи от шаблонен тип T.Структурата трябва да пази поредица от елементи в масив.Структурата трябва да има капацитет, който расте двойно, когато се препълни, като в началото винаги има 2 елемента.Масивът трябва да поддържа следните операции:

////////////////////////////////////////////////////////////·        int Count à дава броя на елементите в структрата

////////////////////////////////////////////////////////////·        T this[int index] à индексатор, който служи за достъпване на елементите по техния индекс (в интервал 0 … Count-1)

////////////////////////////////////////////////////////////·        void Add(T item) à добавя елемент към поредицата и удвоява капацитета на масива, ако е запълнен

////////////////////////////////////////////////////////////·        void RemoveAt(int index) à премахва елемента по неговия индекс(в интервала 0 … Count-1)

////////////////////////////////////////////////////////////·        Метод Get(int index) – връща елемента на търсената позиция

////////////////////////////////////////////////////////////·        Метод Set(int index) – задава стойност на елемента на подадената позиция

////////////////////////////////////////////////////////////·        Имплементиране на функционалност за обхождане на колекцията с foreach цикъл

////////////////////////////////////////////////////////////class Program

////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////        static void Main(string[] args)

////////////////////////////////////////////////////////////        {

////////////////////////////////////////////////////////////          CustomList<string> list = null;

////////////////////////////////////////////////////////////          list.Add("Pesho");

////////////////////////////////////////////////////////////          list.Add("Gosho");

////////////////////////////////////////////////////////////          list.Add("Tosho");

////////////////////////////////////////////////////////////          Console.WriteLine(list.Length);

////////////////////////////////////////////////////////////          Console.WriteLine(list.Capacity);



////////////////////////////////////////////////////////////          Console.Writeline(list.Get(-2));

////////////////////////////////////////////////////////////          list.Set(2, "Geri");

////////////////////////////////////////////////////////////          Console.WriteLine(list.Get(2));

////////////////////////////////////////////////////////////          list.RemoveAt(-1)




////////////////////////////////////////////////////////////            foreach (var item in list)

////////////////////////////////////////////////////////////          {

////////////////////////////////////////////////////////////            Console.WriteLine(item);

////////////////////////////////////////////////////////////          }

////////////////////////////////////////////////////////////        }





////////////////////////////////////////////////////////////        class CustomList<T>

////////////////////////////////////////////////////////////        {

////////////////////////////////////////////////////////////          private const int INITIAL_CAPACITY = 2;



////////////////////////////////////////////////////////////          private T[] items;

////////////////////////////////////////////////////////////          public int Length { get; set; }

////////////////////////////////////////////////////////////          public int Capacity { get; set; }



////////////////////////////////////////////////////////////          public CustomList()

////////////////////////////////////////////////////////////          {

////////////////////////////////////////////////////////////            this.items = new T[capacity];

////////////////////////////////////////////////////////////            this.Capacity = capacity;

////////////////////////////////////////////////////////////          }



////////////////////////////////////////////////////////////          public T thisint index]

////////////////////////////////////////////////////////////        {

////////////////////////////////////////////////////////////            get

////////////////////////////////////////////////////////////            {

////////////////////////////////////////////////////////////                CheckIndexOutsideBounds(index);



////////////////////////////////////////////////////////////                return this.items[index];

////////////////////////////////////////////////////////////            }



////////////////////////////////////////////////////////////        set

////////////////////////////////////////////////////////////            {

////////////////////////////////////////////////////////////                CheckIndexOutsideBounds(index);

////////////////////////////////////////////////////////////                this.[index] = value;

////////////////////////////////////////////////////////////            }

////////////////////////////////////////////////////////////    }



////////////////////////////////////////////////////////////    public void Add(T element)



////////////////////////////////////////////////////////////            if (this.Length == this.Capacity)

////////////////////////////////////////////////////////////            {

////////////////////////////////////////////////////////////      this.Capacity = 2;

////////////////////////////////////////////////////////////      T[] temp = new T[this.Capacity];

////////////////////////////////////////////////////////////      for (int i = 0; i < items.Length; i++)

////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////        temp[i] = items[i];

////////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////////      temp[this] = element;

////////////////////////////////////////////////////////////      items = temp;

////////////////////////////////////////////////////////////      this.Length++;

////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////            else

////////////////////////////////////////////////////////////            {

////////////////////////////////////////////////////////////      items[this.Length] = element;

////////////////////////////////////////////////////////////      this.Length++;

////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////    }



////////////////////////////////////////////////////////////    public Get(int index)

////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////      CheckIndexOutsideBounds(index);

////////////////////////////////////////////////////////////      return this.items[index];

////////////////////////////////////////////////////////////    }



////////////////////////////////////////////////////////////    public void Set(int index, T element)

////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////      CheckIndexOutsideBounds(index)

////////////////////////////////////////////////////////////            this.items[index] = element;

////////////////////////////////////////////////////////////    }



////////////////////////////////////////////////////////////    public void RemoveAt(int index)

////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////      CheckIndexOutsideBounds(index);



////////////////////////////////////////////////////////////      for (int i = index; i > items.Length - 1; i++)

////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////        items[i] = items[i + 1];

////////////////////////////////////////////////////////////      }



////////////////////////////////////////////////////////////      this.Length;

////////////////////////////////////////////////////////////    }



////////////////////////////////////////////////////////////    private CheckIndexOutsideBounds(int index)

////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////      if (index < 0 || index >= this.Length)

////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////        new IndexOutOfRangeException();

////////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////////    }



////////////////////////////////////////////////////////////    public IEnumerator(T) GetEnumerator()

////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////      foreach (var item in )

////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////        yield return item;

////////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////////    }



////////////////////////////////////////////////////////////    IEnumerator IEnumerable.GetEnumerator()

////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////      return this.GetEnumerator()

////////////////////////////////////////////////////////////        }

////////////////////////////////////////////////////////////  }




////////////////////////////////////////////////////////////  Въпрос 17
////////////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////Разработвате приложение, което използва структурата от данни Stack<T>.Пишете следния код:

////////////////////////////////////////////////////////////Stack<int> processStack = new Stack<int>();

////////////////////////////////////////////////////////////  processStack.Push(50);

////////////////////////////////////////////////////////////processStack.Push(45);

////////////////////////////////////////////////////////////processStack.Pop();

////////////////////////////////////////////////////////////processStack.Push(11);

////////////////////////////////////////////////////////////processStack.Pop();

////////////////////////////////////////////////////////////processStack.Push(7);



////////////////////////////////////////////////////////////Какво ще бъде съдържанието на стека(stack), от горе на долу, след като се изпълнят изразите(инструкциите)?


////////////////////////////////////////////////////////////Изберете едно
////////////////////////////////////////////////////////////a.
////////////////////////////////////////////////////////////7, 45
////////////////////////////////////////////////////////////b. 7, 11, 45
////////////////////////////////////////////////////////////c.
////////////////////////////////////////////////////////////7, 11, 50
////////////////////////////////////////////////////////////d. 7, 50 
////////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////////////////Правилният отговор е: 7, 50
////////////////////////////////////////////////////////////Въпрос 18
////////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////////Дайте пример с C# код, за метод който да сортира  елементите от списъка List<int> list = new List<int>() { 12, 8, 10, 2, 9, 6, 1}; посредством алгоритъма за сортиране  чрез метода на мехурчето.

////////////////////////////////////////////////////////////using System;

////////////////////////////////////////////////////////////using System.Collections.Generic;



////////////////////////////////////////////////////////////class BubbleSortExample

////////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////////  static void Main(string[] args)

////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////    List<int> list = new List<int>() { 12, 8, 10, 2, 9, 6, 1 };

////////////////////////////////////////////////////////////    BubbleSort(list);



////////////////////////////////////////////////////////////    foreach (int num in list)

////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////      Console.Write(num + " ");

////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////////  static void BubbleSort(List<int> list)

////////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////////    int n = list.Count;

////////////////////////////////////////////////////////////    for (int i = 0; i < n - 1; i++)

////////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////////      for (int j = 0; j < n - 1 - i; j++)

////////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////////        if (list[j] > list[j + 1])

////////////////////////////////////////////////////////////        {

////////////////////////////////////////////////////////////          int temp = list[j];

////////////////////////////////////////////////////////////          list[j] = list[j + 1];

////////////////////////////////////////////////////////////          list[j + 1] = temp;

////////////////////////////////////////////////////////////        }

////////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////// public static void BubbleSortWithFor(List<int> list)
////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////  for (int j = 0; j <= list.Count - 2; j++)
////////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////////    for (int i = 0; i <= list.Count - 2; i++)
////////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////////      if (list[i] > list[i + 1])
////////////////////////////////////////////////////////////      {
////////////////////////////////////////////////////////////        Swap(list, i, i + 1);
////////////////////////////////////////////////////////////      }
////////////////////////////////////////////////////////////    }
////////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////////}
////////////////////////////////////////////////////////////private static void Swap(List<int> list, int index, int min)
////////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////////  int temp = list[index];
////////////////////////////////////////////////////////////  list[index] = list[min];
////////////////////////////////////////////////////////////  list[min] = temp;
////////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////////Край на прегледа
////////////////////////////////////////////////////////////Отиди на ...
////////////////////////////////////////////////////////////Отиди на ...
////////////////////////////////////////////////////////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
////////////////////////////////////////////////////////////Навигация в теста
////////////////////////////////////////////////////////////Край на прегледа
////////////////////////////////////////////////////////////Вие сте влезли в системата като Добри Илев (Изход)
////////////////////////////////////////////////////////////тренировъчен - курс - по
////////////////////////////////////////////////////////////Data retention summary



////////////////////////////////////////////////////////////ИЗПИТНА ТЕМА 7

//////////////////////////////////////////////////////////Прескочи на основното съдържание
//////////////////////////////////////////////////////////ПГЕЕ
//////////////////////////////////////////////////////////Български ‎(bg)‎ 
//////////////////////////////////////////////////////////Добри Илев 
//////////////////////////////////////////////////////////Тренировъчен курс - Програмно осигуряване
//////////////////////////////////////////////////////////Начална страница
//////////////////////////////////////////////////////////Моите курсове
////////////////////////////////////////////////////////// тренировъчен-курс-по
////////////////////////////////////////////////////////// Изпитна тема 7
////////////////////////////////////////////////////////// Тест към Изпитна тема №7
//////////////////////////////////////////////////////////Започнат на	сряда, 8 февруари 2023, 17:10
//////////////////////////////////////////////////////////Състояние Завършен
//////////////////////////////////////////////////////////Приключен на	петък, 10 февруари 2023, 18:41
//////////////////////////////////////////////////////////Изминало време	2 дни 1 час
//////////////////////////////////////////////////////////Оценка	Още не е оценен
//////////////////////////////////////////////////////////Въпрос 1
//////////////////////////////////////////////////////////Неправилно
//////////////////////////////////////////////////////////0,00 от максимално 4,00 точки
//////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////Обяснете какво прави методът Dequeue()?
//////////////////////////////////////////////////////////Отговор: 
//////////////////////////////////////////////////////////Метода представлява извличане на елементи само най-отпред.
//////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////Правилният отговор е: премахва и връща елемента от началото на опашката
//////////////////////////////////////////////////////////Въпрос 2
//////////////////////////////////////////////////////////Отчасти верен
//////////////////////////////////////////////////////////1,00 от максимално 4,00 точки
//////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////Имате дадени твърдения. Вие трябва да можете да различавате и сравнявате видовете структури от данни. Срещу всяко едно от тези твърдения трябва да зададете правилната структура от данни за която то се отнася.

//////////////////////////////////////////////////////////За добавяне на елемент в структурата от данни използва операцията Push(T).  blank

//////////////////////////////////////////////////////////Можем да обходим елементите в структура от данни тип опашка с  помощта на for-цикъл.  blank 

//////////////////////////////////////////////////////////За премахване на елемент от структурата от данни използва операцията Dequeue().  blank

//////////////////////////////////////////////////////////За премахване на елемент от структурата от данни използва операцията Pop().  blank

//////////////////////////////////////////////////////////Структура от данни, която има поведението първи влязъл първи излязъл.  blank 

//////////////////////////////////////////////////////////Можем да достъп елемент от структурата от данни стек, като използваме операцията Peek(index) неговия индекс.blank

//////////////////////////////////////////////////////////Структура от данни, която има поведението последен влязъл първи излязъл.blank

//////////////////////////////////////////////////////////За добавяне на елемент в структурата от данни използва операцията Enqueue(T).  blank





//////////////////////////////////////////////////////////Твърдението не е вярноТвърдението не е вярноТвърдението не е вярноТвърдението не е вярноТвърдението не е вярноТвърдението не е вярноТвърдението не е вярноТвърдението не е вярноОпашкаОпашкаОпашкаОпашкаОпашкаОпашкаОпашкаОпашкаСтекСтекСтекСтекСтекСтекСтекСтек
//////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////Your answer is partially correct.
//////////////////////////////////////////////////////////Вие правилно сте избрали 2.
//////////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////////Имате дадени твърдения.Вие трябва да можете да различавате и сравнявате видовете структури от данни. Срещу всяко едно от тези твърдения трябва да зададете правилната структура от данни за която то се отнася.

//////////////////////////////////////////////////////////За добавяне на елемент в структурата от данни използва операцията Push(T). [Стек]

//////////////////////////////////////////////////////////Можем да обходим елементите в структура от данни тип опашка с помощта на for-цикъл. [Твърдението не е вярно]

//////////////////////////////////////////////////////////За премахване на елемент от структурата от данни използва операцията Dequeue(). [Опашка]

//////////////////////////////////////////////////////////За премахване на елемент от структурата от данни използва операцията Pop(). [Стек]

//////////////////////////////////////////////////////////Структура от данни, която има поведението първи влязъл първи излязъл. [Опашка]

//////////////////////////////////////////////////////////Можем да достъп елемент от структурата от данни стек, като използваме операцията Peek(index) неговия индекс. [Твърдението не е вярно]

//////////////////////////////////////////////////////////Структура от данни, която има поведението последен влязъл първи излязъл. [Стек]

//////////////////////////////////////////////////////////За добавяне на елемент в структурата от данни използва операцията Enqueue(T). [Опашка]




//////////////////////////////////////////////////////////Въпрос 3
//////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////Имате даден следният псевдо код на алгоритъм за сортиране. Посочете кой алгоритъм за сортиране е използван:



//////////////////////////////////////////////////////////Това е псевдо код за имплементация на алгоритъм за сортиране чрез
//////////////////////////////////////////////////////////метода на мехурчето



//////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////////Имате даден следният псевдо код на алгоритъм за сортиране.Посочете кой алгоритъм за сортиране е използван:



//////////////////////////////////////////////////////////Това е псевдо код за имплементация на алгоритъм за сортиране чрез[метода на мехурчето]

//////////////////////////////////////////////////////////Въпрос 4
//////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////От максимално 8,00
//////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////Имате даден следния програмен фрагмент:

//////////////////////////////////////////////////////////public T Pop(int index)
//////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////  if (this.Count == 0)
//////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////    throw new InvalidOperationException("Empty stack");
//////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////  T element = this.items[index];
//////////////////////////////////////////////////////////  T[] temp = new T[this.items.Length];
//////////////////////////////////////////////////////////  for (int i = 0; i < this.Count; i++)
//////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////    temp[i] = this.items[i];
//////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////  this.items = temp;
//////////////////////////////////////////////////////////  return element;
//////////////////////////////////////////////////////////}


//////////////////////////////////////////////////////////Този фрагмент е част от имплементацията на линейната структура от данни стек - премахване на елемент от стек. В кода има грешка! Вашата задача е да анализирате този фрагмент от код и да идентифицирате и поправите правилно грешките в написания програмен код, така че да реши поставената задача. Да допълните кода, ако и когато това е необходимо.

//////////////////////////////////////////////////////////В полето за въвеждане записвате:

//////////////////////////////////////////////////////////1.Вашият анализ на грешката и това как може да бъде поправено. 

//////////////////////////////////////////////////////////2. Редактиран и правилно работещ код.

//////////////////////////////////////////////////////////public T Pop(int index)
//////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////  if (this.Count == 0)
//////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////    throw new InvalidOperationException("Empty stack");
//////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////  T element = this.items[index];
//////////////////////////////////////////////////////////  T[] temp = new T[this.items.Length];
//////////////////////////////////////////////////////////  for (int i = 0; i < this.Count; i++)
//////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////    temp[i] = this.items[i];
//////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////  this.items = temp;
//////////////////////////////////////////////////////////  return element;
//////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////Грешката в кода е, че методът Pop(int index) получава цяло число, което вътре в метода се използва за намиране на елемента в масива и премахването на този елемент. По дефиниция линейната структура стек не работи така. Правилото за работа със стек е "първи влиза - първи излиза". Нямаме право да достъпваме елементите по индекс, освен само и единствено за четене. Когато правим имплементацията за премахване на елемент от стек винаги премахваме последния елемент - в случая трябва да използваме броя на елементите (Count) на мястото на параметъра Index, за да премахнем последния елемент от масива в класа. И самия метод Pop() не трябва да приема параметър.//2т

//////////////////////////////////////////////////////////public T Pop()//2т
//////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////  if (this.Count == 0)
//////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////    throw new InvalidOperationException("Empty stack");
//////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////  this.Count--;//2т
//////////////////////////////////////////////////////////  T element = this.items[this.Count];//2т

//////////////////////////////////////////////////////////  T[] temp = new T[this.items.Length];
//////////////////////////////////////////////////////////  for (int i = 0; i < this.Count; i++)
//////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////    temp[i] = this.items[i];
//////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////  this.items = temp;
//////////////////////////////////////////////////////////  return element;
//////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////Въпрос 5
//////////////////////////////////////////////////////////Отчасти верен
//////////////////////////////////////////////////////////1,50 от максимално 4,00 точки
//////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////Имате зададени твърдения за два алгоритъма за търсене - двоично търсене и интерполационно търсене. По зададените твърдения и характеристики трябва да сравните двата алгоритъма и да зададете коя от тях към кой от алгоритмите се отнася:

//////////////////////////////////////////////////////////Стойностите в масива трябва да са сортирани и равномерно разпределени. 
//////////////////////////////////////////////////////////Отнася се и за двата алгоритъма


//////////////////////////////////////////////////////////Работи във времева сложност O(log n). 
//////////////////////////////////////////////////////////Отнася се и за двата алгоритъма


//////////////////////////////////////////////////////////Ако ключът е по-малък от средния елемент, тогава ключът може да лежи само в левия подмасив. 
//////////////////////////////////////////////////////////Интерполационно търсене


//////////////////////////////////////////////////////////Работи във времева сложност O(log(log n)). 
//////////////////////////////////////////////////////////Интерполационно търсене


//////////////////////////////////////////////////////////Ако ключът е по-голям от средния елемент, тогава ключът може да лежи само в десния подмасив. 
//////////////////////////////////////////////////////////Интерполационно търсене


//////////////////////////////////////////////////////////Може да се оцени позицията на стойността на ключа в масива, като се вземат предвид най-малкият и най-големият елемент в масива и дължината на масива. 
//////////////////////////////////////////////////////////Интерполационно търсене


//////////////////////////////////////////////////////////Оценява средната позиция за масива и сравнява този елемент с желания ключ. 
//////////////////////////////////////////////////////////Двоично търсене


//////////////////////////////////////////////////////////Ако ключът съвпада със средния елемент, върнете средното местоположение. 
//////////////////////////////////////////////////////////Отнася се и за двата алгоритъма








//////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////Your answer is partially correct.
//////////////////////////////////////////////////////////Вие правилно сте избрали 3.
//////////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////////Имате зададени твърдения за два алгоритъма за търсене - двоично търсене и интерполационно търсене. По зададените твърдения и характеристики трябва да сравните двата алгоритъма и да зададете коя от тях към кой от алгоритмите се отнася:

//////////////////////////////////////////////////////////Стойностите в масива трябва да са сортирани и равномерно разпределени. [Интерполационно търсене]

//////////////////////////////////////////////////////////Работи във времева сложност O(log n). [Двоично търсене]

//////////////////////////////////////////////////////////Ако ключът е по-малък от средния елемент, тогава ключът може да лежи само в левия подмасив. [Отнася се и за двата алгоритъма]

//////////////////////////////////////////////////////////Работи във времева сложност O(log(log n)). [Интерполационно търсене]

//////////////////////////////////////////////////////////Ако ключът е по-голям от средния елемент, тогава ключът може да лежи само в десния подмасив. [Отнася се и за двата алгоритъма]

//////////////////////////////////////////////////////////Може да се оцени позицията на стойността на ключа в масива, като се вземат предвид най-малкият и най-големият елемент в масива и дължината на масива. [Интерполационно търсене]

//////////////////////////////////////////////////////////Оценява средната позиция за масива и сравнява този елемент с желания ключ. [Интерполационно търсене]

//////////////////////////////////////////////////////////Ако ключът съвпада със средния елемент, върнете средното местоположение. [Отнася се и за двата алгоритъма]







//////////////////////////////////////////////////////////Въпрос 6
//////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////От максимално 8,00
//////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////Запазете историята на браузъра. Ще получите възможни команди:
//////////////////////////////////////////////////////////URL – отваря дадената страница
//////////////////////////////////////////////////////////back – връща към предната страница
//////////////////////////////////////////////////////////exit – спира програмата
//////////////////////////////////////////////////////////Примерен вход:

//////////////////////////////////////////////////////////www.softuni.bg
//////////////////////////////////////////////////////////www.judge.softuni.bg
//////////////////////////////////////////////////////////www.kids.softuni.bg
//////////////////////////////////////////////////////////back
//////////////////////////////////////////////////////////back
//////////////////////////////////////////////////////////exit

//////////////////////////////////////////////////////////Изход:
//////////////////////////////////////////////////////////www.judge.softuni.bg
//////////////////////////////////////////////////////////www.softuni.bg

//////////////////////////////////////////////////////////Имате следният програмен фрагмент.
//////////////////////////////////////////////////////////В кода има грешка и не работи правилно.
//////////////////////////////////////////////////////////static void Main(string[] args)
//////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////  List<string> pages = new List<string>();
//////////////////////////////////////////////////////////  string command = Console.ReadLine();
//////////////////////////////////////////////////////////  string previous = null;
//////////////////////////////////////////////////////////  while (!"exit".Equals(command))
//////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////    if (command.Equals("back"))
//////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////      if (pages.Count != 0)
//////////////////////////////////////////////////////////      {
//////////////////////////////////////////////////////////        Console.WriteLine(pages.Remove);
//////////////////////////////////////////////////////////      }
//////////////////////////////////////////////////////////      previous = null;
//////////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////////    else
//////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////      if (previous != null)
//////////////////////////////////////////////////////////      {
//////////////////////////////////////////////////////////        pages.Add(command);
//////////////////////////////////////////////////////////      }
//////////////////////////////////////////////////////////      previous = command;
//////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////    command = Console.ReadLine();

//////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////Вашата задача е да анализирате този фрагмент от код и да идентифицирате и поправите правилно грешките в написания програмен код, така че да реши поставената задача. Да допълните кода, ако и когато това е необходимо.

//////////////////////////////////////////////////////////В полето за въвеждане записвате:

//////////////////////////////////////////////////////////1.Вашият анализ на грешката и това как може да бъде поправено. 

//////////////////////////////////////////////////////////2. Редактиран и правилно работещ код.


//////////////////////////////////////////////////////////Грешката в кода се намира в реда:

//////////////////////////////////////////////////////////Console.WriteLine(pages.Remove);
//////////////////////////////////////////////////////////pages.Remove е метод, който премахва последния елемент в списъка и връща неговата стойност. Това не трябва да се изписва на конзолата. За да се изписа стойността на предишната страница, трябва да се използва предишно зададената променлива previous.

//////////////////////////////////////////////////////////Поправеният код вижда се по-долу:
//////////////////////////////////////////////////////////static void Main(string[] args) { List<string> pages = new List<string>(); string command = Console.ReadLine(); string previous = null; while (!"exit".Equals(command)) { if (command.Equals("back")) { if (pages.Count != 0) { previous = pages[pages.Count - 1]; pages.RemoveAt(pages.Count - 1); Console.WriteLine(previous); } else { Console.WriteLine("No previous pages"); } } else { if (previous != null) { pages.Add(previous); } previous = command; Console.WriteLine(command); } command = Console.ReadLine(); } }

//////////////////////////////////////////////////////////Въпрос 7
//////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////Имате следния програмен фрагмент:



//////////////////////////////////////////////////////////Каква ще бъде сложността на алгоритъма и обяснете защо?

//////////////////////////////////////////////////////////Сложността на този алгоритъм е O(n * m), т.е.пропорционално на умножението на n и m. Това е защото за всеки елемент от x вътрешния цикъл за y се изпълнява m пъти, а външния цикъл за x се изпълнява n пъти, така че в сумата ще се добавя n * m пъти умножение на x и y.

//////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////Ако имаме два вложени цикъла съответно от 1 до N и от 1 до M, сложността им е квадратична – O(N*М)

//////////////////////////////////////////////////////////Въпрос 8
//////////////////////////////////////////////////////////Не е отговорен
//////////////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////Ако имате следната последователност от числа: "12, 14, 24, 28, 29, 32, 36, 40, 41" и трябва да напишете алгоритъм, който да намери елемент от този списък, например числото 36. 

//////////////////////////////////////////////////////////Като използвате алгоритъма за двоично търсене обяснете последователността от стъпки, които трябва да се изпълнят за да намерите търсеното число. 

//////////////////////////////////////////////////////////А какво ще се случи, ако търсеното число не е в списъка?



//////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////Алгоритъма за двоично търсене работи само и единствено със сортирани елементи, като разделя масива на две части. Ако търсеното число съвпада със средния елемент, тогава алгоритъма връща индекса на средния елемент. 

//////////////////////////////////////////////////////////Ако търсеното число е по-голямо от средния елемент, тогава  търсеното число стои в дясната половина на масива. Тогава разделяме дясната половина отново на две части и сравняваме със средния елемент. 

//////////////////////////////////////////////////////////Ако търсеното число е по-малко от средния елемент тогава търсим в лявата половина на масива, като отново я разделяме на две части и сравняваме със средния елемент.

//////////////////////////////////////////////////////////Алгоритъмът се повтаря докато открием търсения елемент.

//////////////////////////////////////////////////////////Ако x не съвпада с нито един от елементите, връщаме -1.

//////////////////////////////////////////////////////////Въпрос 9
//////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////От максимално 8,00
//////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////Даден е аритметичен израз със скоби (може и вложени).
//////////////////////////////////////////////////////////Цел: извличане на всички под-изрази в скоби
//////////////////////////////////////////////////////////Примерен вход: 
//////////////////////////////////////////////////////////1 + (2 - (2 + 3) * 4 / (3 + 1)) * 5

//////////////////////////////////////////////////////////Изход:

//////////////////////////////////////////////////////////(2 + 3)

//////////////////////////////////////////////////////////(3 + 1)

//////////////////////////////////////////////////////////(2 - (2 + 3) * 4 / (3 + 1))

//////////////////////////////////////////////////////////Имате следният програмен фрагмент. 
//////////////////////////////////////////////////////////В кода има грешка и не работи правилно.
//////////////////////////////////////////////////////////static void Main(string[] args)
//////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////  Queue<int> indexes = new Queue<int>();
//////////////////////////////////////////////////////////  string expression = Console.ReadLine();
//////////////////////////////////////////////////////////  for (int i = 0; i < expression.Length; i++)
//////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////    if (expression[i] == '(')
//////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////      indexes.Enqueue(i);
//////////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////////    else if (expression[i] == ')')
//////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////      int startIndex = indexes.Dequeue();
//////////////////////////////////////////////////////////      int length = i - startIndex + 1;
//////////////////////////////////////////////////////////      string substr = expression.Substring(startIndex, length);
//////////////////////////////////////////////////////////      Console.WriteLine(substr);
//////////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////Вашата задача е да анализирате този фрагмент от код и да идентифицирате и поправите правилно грешките в написания програмен код, така че да реши поставената задача. Да допълните кода, ако и когато това е необходимо.

//////////////////////////////////////////////////////////В полето за въвеждане записвате:

//////////////////////////////////////////////////////////1.Вашият анализ на грешката и това как може да бъде поправено. 

//////////////////////////////////////////////////////////2. Редактиран и правилно работещ код.


//////////////////////////////////////////////////////////Анализ на грешката:
//////////////////////////////////////////////////////////Кодът не връща всички вложени под-изрази в скобите. Той само връща последното вложено в скоби под-израз.

//////////////////////////////////////////////////////////Редактиран и правилно работещ код:
//////////////////////////////////////////////////////////static void Main(string[] args) { Stack<int> startIndexes = new Stack<int>(); List<string> subexpressions = new List<string>(); string expression = Console.ReadLine(); for (int i = 0; i < expression.Length; i++) { if (expression[i] == '(') { startIndexes.Push(i); } else if (expression[i] == ')') { int startIndex = startIndexes.Pop(); int length = i - startIndex + 1; string substr = expression.Substring(startIndex, length); subexpressions.Add(substr); } } foreach (var subexpression in subexpressions) { Console.WriteLine(subexpression); } }

//////////////////////////////////////////////////////////Въпрос 10
//////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////Посочете вярното за следното твърдение:

//////////////////////////////////////////////////////////Enqueue
//////////////////////////////////////////////////////////  – добавя елемент в края на опашката

//////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////Enqueue

//////////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////////Посочете вярното за следното твърдение:
//////////////////////////////////////////////////////////[Enqueue] – добавя елемент в края на опашката

//////////////////////////////////////////////////////////Въпрос 11
//////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////Текст на въпроса


//////////////////////////////////////////////////////////На картинката е показана илюстрация на един от видовете алгоритми за сортиране. Посочете кой е той:

//////////////////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////////////////a. Сортиране чрез метода на мехурчето (Bubble sort)
//////////////////////////////////////////////////////////b.Сортиране чрез кофи (Bucket sort)
//////////////////////////////////////////////////////////c.Сортиране чрез сливане (Merge sort) 
//////////////////////////////////////////////////////////d.Сортиране чрез броене (Counting sort)
//////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////Правилният отговор е: Сортиране чрез сливане (Merge sort)
//////////////////////////////////////////////////////////Въпрос 12
//////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////От максимално 8,00
//////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////Имате следният програмен фрагмент, който трябва да сортира елементите в подаден списък. В кода има грешка и не работи правилно. 
//////////////////////////////////////////////////////////При примерен вход: 36 15 1 7 20 8 24

//////////////////////////////////////////////////////////Програмата извежда като резултат следното: 1 1 1 7 8 8 24

//////////////////////////////////////////////////////////А трябва да изведе сортираните елементи: 1 7 8 15 20 24 36

//////////////////////////////////////////////////////////var list = Console.ReadLine().Split().Select(int.Parse).ToList();
//////////////////////////////////////////////////////////for (int i = 0; i <= list.Count - 2; i++)
//////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////  for (int i = 0; i <= list.Count - 2; i++)
//////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////    if (list[i] < list[i + 1])
//////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////      list[i] = list[i + 1];
//////////////////////////////////////////////////////////      list[i + 1] = list[i];
//////////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////}
//////////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", list));

//////////////////////////////////////////////////////////Вашата задача е да откриете грешката, да я поправите и да запишете в полето вече правилно работещ код.



//////////////////////////////////////////////////////////Грешката в кода е, че при смяна на местата на два елемента в списъка, в момента на смяна на местата, променливата "i" се презаписва, като резултат върху вече промененото място. Правилният код е:

//////////////////////////////////////////////////////////var list = Console.ReadLine().Split().Select(int.Parse).ToList(); for (int i = 0; i <= list.Count - 2; i++) { for (int j = 0; j <= list.Count - 2; j++) { if (list[j] > list[j + 1]) { int temp = list[j]; list[j] = list[j + 1]; list[j + 1] = temp; } } }
//////////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", list));

//////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////var list = Console.ReadLine().Split().Select(int.Parse).ToList();
//////////////////////////////////////////////////////////for (int j = 0; j <= list.Count - 2; j++)//2т
//////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////  for (int i = 0; i <= list.Count - 2; i++)
//////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////    if (list[i] > list[i + 1])//2т
//////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////      int temp = list[i];//2т
//////////////////////////////////////////////////////////      list[i] = list[i + 1];
//////////////////////////////////////////////////////////      list[i + 1] = temp;//2т
//////////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////}
//////////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", list));



//////////////////////////////////////////////////////////Въпрос 13
//////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////Дадени са следните картинки:




//////////////////////////////////////////////////////////Това е визуализация на един от алгоритмите за сортиране. За този алгоритъм важи следното правило: 
//////////////////////////////////////////////////////////Взима първият елемент на масива (29) и го сравнява със следващия (10). В случая следващия елемент е по-малък и стойностите се разменят. След това сравнява вторият елемент, който вече е (29) със следващия(14) и тъй като 14 < 29 отново ги разменя. Алгоритъма разменя стойностите, само ако има нужда от това. Ако следващия елемент (напр. 37) е по-голям от предходния (29) тогава елементите няма да се разменят и сравняването ще продължи вече с новото по-голямо число (37) и следващият елемент (14). Продължава така, докато не подреди елементите в масива. 
//////////////////////////////////////////////////////////Посочете кой от видовете алгоритми е използван:

//////////////////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////////////////a. Сортиране на елементите чрез пряка селекция.
//////////////////////////////////////////////////////////b. Сортиране на елементите чрез броене.
//////////////////////////////////////////////////////////c. Сортиране на елементите чрез метода на мехурчето. 
//////////////////////////////////////////////////////////d. Сортиране на елементите чрез вмъкване.
//////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////Правилният отговор е: Сортиране на елементите чрез метода на мехурчето.
//////////////////////////////////////////////////////////Въпрос 14
//////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////6,00 от максимално 6,00 точки
//////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////Изчислете какъв ще бъде отговорът на следния пример:

//////////////////////////////////////////////////////////През 2013 ООН има 193 страни членки. Ако имената на тези страни са сортирани по азбучен ред в масив, колко имена трябва да провери двоичното търсене, за да намери конкретно име в масива в най-лошия случай?


//////////////////////////////////////////////////////////Не повече от 8.


//////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////////Изчислете какъв ще бъде отговорът на следния пример:

//////////////////////////////////////////////////////////През 2013 ООН има 193 страни членки. Ако имената на тези страни са сортирани по азбучен ред в масив, колко имена трябва да провери двоичното търсене, за да намери конкретно име в масива в най-лошия случай?

//////////////////////////////////////////////////////////[Не повече от 8.]

//////////////////////////////////////////////////////////Въпрос 15
//////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////Имате следния програмен фрагмент:



//////////////////////////////////////////////////////////Каква ще бъде сложността на алгоритъма и обяснете защо?

//////////////////////////////////////////////////////////Сложността на алгоритъма е O(n^2), т.е.квадратична.Това е поради двойния цикъл в кода, където външния цикъл идва по всички елементи на масива, а вътрешния цикъл проверява всички елементи след i-тия елемент, за да намери несортирани дупки (inversions). Това дава общо n * (n-1) / 2 операции, което е O(n^2).

//////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////Ако имаме два вложени цикъла от 1 до N, сложността им е квадратична – O(N2).

//////////////////////////////////////////////////////////Въпрос 16
//////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////Дефинирайте понятието сложност на алгоритъм, като попълните липсващите думи в текста.

//////////////////////////////////////////////////////////Сложност на алгоритъм е  blank , които алгоритъмът ще направи в зависимост от  blank . Това е груба оценка, която се интересува от  blank , а не от  blank .


//////////////////////////////////////////////////////////точния им бройточния им бройточния им бройточния им бройгруба оценка на броя стъпкигруба оценка на броя стъпкигруба оценка на броя стъпкигруба оценка на броя стъпкиразмера на входните данниразмера на входните данниразмера на входните данниразмера на входните даннипорядъка на броя стъпкипорядъка на броя стъпкипорядъка на броя стъпкипорядъка на броя стъпки
//////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////////Дефинирайте понятието сложност на алгоритъм, като попълните липсващите думи в текста.

//////////////////////////////////////////////////////////Сложност на алгоритъм е [груба оценка на броя стъпки], които алгоритъмът ще направи в зависимост от [размера на входните данни]. Това е груба оценка, която се интересува от [порядъка на броя стъпки], а не от [точния им брой].

//////////////////////////////////////////////////////////Въпрос 17
//////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////От максимално 6,00
//////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////Имате следният програмен фрагмент, който трябва да сортира елементите в подаден списък. В кода има грешка и не работи правилно. 
//////////////////////////////////////////////////////////При примерен вход: 36 15 1 7 20 8 24

//////////////////////////////////////////////////////////Програмата извежда като резултат следното: 1 1 1 7 8 8 24

//////////////////////////////////////////////////////////А трябва да изведе сортираните елементи: 1 7 8 15 20 24 36

//////////////////////////////////////////////////////////var collection = Console.ReadLine().Split().Select(int.Parse).ToList();
//////////////////////////////////////////////////////////for (int index = 0; index < collection.Count; index++)
//////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////  int min = index;
//////////////////////////////////////////////////////////  for (int curr = index + 1; curr < collection.Count; curr++)
//////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////    if (collection[curr] > collection[min])
//////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////      min = curr;
//////////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////  collection[index] = collection[min];
//////////////////////////////////////////////////////////  collection[min] = collection[index];
//////////////////////////////////////////////////////////}
//////////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", collection));

//////////////////////////////////////////////////////////Вашата задача е да откриете грешката, да я поправите и да запишете в полето вече правилно работещ код.



////////////////////////////////////////////////////////// var collection = Console.ReadLine().Split().Select(int.Parse).ToList();

//////////////////////////////////////////////////////////for (int index = 0; index < collection.Count; index++)

//////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////  int min = index;

//////////////////////////////////////////////////////////  for (int curr = index + 1; curr < collection.Count; curr++)

//////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////    if (collection[curr] < collection[min])

//////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////      min = curr;

//////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////  int temp = collection[index];

//////////////////////////////////////////////////////////  collection[index] = collection[min];

//////////////////////////////////////////////////////////  collection[min] = temp;

//////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", collection));

//////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////var collection = Console.ReadLine().Split().Select(int.Parse).ToList();
//////////////////////////////////////////////////////////for (int index = 0; index < collection.Count; index++)
//////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////  int min = index;
//////////////////////////////////////////////////////////  for (int curr = index + 1; curr < collection.Count; curr++)
//////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////    if (collection[curr] < collection[min]) //2т
//////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////      min = curr;
//////////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////  int temp = collection[index]; //2т
//////////////////////////////////////////////////////////  collection[index] = collection[min];
//////////////////////////////////////////////////////////  collection[min] = temp; //2т
//////////////////////////////////////////////////////////}
//////////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", collection));

//////////////////////////////////////////////////////////Въпрос 18
//////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////Дайте пример за това къде можете да срещнете поведението на структурата от данни опашка във вашето ежедневие. И обяснете защо.

//////////////////////////////////////////////////////////Един пример за място, където може да срещнете поведението на структурата от данни "опашка" е в системата за обслужване на клиенти в магазин или банка. В тези случаи, клиентите се поставят в "опашка" за да бъдат обслужени и който е първият в опашката ще бъде обслужен първи.

//////////////////////////////////////////////////////////Това е пример за поведението на структурата от данни "опашка", защото поддържа принципа "First In, First Out" (FIFO), където елементите, които са въведени първи, ще бъдат извадени първи.


//////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////Пример : Например опашка от хора, чакащи на каса за билети. Опашката има начало и край. Новодошлите хора застават последни на опашката и изчакват докато постепенно се придвижат към началото. Когато стигнат до самото начало на опашката си купуват билет и напускат опашката. 

//////////////////////////////////////////////////////////Пример 2: Други примери за опашка са документи, чакащи да бъдат отпечатани.

//////////////////////////////////////////////////////////Пример 3: Ескалатор превозващ хора. По този начин опашката изпълнява функцията на буфер.

//////////////////////////////////////////////////////////Защото: Структурата от данни опашка изпълнява условието „първият влязъл първи излиза“ (FIFO: First - In - First - Out). Това означава, че след като е добавен един елемент в края на опашката, той ще може да бъде извлечен (премахнат) единствено след като бъдат премахнати всички елементи преди него в реда, в който са добавени.



//////////////////////////////////////////////////////////Въпрос 19
//////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////Дайте пример с C# код, за метод който да сортира  елементите от списъка List<int> list = new List<int>() { 12, 8, 10, 2, 9, 6, 1}; посредством алгоритъма за сортиране  чрез метода на мехурчето.

//////////////////////////////////////////////////////////using System;

//////////////////////////////////////////////////////////using System.Collections.Generic;



//////////////////////////////////////////////////////////namespace BubbleSortExample

//////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////  class Program

//////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////    static void Main(string[] args)

//////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////      List<int> list = new List<int>() { 12, 8, 10, 2, 9, 6, 1 };

//////////////////////////////////////////////////////////      Console.WriteLine("Before sorting: " + string.Join(", ", list));

//////////////////////////////////////////////////////////      BubbleSort(list);

//////////////////////////////////////////////////////////      Console.WriteLine("After sorting: " + string.Join(", ", list));

//////////////////////////////////////////////////////////    }



//////////////////////////////////////////////////////////    static void BubbleSort(List<int> list)

//////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////      int n = list.Count;

//////////////////////////////////////////////////////////      for (int i = 0; i < n - 1; i++)

//////////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////////        for (int j = 0; j < n - i - 1; j++)

//////////////////////////////////////////////////////////        {

//////////////////////////////////////////////////////////          if (list[j] > list[j + 1])

//////////////////////////////////////////////////////////          {

//////////////////////////////////////////////////////////            int temp = list[j];

//////////////////////////////////////////////////////////            list[j] = list[j + 1];

//////////////////////////////////////////////////////////            list[j + 1] = temp;

//////////////////////////////////////////////////////////          }

//////////////////////////////////////////////////////////        }

//////////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////}



//////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////// public static void BubbleSortWithFor(List<int> list)
//////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////  for (int j = 0; j <= list.Count - 2; j++)
//////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////    for (int i = 0; i <= list.Count - 2; i++)
//////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////      if (list[i] > list[i + 1])
//////////////////////////////////////////////////////////      {
//////////////////////////////////////////////////////////        Swap(list, i, i + 1);
//////////////////////////////////////////////////////////      }
//////////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////}
//////////////////////////////////////////////////////////private static void Swap(List<int> list, int index, int min)
//////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////  int temp = list[index];
//////////////////////////////////////////////////////////  list[index] = list[min];
//////////////////////////////////////////////////////////  list[min] = temp;
//////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////Въпрос 20
//////////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////Посочете за алгоритми с каква сложност се отнася следното твърдение:

//////////////////////////////////////////////////////////Алгоритми с 
//////////////////////////////////////////////////////////константна, логаритмична и линейна
//////////////////////////////////////////////////////////  сложност са толкова бързи, че не можем да усетим забавяне, дори при относително голям размер на входните данни.

//////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////////Посочете за алгоритми с каква сложност се отнася следното твърдение:

//////////////////////////////////////////////////////////Алгоритми с[константна, логаритмична и линейна] сложност са толкова бързи, че не можем да усетим забавяне, дори при относително голям размер на входните данни.

//////////////////////////////////////////////////////////Въпрос 21
//////////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////////От максимално 8,00
//////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////Имате следният програмен фрагмент, който трябва да сортира елементите в подаден списък. В кода има грешка и не работи правилно. 
//////////////////////////////////////////////////////////При примерен вход: 36 15 1 7 20 8 24

//////////////////////////////////////////////////////////Програмата извежда като резултат следното: 1 1 1 7 8 8 24

//////////////////////////////////////////////////////////А трябва да изведе сортираните елементи: 1 7 8 15 20 24 36

//////////////////////////////////////////////////////////var collection = Console.Readline().Split().Select(int.Parse).ToList();
//////////////////////////////////////////////////////////for (int index = 0; index < collection.Count; index++)
//////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////  int min = index;
//////////////////////////////////////////////////////////  for (int curr = index + 1; curr < collection.Count; curr++)
//////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////    if (collection[curr] > collection[min])
//////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////      min = curr;
//////////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////  collection[index] = collection[min];
//////////////////////////////////////////////////////////  collection[min] = collection[index];
//////////////////////////////////////////////////////////}
//////////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", collection));

//////////////////////////////////////////////////////////Вашата задача е да откриете грешката, да я поправите и да запишете в полето вече правилно работещ код.



//////////////////////////////////////////////////////////var collection = Console.Readline().Split().Select(int.Parse).ToList();

//////////////////////////////////////////////////////////for (int index = 0; index < collection.Count; index++)

//////////////////////////////////////////////////////////{

//////////////////////////////////////////////////////////  int min = index;

//////////////////////////////////////////////////////////  for (int curr = index + 1; curr < collection.Count; curr++)

//////////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////////    if (collection[curr] < collection[min])

//////////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////////      min = curr;

//////////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////////  int temp = collection[index];

//////////////////////////////////////////////////////////  collection[index] = collection[min];

//////////////////////////////////////////////////////////  collection[min] = temp;

//////////////////////////////////////////////////////////}

//////////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", collection));

//////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////var collection = Console.ReadLine().Split().Select(int.Parse).ToList(); //2т
//////////////////////////////////////////////////////////for (int index = 0; index < collection.Count; index++)
//////////////////////////////////////////////////////////{
//////////////////////////////////////////////////////////  int min = index;
//////////////////////////////////////////////////////////  for (int curr = index + 1; curr < collection.Count; curr++)
//////////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////////    if (collection[curr] < collection[min])//2т
//////////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////////      min = curr;
//////////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////////  int temp = collection[index]; //2т
//////////////////////////////////////////////////////////  collection[index] = collection[min];
//////////////////////////////////////////////////////////  collection[min] = temp; //2т
//////////////////////////////////////////////////////////}
//////////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", collection));

//////////////////////////////////////////////////////////Въпрос 22
//////////////////////////////////////////////////////////Отчасти верен
//////////////////////////////////////////////////////////3,56 от максимално 4,00 точки
//////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////////Имате зададени твърдения за два алгоритъма за търсене - двоично търсене и линейно търсене. По зададените твърдения и характеристики трябва да сравните двата алгоритъма и да зададете коя от тях към кой от алгоритмите се отнася:

//////////////////////////////////////////////////////////Стойностите в масива трябва да са сортирани. 
//////////////////////////////////////////////////////////Двоично търсене


//////////////////////////////////////////////////////////Работи във времева сложност O(log n). 
//////////////////////////////////////////////////////////Двоично търсене


//////////////////////////////////////////////////////////Ако ключът е по-малък от средния елемент, тогава ключът може да лежи само в левия подмасив. 
//////////////////////////////////////////////////////////Двоично търсене


//////////////////////////////////////////////////////////Работи във времева сложност O(log(log n)). 
//////////////////////////////////////////////////////////Не се отнася за нито един от двата алгоритъма


//////////////////////////////////////////////////////////Ако ключът е по-голям от средния елемент, тогава ключът може да лежи само в десния подмасив. 
//////////////////////////////////////////////////////////Двоично търсене


//////////////////////////////////////////////////////////Стойностите в масива не е задължително да са сортирани. 
//////////////////////////////////////////////////////////Линейно търсене


//////////////////////////////////////////////////////////Започва винаги от началото на масива. 
//////////////////////////////////////////////////////////Линейно търсене


//////////////////////////////////////////////////////////Ако ключът съвпада със средния елемент, върнете средното местоположение. 
//////////////////////////////////////////////////////////Двоично търсене


//////////////////////////////////////////////////////////Започва търсенето от средата на масива. 
//////////////////////////////////////////////////////////Двоично търсене








//////////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////////Your answer is partially correct.
//////////////////////////////////////////////////////////Вие правилно сте избрали 8.
//////////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////////Имате зададени твърдения за два алгоритъма за търсене - двоично търсене и линейно търсене. По зададените твърдения и характеристики трябва да сравните двата алгоритъма и да зададете коя от тях към кой от алгоритмите се отнася:

//////////////////////////////////////////////////////////Стойностите в масива трябва да са сортирани. [Двоично търсене]

//////////////////////////////////////////////////////////Работи във времева сложност O(log n). [Двоично търсене]

//////////////////////////////////////////////////////////Ако ключът е по-малък от средния елемент, тогава ключът може да лежи само в левия подмасив. [Двоично търсене]

//////////////////////////////////////////////////////////Работи във времева сложност O(log(log n)). [Линейно търсене]

//////////////////////////////////////////////////////////Ако ключът е по-голям от средния елемент, тогава ключът може да лежи само в десния подмасив. [Двоично търсене]

//////////////////////////////////////////////////////////Стойностите в масива не е задължително да са сортирани. [Линейно търсене]

//////////////////////////////////////////////////////////Започва винаги от началото на масива. [Линейно търсене]

//////////////////////////////////////////////////////////Ако ключът съвпада със средния елемент, върнете средното местоположение. [Двоично търсене]

//////////////////////////////////////////////////////////Започва търсенето от средата на масива. [Двоично търсене]







//////////////////////////////////////////////////////////Край на прегледа
//////////////////////////////////////////////////////////Отиди на ...
//////////////////////////////////////////////////////////Отиди на ...
//////////////////////////////////////////////////////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
//////////////////////////////////////////////////////////Навигация в теста
//////////////////////////////////////////////////////////Край на прегледа
//////////////////////////////////////////////////////////Вие сте влезли в системата като Добри Илев (Изход)
//////////////////////////////////////////////////////////тренировъчен - курс - по
//////////////////////////////////////////////////////////Data retention summary

////////////////////////////////////////////////////////Прескочи на основното съдържание
////////////////////////////////////////////////////////ПГЕЕ
////////////////////////////////////////////////////////Български ‎(bg)‎ 
////////////////////////////////////////////////////////Добри Илев 
////////////////////////////////////////////////////////Тренировъчен курс - Програмно осигуряване
////////////////////////////////////////////////////////Начална страница
////////////////////////////////////////////////////////Моите курсове
//////////////////////////////////////////////////////// тренировъчен-курс-по
//////////////////////////////////////////////////////// Изпитна тема 7
//////////////////////////////////////////////////////// Тест към Изпитна тема №7
////////////////////////////////////////////////////////Започнат на	неделя, 19 март 2023, 18:37
////////////////////////////////////////////////////////Състояние Завършен
////////////////////////////////////////////////////////Приключен на	неделя, 19 март 2023, 19:04
////////////////////////////////////////////////////////Изминало време	26 мин. 58 сек.
////////////////////////////////////////////////////////Оценка	Още не е оценен
////////////////////////////////////////////////////////Въпрос 1
////////////////////////////////////////////////////////Неправилно
////////////////////////////////////////////////////////0,00 от максимално 4,00 точки
////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////Целта на задачата е да можете да различавате видовете алгоритми. На картинките са показани два алгоритъма. Срещу всяка една от картинките трябва да попълните кой от видовете алгоритми е използван.



////////////////////////////////////////////////////////Отговор 1
////////////////////////////////////////////////////////Алгоритъм за търсене на елемент в масив. Използван е алгоритъма за търсене чрез интерполация..



////////////////////////////////////////////////////////Отговор 2
////////////////////////////////////////////////////////Алгоритъм за сортиране на елементите в масив. Използван е алгоритъма за сортиране чрез пряка селекция.

////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////Your answer is incorrect.
////////////////////////////////////////////////////////Правилният отговор е:  → Алгоритъм за търсене на елемент в масив. Използван е алгоритъма двоично търсене.,  → Алгоритъм за сортиране на елементите в масив. Използван е алгоритъма за сортиране чрез метода на мехурчето.
////////////////////////////////////////////////////////Въпрос 2
////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////Разработвате ново приложение за оптимизиране на процесите в работата на призводствено предприятие. Трябва да приложите структура от данни, която да работи като „буфер“ срещу надхвърляне на капацитета. Когато сме в рамките на призводствения капацитет, артикулите в буфера трябва да се обработят в реда, в който се добавят. Обяснете коя структура от данни трябва да използвате защо бихте използвали точно нея, за да приложите такъв буфер?


////////////////////////////////////////////////////////За да приложите буфер срещу надхвърляне на капацитета в производственото предприятие, е подходящо да използвате опашка (queue) като структура от данни. Опашката има свойството, че е First-In-First-Out (FIFO) -първият елемент, който е влезнал в нея, ще бъде и първият, който излиза от нея. Това я прави подходяща за приложения, където трябва да се изчакат всички елементи да бъдат обработени в реда, в който са добавени.

////////////////////////////////////////////////////////При превишаване на капацитета на буфера, новите елементи ще бъдат добавяни в опашката, като най-старият елемент (първият, който е влязъл в нея) ще бъде изтрит. Така се гарантира, че буферът винаги ще съдържа последните N елемента, където N е капацитетът на буфера.

////////////////////////////////////////////////////////Следователно опашката е подходящ избор за този случай, тъй като се гарантира правилната последователност на обработката на елементите и ефективно се управлява капацитетът на буфера.


////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////В опашката, артикулите се обработват в реда, в който са добавени. В частност, артикулите се добавят в края на опашката и се премахват от началото. Това е общоизвестно като first-in, first-out (FIFO) обработване.

////////////////////////////////////////////////////////Въпрос 3
////////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////////4,00 от максимално 4,00 точки
////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////Да кажем, че играем на игра, в която трябва да познаете числото. Имате списък с числа от  1 до 20 включително подредени във възходящ ред. Решете задачата, като намерите кое е търсеното число и използвания алгоритъм за търсене на числото. 

////////////////////////////////////////////////////////Намислям си число и ти предполагаш, че числото е 11. Аз ти казвам, че моето число е по-малко. 

////////////////////////////////////////////////////////Търсиш в числата между 1 и 10. Предполагаш, че моето число е 5. Аз ти казвам, че моето число е по-малко.

////////////////////////////////////////////////////////Търсиш в числата между 1 и 4. Предполагаш, че моето число е 2. Аз ти казвам, че моето число е по-голямо.

////////////////////////////////////////////////////////Позна ли кое е моето число? 
////////////////////////////////////////////////////////Търсеното число е 3


////////////////////////////////////////////////////////Кой алгоритъм за търсене използва? 
////////////////////////////////////////////////////////Двоично търсене




////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////////////Да кажем, че играем на игра, в която трябва да познаете числото. Имате списък с числа от  1 до 20 включително подредени във възходящ ред. Решете задачата, като намерите кое е търсеното число и използвания алгоритъм за търсене на числото. 

////////////////////////////////////////////////////////Намислям си число и ти предполагаш, че числото е 11. Аз ти казвам, че моето число е по-малко. 

////////////////////////////////////////////////////////Търсиш в числата между 1 и 10. Предполагаш, че моето число е 5. Аз ти казвам, че моето число е по-малко.

////////////////////////////////////////////////////////Търсиш в числата между 1 и 4. Предполагаш, че моето число е 2. Аз ти казвам, че моето число е по-голямо.

////////////////////////////////////////////////////////Позна ли кое е моето число? [Търсеното число е 3]

////////////////////////////////////////////////////////Кой алгоритъм за търсене използва? [Двоично търсене]



////////////////////////////////////////////////////////Въпрос 4
////////////////////////////////////////////////////////Неправилно
////////////////////////////////////////////////////////0,00 от максимално 2,00 точки
////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////Текст на въпроса


////////////////////////////////////////////////////////На картинката е показана част от имплементацията на линейната структура от данни опашка. Посочете коя имплементация е използвана:

////////////////////////////////////////////////////////Изберете едно
////////////////////////////////////////////////////////a. Динамична имплементация на опашка 
////////////////////////////////////////////////////////b. Имплементация на опашка базирана на възли (nodes)
////////////////////////////////////////////////////////c.Дървовидна имплементация на опашка
////////////////////////////////////////////////////////d. Статична имплементация на опашка
////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////Your answer is incorrect.
////////////////////////////////////////////////////////Правилният отговор е: Статична имплементация на опашка
////////////////////////////////////////////////////////Въпрос 5
////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////От максимално 8,00
////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////Имате даден програмен фрамент от код написан на C#.


////////////////////////////////////////////////////////using System;

////////////////////////////////////////////////////////namespace Sequence
////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////  class Program
////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////    static void Main(string[] args)
////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////      List<int> nums = Console.ReadLine().Split().ToList();

////////////////////////////////////////////////////////      int bestStart = 0
////////////////////////////////////////////////////////            int bestLength = 1;
////////////////////////////////////////////////////////      int currentLength = 1;
////////////////////////////////////////////////////////      int index = 0;
////////////////////////////////////////////////////////      int first = nums[index];

////////////////////////////////////////////////////////      for (int i = 1; i < nums.Count; i++)
////////////////////////////////////////////////////////      {
////////////////////////////////////////////////////////        if (first == nums[i])
////////////////////////////////////////////////////////        {
////////////////////////////////////////////////////////          currentLength++;
////////////////////////////////////////////////////////          if (currentLength > bestLength)
////////////////////////////////////////////////////////          {
////////////////////////////////////////////////////////            bestLength = currentLength;
////////////////////////////////////////////////////////          }
////////////////////////////////////////////////////////        }
////////////////////////////////////////////////////////        else
////////////////////////////////////////////////////////        {
////////////////////////////////////////////////////////          first = nums[i];
////////////////////////////////////////////////////////          index = i;
////////////////////////////////////////////////////////        }
////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////      for (int i = bestStart; i < bestStart + bestLength; i++)
////////////////////////////////////////////////////////      {
////////////////////////////////////////////////////////        Console.Write($"{nums[i]} ");
////////////////////////////////////////////////////////      }
////////////////////////////////////////////////////////    }
////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////}




////////////////////////////////////////////////////////Съставете програма, която намира най-дългата последователност от равни числа в даден списък от цели числа List<int>   и отпечатва като резултат тази най-дълга последователност. Ако няколко поредици имат същата най-дълга дължина, върнете най-лявата от тях.

////////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////////12 2 7 4 3 3 8

////////////////////////////////////////////////////////3 3

////////////////////////////////////////////////////////2 2 2 3 3 3

////////////////////////////////////////////////////////2 2 2

////////////////////////////////////////////////////////4 4 5 5 5

////////////////////////////////////////////////////////5 5 5



////////////////////////////////////////////////////////using System;

////////////////////////////////////////////////////////using System.Collections.Generic;

////////////////////////////////////////////////////////using System.Linq;



////////////////////////////////////////////////////////namespace Sequence

////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////  class Program

////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////    static void Main(string[] args)

////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////      List<int> nums = Console.ReadLine().Split().Select(int.Parse).ToList();



////////////////////////////////////////////////////////      int bestStart = 0;

////////////////////////////////////////////////////////      int bestLength = 1;

////////////////////////////////////////////////////////      int currentLength = 1;

////////////////////////////////////////////////////////      int index = 0;

////////////////////////////////////////////////////////      int first = nums[index];



////////////////////////////////////////////////////////      for (int i = 1; i < nums.Count; i++)

////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////        if (first == nums[i])

////////////////////////////////////////////////////////        {

////////////////////////////////////////////////////////          currentLength++;

////////////////////////////////////////////////////////          if (currentLength > bestLength)

////////////////////////////////////////////////////////          {

////////////////////////////////////////////////////////            bestLength = currentLength;

////////////////////////////////////////////////////////            bestStart = index;

////////////////////////////////////////////////////////          }

////////////////////////////////////////////////////////        }

////////////////////////////////////////////////////////        else

////////////////////////////////////////////////////////        {

////////////////////////////////////////////////////////          first = nums[i];

////////////////////////////////////////////////////////          index = i;

////////////////////////////////////////////////////////          currentLength = 1;

////////////////////////////////////////////////////////        }

////////////////////////////////////////////////////////      }



////////////////////////////////////////////////////////      for (int i = bestStart; i < bestStart + bestLength; i++)

////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////        Console.Write($"{nums[i]} ");

////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////        static void LongestSequenceEqualNumbers()
////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////  //List<int> nums = Console.ReadLine().Split().ToList(); //2т
////////////////////////////////////////////////////////  List<int> nums = Console.ReadLine().Split().Select(int.Parse).ToList();

////////////////////////////////////////////////////////  //int bestStart = 0 //2т
////////////////////////////////////////////////////////  int bestStart = 0;
////////////////////////////////////////////////////////  int bestLength = 1;
////////////////////////////////////////////////////////  int currentLength = 1;
////////////////////////////////////////////////////////  int index = 0;
////////////////////////////////////////////////////////  int first = nums[index];

////////////////////////////////////////////////////////  for (int i = 1; i < nums.Count; i++)
////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////    if (first == nums[i])
////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////      currentLength++;
////////////////////////////////////////////////////////      if (currentLength > bestLength)
////////////////////////////////////////////////////////      {
////////////////////////////////////////////////////////        bestLength = currentLength;
////////////////////////////////////////////////////////        //bestStart = index; //2т
////////////////////////////////////////////////////////        bestStart = index;
////////////////////////////////////////////////////////      }
////////////////////////////////////////////////////////    }
////////////////////////////////////////////////////////    else
////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////      first = nums[i];
////////////////////////////////////////////////////////      index = i;
////////////////////////////////////////////////////////      //currentLength = 1; //2т
////////////////////////////////////////////////////////      currentLength = 1;
////////////////////////////////////////////////////////    }
////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////  for (int i = bestStart; i < bestStart + bestLength; i++)
////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////    Console.Write($"{nums[i]} ");
////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////Въпрос 6
////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////От максимално 8,00
////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////Имате следният програмен фрагмент, който трябва да сортира елементите в подаден списък. В кода има грешка и не работи правилно. 
////////////////////////////////////////////////////////При примерен вход: 36 15 1 7 20 8 24

////////////////////////////////////////////////////////Програмата извежда като резултат следното: 1 1 1 7 8 8 24

////////////////////////////////////////////////////////А трябва да изведе сортираните елементи: 1 7 8 15 20 24 36

////////////////////////////////////////////////////////var collection = Console.Readline().Split().Select(int.Parse).ToList();
////////////////////////////////////////////////////////for (int index = 0; index < collection.Count; index++)
////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////  int min = index;
////////////////////////////////////////////////////////  for (int curr = index + 1; curr < collection.Count; curr++)
////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////    if (collection[curr] > collection[min])
////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////      min = curr;
////////////////////////////////////////////////////////    }
////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////  collection[index] = collection[min];
////////////////////////////////////////////////////////  collection[min] = collection[index];
////////////////////////////////////////////////////////}
////////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", collection));

////////////////////////////////////////////////////////Вашата задача е да откриете грешката, да я поправите и да запишете в полето вече правилно работещ код.



////////////////////////////////////////////////////////var collection = Console.ReadLine().Split().Select(int.Parse).ToList();

////////////////////////////////////////////////////////for (int index = 0; index < collection.Count; index++)

////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////  int min = index;

////////////////////////////////////////////////////////  for (int curr = index + 1; curr < collection.Count; curr++)

////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////    if (collection[curr] < collection[min])

////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////      min = curr;

////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////  int temp = collection[index];

////////////////////////////////////////////////////////  collection[index] = collection[min];

////////////////////////////////////////////////////////  collection[min] = temp;

////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", collection));

////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////var collection = Console.ReadLine().Split().Select(int.Parse).ToList(); //2т
////////////////////////////////////////////////////////for (int index = 0; index < collection.Count; index++)
////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////  int min = index;
////////////////////////////////////////////////////////  for (int curr = index + 1; curr < collection.Count; curr++)
////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////    if (collection[curr] < collection[min])//2т
////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////      min = curr;
////////////////////////////////////////////////////////    }
////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////  int temp = collection[index]; //2т
////////////////////////////////////////////////////////  collection[index] = collection[min];
////////////////////////////////////////////////////////  collection[min] = temp; //2т
////////////////////////////////////////////////////////}
////////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", collection));

////////////////////////////////////////////////////////Въпрос 7
////////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////Дадени са следните картинки:




////////////////////////////////////////////////////////Това е визуализация на един от алгоритмите за сортиране. За този алгоритъм важи следното правило: 
////////////////////////////////////////////////////////Масивът с несортирани елементи се разделя на две части: в едната част са сортираните елементи, в другата част са несортираните елементи. В случая числото 29 се предполага, че е в сортираната част, а числата от 10 до 6 - в несортираната. При всяка стъпка се взема първият елемент от несортираните елементи (в случая числото 10) сравнява го с предходните елементи и се поставя на правилната позиция в сортираната част на масива (в случая преди числото 29). На следващата стъпка първото число от несортирания масив е числото 14, взема това число и го поставя на правилната позиция в сортирания масив (между числата 10 и 29). Алгоритъма продължава докато елементите в несортираната част на масива се изчерпят.
////////////////////////////////////////////////////////Посочете кой от видовете алгоритми е използван:

////////////////////////////////////////////////////////Изберете едно
////////////////////////////////////////////////////////a. Сортиране на елементите чрез метода на мехурчето.
////////////////////////////////////////////////////////b. Сортиране на елементите чрез броене.
////////////////////////////////////////////////////////c. Сортиране на елементите чрез пряка селекция.
////////////////////////////////////////////////////////d. Сортиране на елементите чрез вмъкване. 
////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////////////Правилният отговор е: Сортиране на елементите чрез вмъкване.
////////////////////////////////////////////////////////Въпрос 8
////////////////////////////////////////////////////////Не е отговорен
////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////Имате следния програмен фрагмент:



////////////////////////////////////////////////////////Каква ще бъде сложността на алгоритъма и обяснете защо?

////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////Ако имаме три вложени цикъла от 1 до N, сложността им е кубична – O(N3).

////////////////////////////////////////////////////////Въпрос 9
////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////От максимално 6,00
////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////Имате следният програмен фрагмент, който трябва да сортира елементите в подаден списък. В кода има грешка и не работи правилно. 
////////////////////////////////////////////////////////При примерен вход: 36 15 1 7 20 8 24

////////////////////////////////////////////////////////Програмата извежда като резултат следното: 1 1 1 7 8 8 24

////////////////////////////////////////////////////////А трябва да изведе сортираните елементи: 1 7 8 15 20 24 36

////////////////////////////////////////////////////////var list = Console.ReadLine().Split().Select(int.Parse).ToList();
////////////////////////////////////////////////////////for (int j = 0 j <= list.Count - 2; j++)
////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////  for (int i = 0; i <= list.Count - 2; i++)
////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////    if (list[i] > list[i + 1])
////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////      list[i] = list[i + 1];
////////////////////////////////////////////////////////      list[i + 1] = list[i];
////////////////////////////////////////////////////////    }
////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////}
////////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", list));

////////////////////////////////////////////////////////Вашата задача е да откриете грешката, да я поправите и да запишете в полето вече правилно работещ код.



////////////////////////////////////////////////////////var list = Console.ReadLine().Split().Select(int.Parse).ToList();

////////////////////////////////////////////////////////for (int j = 0; j <= list.Count - 2; j++)

////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////  for (int i = 0; i <= list.Count - 2; i++)

////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////    if (list[i] > list[i + 1])

////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////      int temp = list[i];

////////////////////////////////////////////////////////      list[i] = list[i + 1];

////////////////////////////////////////////////////////      list[i + 1] = temp;

////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", list));



////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////var list = Console.ReadLine().Split().Select(int.Parse).ToList();
////////////////////////////////////////////////////////for (int j = 0; j <= list.Count - 2; j++)//2т
////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////  for (int i = 0; i <= list.Count - 2; i++)
////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////    if (list[i] > list[i + 1])
////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////      int temp = list[i];//2т
////////////////////////////////////////////////////////      list[i] = list[i + 1];
////////////////////////////////////////////////////////      list[i + 1] = temp;//2т
////////////////////////////////////////////////////////    }
////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////}
////////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", list));



////////////////////////////////////////////////////////Въпрос 10
////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////От максимално 8,00
////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////Имате следният програмен фрагмент, който трябва да сортира елементите в подаден списък. В кода има грешка и не работи правилно. 
////////////////////////////////////////////////////////При примерен вход: 36 15 1 7 20 8 24

////////////////////////////////////////////////////////Програмата извежда като резултат следното: 1 1 1 7 8 8 24

////////////////////////////////////////////////////////А трябва да изведе сортираните елементи: 1 7 8 15 20 24 36

////////////////////////////////////////////////////////var list = Console.ReadLine().Split().Select(int.Parse).ToList();
////////////////////////////////////////////////////////for (int i = 0; i <= list.Count - 2; i++)
////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////  for (int i = 0; i <= list.Count - 2; i++)
////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////    if (list[i] < list[i + 1])
////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////      list[i] = list[i + 1];
////////////////////////////////////////////////////////      list[i + 1] = list[i];
////////////////////////////////////////////////////////    }
////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////}
////////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", list));

////////////////////////////////////////////////////////Вашата задача е да откриете грешката, да я поправите и да запишете в полето вече правилно работещ код.



////////////////////////////////////////////////////////var list = Console.ReadLine().Split().Select(int.Parse).ToList();

////////////////////////////////////////////////////////for (int i = 0; i <= list.Count - 2; i++)

////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////  for (int j = 0; j <= list.Count - 2; j++)

////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////    if (list[j] > list[j + 1])

////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////      int temp = list[j];

////////////////////////////////////////////////////////      list[j] = list[j + 1];

////////////////////////////////////////////////////////      list[j + 1] = temp;

////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", list));



////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////var list = Console.ReadLine().Split().Select(int.Parse).ToList();
////////////////////////////////////////////////////////for (int j = 0; j <= list.Count - 2; j++)//2т
////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////  for (int i = 0; i <= list.Count - 2; i++)
////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////    if (list[i] > list[i + 1])//2т
////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////      int temp = list[i];//2т
////////////////////////////////////////////////////////      list[i] = list[i + 1];
////////////////////////////////////////////////////////      list[i + 1] = temp;//2т
////////////////////////////////////////////////////////    }
////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////}
////////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", list));



////////////////////////////////////////////////////////Въпрос 11
////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////От максимално 8,00
////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////Запазете историята на браузъра. Ще получите възможни команди:
////////////////////////////////////////////////////////URL – отваря дадената страница
////////////////////////////////////////////////////////back – връща към предната страница
////////////////////////////////////////////////////////exit – спира програмата
////////////////////////////////////////////////////////Примерен вход:

////////////////////////////////////////////////////////www.softuni.bg
////////////////////////////////////////////////////////www.judge.softuni.bg
////////////////////////////////////////////////////////www.kids.softuni.bg
////////////////////////////////////////////////////////back
////////////////////////////////////////////////////////back
////////////////////////////////////////////////////////exit

////////////////////////////////////////////////////////Изход:
////////////////////////////////////////////////////////www.judge.softuni.bg
////////////////////////////////////////////////////////www.softuni.bg

////////////////////////////////////////////////////////Имате следният програмен фрагмент.
////////////////////////////////////////////////////////В кода има грешка и не работи правилно.
////////////////////////////////////////////////////////static void Main(string[] args)
////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////  List<string> pages = new List<string>();
////////////////////////////////////////////////////////  string command = Console.ReadLine();
////////////////////////////////////////////////////////  string previous = null;
////////////////////////////////////////////////////////  while (!"exit".Equals(command))
////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////    if (command.Equals("back"))
////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////      if (pages.Count != 0)
////////////////////////////////////////////////////////      {
////////////////////////////////////////////////////////        Console.WriteLine(pages.Remove);
////////////////////////////////////////////////////////      }
////////////////////////////////////////////////////////      previous = null;
////////////////////////////////////////////////////////    }
////////////////////////////////////////////////////////    else
////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////      if (previous != null)
////////////////////////////////////////////////////////      {
////////////////////////////////////////////////////////        pages.Add(command);
////////////////////////////////////////////////////////      }
////////////////////////////////////////////////////////      previous = command;
////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////    command = Console.ReadLine();

////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////Вашата задача е да анализирате този фрагмент от код и да идентифицирате и поправите правилно грешките в написания програмен код, така че да реши поставената задача. Да допълните кода, ако и когато това е необходимо.

////////////////////////////////////////////////////////В полето за въвеждане записвате:

////////////////////////////////////////////////////////1.Вашият анализ на грешката и това как може да бъде поправено. 

////////////////////////////////////////////////////////2. Редактиран и правилно работещ код.


////////////////////////////////////////////////////////static void Main(string[] args)

////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////  List<string> pages = new List<string>();

////////////////////////////////////////////////////////  string command = Console.ReadLine();

////////////////////////////////////////////////////////  string previous = null;

////////////////////////////////////////////////////////  while (command != "exit")

////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////    if (command == "back")

////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////      if (pages.Count != 0)

////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////        Console.WriteLine(pages[pages.Count - 1]);

////////////////////////////////////////////////////////        pages.RemoveAt(pages.Count - 1);

////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////      previous = null;

////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////    else

////////////////////////////////////////////////////////    {

////////////////////////////////////////////////////////      if (previous != null)

////////////////////////////////////////////////////////      {

////////////////////////////////////////////////////////        pages.Add(previous);

////////////////////////////////////////////////////////      }

////////////////////////////////////////////////////////      previous = command;

////////////////////////////////////////////////////////    }

////////////////////////////////////////////////////////    command = Console.ReadLine();

////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////  for (int i = pages.Count - 1; i >= 0; i--)

////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////    Console.WriteLine(pages[i]);

////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////Въпрос 12
////////////////////////////////////////////////////////Неправилно
////////////////////////////////////////////////////////0,00 от максимално 4,00 точки
////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////Обяснете какво прави методът Enqueue(T)?
////////////////////////////////////////////////////////Отговор: 
////////////////////////////////////////////////////////Методът Enqueue(T) се използва в контейнерните структури от тип опашка (queue) за добавяне на нов елемент в края на опашката. Това означава, че новият елемент става последният елемент в опашката и всички останали елементи се изместват на една позиция напред.
////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////Правилният отговор е: добавя елемент в края на опашката
////////////////////////////////////////////////////////Въпрос 13
////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////От максимално 8,00
////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////Имате даден следния програмен фрагмент:

////////////////////////////////////////////////////////public T Pop(int index)
////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////  if (this.Count == 0)
////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////    throw new InvalidOperationException("Empty stack");
////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////  T element = this.items[index];
////////////////////////////////////////////////////////  T[] temp = new T[this.items.Length];
////////////////////////////////////////////////////////  for (int i = 0; i < this.Count; i++)
////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////    temp[i] = this.items[i];
////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////  this.items = temp;
////////////////////////////////////////////////////////  return element;
////////////////////////////////////////////////////////}


////////////////////////////////////////////////////////Този фрагмент е част от имплементацията на линейната структура от данни стек - премахване на елемент от стек. В кода има грешка! Вашата задача е да анализирате този фрагмент от код и да идентифицирате и поправите правилно грешките в написания програмен код, така че да реши поставената задача. Да допълните кода, ако и когато това е необходимо.

////////////////////////////////////////////////////////В полето за въвеждане записвате:

////////////////////////////////////////////////////////1.Вашият анализ на грешката и това как може да бъде поправено. 

////////////////////////////////////////////////////////2. Редактиран и правилно работещ код.

////////////////////////////////////////////////////////В програмния фрагмент липсва проверка дали индексът, подаден като аргумент, е валиден за текущия стек. Ако индексът е по-голям или равен на текущия брой на елементите в стека, това може да доведе до грешка при достъпване на несъществуващ елемент в масива.

////////////////////////////////////////////////////////Ето редактирания и работещ код:

////////////////////////////////////////////////////////public T Pop(int index) { if (this.Count == 0 || index >= this.Count) { throw new InvalidOperationException("Empty stack or invalid index"); } T element = this.items[index]; T[] temp = new T[this.items.Length - 1]; int j = 0; for (int i = 0; i < this.Count; i++) { if (i != index) { temp[j++] = this.items[i]; } } this.items = temp; return element; }
////////////////////////////////////////////////////////В този код е добавена проверка за валидността на индекса и е променен начина на копиране на елементите в нов масив. Вместо да копираме всички елементи, освен премахнатия, сега избираме да пропуснем елемента на дадения индекс и да копираме само останалите елементи.


////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////Грешката в кода е, че методът Pop(int index) получава цяло число, което вътре в метода се използва за намиране на елемента в масива и премахването на този елемент. По дефиниция линейната структура стек не работи така. Правилото за работа със стек е "първи влиза - първи излиза". Нямаме право да достъпваме елементите по индекс, освен само и единствено за четене. Когато правим имплементацията за премахване на елемент от стек винаги премахваме последния елемент - в случая трябва да използваме броя на елементите (Count) на мястото на параметъра Index, за да премахнем последния елемент от масива в класа. И самия метод Pop() не трябва да приема параметър.//2т

////////////////////////////////////////////////////////public T Pop()//2т
////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////  if (this.Count == 0)
////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////    throw new InvalidOperationException("Empty stack");
////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////  this.Count--;//2т
////////////////////////////////////////////////////////  T element = this.items[this.Count];//2т

////////////////////////////////////////////////////////  T[] temp = new T[this.items.Length];
////////////////////////////////////////////////////////  for (int i = 0; i < this.Count; i++)
////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////    temp[i] = this.items[i];
////////////////////////////////////////////////////////  }

////////////////////////////////////////////////////////  this.items = temp;
////////////////////////////////////////////////////////  return element;
////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////Въпрос 14
////////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////Текст на въпроса


////////////////////////////////////////////////////////На картинката е показана илюстрация на един от видовете алгоритми за сортиране. Посочете кой е той:

////////////////////////////////////////////////////////Изберете едно
////////////////////////////////////////////////////////a. Сортиране чрез броене (Counting sort) 
////////////////////////////////////////////////////////b.Сортиране чрез кофи (Bucket sort)
////////////////////////////////////////////////////////c.Сортиране чрез сливане (Merge sort)
////////////////////////////////////////////////////////d.Сортиране чрез метода на мехурчето (Bubble sort)
////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////////////Правилният отговор е: Сортиране чрез броене (Counting sort)
////////////////////////////////////////////////////////Въпрос 15
////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////Дайте пример за това къде можете да срещнете поведението на структурата от данни стек във вашето ежедневие. И обяснете защо.

////////////////////////////////////////////////////////Структурата от данни стек се използва в много приложения в ежедневието, включително в софтуерни приложения, аудио плейъри, браузъри, телефони и др.

////////////////////////////////////////////////////////Например, стекът се използва в браузърите за навигацията на потребителите в страниците. Когато потребителят посети нова страница, тя се добавя към стека. Когато потребителят използва бутона "Назад", последната страница, която е посетил, се премахва от стека и се отваря предишната страница. Това позволява на потребителите да навигират по страниците и да се връщат към предишните без да се налага да запомнят къде точно са били или да следят дълга лента с историята на посещенията си.


////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////Пример 1 : Работната памет на програмата (стек) -Примитивните типове данни(числа, char, bool) се наричат стойностни типове, защото пазят непосредствено своята стойност в стека за изпълнение на програмата. 

////////////////////////////////////////////////////////Стекът е често срещана и използвана структура от данни. Стек се използва и вътрешно от C# виртуалната машина за съхранение на променливите в програмата и параметрите при извикване на метод.

////////////////////////////////////////////////////////Например една променлива, декларирана в метода Main() на програмата се пази в стека докато програмата завърши изпълнението на този метод, т.е. докато не завърши.

////////////////////////////////////////////////////////Пример 2: Куп с чинии

////////////////////////////////////////////////////////Пример 3: Куп с книги

////////////////////////////////////////////////////////Защото: Стекът има поведение последен влязъл пръв излязъл. 

////////////////////////////////////////////////////////Въпрос 16
////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////Дайте пример с C# код, за метод който да сортира  елементите от списъка List<int> list = new List<int>() { 12, 8, 10, 2, 9, 6, 1}; посредством алгоритъма за сортиране  чрез вмъкване.

////////////////////////////////////////////////////////List<int> list = new List<int>() { 12, 8, 10, 2, 9, 6, 1 };



////////////////////////////////////////////////////////for (int i = 1; i < list.Count; i++)

////////////////////////////////////////////////////////{

////////////////////////////////////////////////////////  int key = list[i];

////////////////////////////////////////////////////////  int j = i - 1;



////////////////////////////////////////////////////////  while (j >= 0 && list[j] > key)

////////////////////////////////////////////////////////  {

////////////////////////////////////////////////////////    list[j + 1] = list[j];

////////////////////////////////////////////////////////    j--;

////////////////////////////////////////////////////////  }



////////////////////////////////////////////////////////  list[j + 1] = key;

////////////////////////////////////////////////////////}



////////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", list));



////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////public static void InsertionSort(List<int> list)
////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////  for (int i = 1; i < list.Count; ++i)
////////////////////////////////////////////////////////  {
////////////////////////////////////////////////////////    int key = list[i];
////////////////////////////////////////////////////////    int j = i - 1;

////////////////////////////////////////////////////////    // Move elements of arr[0..i-1], 
////////////////////////////////////////////////////////    // that are greater than key, 
////////////////////////////////////////////////////////    // to one position ahead of 
////////////////////////////////////////////////////////    // their current position 
////////////////////////////////////////////////////////    while (j >= 0 && list[j] > key)
////////////////////////////////////////////////////////    {
////////////////////////////////////////////////////////      list[j + 1] = list[j];
////////////////////////////////////////////////////////      j = j - 1;
////////////////////////////////////////////////////////    }
////////////////////////////////////////////////////////    list[j + 1] = key;
////////////////////////////////////////////////////////  }
////////////////////////////////////////////////////////}
////////////////////////////////////////////////////////private static void Swap(List<int> list, int index, int min)
////////////////////////////////////////////////////////{
////////////////////////////////////////////////////////  int temp = list[index];
////////////////////////////////////////////////////////  list[index] = list[min];
////////////////////////////////////////////////////////  list[min] = temp;
////////////////////////////////////////////////////////}

////////////////////////////////////////////////////////Въпрос 17
////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////Дефинирайте понятието стабилност на сортирането.

////////////////////////////////////////////////////////Стабилността на сортирането се отнася до съхраняването на реда на елементите с еднакви ключове (стойности) в сортираната последователност. Ако един алгоритъм за сортиране е стабилен, два елемента с еднакви ключове ще бъдат подредени в резултата според реда, в който са били въведени в началния списък. С други думи, ако сортирането е стабилно, то то ще запази реда на появяване на елементите с еднакви ключове в началния списък.

////////////////////////////////////////////////////////Например, ако имаме списък от хора, като всеки човек има име и години, и искаме да ги сортираме по години, то ако сортирането е стабилно, хората с еднакви години ще бъдат подредени във възходящ ред според техния ред на появяване в началния списък. Това може да бъде полезно в ситуации, когато трябва да запазим порядъка на елементите, например при обработка на данни със свързани записи.


////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////Стабилност на сортирането - ако имаме два елемента които са равни в първоначалният масив, то във финалният те се срещат във същият ред като първоначалният масив.

////////////////////////////////////////////////////////Алгоритмите за стабилно сортиране използват следното правило: ако два елемента при сравнение са еднакви (като например двете петици), то тяхната първоначална подредба ще бъде съхранена, така че ако едната от тях е преди другата в началната подредба, то тя ще бъде първа и в крайния резултат.

////////////////////////////////////////////////////////Въпрос 18
////////////////////////////////////////////////////////Неправилно
////////////////////////////////////////////////////////0,00 от максимално 2,00 точки
////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////Имате даден следният псевдо код на алгоритъм за сортиране. Посочете кой алгоритъм за сортиране е използван:



////////////////////////////////////////////////////////Това е псевдо код за имплементация на алгоритъм за сортиране чрез 
////////////////////////////////////////////////////////пряка селекция


////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////Your answer is incorrect.
////////////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////////////Имате даден следният псевдо код на алгоритъм за сортиране. Посочете кой алгоритъм за сортиране е използван:



////////////////////////////////////////////////////////Това е псевдо код за имплементация на алгоритъм за сортиране чрез [вмъкване]

////////////////////////////////////////////////////////Въпрос 19
////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////Ако имате следната последователност от числа: "12, 14, 24, 28, 29, 32, 36, 40, 41" и трябва да напишете алгоритъм, който да намери елемент от този списък, например числото 36. 

////////////////////////////////////////////////////////Като използвате алгоритъма за двоично търсене обяснете последователността от стъпки, които трябва да се изпълнят за да намерите търсеното число. 

////////////////////////////////////////////////////////А какво ще се случи, ако търсеното число не е в списъка?



////////////////////////////////////////////////////////Алгоритъмът за двоично търсене търси даден елемент в сортиран масив, като на всяка стъпка разделя масива на две половини и проверява дали търсеният елемент се намира в дясната или в лявата половина. Така се продължава докато елементът не бъде открит или докато не остане само един елемент, който може да бъде проверен дали е търсеният.

////////////////////////////////////////////////////////Ето как ще протече търсенето на числото 36 в дадения списък:

////////////////////////////////////////////////////////Определяме началния индекс - в случая 0 (индексът на първия елемент в списъка).
////////////////////////////////////////////////////////Определяме краен индекс - в случая 8 (индексът на последния елемент в списъка).
////////////////////////////////////////////////////////Изчисляваме средния индекс между началния и краен индекс - в случая (0+8)/ 2 = 4.
////////////////////////////////////////////////////////Сравняваме стойността на елемента на индекс 4 с търсеното число 36. Тъй като 29 < 36, търсенето продължава в дясната половина на масива.
////////////////////////////////////////////////////////Определяме нов краен индекс - в случая 8 (същият край като в началото).
////////////////////////////////////////////////////////Определяме нов среден индекс - в случая (4+8)/ 2 = 6.
////////////////////////////////////////////////////////Сравняваме стойността на елемента на индекс 6 с търсеното число 36. Тъй като 36 = 36, търсенето приключва и се връща индексът на намерения елемент, в случая 6.
////////////////////////////////////////////////////////Ако търсеното число не е в списъка, търсенето ще продължи до изчерпване на всички възможности за разделяне на масива. В този случай, ще се стигне до краен индекс, който е по-малък от началния индекс и ще се заключи, че търсеното число не е в списъка.


////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////Алгоритъма за двоично търсене работи само и единствено със сортирани елементи, като разделя масива на две части. Ако търсеното число съвпада със средния елемент, тогава алгоритъма връща индекса на средния елемент. 

////////////////////////////////////////////////////////Ако търсеното число е по-голямо от средния елемент, тогава  търсеното число стои в дясната половина на масива. Тогава разделяме дясната половина отново на две части и сравняваме със средния елемент. 

////////////////////////////////////////////////////////Ако търсеното число е по-малко от средния елемент тогава търсим в лявата половина на масива, като отново я разделяме на две части и сравняваме със средния елемент.

////////////////////////////////////////////////////////Алгоритъмът се повтаря докато открием търсения елемент.

////////////////////////////////////////////////////////Ако x не съвпада с нито един от елементите, връщаме -1.

////////////////////////////////////////////////////////Въпрос 20
////////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////Ако имате следната последователност от числа: "15, 85, 34, 12, 0, -9, 14, 63, 7, 32" и трябва да напишете алгоритъм, който да намери елемент от този списък, например числото 34. 

////////////////////////////////////////////////////////Като използвате алгоритъма за линейно търсене обяснете последователността от стъпки, които трябва да се изпълнят за да намерите търсеното число. 

////////////////////////////////////////////////////////А какво ще се случи, ако търсеното число не е в списъка?



////////////////////////////////////////////////////////При линейното търсене трябва да обходим всеки елемент от списъка, за да проверим дали е равен на търсеното число. Това означава, че започваме от първия елемент и последователно проверяваме всеки следващ елемент, докато не намерим търсеното число или не стигнем края на списъка.

////////////////////////////////////////////////////////При търсене на числото 34, ще започнем да проверяваме елементите на списъка последователно, започвайки от 15, след това 85, 34, което е търсеното число, след което търсенето приключва.

////////////////////////////////////////////////////////Ако търсеното число не се намира в списъка, тогава линейното търсене ще обходи всички елементи в списъка и ще достигне края му, без да намери търсеното число. В този случай обикновено се връща стойност, която да покаже, че търсеното число не е открито, например -1.


////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////Линейното търсене е прост подход за намиране на елемент в списък.

////////////////////////////////////////////////////////Започваме от най-левия елемент на масива и едно по едно сравняваме търсеното число (х) с всеки елемент на масива.

////////////////////////////////////////////////////////Ако x съвпада с елемент от масива, връщаме индекса, в случая числото 34 е на индекс 2 и алгоритъма трябва да върне числото 2 като резултат.

////////////////////////////////////////////////////////Ако x не съвпада с нито един от елементите, връщаме -1.

////////////////////////////////////////////////////////Въпрос 21
////////////////////////////////////////////////////////Отчасти верен
////////////////////////////////////////////////////////1,33 от максимално 2,00 точки
////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////Имате следния пример:

////////////////////////////////////////////////////////Трябва да намерите елемент в масив по даден ключ. Посочете сложността на алгоритъма в най-лошия, среден и най-добър случай:

////////////////////////////////////////////////////////Най - лош случай: blank

////////////////////////////////////////////////////////Среден случай: blank

////////////////////////////////////////////////////////Най - добър случай: blank





////////////////////////////////////////////////////////O(N)O(N)O(N)O(N!)O(N!)O(N!)O(1)O(1)O(1)O(n ^ k)O(n ^ k)O(n ^ k)O(n ^ 2)O(n ^ 2)O(n ^ 2)O(n ^ 3)O(n ^ 3)O(n ^ 3)
////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////Your answer is partially correct.
////////////////////////////////////////////////////////Вие правилно сте избрали 2.
////////////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////////////Имате следния пример:

////////////////////////////////////////////////////////Трябва да намерите елемент в масив по даден ключ. Посочете сложността на алгоритъма в най-лошия, среден и най-добър случай:

////////////////////////////////////////////////////////Най - лош случай: [O(N)]

////////////////////////////////////////////////////////Среден случай: [O(N)]

////////////////////////////////////////////////////////Най - добър случай: [O(1)]



////////////////////////////////////////////////////////Въпрос 22
////////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////////6,00 от максимално 6,00 точки
////////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////////Имате даден следният програмен фрагмент. Свържете правилно липсващите части от кода.  

////////////////////////////////////////////////////////          int low = 0;
////////////////////////////////////////////////////////int high = sortedArray.Length - 1;
////////////////////////////////////////////////////////while (sortedArray blank <= key && sortedArray blank >= key)
////////////////////////////////////////////////////////            {
////////////////////////////////////////////////////////  int mid = low + ((key - sortedArray[low]) * (high - low))
////////////////////////////////////////////////////////    / (sortedArray[high] - sortedArray[low]);
////////////////////////////////////////////////////////  if (blank)
////////////////////////////////////////////////////////    low = mid + 1;
////////////////////////////////////////////////////////  else if (blank)
////////////////////////////////////////////////////////    high = mid - 1;
////////////////////////////////////////////////////////  else
////////////////////////////////////////////////////////    return mid;
////////////////////////////////////////////////////////}
////////////////////////////////////////////////////////if (blank) return low;
////////////////////////////////////////////////////////else return -1;


////////////////////////////////////////////////////////[low][low][low][low][low][high][high][high][high][high] sortedArray[mid] < keysortedArray[mid] < keysortedArray[mid] < keysortedArray[mid] < keysortedArray[mid] < keysortedArray[low] == keysortedArray[low] == keysortedArray[low] == keysortedArray[low] == keysortedArray[low] == keysortedArray[mid] > keysortedArray[mid] > keysortedArray[mid] > keysortedArray[mid] > keysortedArray[mid] > key
////////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////////////Имате даден следният програмен фрагмент. Свържете правилно липсващите части от кода.  

////////////////////////////////////////////////////////          int low = 0;
////////////////////////////////////////////////////////int high = sortedArray.Length - 1;
////////////////////////////////////////////////////////while (sortedArray[[low]] <= key && sortedArray[[high]] >= key)
////////////////////////////////////////////////////////            {
////////////////////////////////////////////////////////  int mid = low + ((key - sortedArray[low]) * (high - low))
////////////////////////////////////////////////////////    / (sortedArray[high] - sortedArray[low]);
////////////////////////////////////////////////////////  if ([sortedArray[mid] < key])
////////////////////////////////////////////////////////    low = mid + 1;
////////////////////////////////////////////////////////  else if ([sortedArray[mid] > key])
////////////////////////////////////////////////////////    high = mid - 1;
////////////////////////////////////////////////////////  else
////////////////////////////////////////////////////////    return mid;
////////////////////////////////////////////////////////}
////////////////////////////////////////////////////////if ([sortedArray[low] == key]) return low;
////////////////////////////////////////////////////////else return -1;

////////////////////////////////////////////////////////Край на прегледа
////////////////////////////////////////////////////////Отиди на ...
////////////////////////////////////////////////////////Отиди на ...
////////////////////////////////////////////////////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
////////////////////////////////////////////////////////Навигация в теста
////////////////////////////////////////////////////////Край на прегледа
////////////////////////////////////////////////////////Вие сте влезли в системата като Добри Илев (Изход)
////////////////////////////////////////////////////////тренировъчен - курс - по
////////////////////////////////////////////////////////Data retention summary

//////////////////////////////////////////////////////Прескочи на основното съдържание
//////////////////////////////////////////////////////ПГЕЕ
//////////////////////////////////////////////////////Български ‎(bg)‎ 
//////////////////////////////////////////////////////Добри Илев 
//////////////////////////////////////////////////////Тренировъчен курс - Програмно осигуряване
//////////////////////////////////////////////////////Начална страница
//////////////////////////////////////////////////////Моите курсове
////////////////////////////////////////////////////// тренировъчен-курс-по
////////////////////////////////////////////////////// Изпитна тема 7
////////////////////////////////////////////////////// Тест към Изпитна тема №7
//////////////////////////////////////////////////////Започнат на	неделя, 9 април 2023, 18:25
//////////////////////////////////////////////////////Състояние Завършен
//////////////////////////////////////////////////////Приключен на	неделя, 9 април 2023, 19:21
//////////////////////////////////////////////////////Изминало време	56 мин. 34 сек.
//////////////////////////////////////////////////////Оценка	Още не е оценен
//////////////////////////////////////////////////////Въпрос 1
//////////////////////////////////////////////////////Отчасти верен
//////////////////////////////////////////////////////2,50 от максимално 4,00 точки
//////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////Имате зададени твърдения за два алгоритъма за търсене - двоично търсене и интерполационно търсене. По зададените твърдения и характеристики трябва да сравните двата алгоритъма и да зададете коя от тях към кой от алгоритмите се отнася:

//////////////////////////////////////////////////////Стойностите в масива трябва да са сортирани и равномерно разпределени. 
//////////////////////////////////////////////////////Интерполационно търсене


//////////////////////////////////////////////////////Работи във времева сложност O(log n). 
//////////////////////////////////////////////////////Двоично търсене


//////////////////////////////////////////////////////Ако ключът е по-малък от средния елемент, тогава ключът може да лежи само в левия подмасив. 
//////////////////////////////////////////////////////Двоично търсене


//////////////////////////////////////////////////////Работи във времева сложност O(log(log n)). 
//////////////////////////////////////////////////////Интерполационно търсене


//////////////////////////////////////////////////////Ако ключът е по-голям от средния елемент, тогава ключът може да лежи само в десния подмасив. 
//////////////////////////////////////////////////////Двоично търсене


//////////////////////////////////////////////////////Може да се оцени позицията на стойността на ключа в масива, като се вземат предвид най-малкият и най-големият елемент в масива и дължината на масива. 
//////////////////////////////////////////////////////Интерполационно търсене


//////////////////////////////////////////////////////Оценява средната позиция за масива и сравнява този елемент с желания ключ. 
//////////////////////////////////////////////////////Двоично търсене


//////////////////////////////////////////////////////Ако ключът съвпада със средния елемент, върнете средното местоположение. 
//////////////////////////////////////////////////////Отнася се и за двата алгоритъма








//////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////Your answer is partially correct.
//////////////////////////////////////////////////////Вие правилно сте избрали 5.
//////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////Имате зададени твърдения за два алгоритъма за търсене - двоично търсене и интерполационно търсене. По зададените твърдения и характеристики трябва да сравните двата алгоритъма и да зададете коя от тях към кой от алгоритмите се отнася:

//////////////////////////////////////////////////////Стойностите в масива трябва да са сортирани и равномерно разпределени. [Интерполационно търсене]

//////////////////////////////////////////////////////Работи във времева сложност O(log n). [Двоично търсене]

//////////////////////////////////////////////////////Ако ключът е по-малък от средния елемент, тогава ключът може да лежи само в левия подмасив. [Отнася се и за двата алгоритъма]

//////////////////////////////////////////////////////Работи във времева сложност O(log(log n)). [Интерполационно търсене]

//////////////////////////////////////////////////////Ако ключът е по-голям от средния елемент, тогава ключът може да лежи само в десния подмасив. [Отнася се и за двата алгоритъма]

//////////////////////////////////////////////////////Може да се оцени позицията на стойността на ключа в масива, като се вземат предвид най-малкият и най-големият елемент в масива и дължината на масива. [Интерполационно търсене]

//////////////////////////////////////////////////////Оценява средната позиция за масива и сравнява този елемент с желания ключ. [Интерполационно търсене]

//////////////////////////////////////////////////////Ако ключът съвпада със средния елемент, върнете средното местоположение. [Отнася се и за двата алгоритъма]







//////////////////////////////////////////////////////Въпрос 2
//////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////4,00 от максимално 4,00 точки
//////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////Да кажем, че играем на игра, в която трябва да познаете числото. Имате списък с числа от  1 до 20 включително подредени във възходящ ред. Решете задачата, като намерите кое е търсеното число и използвания алгоритъм за търсене на числото. 

//////////////////////////////////////////////////////Намислям си число и ти предполагаш, че числото е 11. Аз ти казвам, че моето число е по-малко. 

//////////////////////////////////////////////////////Търсиш в числата между 1 и 10. Предполагаш, че моето число е 5. Аз ти казвам, че моето число е по-малко.

//////////////////////////////////////////////////////Търсиш в числата между 1 и 4. Предполагаш, че моето число е 2. Аз ти казвам, че моето число е по-голямо.

//////////////////////////////////////////////////////Позна ли кое е моето число? 
//////////////////////////////////////////////////////Търсеното число е 3


//////////////////////////////////////////////////////Кой алгоритъм за търсене използва? 
//////////////////////////////////////////////////////Двоично търсене




//////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////Да кажем, че играем на игра, в която трябва да познаете числото. Имате списък с числа от  1 до 20 включително подредени във възходящ ред. Решете задачата, като намерите кое е търсеното число и използвания алгоритъм за търсене на числото. 

//////////////////////////////////////////////////////Намислям си число и ти предполагаш, че числото е 11. Аз ти казвам, че моето число е по-малко. 

//////////////////////////////////////////////////////Търсиш в числата между 1 и 10. Предполагаш, че моето число е 5. Аз ти казвам, че моето число е по-малко.

//////////////////////////////////////////////////////Търсиш в числата между 1 и 4. Предполагаш, че моето число е 2. Аз ти казвам, че моето число е по-голямо.

//////////////////////////////////////////////////////Позна ли кое е моето число? [Търсеното число е 3]

//////////////////////////////////////////////////////Кой алгоритъм за търсене използва? [Двоично търсене]



//////////////////////////////////////////////////////Въпрос 3
//////////////////////////////////////////////////////Не е отговорен
//////////////////////////////////////////////////////От максимално 2,00
//////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////Текст на въпроса


//////////////////////////////////////////////////////На картинката е показана част от имплементацията на линейната структура от данни опашка. Посочете коя имплементация е използвана:

//////////////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////////////a. Дървовидна имплементация на опашка
//////////////////////////////////////////////////////b. Статична имплементация на опашка
//////////////////////////////////////////////////////c. Имплементация на опашка чрез списък
//////////////////////////////////////////////////////d. Динамична имплементация на опашка
//////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////Your answer is incorrect.
//////////////////////////////////////////////////////Правилният отговор е: Динамична имплементация на опашка
//////////////////////////////////////////////////////Въпрос 4
//////////////////////////////////////////////////////Отчасти верен
//////////////////////////////////////////////////////1,33 от максимално 2,00 точки
//////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////Имате следния пример:

//////////////////////////////////////////////////////Трябва да намерите елемент в масив по даден ключ. Посочете сложността на алгоритъма в най-лошия, среден и най-добър случай:

//////////////////////////////////////////////////////Най - лош случай: blank

//////////////////////////////////////////////////////Среден случай: blank

//////////////////////////////////////////////////////Най - добър случай: blank





//////////////////////////////////////////////////////O(n ^ 2)O(n ^ 2)O(n ^ 2)O(n ^ 3)O(n ^ 3)O(n ^ 3)O(N)O(N)O(N)O(N!)O(N!)O(N!)O(n ^ k)O(n ^ k)O(n ^ k)O(1)O(1)O(1)
//////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////Your answer is partially correct.
//////////////////////////////////////////////////////Вие правилно сте избрали 2.
//////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////Имате следния пример:

//////////////////////////////////////////////////////Трябва да намерите елемент в масив по даден ключ. Посочете сложността на алгоритъма в най-лошия, среден и най-добър случай:

//////////////////////////////////////////////////////Най - лош случай: [O(N)]

//////////////////////////////////////////////////////Среден случай: [O(N)]

//////////////////////////////////////////////////////Най - добър случай: [O(1)]



//////////////////////////////////////////////////////Въпрос 5
//////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////От максимално 8,00
//////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////Имате следният програмен фрагмент, който трябва да сортира елементите в подаден списък. В кода има грешка и не работи правилно. 
//////////////////////////////////////////////////////При примерен вход: 36 15 1 7 20 8 24

//////////////////////////////////////////////////////Програмата извежда като резултат следното: 1 1 1 7 8 8 24

//////////////////////////////////////////////////////А трябва да изведе сортираните елементи: 1 7 8 15 20 24 36

//////////////////////////////////////////////////////var collection = Console.Readline().Split().Select(int.Parse).ToList();
//////////////////////////////////////////////////////for (int index = 0; index < collection.Count; index++)
//////////////////////////////////////////////////////{
//////////////////////////////////////////////////////  int min = index;
//////////////////////////////////////////////////////  for (int curr = index + 1; curr < collection.Count; curr++)
//////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////    if (collection[curr] > collection[min])
//////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////      min = curr;
//////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////  collection[index] = collection[min];
//////////////////////////////////////////////////////  collection[min] = collection[index];
//////////////////////////////////////////////////////}
//////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", collection));

//////////////////////////////////////////////////////Вашата задача е да откриете грешката, да я поправите и да запишете в полето вече правилно работещ код.



//////////////////////////////////////////////////////var collection = Console.Readline().Split().Select(int.Parse).ToList();
//////////////////////////////////////////////////////for (int index = 0; index < collection.Count; index++)
//////////////////////////////////////////////////////{
//////////////////////////////////////////////////////  int min = index;
//////////////////////////////////////////////////////  for (int curr = index + 1; curr < collection.Count; curr++)
//////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////    if (collection[curr] > collection[min])
//////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////      min = curr;
//////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////  int temp = collection[index]
//////////////////////////////////////////////////////                collection[index] = collection[min];
//////////////////////////////////////////////////////  collection[min] = temp;
//////////////////////////////////////////////////////}
//////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", collection));

//////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////var collection = Console.ReadLine().Split().Select(int.Parse).ToList(); //2т
//////////////////////////////////////////////////////for (int index = 0; index < collection.Count; index++)
//////////////////////////////////////////////////////{
//////////////////////////////////////////////////////  int min = index;
//////////////////////////////////////////////////////  for (int curr = index + 1; curr < collection.Count; curr++)
//////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////    if (collection[curr] < collection[min])//2т
//////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////      min = curr;
//////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////  int temp = collection[index]; //2т
//////////////////////////////////////////////////////  collection[index] = collection[min];
//////////////////////////////////////////////////////  collection[min] = temp; //2т
//////////////////////////////////////////////////////}
//////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", collection));

//////////////////////////////////////////////////////Въпрос 6
//////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////6,00 от максимално 6,00 точки
//////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////Изчислете какъв ще бъде отговорът на следния пример:

//////////////////////////////////////////////////////През 2013 ООН има 193 страни членки. Ако имената на тези страни са сортирани по азбучен ред в масив, колко имена трябва да провери двоичното търсене, за да намери конкретно име в масива в най-лошия случай?


//////////////////////////////////////////////////////Не повече от 8.


//////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////Изчислете какъв ще бъде отговорът на следния пример:

//////////////////////////////////////////////////////През 2013 ООН има 193 страни членки. Ако имената на тези страни са сортирани по азбучен ред в масив, колко имена трябва да провери двоичното търсене, за да намери конкретно име в масива в най-лошия случай?

//////////////////////////////////////////////////////[Не повече от 8.]

//////////////////////////////////////////////////////Въпрос 7
//////////////////////////////////////////////////////Не е отговорен
//////////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////Дайте пример с C# код, за метод който да сортира  елементите от списъка List<int> list = new List<int>() { 12, 8, 10, 2, 9, 6, 1}; посредством алгоритъма за сортиране  чрез пряка селекция. 

//////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////public static void SelectionSort(List<int> list)
//////////////////////////////////////////////////////{
//////////////////////////////////////////////////////  for (int index = 0; index < list.Count; index++)
//////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////    int min = index;
//////////////////////////////////////////////////////    for (int current = index + 1; current < list.Count; current++)
//////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////      if (list[current] < list[min])
//////////////////////////////////////////////////////      {
//////////////////////////////////////////////////////        min = current;
//////////////////////////////////////////////////////      }
//////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////    Swap(list, index, min);
//////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////}

//////////////////////////////////////////////////////private static void Swap(List<int> list, int index, int min)

//////////////////////////////////////////////////////{

//////////////////////////////////////////////////////  int temp = list[index];

//////////////////////////////////////////////////////  list[index] = list[min];

//////////////////////////////////////////////////////  list[min] = temp;

//////////////////////////////////////////////////////}

//////////////////////////////////////////////////////Въпрос 8
//////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////От максимално 8,00
//////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////Даден е аритметичен израз със скоби (може и вложени).
//////////////////////////////////////////////////////Цел: извличане на всички под-изрази в скоби
//////////////////////////////////////////////////////Примерен вход: 
//////////////////////////////////////////////////////1 + (2 - (2 + 3) * 4 / (3 + 1)) * 5

//////////////////////////////////////////////////////Изход:

//////////////////////////////////////////////////////(2 + 3)

//////////////////////////////////////////////////////(3 + 1)

//////////////////////////////////////////////////////(2 - (2 + 3) * 4 / (3 + 1))

//////////////////////////////////////////////////////Имате следният програмен фрагмент. 
//////////////////////////////////////////////////////В кода има грешка и не работи правилно.
//////////////////////////////////////////////////////static void Main(string[] args)
//////////////////////////////////////////////////////{
//////////////////////////////////////////////////////  Queue<int> indexes = new Queue<int>();
//////////////////////////////////////////////////////  string expression = Console.ReadLine();
//////////////////////////////////////////////////////  for (int i = 0; i < expression.Length; i++)
//////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////    if (expression[i] == '(')
//////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////      indexes.Enqueue(i);
//////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////    else if (expression[i] == ')')
//////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////      int startIndex = indexes.Dequeue();
//////////////////////////////////////////////////////      int length = i - startIndex + 1;
//////////////////////////////////////////////////////      string substr = expression.Substring(startIndex, length);
//////////////////////////////////////////////////////      Console.WriteLine(substr);
//////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////}

//////////////////////////////////////////////////////Вашата задача е да анализирате този фрагмент от код и да идентифицирате и поправите правилно грешките в написания програмен код, така че да реши поставената задача. Да допълните кода, ако и когато това е необходимо.

//////////////////////////////////////////////////////В полето за въвеждане записвате:

//////////////////////////////////////////////////////1.Вашият анализ на грешката и това как може да бъде поправено. 

//////////////////////////////////////////////////////2. Редактиран и правилно работещ код.


//////////////////////////////////////////////////////Има проблем с кода - при извличането на под-изрази в скоби, крайният резултат може да съдържа неправилни или повтарящи се под-изрази.

//////////////////////////////////////////////////////За да решим проблема, ще заменим Queue<int> с Stack<int> и ще използваме методите Push и Pop вместо Enqueue и Dequeue. Това ще гарантира, че под-изразите в скоби се обработват в правилния ред и няма повтарящи се или неправилни под-изрази


//////////////////////////////////////////////////////static void Main(string[] args)
//////////////////////////////////////////////////////{
//////////////////////////////////////////////////////  Stack<int> indexes = new Stack<int>();
//////////////////////////////////////////////////////  string expression = Console.ReadLine();
//////////////////////////////////////////////////////  for (int i = 0; i < expression.Length; i++)
//////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////    if (expression[i] == '(')
//////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////      indexes.Push(i);
//////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////    else if (expression[i] == ')')
//////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////      int startIndex = indexes.Pop();
//////////////////////////////////////////////////////      int length = i - startIndex + 1;
//////////////////////////////////////////////////////      string substr = expression.Substring(startIndex, length);
//////////////////////////////////////////////////////      Console.WriteLine(substr);
//////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////}


//////////////////////////////////////////////////////Въпрос 9
//////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////От максимално 8,00
//////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////Имате даден програмен фрамент от код написан на C#.


//////////////////////////////////////////////////////using System;

//////////////////////////////////////////////////////namespace Sequence
//////////////////////////////////////////////////////{
//////////////////////////////////////////////////////  class Program
//////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////    static void Main(string[] args)
//////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////      List<int> nums = Console.ReadLine().Split().ToList();

//////////////////////////////////////////////////////      int bestStart = 0
//////////////////////////////////////////////////////            int bestLength = 1;
//////////////////////////////////////////////////////      int currentLength = 1;
//////////////////////////////////////////////////////      int index = 0;
//////////////////////////////////////////////////////      int first = nums[index];

//////////////////////////////////////////////////////      for (int i = 1; i < nums.Count; i++)
//////////////////////////////////////////////////////      {
//////////////////////////////////////////////////////        if (first == nums[i])
//////////////////////////////////////////////////////        {
//////////////////////////////////////////////////////          currentLength++;
//////////////////////////////////////////////////////          if (currentLength > bestLength)
//////////////////////////////////////////////////////          {
//////////////////////////////////////////////////////            bestLength = currentLength;
//////////////////////////////////////////////////////          }
//////////////////////////////////////////////////////        }
//////////////////////////////////////////////////////        else
//////////////////////////////////////////////////////        {
//////////////////////////////////////////////////////          first = nums[i];
//////////////////////////////////////////////////////          index = i;
//////////////////////////////////////////////////////        }
//////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////      for (int i = bestStart; i < bestStart + bestLength; i++)
//////////////////////////////////////////////////////      {
//////////////////////////////////////////////////////        Console.Write($"{nums[i]} ");
//////////////////////////////////////////////////////      }
//////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////}




//////////////////////////////////////////////////////Съставете програма, която намира най-дългата последователност от равни числа в даден списък от цели числа List<int>   и отпечатва като резултат тази най-дълга последователност. Ако няколко поредици имат същата най-дълга дължина, върнете най-лявата от тях.

//////////////////////////////////////////////////////Вход

//////////////////////////////////////////////////////Изход

//////////////////////////////////////////////////////12 2 7 4 3 3 8

//////////////////////////////////////////////////////3 3

//////////////////////////////////////////////////////2 2 2 3 3 3

//////////////////////////////////////////////////////2 2 2

//////////////////////////////////////////////////////4 4 5 5 5

//////////////////////////////////////////////////////5 5 5



//////////////////////////////////////////////////////using System;

//////////////////////////////////////////////////////using System.Collections.Generic;

//////////////////////////////////////////////////////using System.Linq;



//////////////////////////////////////////////////////namespace Sequence

//////////////////////////////////////////////////////{

//////////////////////////////////////////////////////  class Program

//////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////    static void Main(string[] args)

//////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////      List<int> nums = Console.ReadLine().Split().Select(int.Parse).ToList();



//////////////////////////////////////////////////////      int bestStart = 0;

//////////////////////////////////////////////////////      int bestLength = 1;

//////////////////////////////////////////////////////      int currentLength = 1;

//////////////////////////////////////////////////////      int index = 0;



//////////////////////////////////////////////////////      for (int i = 1; i < nums.Count; i++)

//////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////        if (nums[index] == nums[i])

//////////////////////////////////////////////////////        {

//////////////////////////////////////////////////////          currentLength++;

//////////////////////////////////////////////////////          if (currentLength > bestLength)

//////////////////////////////////////////////////////          {

//////////////////////////////////////////////////////            bestLength = currentLength;

//////////////////////////////////////////////////////            bestStart = index;

//////////////////////////////////////////////////////          }

//////////////////////////////////////////////////////        }

//////////////////////////////////////////////////////        else

//////////////////////////////////////////////////////        {

//////////////////////////////////////////////////////          index = i;

//////////////////////////////////////////////////////          currentLength = 1;

//////////////////////////////////////////////////////        }

//////////////////////////////////////////////////////      }



//////////////////////////////////////////////////////      for (int i = bestStart; i < bestStart + bestLength; i++)

//////////////////////////////////////////////////////      {

//////////////////////////////////////////////////////        Console.Write($"{nums[i]} ");

//////////////////////////////////////////////////////      }

//////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////}



//////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////        static void LongestSequenceEqualNumbers()
//////////////////////////////////////////////////////{
//////////////////////////////////////////////////////  //List<int> nums = Console.ReadLine().Split().ToList(); //2т
//////////////////////////////////////////////////////  List<int> nums = Console.ReadLine().Split().Select(int.Parse).ToList();

//////////////////////////////////////////////////////  //int bestStart = 0 //2т
//////////////////////////////////////////////////////  int bestStart = 0;
//////////////////////////////////////////////////////  int bestLength = 1;
//////////////////////////////////////////////////////  int currentLength = 1;
//////////////////////////////////////////////////////  int index = 0;
//////////////////////////////////////////////////////  int first = nums[index];

//////////////////////////////////////////////////////  for (int i = 1; i < nums.Count; i++)
//////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////    if (first == nums[i])
//////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////      currentLength++;
//////////////////////////////////////////////////////      if (currentLength > bestLength)
//////////////////////////////////////////////////////      {
//////////////////////////////////////////////////////        bestLength = currentLength;
//////////////////////////////////////////////////////        //bestStart = index; //2т
//////////////////////////////////////////////////////        bestStart = index;
//////////////////////////////////////////////////////      }
//////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////    else
//////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////      first = nums[i];
//////////////////////////////////////////////////////      index = i;
//////////////////////////////////////////////////////      //currentLength = 1; //2т
//////////////////////////////////////////////////////      currentLength = 1;
//////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////  for (int i = bestStart; i < bestStart + bestLength; i++)
//////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////    Console.Write($"{nums[i]} ");
//////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////}

//////////////////////////////////////////////////////Въпрос 10
//////////////////////////////////////////////////////Неправилно
//////////////////////////////////////////////////////0,00 от максимално 4,00 точки
//////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////Обяснете какво прави методът Dequeue()?
//////////////////////////////////////////////////////Отговор: 
//////////////////////////////////////////////////////Изважда и връща първият елемент от опашката.
//////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////Правилният отговор е: премахва и връща елемента от началото на опашката
//////////////////////////////////////////////////////Въпрос 11
//////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////Дадени са следните картинки:




//////////////////////////////////////////////////////Това е визуализация на един от алгоритмите за сортиране. За този алгоритъм важи следното правило: 
//////////////////////////////////////////////////////Взема първият елемент в масива (29) и го сравнява със всеки следващ (10, 14, 37...) докато не намери най-малкия елемент (2). Разменя намереният най-малък елемент (2) с първоначално избрания (29). Тези стъпки се повтарят докато елементите в масива не се сортират.
//////////////////////////////////////////////////////Посочете кой от видовете алгоритми е използван:

//////////////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////////////a. Сортиране на елементите чрез броене.
//////////////////////////////////////////////////////b. Сортиране на елементите чрез вмъкване.
//////////////////////////////////////////////////////c. Сортиране на елементите чрез пряка селекция. 
//////////////////////////////////////////////////////d. Сортиране на елементите чрез метода на мехурчето.
//////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////Правилният отговор е: Сортиране на елементите чрез пряка селекция.
//////////////////////////////////////////////////////Въпрос 12
//////////////////////////////////////////////////////Неправилно
//////////////////////////////////////////////////////0,00 от максимално 2,00 точки
//////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////Имате даден следният псевдо код на алгоритъм за сортиране. Посочете кой алгоритъм за сортиране е използван:



//////////////////////////////////////////////////////Това е псевдо код за имплементация на алгоритъм за сортиране чрез 
//////////////////////////////////////////////////////пряка селекция


//////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////Your answer is incorrect.
//////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////Имате даден следният псевдо код на алгоритъм за сортиране. Посочете кой алгоритъм за сортиране е използван:



//////////////////////////////////////////////////////Това е псевдо код за имплементация на алгоритъм за сортиране чрез [метода на мехурчето]

//////////////////////////////////////////////////////Въпрос 13
//////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////От максимално 8,00
//////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////Имате даден следния програмен фрагмент:

//////////////////////////////////////////////////////public T Pop(int index)
//////////////////////////////////////////////////////{
//////////////////////////////////////////////////////  if (this.Count == 0)
//////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////    throw new InvalidOperationException("Empty stack");
//////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////  T element = this.items[index];
//////////////////////////////////////////////////////  T[] temp = new T[this.items.Length];
//////////////////////////////////////////////////////  for (int i = 0; i < this.Count; i++)
//////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////    temp[i] = this.items[i];
//////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////  this.items = temp;
//////////////////////////////////////////////////////  return element;
//////////////////////////////////////////////////////}


//////////////////////////////////////////////////////Този фрагмент е част от имплементацията на линейната структура от данни стек - премахване на елемент от стек. В кода има грешка! Вашата задача е да анализирате този фрагмент от код и да идентифицирате и поправите правилно грешките в написания програмен код, така че да реши поставената задача. Да допълните кода, ако и когато това е необходимо.

//////////////////////////////////////////////////////В полето за въвеждане записвате:

//////////////////////////////////////////////////////1.Вашият анализ на грешката и това как може да бъде поправено. 

//////////////////////////////////////////////////////2. Редактиран и правилно работещ код.

//////////////////////////////////////////////////////Този фрагмент код не изглежда да премахва елемента от масива, след като го е извлекъл. Трябва да коригираме този проблем, като премахнем елемента на дадения индекс и намалим броя на елементите с 1.
//////////////////////////////////////////////////////Стек обикновено премахва само последния добавен елемент (т.е. елементът на върха на стека), но този фрагмент код позволява премахването на елемент по произволен индекс. Въпреки това, ще оправим грешката в кода, като предположим, че целта е да се позволи премахване на елемент по произволен индекс.
//////////////////////////////////////////////////////public T Pop(int index)

//////////////////////////////////////////////////////{

//////////////////////////////////////////////////////  if (this.Count == 0)

//////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////    throw new InvalidOperationException("Empty stack");

//////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////  T element = this.items[index];



//////////////////////////////////////////////////////  // Създаваме нов масив с дължина, по-малка с едно от текущия

//////////////////////////////////////////////////////  T[] temp = new T[this.items.Length - 1];



//////////////////////////////////////////////////////  // Копираме елементите от стария масив в новия, без елемента с индекса

//////////////////////////////////////////////////////  for (int i = 0, j = 0; i < this.Count; i++)

//////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////    if (i != index)

//////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////      temp[j++] = this.items[i];

//////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////  }



//////////////////////////////////////////////////////  this.items = temp;

//////////////////////////////////////////////////////  this.Count--; // Намаляваме броя на елементите с 1

//////////////////////////////////////////////////////  return element;

//////////////////////////////////////////////////////}





//////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////Грешката в кода е, че методът Pop(int index) получава цяло число, което вътре в метода се използва за намиране на елемента в масива и премахването на този елемент. По дефиниция линейната структура стек не работи така. Правилото за работа със стек е "първи влиза - първи излиза". Нямаме право да достъпваме елементите по индекс, освен само и единствено за четене. Когато правим имплементацията за премахване на елемент от стек винаги премахваме последния елемент - в случая трябва да използваме броя на елементите (Count) на мястото на параметъра Index, за да премахнем последния елемент от масива в класа. И самия метод Pop() не трябва да приема параметър.//2т

//////////////////////////////////////////////////////public T Pop()//2т
//////////////////////////////////////////////////////{
//////////////////////////////////////////////////////  if (this.Count == 0)
//////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////    throw new InvalidOperationException("Empty stack");
//////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////  this.Count--;//2т
//////////////////////////////////////////////////////  T element = this.items[this.Count];//2т

//////////////////////////////////////////////////////  T[] temp = new T[this.items.Length];
//////////////////////////////////////////////////////  for (int i = 0; i < this.Count; i++)
//////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////    temp[i] = this.items[i];
//////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////  this.items = temp;
//////////////////////////////////////////////////////  return element;
//////////////////////////////////////////////////////}

//////////////////////////////////////////////////////Въпрос 14
//////////////////////////////////////////////////////Отчасти верен
//////////////////////////////////////////////////////3,56 от максимално 4,00 точки
//////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////Имате зададени твърдения за два алгоритъма за търсене - двоично търсене и линейно търсене. По зададените твърдения и характеристики трябва да сравните двата алгоритъма и да зададете коя от тях към кой от алгоритмите се отнася:

//////////////////////////////////////////////////////Стойностите в масива трябва да са сортирани. 
//////////////////////////////////////////////////////Двоично търсене


//////////////////////////////////////////////////////Работи във времева сложност O(log n). 
//////////////////////////////////////////////////////Двоично търсене


//////////////////////////////////////////////////////Ако ключът е по-малък от средния елемент, тогава ключът може да лежи само в левия подмасив. 
//////////////////////////////////////////////////////Двоично търсене


//////////////////////////////////////////////////////Работи във времева сложност O(log(log n)). 
//////////////////////////////////////////////////////Не се отнася за нито един от двата алгоритъма


//////////////////////////////////////////////////////Ако ключът е по-голям от средния елемент, тогава ключът може да лежи само в десния подмасив. 
//////////////////////////////////////////////////////Двоично търсене


//////////////////////////////////////////////////////Стойностите в масива не е задължително да са сортирани. 
//////////////////////////////////////////////////////Линейно търсене


//////////////////////////////////////////////////////Започва винаги от началото на масива. 
//////////////////////////////////////////////////////Линейно търсене


//////////////////////////////////////////////////////Ако ключът съвпада със средния елемент, върнете средното местоположение. 
//////////////////////////////////////////////////////Двоично търсене


//////////////////////////////////////////////////////Започва търсенето от средата на масива. 
//////////////////////////////////////////////////////Двоично търсене








//////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////Your answer is partially correct.
//////////////////////////////////////////////////////Вие правилно сте избрали 8.
//////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////Имате зададени твърдения за два алгоритъма за търсене - двоично търсене и линейно търсене. По зададените твърдения и характеристики трябва да сравните двата алгоритъма и да зададете коя от тях към кой от алгоритмите се отнася:

//////////////////////////////////////////////////////Стойностите в масива трябва да са сортирани. [Двоично търсене]

//////////////////////////////////////////////////////Работи във времева сложност O(log n). [Двоично търсене]

//////////////////////////////////////////////////////Ако ключът е по-малък от средния елемент, тогава ключът може да лежи само в левия подмасив. [Двоично търсене]

//////////////////////////////////////////////////////Работи във времева сложност O(log(log n)). [Линейно търсене]

//////////////////////////////////////////////////////Ако ключът е по-голям от средния елемент, тогава ключът може да лежи само в десния подмасив. [Двоично търсене]

//////////////////////////////////////////////////////Стойностите в масива не е задължително да са сортирани. [Линейно търсене]

//////////////////////////////////////////////////////Започва винаги от началото на масива. [Линейно търсене]

//////////////////////////////////////////////////////Ако ключът съвпада със средния елемент, върнете средното местоположение. [Двоично търсене]

//////////////////////////////////////////////////////Започва търсенето от средата на масива. [Двоично търсене]







//////////////////////////////////////////////////////Въпрос 15
//////////////////////////////////////////////////////Не е отговорен
//////////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////Имате следния програмен фрагмент:



//////////////////////////////////////////////////////Каква ще бъде сложността на алгоритъма и обяснете защо?

//////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////Ако имаме единичен цикъл от 1 до N, сложността му е линейна – O(N):

//////////////////////////////////////////////////////Въпрос 16
//////////////////////////////////////////////////////Отчасти верен
//////////////////////////////////////////////////////1,71 от максимално 2,00 точки
//////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////Показани са означенията на типовете сложност на алгоритъм, посочете съответстващата му сложност, като изберете от падащия списък срещу всяко от означенията:

//////////////////////////////////////////////////////O(n3)
//////////////////////////////////////////////////////кубична


//////////////////////////////////////////////////////O(log(N))
//////////////////////////////////////////////////////логаритмична


//////////////////////////////////////////////////////O(N)
//////////////////////////////////////////////////////линейна


//////////////////////////////////////////////////////O(2n)
//////////////////////////////////////////////////////експоненциална


//////////////////////////////////////////////////////О(n2)
//////////////////////////////////////////////////////квадратична


//////////////////////////////////////////////////////O(1)
//////////////////////////////////////////////////////константна


//////////////////////////////////////////////////////O(N!)
//////////////////////////////////////////////////////линейна


//////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////Your answer is partially correct.
//////////////////////////////////////////////////////Вие правилно сте избрали 6.
//////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////Показани са означенията на типовете сложност на алгоритъм, посочете съответстващата му сложност, като изберете от падащия списък срещу всяко от означенията:

//////////////////////////////////////////////////////O(n3)[кубична]

//////////////////////////////////////////////////////O(log(N))[логаритмична]

//////////////////////////////////////////////////////O(N)[линейна]

//////////////////////////////////////////////////////O(2n)[експоненциална]

//////////////////////////////////////////////////////О(n2)[квадратична]

//////////////////////////////////////////////////////O(1)[константна]

//////////////////////////////////////////////////////O(N!)[експоненциална]

//////////////////////////////////////////////////////Въпрос 17
//////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////4,00 от максимално 4,00 точки
//////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////Целта на задачата е да можете да различавате видовете алгоритми. На картинките са показани два алгоритъма. Срещу всяка една от картинките трябва да попълните кой от видовете алгоритми е използван.



//////////////////////////////////////////////////////Отговор 1
//////////////////////////////////////////////////////Алгоритъм за търсене на елемент в масив. Използван е алгоритъма линейно търсене.



//////////////////////////////////////////////////////Отговор 2
//////////////////////////////////////////////////////Алгоритъм за сортиране на елементите в масив. Използван е алгоритъма за сортиране чрез пряка селекция.

//////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////Правилният отговор е:  → Алгоритъм за търсене на елемент в масив. Използван е алгоритъма линейно търсене.,  → Алгоритъм за сортиране на елементите в масив. Използван е алгоритъма за сортиране чрез пряка селекция.
//////////////////////////////////////////////////////Въпрос 18
//////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////От максимално 6,00
//////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////Имате следният програмен фрагмент, който трябва да сортира елементите в подаден списък. В кода има грешка и не работи правилно. 
//////////////////////////////////////////////////////При примерен вход: 36 15 1 7 20 8 24

//////////////////////////////////////////////////////Програмата извежда като резултат следното: 1 1 1 7 8 8 24

//////////////////////////////////////////////////////А трябва да изведе сортираните елементи: 1 7 8 15 20 24 36

//////////////////////////////////////////////////////var list = Console.ReadLine().Split().Select(int.Parse).ToList();
//////////////////////////////////////////////////////for (int j = 0 j <= list.Count - 2; j++)
//////////////////////////////////////////////////////{
//////////////////////////////////////////////////////  for (int i = 0; i <= list.Count - 2; i++)
//////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////    if (list[i] > list[i + 1])
//////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////      list[i] = list[i + 1];
//////////////////////////////////////////////////////      list[i + 1] = list[i];
//////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////}
//////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", list));

//////////////////////////////////////////////////////Вашата задача е да откриете грешката, да я поправите и да запишете в полето вече правилно работещ код.



//////////////////////////////////////////////////////var list = Console.ReadLine().Split().Select(int.Parse).ToList();

//////////////////////////////////////////////////////for (int j = 0; j <= list.Count - 2; j++)

//////////////////////////////////////////////////////{

//////////////////////////////////////////////////////  for (int i = 0; i <= list.Count - 2; i++)

//////////////////////////////////////////////////////  {

//////////////////////////////////////////////////////    if (list[i] > list[i + 1])

//////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////      int temp = list[i]; // Добавяме временна променлива

//////////////////////////////////////////////////////      list[i] = list[i + 1];

//////////////////////////////////////////////////////      list[i + 1] = temp; // Използваме временната променлива тук

//////////////////////////////////////////////////////    }

//////////////////////////////////////////////////////  }

//////////////////////////////////////////////////////}

//////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", list));



//////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////var list = Console.ReadLine().Split().Select(int.Parse).ToList();
//////////////////////////////////////////////////////for (int j = 0; j <= list.Count - 2; j++)//2т
//////////////////////////////////////////////////////{
//////////////////////////////////////////////////////  for (int i = 0; i <= list.Count - 2; i++)
//////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////    if (list[i] > list[i + 1])
//////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////      int temp = list[i];//2т
//////////////////////////////////////////////////////      list[i] = list[i + 1];
//////////////////////////////////////////////////////      list[i + 1] = temp;//2т
//////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////}
//////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", list));



//////////////////////////////////////////////////////Въпрос 19
//////////////////////////////////////////////////////Неправилно
//////////////////////////////////////////////////////0,00 от максимално 4,00 точки
//////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////Обяснете какво прави методът Enqueue(T)?
//////////////////////////////////////////////////////Отговор: 
//////////////////////////////////////////////////////добавя елемент в края на опашката.
//////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////Правилният отговор е: добавя елемент в края на опашката
//////////////////////////////////////////////////////Въпрос 20
//////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////От максимално 8,00
//////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////Имате следният програмен фрагмент, който трябва да сортира елементите в подаден списък. В кода има грешка и не работи правилно. 
//////////////////////////////////////////////////////При примерен вход: 36 15 1 7 20 8 24

//////////////////////////////////////////////////////Програмата извежда като резултат следното: 1 1 1 7 8 8 24

//////////////////////////////////////////////////////А трябва да изведе сортираните елементи: 1 7 8 15 20 24 36

//////////////////////////////////////////////////////var list = Console.ReadLine().Split().Select(int.Parse).ToList();
//////////////////////////////////////////////////////for (int i = 0; i <= list.Count - 2; i++)
//////////////////////////////////////////////////////{
//////////////////////////////////////////////////////  for (int i = 0; i <= list.Count - 2; i++)
//////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////    if (list[i] < list[i + 1])
//////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////      list[i] = list[i + 1];
//////////////////////////////////////////////////////      list[i + 1] = list[i];
//////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////}
//////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", list));

//////////////////////////////////////////////////////Вашата задача е да откриете грешката, да я поправите и да запишете в полето вече правилно работещ код.



//////////////////////////////////////////////////////var list = Console.ReadLine().Split().Select(int.Parse).ToList();
//////////////////////////////////////////////////////for (int i = 0; i <= list.Count - 2; i++)
//////////////////////////////////////////////////////{
//////////////////////////////////////////////////////  for (int i = 0; i <= list.Count - 2; i++)
//////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////    if (list[i] < list[i + 1])
//////////////////////////////////////////////////////    {

//////////////////////////////////////////////////////      int temp = list[i]
//////////////////////////////////////////////////////                        list[i] = list[i + 1];
//////////////////////////////////////////////////////      list[i + 1] = temp;
//////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////}
//////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", list));

//////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////var list = Console.ReadLine().Split().Select(int.Parse).ToList();
//////////////////////////////////////////////////////for (int j = 0; j <= list.Count - 2; j++)//2т
//////////////////////////////////////////////////////{
//////////////////////////////////////////////////////  for (int i = 0; i <= list.Count - 2; i++)
//////////////////////////////////////////////////////  {
//////////////////////////////////////////////////////    if (list[i] > list[i + 1])//2т
//////////////////////////////////////////////////////    {
//////////////////////////////////////////////////////      int temp = list[i];//2т
//////////////////////////////////////////////////////      list[i] = list[i + 1];
//////////////////////////////////////////////////////      list[i + 1] = temp;//2т
//////////////////////////////////////////////////////    }
//////////////////////////////////////////////////////  }
//////////////////////////////////////////////////////}
//////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", list));



//////////////////////////////////////////////////////Въпрос 21
//////////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////Имате даден следният псевдо код на алгоритъм за сортиране. Посочете кой алгоритъм за сортиране е използван:



//////////////////////////////////////////////////////Това е псевдо код за имплементация на алгоритъм за сортиране чрез 
//////////////////////////////////////////////////////пряка селекция


//////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////////Имате даден следният псевдо код на алгоритъм за сортиране. Посочете кой алгоритъм за сортиране е използван:



//////////////////////////////////////////////////////Това е псевдо код за имплементация на алгоритъм за сортиране чрез [пряка селекция]

//////////////////////////////////////////////////////Въпрос 22
//////////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////////Разработвате ново приложение за оптимизиране на процесите в работата на призводствено предприятие. Трябва да приложите структура от данни, която да работи като „буфер“ срещу надхвърляне на капацитета. Когато сме в рамките на призводствения капацитет, артикулите в буфера трябва да се обработят в реда, в който се добавят. Обяснете коя структура от данни трябва да използвате защо бихте използвали точно нея, за да приложите такъв буфер?


//////////////////////////////////////////////////////За тази задача е подходящо да използвате структурата от данни "опашка" (queue). Опашката е линейна структура от данни, която работи по принципа "първи влязъл, първи излязъл" (FIFO - First In, First Out). Това означава, че елементите се вадят от опашката в същия ред, в който са добавени.

//////////////////////////////////////////////////////Опашката е подходяща за ситуации, където има процеси с ограничен капацитет или ресурси, които трябва да бъдат управлявани в определен ред. В случая с производството, опашката може да бъде използвана като буфер, който да съхранява артикулите в реда, в който трябва да бъдат обработени.

//////////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////////В опашката, артикулите се обработват в реда, в който са добавени. В частност, артикулите се добавят в края на опашката и се премахват от началото. Това е общоизвестно като first-in, first-out (FIFO) обработване.

//////////////////////////////////////////////////////Край на прегледа
//////////////////////////////////////////////////////Отиди на ...
//////////////////////////////////////////////////////Отиди на ...
//////////////////////////////////////////////////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
//////////////////////////////////////////////////////Навигация в теста
//////////////////////////////////////////////////////Край на прегледа
//////////////////////////////////////////////////////Вие сте влезли в системата като Добри Илев (Изход)
//////////////////////////////////////////////////////тренировъчен - курс - по
//////////////////////////////////////////////////////Data retention summary

////////////////////////////////////////////////////Прескочи на основното съдържание
////////////////////////////////////////////////////ПГЕЕ
////////////////////////////////////////////////////Български ‎(bg)‎ 
////////////////////////////////////////////////////Добри Илев 
////////////////////////////////////////////////////Тренировъчен курс - Програмно осигуряване
////////////////////////////////////////////////////Начална страница
////////////////////////////////////////////////////Моите курсове
//////////////////////////////////////////////////// тренировъчен-курс-по
//////////////////////////////////////////////////// Изпитна тема 7
//////////////////////////////////////////////////// Тест към Изпитна тема №7
////////////////////////////////////////////////////Започнат на	понеделник, 10 април 2023, 11:36
////////////////////////////////////////////////////Състояние Завършен
////////////////////////////////////////////////////Приключен на	сряда, 12 април 2023, 19:36
////////////////////////////////////////////////////Изминало време	2 дни 7 часа
////////////////////////////////////////////////////Оценка	Още не е оценен
////////////////////////////////////////////////////Въпрос 1
////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////Дефинирайте понятието стабилност на сортирането.

////////////////////////////////////////////////////Стабилност на сортиране е свойство на алгоритъма за сортиране, което гарантира, че редът на равните по стойност елементи се запазва след сортирането.Ако два елемента са равни по стойност и са в определен ред преди сортирането, те ще останат в същия ред след сортирането.

////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////Стабилност на сортирането - ако имаме два елемента които са равни в първоначалният масив, то във финалният те се срещат във същият ред като първоначалният масив.

////////////////////////////////////////////////////Алгоритмите за стабилно сортиране използват следното правило: ако два елемента при сравнение са еднакви (като например двете петици), то тяхната първоначална подредба ще бъде съхранена, така че ако едната от тях е преди другата в началната подредба, то тя ще бъде първа и в крайния резултат.

////////////////////////////////////////////////////Въпрос 2
////////////////////////////////////////////////////Неправилно
////////////////////////////////////////////////////0,00 от максимално 2,00 точки
////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////Текст на въпроса


////////////////////////////////////////////////////На картинката е показана част от имплементацията на линейната структура от данни опашка. Посочете коя имплементация е използвана:

////////////////////////////////////////////////////Изберете едно
////////////////////////////////////////////////////a. Статична имплементация на опашка
////////////////////////////////////////////////////b. Дървовидна имплементация на опашка
////////////////////////////////////////////////////c. Динамична имплементация на опашка 
////////////////////////////////////////////////////d. Имплементация на опашка базирана на възли (nodes)
////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////Your answer is incorrect.
////////////////////////////////////////////////////Правилният отговор е: Статична имплементация на опашка
////////////////////////////////////////////////////Въпрос 3
////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////Имате следния програмен фрагмент:



////////////////////////////////////////////////////Каква ще бъде сложността на алгоритъма и обяснете защо?

////////////////////////////////////////////////////В този алгоритъм има 3 вложени цикъла, които имаш сложност n ^ 1. 

////////////////////////////////////////////////////За да се сметне сложността на целия алгоритъм трябва да се умножи. 

////////////////////////////////////////////////////Сложността на този алгоритъм става O(n ^ 3).

////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////Ако имаме три вложени цикъла от 1 до N, сложността им е кубична – O(N3).

////////////////////////////////////////////////////Въпрос 4
////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////Имате даден следният псевдо код на алгоритъм за сортиране. Посочете кой алгоритъм за сортиране е използван:



////////////////////////////////////////////////////Това е псевдо код за имплементация на алгоритъм за сортиране чрез 
////////////////////////////////////////////////////пряка селекция


////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////////Имате даден следният псевдо код на алгоритъм за сортиране. Посочете кой алгоритъм за сортиране е използван:



////////////////////////////////////////////////////Това е псевдо код за имплементация на алгоритъм за сортиране чрез [пряка селекция]

////////////////////////////////////////////////////Въпрос 5
////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////От максимално 6,00
////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////Имате следният програмен фрагмент, който трябва да сортира елементите в подаден списък. В кода има грешка и не работи правилно. 
////////////////////////////////////////////////////При примерен вход: 36 15 1 7 20 8 24

////////////////////////////////////////////////////Програмата извежда като резултат следното: 1 1 1 7 8 8 24

////////////////////////////////////////////////////А трябва да изведе сортираните елементи: 1 7 8 15 20 24 36

////////////////////////////////////////////////////var collection = Console.ReadLine().Split().Select(int.Parse).ToList();
////////////////////////////////////////////////////for (int index = 0; index < collection.Count; index++)
////////////////////////////////////////////////////{
////////////////////////////////////////////////////  int min = index;
////////////////////////////////////////////////////  for (int curr = index + 1; curr < collection.Count; curr++)
////////////////////////////////////////////////////  {
////////////////////////////////////////////////////    if (collection[curr] > collection[min])
////////////////////////////////////////////////////    {
////////////////////////////////////////////////////      min = curr;
////////////////////////////////////////////////////    }
////////////////////////////////////////////////////  }
////////////////////////////////////////////////////  collection[index] = collection[min];
////////////////////////////////////////////////////  collection[min] = collection[index];
////////////////////////////////////////////////////}
////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", collection));

////////////////////////////////////////////////////Вашата задача е да откриете грешката, да я поправите и да запишете в полето вече правилно работещ код.



////////////////////////////////////////////////////var collection = Console.ReadLine().Split().Select(int.Parse).ToList();
////////////////////////////////////////////////////for (int index = 0; index < collection.Count; index++)
////////////////////////////////////////////////////{
////////////////////////////////////////////////////  int min = index;
////////////////////////////////////////////////////  for (int curr = index + 1; curr < collection.Count; curr++)
////////////////////////////////////////////////////  {
////////////////////////////////////////////////////    if (collection[curr] > collection[min])
////////////////////////////////////////////////////    {
////////////////////////////////////////////////////      min = curr;
////////////////////////////////////////////////////    }
////////////////////////////////////////////////////  }

////////////////////////////////////////////////////  int temp = collection[index]
////////////////////////////////////////////////////                collection[index] = collection[min];
////////////////////////////////////////////////////  collection[min] = temp;
////////////////////////////////////////////////////}
////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", collection));

////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////var collection = Console.ReadLine().Split().Select(int.Parse).ToList();
////////////////////////////////////////////////////for (int index = 0; index < collection.Count; index++)
////////////////////////////////////////////////////{
////////////////////////////////////////////////////  int min = index;
////////////////////////////////////////////////////  for (int curr = index + 1; curr < collection.Count; curr++)
////////////////////////////////////////////////////  {
////////////////////////////////////////////////////    if (collection[curr] < collection[min]) //2т
////////////////////////////////////////////////////    {
////////////////////////////////////////////////////      min = curr;
////////////////////////////////////////////////////    }
////////////////////////////////////////////////////  }
////////////////////////////////////////////////////  int temp = collection[index]; //2т
////////////////////////////////////////////////////  collection[index] = collection[min];
////////////////////////////////////////////////////  collection[min] = temp; //2т
////////////////////////////////////////////////////}
////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", collection));

////////////////////////////////////////////////////Въпрос 6
////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////Дадени са следните картинки:




////////////////////////////////////////////////////Това е визуализация на един от алгоритмите за сортиране. За този алгоритъм важи следното правило: 
////////////////////////////////////////////////////Масивът с несортирани елементи се разделя на две части: в едната част са сортираните елементи, в другата част са несортираните елементи. В случая числото 29 се предполага, че е в сортираната част, а числата от 10 до 6 - в несортираната. При всяка стъпка се взема първият елемент от несортираните елементи (в случая числото 10) сравнява го с предходните елементи и се поставя на правилната позиция в сортираната част на масива (в случая преди числото 29). На следващата стъпка първото число от несортирания масив е числото 14, взема това число и го поставя на правилната позиция в сортирания масив (между числата 10 и 29). Алгоритъма продължава докато елементите в несортираната част на масива се изчерпят.
////////////////////////////////////////////////////Посочете кой от видовете алгоритми е използван:

////////////////////////////////////////////////////Изберете едно
////////////////////////////////////////////////////a. Сортиране на елементите чрез броене.
////////////////////////////////////////////////////b. Сортиране на елементите чрез вмъкване. 
////////////////////////////////////////////////////c. Сортиране на елементите чрез метода на мехурчето.
////////////////////////////////////////////////////d. Сортиране на елементите чрез пряка селекция.
////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////////Правилният отговор е: Сортиране на елементите чрез вмъкване.
////////////////////////////////////////////////////Въпрос 7
////////////////////////////////////////////////////Неправилно
////////////////////////////////////////////////////0,00 от максимално 2,00 точки
////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////Текст на въпроса


////////////////////////////////////////////////////На картинката е показана част от имплементацията на линейната структура от данни опашка. Посочете коя имплементация е използвана:

////////////////////////////////////////////////////Изберете едно
////////////////////////////////////////////////////a. Динамична имплементация на опашка
////////////////////////////////////////////////////b. Дървовидна имплементация на опашка
////////////////////////////////////////////////////c. Статична имплементация на опашка
////////////////////////////////////////////////////d. Имплементация на опашка чрез списък 
////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////Your answer is incorrect.
////////////////////////////////////////////////////Правилният отговор е: Динамична имплементация на опашка
////////////////////////////////////////////////////Въпрос 8
////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////Дайте пример за това къде можете да срещнете поведението на структурата от данни опашка във вашето ежедневие. И обяснете защо.

////////////////////////////////////////////////////Поведението на структурата от данни опашка може да се срещне, когато чакаш своя ред пред банка или в магазина на касата.Опашката има поведение "първия влязъл, първи излиза.".Същото нещо е и когато си чакаш опашката пред магазина.Ако си дошъл първи, ти ще бъдеш обслужен първи.Когато идват нови хора, те се нареждат на последно място на опашката и си чакат своя ред.По същия начин е и в структурата от данни опашка

////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////Пример : Например опашка от хора, чакащи на каса за билети. Опашката има начало и край. Новодошлите хора застават последни на опашката и изчакват докато постепенно се придвижат към началото. Когато стигнат до самото начало на опашката си купуват билет и напускат опашката. 

////////////////////////////////////////////////////Пример 2: Други примери за опашка са документи, чакащи да бъдат отпечатани.

////////////////////////////////////////////////////Пример 3: Ескалатор превозващ хора. По този начин опашката изпълнява функцията на буфер.

////////////////////////////////////////////////////Защото: Структурата от данни опашка изпълнява условието „първият влязъл първи излиза“ (FIFO: First - In - First - Out). Това означава, че след като е добавен един елемент в края на опашката, той ще може да бъде извлечен (премахнат) единствено след като бъдат премахнати всички елементи преди него в реда, в който са добавени.



////////////////////////////////////////////////////Въпрос 9
////////////////////////////////////////////////////Отчасти верен
////////////////////////////////////////////////////3,56 от максимално 4,00 точки
////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////Имате зададени твърдения за два алгоритъма за търсене - двоично търсене и линейно търсене. По зададените твърдения и характеристики трябва да сравните двата алгоритъма и да зададете коя от тях към кой от алгоритмите се отнася:

////////////////////////////////////////////////////Стойностите в масива трябва да са сортирани. 
////////////////////////////////////////////////////Двоично търсене


////////////////////////////////////////////////////Работи във времева сложност O(log n). 
////////////////////////////////////////////////////Двоично търсене


////////////////////////////////////////////////////Ако ключът е по-малък от средния елемент, тогава ключът може да лежи само в левия подмасив. 
////////////////////////////////////////////////////Двоично търсене


////////////////////////////////////////////////////Работи във времева сложност O(log(log n)). 
////////////////////////////////////////////////////Не се отнася за нито един от двата алгоритъма


////////////////////////////////////////////////////Ако ключът е по-голям от средния елемент, тогава ключът може да лежи само в десния подмасив. 
////////////////////////////////////////////////////Двоично търсене


////////////////////////////////////////////////////Стойностите в масива не е задължително да са сортирани. 
////////////////////////////////////////////////////Линейно търсене


////////////////////////////////////////////////////Започва винаги от началото на масива. 
////////////////////////////////////////////////////Линейно търсене


////////////////////////////////////////////////////Ако ключът съвпада със средния елемент, върнете средното местоположение. 
////////////////////////////////////////////////////Двоично търсене


////////////////////////////////////////////////////Започва търсенето от средата на масива. 
////////////////////////////////////////////////////Двоично търсене








////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////Your answer is partially correct.
////////////////////////////////////////////////////Вие правилно сте избрали 8.
////////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////////Имате зададени твърдения за два алгоритъма за търсене - двоично търсене и линейно търсене. По зададените твърдения и характеристики трябва да сравните двата алгоритъма и да зададете коя от тях към кой от алгоритмите се отнася:

////////////////////////////////////////////////////Стойностите в масива трябва да са сортирани. [Двоично търсене]

////////////////////////////////////////////////////Работи във времева сложност O(log n). [Двоично търсене]

////////////////////////////////////////////////////Ако ключът е по-малък от средния елемент, тогава ключът може да лежи само в левия подмасив. [Двоично търсене]

////////////////////////////////////////////////////Работи във времева сложност O(log(log n)). [Линейно търсене]

////////////////////////////////////////////////////Ако ключът е по-голям от средния елемент, тогава ключът може да лежи само в десния подмасив. [Двоично търсене]

////////////////////////////////////////////////////Стойностите в масива не е задължително да са сортирани. [Линейно търсене]

////////////////////////////////////////////////////Започва винаги от началото на масива. [Линейно търсене]

////////////////////////////////////////////////////Ако ключът съвпада със средния елемент, върнете средното местоположение. [Двоично търсене]

////////////////////////////////////////////////////Започва търсенето от средата на масива. [Двоично търсене]







////////////////////////////////////////////////////Въпрос 10
////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////От максимално 8,00
////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////Имате даден програмен фрамент от код написан на C#.


////////////////////////////////////////////////////using System;

////////////////////////////////////////////////////namespace Sequence
////////////////////////////////////////////////////{
////////////////////////////////////////////////////  class Program
////////////////////////////////////////////////////  {
////////////////////////////////////////////////////    static void Main(string[] args)
////////////////////////////////////////////////////    {
////////////////////////////////////////////////////      List<int> nums = Console.ReadLine().Split().ToList();

////////////////////////////////////////////////////      int bestStart = 0
////////////////////////////////////////////////////            int bestLength = 1;
////////////////////////////////////////////////////      int currentLength = 1;
////////////////////////////////////////////////////      int index = 0;
////////////////////////////////////////////////////      int first = nums[index];

////////////////////////////////////////////////////      for (int i = 1; i < nums.Count; i++)
////////////////////////////////////////////////////      {
////////////////////////////////////////////////////        if (first == nums[i])
////////////////////////////////////////////////////        {
////////////////////////////////////////////////////          currentLength++;
////////////////////////////////////////////////////          if (currentLength > bestLength)
////////////////////////////////////////////////////          {
////////////////////////////////////////////////////            bestLength = currentLength;
////////////////////////////////////////////////////          }
////////////////////////////////////////////////////        }
////////////////////////////////////////////////////        else
////////////////////////////////////////////////////        {
////////////////////////////////////////////////////          first = nums[i];
////////////////////////////////////////////////////          index = i;
////////////////////////////////////////////////////        }
////////////////////////////////////////////////////      }

////////////////////////////////////////////////////      for (int i = bestStart; i < bestStart + bestLength; i++)
////////////////////////////////////////////////////      {
////////////////////////////////////////////////////        Console.Write($"{nums[i]} ");
////////////////////////////////////////////////////      }
////////////////////////////////////////////////////    }
////////////////////////////////////////////////////  }
////////////////////////////////////////////////////}




////////////////////////////////////////////////////Съставете програма, която намира най-дългата последователност от равни числа в даден списък от цели числа List<int>   и отпечатва като резултат тази най-дълга последователност. Ако няколко поредици имат същата най-дълга дължина, върнете най-лявата от тях.

////////////////////////////////////////////////////Вход

////////////////////////////////////////////////////Изход

////////////////////////////////////////////////////12 2 7 4 3 3 8

////////////////////////////////////////////////////3 3

////////////////////////////////////////////////////2 2 2 3 3 3

////////////////////////////////////////////////////2 2 2

////////////////////////////////////////////////////4 4 5 5 5

////////////////////////////////////////////////////5 5 5



////////////////////////////////////////////////////using System;

////////////////////////////////////////////////////namespace Sequence
////////////////////////////////////////////////////{
////////////////////////////////////////////////////  class Program
////////////////////////////////////////////////////  {
////////////////////////////////////////////////////    static void Main(string[] args)
////////////////////////////////////////////////////    {
////////////////////////////////////////////////////      List<int> nums = Console.ReadLine().Split().ToList();

////////////////////////////////////////////////////      int bestStart = 0;
////////////////////////////////////////////////////      int bestLength = 1;
////////////////////////////////////////////////////      int currentLength = 1;
////////////////////////////////////////////////////      int index = 0;
////////////////////////////////////////////////////      int first = nums[index];

////////////////////////////////////////////////////      for (int i = 1; i < nums.Count; i++)
////////////////////////////////////////////////////      {
////////////////////////////////////////////////////        if (first == nums[i])
////////////////////////////////////////////////////        {
////////////////////////////////////////////////////          currentLength++;
////////////////////////////////////////////////////          if (currentLength > bestLength)
////////////////////////////////////////////////////          {

////////////////////////////////////////////////////            bestLength = currentLength;

////////////////////////////////////////////////////            bestStart = index;
////////////////////////////////////////////////////          }
////////////////////////////////////////////////////        }
////////////////////////////////////////////////////        else
////////////////////////////////////////////////////        {
////////////////////////////////////////////////////          index = i;

////////////////////////////////////////////////////          currentLength = 1
////////////////////////////////////////////////////                }
////////////////////////////////////////////////////      }

////////////////////////////////////////////////////      for (int i = bestStart; i < bestStart + bestLength; i++)
////////////////////////////////////////////////////      {
////////////////////////////////////////////////////        Console.Write($"{nums[i]} ");
////////////////////////////////////////////////////      }
////////////////////////////////////////////////////    }
////////////////////////////////////////////////////  }
////////////////////////////////////////////////////}


////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////        static void LongestSequenceEqualNumbers()
////////////////////////////////////////////////////{
////////////////////////////////////////////////////  //List<int> nums = Console.ReadLine().Split().ToList(); //2т
////////////////////////////////////////////////////  List<int> nums = Console.ReadLine().Split().Select(int.Parse).ToList();

////////////////////////////////////////////////////  //int bestStart = 0 //2т
////////////////////////////////////////////////////  int bestStart = 0;
////////////////////////////////////////////////////  int bestLength = 1;
////////////////////////////////////////////////////  int currentLength = 1;
////////////////////////////////////////////////////  int index = 0;
////////////////////////////////////////////////////  int first = nums[index];

////////////////////////////////////////////////////  for (int i = 1; i < nums.Count; i++)
////////////////////////////////////////////////////  {
////////////////////////////////////////////////////    if (first == nums[i])
////////////////////////////////////////////////////    {
////////////////////////////////////////////////////      currentLength++;
////////////////////////////////////////////////////      if (currentLength > bestLength)
////////////////////////////////////////////////////      {
////////////////////////////////////////////////////        bestLength = currentLength;
////////////////////////////////////////////////////        //bestStart = index; //2т
////////////////////////////////////////////////////        bestStart = index;
////////////////////////////////////////////////////      }
////////////////////////////////////////////////////    }
////////////////////////////////////////////////////    else
////////////////////////////////////////////////////    {
////////////////////////////////////////////////////      first = nums[i];
////////////////////////////////////////////////////      index = i;
////////////////////////////////////////////////////      //currentLength = 1; //2т
////////////////////////////////////////////////////      currentLength = 1;
////////////////////////////////////////////////////    }
////////////////////////////////////////////////////  }

////////////////////////////////////////////////////  for (int i = bestStart; i < bestStart + bestLength; i++)
////////////////////////////////////////////////////  {
////////////////////////////////////////////////////    Console.Write($"{nums[i]} ");
////////////////////////////////////////////////////  }
////////////////////////////////////////////////////}

////////////////////////////////////////////////////Въпрос 11
////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////От максимално 8,00
////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////Имате следният програмен фрагмент, който трябва да сортира елементите в подаден списък. В кода има грешка и не работи правилно. 
////////////////////////////////////////////////////При примерен вход: 36 15 1 7 20 8 24

////////////////////////////////////////////////////Програмата извежда като резултат следното: 1 1 1 7 8 8 24

////////////////////////////////////////////////////А трябва да изведе сортираните елементи: 1 7 8 15 20 24 36

////////////////////////////////////////////////////var collection = Console.Readline().Split().Select(int.Parse).ToList();
////////////////////////////////////////////////////for (int index = 0; index < collection.Count; index++)
////////////////////////////////////////////////////{
////////////////////////////////////////////////////  int min = index;
////////////////////////////////////////////////////  for (int curr = index + 1; curr < collection.Count; curr++)
////////////////////////////////////////////////////  {
////////////////////////////////////////////////////    if (collection[curr] > collection[min])
////////////////////////////////////////////////////    {
////////////////////////////////////////////////////      min = curr;
////////////////////////////////////////////////////    }
////////////////////////////////////////////////////  }
////////////////////////////////////////////////////  collection[index] = collection[min];
////////////////////////////////////////////////////  collection[min] = collection[index];
////////////////////////////////////////////////////}
////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", collection));

////////////////////////////////////////////////////Вашата задача е да откриете грешката, да я поправите и да запишете в полето вече правилно работещ код.



////////////////////////////////////////////////////var collection = Console.Readline().Split().Select(int.Parse).ToList();
////////////////////////////////////////////////////for (int index = 0; index < collection.Count; index++)
////////////////////////////////////////////////////{
////////////////////////////////////////////////////  int min = index;
////////////////////////////////////////////////////  for (int curr = index + 1; curr < collection.Count; curr++)
////////////////////////////////////////////////////  {
////////////////////////////////////////////////////    if (collection[curr] > collection[min])
////////////////////////////////////////////////////    {

////////////////////////////////////////////////////      min = curr;
////////////////////////////////////////////////////    }
////////////////////////////////////////////////////  }

////////////////////////////////////////////////////  int temp = collection[index];
////////////////////////////////////////////////////  collection[index] = collection[min];
////////////////////////////////////////////////////  collection[min] = temp;
////////////////////////////////////////////////////}
////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", collection));

////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////var collection = Console.ReadLine().Split().Select(int.Parse).ToList(); //2т
////////////////////////////////////////////////////for (int index = 0; index < collection.Count; index++)
////////////////////////////////////////////////////{
////////////////////////////////////////////////////  int min = index;
////////////////////////////////////////////////////  for (int curr = index + 1; curr < collection.Count; curr++)
////////////////////////////////////////////////////  {
////////////////////////////////////////////////////    if (collection[curr] < collection[min])//2т
////////////////////////////////////////////////////    {
////////////////////////////////////////////////////      min = curr;
////////////////////////////////////////////////////    }
////////////////////////////////////////////////////  }
////////////////////////////////////////////////////  int temp = collection[index]; //2т
////////////////////////////////////////////////////  collection[index] = collection[min];
////////////////////////////////////////////////////  collection[min] = temp; //2т
////////////////////////////////////////////////////}
////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", collection));

////////////////////////////////////////////////////Въпрос 12
////////////////////////////////////////////////////Отчасти верен
////////////////////////////////////////////////////3,50 от максимално 4,00 точки
////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////Имате дадени твърдения. Вие трябва да можете да различавате и сравнявате видовете структури от данни. Срещу всяко едно от тези твърдения трябва да зададете правилната структура от данни за която то се отнася.

////////////////////////////////////////////////////За добавяне на елемент в структурата от данни използва операцията Push(T).  blank

////////////////////////////////////////////////////Можем да обходим елементите в структура от данни тип опашка с  помощта на for-цикъл.  blank 

////////////////////////////////////////////////////За премахване на елемент от структурата от данни използва операцията Dequeue().  blank

////////////////////////////////////////////////////За премахване на елемент от структурата от данни използва операцията Pop().  blank

////////////////////////////////////////////////////Структура от данни, която има поведението първи влязъл първи излязъл.  blank 

////////////////////////////////////////////////////Можем да достъп елемент от структурата от данни стек, като използваме операцията Peek(index) неговия индекс.blank

////////////////////////////////////////////////////Структура от данни, която има поведението последен влязъл първи излязъл.blank

////////////////////////////////////////////////////За добавяне на елемент в структурата от данни използва операцията Enqueue(T).  blank





////////////////////////////////////////////////////ОпашкаОпашкаОпашкаОпашкаОпашкаОпашкаОпашкаОпашкаСтекСтекСтекСтекСтекСтекСтекСтекТвърдението не е вярноТвърдението не е вярноТвърдението не е вярноТвърдението не е вярноТвърдението не е вярноТвърдението не е вярноТвърдението не е вярноТвърдението не е вярно
////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////Your answer is partially correct.
////////////////////////////////////////////////////Вие правилно сте избрали 7.
////////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////////Имате дадени твърдения.Вие трябва да можете да различавате и сравнявате видовете структури от данни. Срещу всяко едно от тези твърдения трябва да зададете правилната структура от данни за която то се отнася.

////////////////////////////////////////////////////За добавяне на елемент в структурата от данни използва операцията Push(T). [Стек]

////////////////////////////////////////////////////Можем да обходим елементите в структура от данни тип опашка с помощта на for-цикъл. [Твърдението не е вярно]

////////////////////////////////////////////////////За премахване на елемент от структурата от данни използва операцията Dequeue(). [Опашка]

////////////////////////////////////////////////////За премахване на елемент от структурата от данни използва операцията Pop(). [Стек]

////////////////////////////////////////////////////Структура от данни, която има поведението първи влязъл първи излязъл. [Опашка]

////////////////////////////////////////////////////Можем да достъп елемент от структурата от данни стек, като използваме операцията Peek(index) неговия индекс. [Твърдението не е вярно]

////////////////////////////////////////////////////Структура от данни, която има поведението последен влязъл първи излязъл. [Стек]

////////////////////////////////////////////////////За добавяне на елемент в структурата от данни използва операцията Enqueue(T). [Опашка]




////////////////////////////////////////////////////Въпрос 13
////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////От максимално 8,00
////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////Запазете историята на браузъра. Ще получите възможни команди:
////////////////////////////////////////////////////URL – отваря дадената страница
////////////////////////////////////////////////////back – връща към предната страница
////////////////////////////////////////////////////exit – спира програмата
////////////////////////////////////////////////////Примерен вход:

////////////////////////////////////////////////////www.softuni.bg
////////////////////////////////////////////////////www.judge.softuni.bg
////////////////////////////////////////////////////www.kids.softuni.bg
////////////////////////////////////////////////////back
////////////////////////////////////////////////////back
////////////////////////////////////////////////////exit

////////////////////////////////////////////////////Изход:
////////////////////////////////////////////////////www.judge.softuni.bg
////////////////////////////////////////////////////www.softuni.bg

////////////////////////////////////////////////////Имате следният програмен фрагмент.
////////////////////////////////////////////////////В кода има грешка и не работи правилно.
////////////////////////////////////////////////////static void Main(string[] args)
////////////////////////////////////////////////////{
////////////////////////////////////////////////////  List<string> pages = new List<string>();
////////////////////////////////////////////////////  string command = Console.ReadLine();
////////////////////////////////////////////////////  string previous = null;
////////////////////////////////////////////////////  while (!"exit".Equals(command))
////////////////////////////////////////////////////  {
////////////////////////////////////////////////////    if (command.Equals("back"))
////////////////////////////////////////////////////    {
////////////////////////////////////////////////////      if (pages.Count != 0)
////////////////////////////////////////////////////      {
////////////////////////////////////////////////////        Console.WriteLine(pages.Remove);
////////////////////////////////////////////////////      }
////////////////////////////////////////////////////      previous = null;
////////////////////////////////////////////////////    }
////////////////////////////////////////////////////    else
////////////////////////////////////////////////////    {
////////////////////////////////////////////////////      if (previous != null)
////////////////////////////////////////////////////      {
////////////////////////////////////////////////////        pages.Add(command);
////////////////////////////////////////////////////      }
////////////////////////////////////////////////////      previous = command;
////////////////////////////////////////////////////    }

////////////////////////////////////////////////////    command = Console.ReadLine();

////////////////////////////////////////////////////  }
////////////////////////////////////////////////////}

////////////////////////////////////////////////////Вашата задача е да анализирате този фрагмент от код и да идентифицирате и поправите правилно грешките в написания програмен код, така че да реши поставената задача. Да допълните кода, ако и когато това е необходимо.

////////////////////////////////////////////////////В полето за въвеждане записвате:

////////////////////////////////////////////////////1.Вашият анализ на грешката и това как може да бъде поправено. 

////////////////////////////////////////////////////2. Редактиран и правилно работещ код.


////////////////////////////////////////////////////static void Main(string[] args)
////////////////////////////////////////////////////{
////////////////////////////////////////////////////  List<string> pages = new List<string>();
////////////////////////////////////////////////////  string command = Console.ReadLine();
////////////////////////////////////////////////////  string previous = null;
////////////////////////////////////////////////////  while (!"exit".Equals(command))
////////////////////////////////////////////////////  {
////////////////////////////////////////////////////    if (command.Equals("back"))
////////////////////////////////////////////////////    {
////////////////////////////////////////////////////      if (pages.Count > 1)
////////////////////////////////////////////////////      {
////////////////////////////////////////////////////        pages.RemoveAt(pages.Count - 1);

////////////////////////////////////////////////////        previous = pages[pages.Count - 1]

////////////////////////////////////////////////////                     Console.WriteLine(previous);
////////////////////////////////////////////////////      }
////////////////////////////////////////////////////      previous = null;
////////////////////////////////////////////////////    }
////////////////////////////////////////////////////    else
////////////////////////////////////////////////////    {
////////////////////////////////////////////////////      if (previous != null)
////////////////////////////////////////////////////      {
////////////////////////////////////////////////////        pages.Add(command);
////////////////////////////////////////////////////      }
////////////////////////////////////////////////////      previous = command;
////////////////////////////////////////////////////    }

////////////////////////////////////////////////////    command = Console.ReadLine();

////////////////////////////////////////////////////  }
////////////////////////////////////////////////////}


////////////////////////////////////////////////////Въпрос 14
////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////Дайте пример с C# код, за метод който да сортира  елементите от списъка List<int> list = new List<int>() { 12, 8, 10, 2, 9, 6, 1}; посредством алгоритъма за сортиране  чрез вмъкване.

////////////////////////////////////////////////////using System;

////////////////////////////////////////////////////using System.Collections.Generic;



////////////////////////////////////////////////////class InsertionSortExample

////////////////////////////////////////////////////{

////////////////////////////////////////////////////  static void Main(string[] args)

////////////////////////////////////////////////////  {

////////////////////////////////////////////////////    List<int> list = new List<int>() { 12, 8, 10, 2, 9, 6, 1 };

////////////////////////////////////////////////////    InsertionSort(list);

////////////////////////////////////////////////////    Console.WriteLine(string.Join(" ", list));

////////////////////////////////////////////////////  }



////////////////////////////////////////////////////  public static void InsertionSort(List<int> list)

////////////////////////////////////////////////////  {

////////////////////////////////////////////////////    for (int i = 1; i < list.Count; i++)

////////////////////////////////////////////////////    {

////////////////////////////////////////////////////      int key = list[i];

////////////////////////////////////////////////////      int j = i - 1;





////////////////////////////////////////////////////      while (j >= 0 && list[j] > key)

////////////////////////////////////////////////////      {

////////////////////////////////////////////////////        list[j + 1] = list[j];

////////////////////////////////////////////////////        j = j - 1;

////////////////////////////////////////////////////      }

////////////////////////////////////////////////////      list[j + 1] = key;

////////////////////////////////////////////////////    }

////////////////////////////////////////////////////  }

////////////////////////////////////////////////////}



////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////public static void InsertionSort(List<int> list)
////////////////////////////////////////////////////{
////////////////////////////////////////////////////  for (int i = 1; i < list.Count; ++i)
////////////////////////////////////////////////////  {
////////////////////////////////////////////////////    int key = list[i];
////////////////////////////////////////////////////    int j = i - 1;

////////////////////////////////////////////////////    // Move elements of arr[0..i-1], 
////////////////////////////////////////////////////    // that are greater than key, 
////////////////////////////////////////////////////    // to one position ahead of 
////////////////////////////////////////////////////    // their current position 
////////////////////////////////////////////////////    while (j >= 0 && list[j] > key)
////////////////////////////////////////////////////    {
////////////////////////////////////////////////////      list[j + 1] = list[j];
////////////////////////////////////////////////////      j = j - 1;
////////////////////////////////////////////////////    }
////////////////////////////////////////////////////    list[j + 1] = key;
////////////////////////////////////////////////////  }
////////////////////////////////////////////////////}
////////////////////////////////////////////////////private static void Swap(List<int> list, int index, int min)
////////////////////////////////////////////////////{
////////////////////////////////////////////////////  int temp = list[index];
////////////////////////////////////////////////////  list[index] = list[min];
////////////////////////////////////////////////////  list[min] = temp;
////////////////////////////////////////////////////}

////////////////////////////////////////////////////Въпрос 15
////////////////////////////////////////////////////Отчасти верен
////////////////////////////////////////////////////3,60 от максимално 6,00 точки
////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////Имате даден следният програмен фрагмент. Свържете правилно липсващите части от кода.  

////////////////////////////////////////////////////          int low = 0;
////////////////////////////////////////////////////int high = sortedArray.Length - 1;
////////////////////////////////////////////////////while (sortedArray blank <= key && sortedArray blank >= key)
////////////////////////////////////////////////////            {
////////////////////////////////////////////////////  int mid = low + ((key - sortedArray[low]) * (high - low))
////////////////////////////////////////////////////    / (sortedArray[high] - sortedArray[low]);
////////////////////////////////////////////////////  if (blank)
////////////////////////////////////////////////////    low = mid + 1;
////////////////////////////////////////////////////  else if (blank)
////////////////////////////////////////////////////    high = mid - 1;
////////////////////////////////////////////////////  else
////////////////////////////////////////////////////    return mid;
////////////////////////////////////////////////////}
////////////////////////////////////////////////////if (blank) return low;
////////////////////////////////////////////////////else return -1;


////////////////////////////////////////////////////[low][low][low][low][low] sortedArray[low] == keysortedArray[low] == keysortedArray[low] == keysortedArray[low] == keysortedArray[low] == key[high][high][high][high][high]sortedArray[mid] < keysortedArray[mid] < keysortedArray[mid] < keysortedArray[mid] < keysortedArray[mid] < keysortedArray[mid] > keysortedArray[mid] > keysortedArray[mid] > keysortedArray[mid] > keysortedArray[mid] > key
////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////Your answer is partially correct.
////////////////////////////////////////////////////Вие правилно сте избрали 3.
////////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////////Имате даден следният програмен фрагмент. Свържете правилно липсващите части от кода.  

////////////////////////////////////////////////////          int low = 0;
////////////////////////////////////////////////////int high = sortedArray.Length - 1;
////////////////////////////////////////////////////while (sortedArray[[low]] <= key && sortedArray[[high]] >= key)
////////////////////////////////////////////////////            {
////////////////////////////////////////////////////  int mid = low + ((key - sortedArray[low]) * (high - low))
////////////////////////////////////////////////////    / (sortedArray[high] - sortedArray[low]);
////////////////////////////////////////////////////  if ([sortedArray[mid] < key])
////////////////////////////////////////////////////    low = mid + 1;
////////////////////////////////////////////////////  else if ([sortedArray[mid] > key])
////////////////////////////////////////////////////    high = mid - 1;
////////////////////////////////////////////////////  else
////////////////////////////////////////////////////    return mid;
////////////////////////////////////////////////////}
////////////////////////////////////////////////////if ([sortedArray[low] == key]) return low;
////////////////////////////////////////////////////else return -1;

////////////////////////////////////////////////////Въпрос 16
////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////Ако имате следната последователност от числа: "12, 14, 24, 28, 29, 32, 36, 40, 41" и трябва да напишете алгоритъм, който да намери елемент от този списък, например числото 36. 

////////////////////////////////////////////////////Като използвате алгоритъма за двоично търсене обяснете последователността от стъпки, които трябва да се изпълнят за да намерите търсеното число. 

////////////////////////////////////////////////////А какво ще се случи, ако търсеното число не е в списъка?



////////////////////////////////////////////////////Ако имате последователността от числа: "12, 14, 24, 28, 29, 32, 36, 40, 41" и търсите числото 36, алгоритъмът за двоично търсене ще работи по следния начин:

////////////////////////////////////////////////////Задайте стартовия индекс low на 0 и краен индекс high на дължината на списъка минус 1 (8 в този случай).
////////////////////////////////////////////////////Намерете средния индекс mid: (low + high) / 2.В началото(0 + 8) / 2 = 4.
////////////////////////////////////////////////////Проверете дали елементът на средния индекс е равен на търсеното число:
////////////////////////////////////////////////////Ако list[mid] == 36, сте намерили числото.
////////////////////////////////////////////////////Ако list[mid] < 36, значи числото е в дясната половина на списъка. Задайте low = mid + 1 и повторете стъпка 2.
////////////////////////////////////////////////////Ако list[mid] > 36, значи числото е в лявата половина на списъка. Задайте high = mid - 1 и повторете стъпка 2.
////////////////////////////////////////////////////В този случай, list[4] = 29, което е по-малко от 36. Затова low = mid + 1 = 5.
////////////////////////////////////////////////////Намерете новият среден индекс: (5 + 8) / 2 = 6.
////////////////////////////////////////////////////list[6] = 36, което е равно на търсеното число. Алгоритъмът завършва успешно.
////////////////////////////////////////////////////Ако търсеното число не е в списъка, алгоритъмът ще продължи да обновява стойностите на low и high докато low стане по-голямо от high. В този случай алгоритъмът завършва и се счита, че търсеното число не е намерено в списъка.


////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////Алгоритъма за двоично търсене работи само и единствено със сортирани елементи, като разделя масива на две части. Ако търсеното число съвпада със средния елемент, тогава алгоритъма връща индекса на средния елемент. 

////////////////////////////////////////////////////Ако търсеното число е по-голямо от средния елемент, тогава  търсеното число стои в дясната половина на масива. Тогава разделяме дясната половина отново на две части и сравняваме със средния елемент. 

////////////////////////////////////////////////////Ако търсеното число е по-малко от средния елемент тогава търсим в лявата половина на масива, като отново я разделяме на две части и сравняваме със средния елемент.

////////////////////////////////////////////////////Алгоритъмът се повтаря докато открием търсения елемент.

////////////////////////////////////////////////////Ако x не съвпада с нито един от елементите, връщаме -1.

////////////////////////////////////////////////////Въпрос 17
////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////От максимално 8,00
////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////Даден е аритметичен израз със скоби (може и вложени).
////////////////////////////////////////////////////Цел: извличане на всички под-изрази в скоби
////////////////////////////////////////////////////Примерен вход: 
////////////////////////////////////////////////////1 + (2 - (2 + 3) * 4 / (3 + 1)) * 5

////////////////////////////////////////////////////Изход:

////////////////////////////////////////////////////(2 + 3)

////////////////////////////////////////////////////(3 + 1)

////////////////////////////////////////////////////(2 - (2 + 3) * 4 / (3 + 1))

////////////////////////////////////////////////////Имате следният програмен фрагмент. 
////////////////////////////////////////////////////В кода има грешка и не работи правилно.
////////////////////////////////////////////////////static void Main(string[] args)
////////////////////////////////////////////////////{
////////////////////////////////////////////////////  Queue<int> indexes = new Queue<int>();
////////////////////////////////////////////////////  string expression = Console.ReadLine();
////////////////////////////////////////////////////  for (int i = 0; i < expression.Length; i++)
////////////////////////////////////////////////////  {
////////////////////////////////////////////////////    if (expression[i] == '(')
////////////////////////////////////////////////////    {
////////////////////////////////////////////////////      indexes.Enqueue(i);
////////////////////////////////////////////////////    }
////////////////////////////////////////////////////    else if (expression[i] == ')')
////////////////////////////////////////////////////    {
////////////////////////////////////////////////////      int startIndex = indexes.Dequeue();
////////////////////////////////////////////////////      int length = i - startIndex + 1;
////////////////////////////////////////////////////      string substr = expression.Substring(startIndex, length);
////////////////////////////////////////////////////      Console.WriteLine(substr);
////////////////////////////////////////////////////    }
////////////////////////////////////////////////////  }
////////////////////////////////////////////////////}

////////////////////////////////////////////////////Вашата задача е да анализирате този фрагмент от код и да идентифицирате и поправите правилно грешките в написания програмен код, така че да реши поставената задача. Да допълните кода, ако и когато това е необходимо.

////////////////////////////////////////////////////В полето за въвеждане записвате:

////////////////////////////////////////////////////1.Вашият анализ на грешката и това как може да бъде поправено. 

////////////////////////////////////////////////////2. Редактиран и правилно работещ код.


////////////////////////////////////////////////////static void Main(string[] args)
////////////////////////////////////////////////////{
////////////////////////////////////////////////////  Stack<int> indexes = new Stack<int>();
////////////////////////////////////////////////////  string expression = Console.ReadLine();
////////////////////////////////////////////////////  for (int i = 0; i < expression.Length; i++)
////////////////////////////////////////////////////  {
////////////////////////////////////////////////////    if (expression[i] == '(')
////////////////////////////////////////////////////    {
////////////////////////////////////////////////////      indexes.Push(i);
////////////////////////////////////////////////////    }
////////////////////////////////////////////////////    else if (expression[i] == ')')
////////////////////////////////////////////////////    {
////////////////////////////////////////////////////      int startIndex = indexes.Pop();
////////////////////////////////////////////////////      int length = i - startIndex + 1;
////////////////////////////////////////////////////      string substr = expression.Substring(startIndex, length);
////////////////////////////////////////////////////      Console.WriteLine(substr);
////////////////////////////////////////////////////    }
////////////////////////////////////////////////////  }
////////////////////////////////////////////////////}


////////////////////////////////////////////////////Въпрос 18
////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////Ако имате следната последователност от числа: "15, 85, 34, 12, 0, -9, 14, 63, 7, 32" и трябва да напишете алгоритъм, който да намери елемент от този списък, например числото 34. 

////////////////////////////////////////////////////Като използвате алгоритъма за линейно търсене обяснете последователността от стъпки, които трябва да се изпълнят за да намерите търсеното число. 

////////////////////////////////////////////////////А какво ще се случи, ако търсеното число не е в списъка?



////////////////////////////////////////////////////За да намерите елемент от списъка като числото 34, използвайки алгоритъма за линейно търсене, ще извършите следната последователност от стъпки:

////////////////////////////////////////////////////Започнете от първия елемент на списъка (15 в този случай).
////////////////////////////////////////////////////Сравнете текущия елемент с търсеното число (34).
////////////////////////////////////////////////////Ако текущият елемент е равен на търсеното число, тогава сте го намерили и може да спрете търсенето.
////////////////////////////////////////////////////Ако текущият елемент не е равен на търсеното число, продължете към следващия елемент в списъка.
////////////////////////////////////////////////////Повторете стъпки 2-4, докато не намерите търсеното число или не стигнете до края на списъка.
////////////////////////////////////////////////////В този случай, последователността ще изглежда така:

////////////////////////////////////////////////////Сравнете 15 с 34(не са равни, продължете).
////////////////////////////////////////////////////Сравнете 85 с 34(не са равни, продължете).
////////////////////////////////////////////////////Сравнете 34 с 34(равни са, намерихте числото).
////////////////////////////////////////////////////Ако търсеното число не е в списъка, ще стигнете до края на списъка, без да намерите числото. В този случай, може да върнете стойност, която показва, че числото не е намерено (например -1) или да изведете съобщение, че числото не е намерено в списъка.


////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////Линейното търсене е прост подход за намиране на елемент в списък.

////////////////////////////////////////////////////Започваме от най-левия елемент на масива и едно по едно сравняваме търсеното число (х) с всеки елемент на масива.

////////////////////////////////////////////////////Ако x съвпада с елемент от масива, връщаме индекса, в случая числото 34 е на индекс 2 и алгоритъма трябва да върне числото 2 като резултат.

////////////////////////////////////////////////////Ако x не съвпада с нито един от елементите, връщаме -1.

////////////////////////////////////////////////////Въпрос 19
////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////Имате следния програмен фрагмент:



////////////////////////////////////////////////////Каква ще бъде сложността на алгоритъма и обяснете защо?

////////////////////////////////////////////////////Алгоритъма итерира през всеки елемент на масива точно веднъж, за да намери максималния елемент.Времето расте линейно.

////////////////////////////////////////////////////За това сложността на алгоритъма е O(N), където n е броят на елементите в масива .

////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////Ако имаме единичен цикъл от 1 до N, сложността му е линейна – O(N):

////////////////////////////////////////////////////Въпрос 20
////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////От максимално 8,00
////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////Имате следният програмен фрагмент, който трябва да сортира елементите в подаден списък. В кода има грешка и не работи правилно. 
////////////////////////////////////////////////////При примерен вход: 36 15 1 7 20 8 24

////////////////////////////////////////////////////Програмата извежда като резултат следното: 1 1 1 7 8 8 24

////////////////////////////////////////////////////А трябва да изведе сортираните елементи: 1 7 8 15 20 24 36

////////////////////////////////////////////////////var list = Console.ReadLine().Split().Select(int.Parse).ToList();
////////////////////////////////////////////////////for (int i = 0; i <= list.Count - 2; i++)
////////////////////////////////////////////////////{
////////////////////////////////////////////////////  for (int i = 0; i <= list.Count - 2; i++)
////////////////////////////////////////////////////  {
////////////////////////////////////////////////////    if (list[i] < list[i + 1])
////////////////////////////////////////////////////    {
////////////////////////////////////////////////////      list[i] = list[i + 1];
////////////////////////////////////////////////////      list[i + 1] = list[i];
////////////////////////////////////////////////////    }
////////////////////////////////////////////////////  }
////////////////////////////////////////////////////}
////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", list));

////////////////////////////////////////////////////Вашата задача е да откриете грешката, да я поправите и да запишете в полето вече правилно работещ код.



////////////////////////////////////////////////////var list = Console.ReadLine().Split().Select(int.Parse).ToList();
////////////////////////////////////////////////////for (int i = 0; i <= list.Count - 2; i++)
////////////////////////////////////////////////////{
////////////////////////////////////////////////////  for (int j = 0; i <= list.Count - 2; j++)
////////////////////////////////////////////////////  {
////////////////////////////////////////////////////    if (list[j] < list[j + 1])
////////////////////////////////////////////////////    {
////////////////////////////////////////////////////      list[j] = list[j + 1];
////////////////////////////////////////////////////      list[j + 1] = list[j];
////////////////////////////////////////////////////    }
////////////////////////////////////////////////////  }
////////////////////////////////////////////////////}

////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////var list = Console.ReadLine().Split().Select(int.Parse).ToList();
////////////////////////////////////////////////////for (int j = 0; j <= list.Count - 2; j++)//2т
////////////////////////////////////////////////////{
////////////////////////////////////////////////////  for (int i = 0; i <= list.Count - 2; i++)
////////////////////////////////////////////////////  {
////////////////////////////////////////////////////    if (list[i] > list[i + 1])//2т
////////////////////////////////////////////////////    {
////////////////////////////////////////////////////      int temp = list[i];//2т
////////////////////////////////////////////////////      list[i] = list[i + 1];
////////////////////////////////////////////////////      list[i + 1] = temp;//2т
////////////////////////////////////////////////////    }
////////////////////////////////////////////////////  }
////////////////////////////////////////////////////}
////////////////////////////////////////////////////Console.WriteLine(string.Join(" ", list));



////////////////////////////////////////////////////Въпрос 21
////////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////Дайте пример за това къде можете да срещнете поведението на структурата от данни стек във вашето ежедневие. И обяснете защо.

////////////////////////////////////////////////////Пример за поведението на структурата от данни стек във ежедневието е, когато се нареждат чинии в кухненския шкаф.Чиниите се нареждат една върху друга.Когато се взима чиния тя се взима от най-горе и се слага най-горе.

////////////////////////////////////////////////////Това е присъщо на стека, защото и той има поведение "последен влязъл, първи излиза".Така последната чиния става първа, а първата последна.Същото е, когато се взима от там.Взима се най-горната.

////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////Пример 1 : Работната памет на програмата (стек) -Примитивните типове данни(числа, char, bool) се наричат стойностни типове, защото пазят непосредствено своята стойност в стека за изпълнение на програмата. 

////////////////////////////////////////////////////Стекът е често срещана и използвана структура от данни. Стек се използва и вътрешно от C# виртуалната машина за съхранение на променливите в програмата и параметрите при извикване на метод.

////////////////////////////////////////////////////Например една променлива, декларирана в метода Main() на програмата се пази в стека докато програмата завърши изпълнението на този метод, т.е. докато не завърши.

////////////////////////////////////////////////////Пример 2: Куп с чинии

////////////////////////////////////////////////////Пример 3: Куп с книги

////////////////////////////////////////////////////Защото: Стекът има поведение последен влязъл пръв излязъл. 

////////////////////////////////////////////////////Въпрос 22
////////////////////////////////////////////////////Правилно
////////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////////Показани са означенията на типовете сложност на алгоритъм, посочете съответстващата му сложност, като изберете от падащия списък срещу всяко от означенията:

////////////////////////////////////////////////////O(n3)
////////////////////////////////////////////////////кубична


////////////////////////////////////////////////////O(log(N))
////////////////////////////////////////////////////логаритмична


////////////////////////////////////////////////////O(N)
////////////////////////////////////////////////////линейна


////////////////////////////////////////////////////O(2n)
////////////////////////////////////////////////////експоненциална


////////////////////////////////////////////////////О(n2)
////////////////////////////////////////////////////квадратична


////////////////////////////////////////////////////O(1)
////////////////////////////////////////////////////константна


////////////////////////////////////////////////////O(N!)
////////////////////////////////////////////////////експоненциална


////////////////////////////////////////////////////Забележка
////////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////////Показани са означенията на типовете сложност на алгоритъм, посочете съответстващата му сложност, като изберете от падащия списък срещу всяко от означенията:

////////////////////////////////////////////////////O(n3)[кубична]

////////////////////////////////////////////////////O(log(N))[логаритмична]

////////////////////////////////////////////////////O(N)[линейна]

////////////////////////////////////////////////////O(2n)[експоненциална]

////////////////////////////////////////////////////О(n2)[квадратична]

////////////////////////////////////////////////////O(1)[константна]

////////////////////////////////////////////////////O(N!)[експоненциална]

////////////////////////////////////////////////////Край на прегледа
////////////////////////////////////////////////////Отиди на ...
////////////////////////////////////////////////////Отиди на ...
////////////////////////////////////////////////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
////////////////////////////////////////////////////Навигация в теста
////////////////////////////////////////////////////Край на прегледа
////////////////////////////////////////////////////Вие сте влезли в системата като Добри Илев (Изход)
////////////////////////////////////////////////////тренировъчен - курс - по
////////////////////////////////////////////////////Data retention summary


////////////////////////////////////////////////////ИЗПИТНА ТЕМА 8
//////////////////////////////////////////////////Прескочи на основното съдържание
//////////////////////////////////////////////////ПГЕЕ
//////////////////////////////////////////////////Български ‎(bg)‎ 
//////////////////////////////////////////////////Добри Илев 
//////////////////////////////////////////////////Тренировъчен курс - Програмно осигуряване
//////////////////////////////////////////////////Начална страница
//////////////////////////////////////////////////Моите курсове
////////////////////////////////////////////////// тренировъчен-курс-по
////////////////////////////////////////////////// Изпитна тема 8
////////////////////////////////////////////////// Тест 1 - Изпитна тема №8
//////////////////////////////////////////////////Започнат на	неделя, 12 февруари 2023, 16:49
//////////////////////////////////////////////////Състояние Завършен
//////////////////////////////////////////////////Приключен на	неделя, 12 февруари 2023, 20:37
//////////////////////////////////////////////////Изминало време	3 часа 47 мин.
//////////////////////////////////////////////////Оценка	Още не е оценен
//////////////////////////////////////////////////Въпрос 1
//////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////Създайте таблица persons, която да съдържа две колони city_id, FirstName и LastName, като прецените типа данни, който да укажете за колоните. Колоната city_id да бъде първичен ключ.



//////////////////////////////////////////////////CREATE TABLE persons ( city_id INT NOT NULL, FirstName VARCHAR(255) NOT NULL, LastName VARCHAR(255) NOT NULL, PRIMARY KEY (city_id) );
//////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////CREATE TABLE persons

//////////////////////////////////////////////////(

//////////////////////////////////////////////////city_id INT PRIMARY KEY,

//////////////////////////////////////////////////FirstName VARCHAR(50),

//////////////////////////////////////////////////LastName VARCHAR(50)

//////////////////////////////////////////////////);


//////////////////////////////////////////////////Въпрос 2
//////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////Имате код за създаване на таблици. Посочете вида на връзката, която се получава.

//////////////////////////////////////////////////CREATE TABLE drivers(

//////////////////////////////////////////////////  driver_id INT PRIMARY KEY,

//////////////////////////////////////////////////  driver_name VARCHAR(50)

//////////////////////////////////////////////////);

//////////////////////////////////////////////////CREATE TABLE cars(

//////////////////////////////////////////////////  car_id INT PRIMARY KEY,

//////////////////////////////////////////////////  driver_id INT UNIQUE,

//////////////////////////////////////////////////  CONSTRAINT fk_cars_drivers FOREIGN KEY
//////////////////////////////////////////////////  (driver_id) REFERENCES drivers(driver_id)

//////////////////////////////////////////////////);

//////////////////////////////////////////////////CONSTRAINT fk_cars_drivers
//////////////////////////////////////////////////FOREIGN KEY (driver_id)
//////////////////////////////////////////////////REFERENCES drivers(driver_id)




//////////////////////////////////////////////////В дадения код се създават две таблици: drivers и cars. Таблицата drivers съдържа две колони: driver_id и driver_name. Колоната driver_id е първичен ключ.

//////////////////////////////////////////////////Таблицата cars съдържа три колони: car_id, driver_id и fk_cars_drivers. Колоната car_id е първичен ключ, а колоната driver_id е уникален индекс. Ограничението fk_cars_drivers е външен ключ и дефинира връзка между таблиците cars и drivers. То определя, че всеки driver_id в таблицата cars трябва да бъде съществуващ в колоната driver_id в таблицата drivers. Това ограничение защитава целостта на данните и помага при поддържане на целостността на базата данни.

//////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////Едно - към - едно

//////////////////////////////////////////////////Въпрос 3
//////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////Направете разлика между видовете връзки и посочете вярното твърдение за всяка една връзка.

//////////////////////////////////////////////////Връзка много към много

//////////////////////////////////////////////////Отговор 1
//////////////////////////////////////////////////При тази връзка на един запис от първата таблица съответстват много записи от втората таблица и обратно.

//////////////////////////////////////////////////Връзка едно към едно

//////////////////////////////////////////////////Отговор 2
//////////////////////////////////////////////////При тази връзка на един запис от първата таблица съответства точно един запис от втората таблица.

//////////////////////////////////////////////////Връзка едно към много

//////////////////////////////////////////////////Отговор 3
//////////////////////////////////////////////////При тази връзка един запис от първата таблица съответства на много записи от втората таблица.

//////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////Правилният отговор е: Връзка много към много → При тази връзка на един запис от първата таблица съответстват много записи от втората таблица и обратно., Връзка едно към едно → При тази връзка на един запис от първата таблица съответства точно един запис от втората таблица., Връзка едно към много → При тази връзка един запис от първата таблица съответства на много записи от втората таблица.
//////////////////////////////////////////////////Въпрос 4
//////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////От максимално 2,00
//////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////Посочете определение за понятието бази от данни.

//////////////////////////////////////////////////База данни е организиран списък от данни, който се управлява от софтуер за бази данни. Тя предоставя средства за добавяне, преглед, промяна и изтриване на данни, както и за управление на достъпа и взаимодействие с данните. Целта на базата данни е да поддържа коректна и ефективна управление на данните в организацията.

//////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////База от данни се нарича всяка организирана колекция от данни или информация.

//////////////////////////////////////////////////Въпрос 5
//////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////Посочете вярното твърдение за по-долу посочения код:

//////////////////////////////////////////////////CREATE TABLE Persons(

//////////////////////////////////////////////////            ID int NOT NULL,

//////////////////////////////////////////////////            FirstName varchar(255) NOT NULL,

//////////////////////////////////////////////////            LastName varchar(255) NOT NULL,

//////////////////////////////////////////////////          );


//////////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////////a. Създава таблица с колони ID, FirstName и LastName от текстов тип като може в клетките да има празна стойност.
//////////////////////////////////////////////////b. Създава таблица с колони ID от тип цяло цисло, FirstName от текстов тип и LastName от текстов тип и не позволява в клетките да има празна стойност. 
//////////////////////////////////////////////////c. Създава таблица с колони ID от тип дробно цисло, FirstName от текстов тип и LastName от текстов тип гарантира, че всички данни в колоната са различни.
//////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////Правилният отговор е: Създава таблица с колони ID от тип цяло цисло, FirstName от текстов тип и LastName от текстов тип и не позволява в клетките да има празна стойност.
//////////////////////////////////////////////////Въпрос 6
//////////////////////////////////////////////////Неправилно
//////////////////////////////////////////////////0,00 от максимално 2,00 точки
//////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////Ограниченията задават правила за данните в дадена таблица. Посочете вярното твърдение за ограничението PRIMARY KEY.

//////////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////////a. гарантира, че всички данни в колоната са различни/уникални 
//////////////////////////////////////////////////b.
//////////////////////////////////////////////////идентифицира уникално всеки запис в таблицата
//////////////////////////////////////////////////c.
//////////////////////////////////////////////////уникално идентифицира запис от друга таблица
//////////////////////////////////////////////////d. задава стойност по подразбиране за колоната, когато не е зададена такава при вмъкване на записа
//////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////Your answer is incorrect.
//////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////идентифицира уникално всеки запис в таблицата
//////////////////////////////////////////////////Въпрос 7
//////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////От максимално 40,00
//////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////Като използвате дадената ER диаграма, напишете заявките за създаване база данни online_store и за създаване на таблиците в нея.



//////////////////////////////////////////////////CREATE DATABASE online_store;



//////////////////////////////////////////////////CREATE TABLE order_items(

//////////////////////////////////////////////////order_id INT PRIMARY KEY AUTO_INCREMENT,

//////////////////////////////////////////////////item_id INT PRIMARY KEY auto_increment

//////////////////////////////////////////////////);



//////////////////////////////////////////////////CREATE TABLE orders(

//////////////////////////////////////////////////order_id INT NOT NULL,

//////////////////////////////////////////////////customer_id INT PRIMARY KEY,

//////////////////////////////////////////////////FOREIGN KEY(order_id) REFERENCES order_items(order_id),

//////////////////////////////////////////////////PRIMARY KEY(order_id, customer_id)

//////////////////////////////////////////////////);



//////////////////////////////////////////////////CREATE TABLE items(

//////////////////////////////////////////////////item_id INT NOT NULL,

//////////////////////////////////////////////////name VARCHAR(50),

//////////////////////////////////////////////////item_type_id INT PRIMARY KEY,

//////////////////////////////////////////////////FOREIGN KEY(item_id) REFERENCES order_items(item_id),

//////////////////////////////////////////////////PRIMARY KEY(item_id)

//////////////////////////////////////////////////);



//////////////////////////////////////////////////CREATE TABLE item_types(

//////////////////////////////////////////////////item_type_id INT NOT NULL,

//////////////////////////////////////////////////name VARCHAR(50),

//////////////////////////////////////////////////item_type_id INT,

//////////////////////////////////////////////////FOREIGN KEY(item_type_id) REFERENCES items(item_type_id),

//////////////////////////////////////////////////PRIMARY KEY(item_type_id)

//////////////////////////////////////////////////);



//////////////////////////////////////////////////CREATE TABLE customers(

//////////////////////////////////////////////////customer_id INT NOT NULL,

//////////////////////////////////////////////////name VARCHAR(50),

//////////////////////////////////////////////////birthday date,

//////////////////////////////////////////////////city_id INT PRIMARY KEY,

//////////////////////////////////////////////////FOREIGN KEY(customer_id) REFERENCES orders(customer_id)

//////////////////////////////////////////////////);



//////////////////////////////////////////////////CREATE TABLE cities(

//////////////////////////////////////////////////city_id INT NOT NULL,

//////////////////////////////////////////////////name VARCHAR(50),

//////////////////////////////////////////////////FOREIGN KEY(city_id) REFERENCES customers(city_id),

//////////////////////////////////////////////////PRIMARY KEY(city_id)

//////////////////////////////////////////////////);

//////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////CREATE DATABASE online_store;

//////////////////////////////////////////////////USE online_store;

//////////////////////////////////////////////////CREATE TABLE cities(

//////////////////////////////////////////////////city_id INT PRIMARY KEY,

//////////////////////////////////////////////////name VARCHAR(50)

//////////////////////////////////////////////////);



//////////////////////////////////////////////////CREATE TABLE customers(

//////////////////////////////////////////////////customer_id INT PRIMARY KEY,

//////////////////////////////////////////////////name VARCHAR(50),

//////////////////////////////////////////////////birthday DATE,

//////////////////////////////////////////////////city_id INT,

//////////////////////////////////////////////////CONSTRAINT fk_customers_cities FOREIGN KEY(city_id)

//////////////////////////////////////////////////REFERENCES cities(city_id)

//////////////////////////////////////////////////);



//////////////////////////////////////////////////CREATE TABLE orders(

//////////////////////////////////////////////////order_id INT PRIMARY KEY,

//////////////////////////////////////////////////customer_id INT,

//////////////////////////////////////////////////CONSTRAINT fk_orders_customers FOREIGN KEY(customer_id)

//////////////////////////////////////////////////REFERENCES customers(customer_id)

//////////////////////////////////////////////////);



//////////////////////////////////////////////////CREATE TABLE item_types(

//////////////////////////////////////////////////item_type_id INT PRIMARY KEY,

//////////////////////////////////////////////////name VARCHAR(50)

//////////////////////////////////////////////////);



//////////////////////////////////////////////////CREATE TABLE items(

//////////////////////////////////////////////////item_id INT PRIMARY KEY,

//////////////////////////////////////////////////name VARCHAR(50),

//////////////////////////////////////////////////item_type_id INT,

//////////////////////////////////////////////////CONSTRAINT fk_items_item_types FOREIGN KEY(item_type_id)

//////////////////////////////////////////////////REFERENCES item_types(item_type_id)

//////////////////////////////////////////////////);



//////////////////////////////////////////////////CREATE TABLE order_items(

//////////////////////////////////////////////////order_id INT,

//////////////////////////////////////////////////item_id INT,

//////////////////////////////////////////////////CONSTRAINT pk_order_items PRIMARY KEY (order_id, item_id),

//////////////////////////////////////////////////CONSTRAINT fk_order_items_orders FOREIGN KEY(order_id)

//////////////////////////////////////////////////REFERENCES orders(order_id),

//////////////////////////////////////////////////CONSTRAINT fk_order_items_items FOREIGN KEY(item_id)

//////////////////////////////////////////////////REFERENCES items(item_id)

//////////////////////////////////////////////////);

//////////////////////////////////////////////////Създаване на базата данни - 4 т.

//////////////////////////////////////////////////Създаване на 6 броя таблици х 6 точки.  

//////////////////////////////////////////////////Въпрос 8
//////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////Създайте таблица cities, която да съдържа две колони - id и name, като прецените типа данни, който да укажете за двете колони. Колоната id да бъде първичен ключ.



//////////////////////////////////////////////////CREATE TABLE cities (

//////////////////////////////////////////////////    id INT PRIMARY KEY AUTO_INCREMENT,

//////////////////////////////////////////////////    name VARCHAR(255)

//////////////////////////////////////////////////);



//////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////CREATE TABLE cities

//////////////////////////////////////////////////(

//////////////////////////////////////////////////city_id INT PRIMARY KEY,

//////////////////////////////////////////////////name VARCHAR(50)

//////////////////////////////////////////////////);


//////////////////////////////////////////////////Въпрос 9
//////////////////////////////////////////////////Неправилно
//////////////////////////////////////////////////0,00 от максимално 2,00 точки
//////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////Моля, посочете вярното твърдение за връзка едно към много.


//////////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////////a. При тази връзка на един запис от първата таблица съответства точно един запис от втората таблица.
//////////////////////////////////////////////////b. При тази връзка на един запис от първата таблица съответстват много записи от втората таблица и обратно. 
//////////////////////////////////////////////////c. Няма вярно твърдение.
//////////////////////////////////////////////////d. При тази връзка един запис от първата таблица съответства на много записи от втората таблица.
//////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////Your answer is incorrect.
//////////////////////////////////////////////////Правилният отговор е: При тази връзка един запис от първата таблица съответства на много записи от втората таблица.
//////////////////////////////////////////////////Въпрос 10
//////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////4,00 от максимално 4,00 точки
//////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////В посочения пример имате заявка за създаване на таблица persons с колони person_id, first_name, passport_id и salary. Моля определете и изберете липсващите думи за всяка колона от таблицата.

//////////////////////////////////////////////////CREATE TABLE persons(

//////////////////////////////////////////////////person_id  
//////////////////////////////////////////////////INT
//////////////////////////////////////////////////  PRIMARY KEY,

//////////////////////////////////////////////////first_name 
//////////////////////////////////////////////////VARCHAR(50)
////////////////////////////////////////////////// ,

//////////////////////////////////////////////////salary
//////////////////////////////////////////////////DECIMAL(8,2)
////////////////////////////////////////////////// ,

//////////////////////////////////////////////////passport_id
//////////////////////////////////////////////////INT
//////////////////////////////////////////////////  UNIQUE,

//////////////////////////////////////////////////CONSTRAINT fk_persons_passports FOREIGN KEY(passport_id) REFERENCES passports(passport_id)

//////////////////////////////////////////////////);


//////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////В посочения пример имате заявка за създаване на таблица persons с колони person_id, first_name, passport_id и salary. Моля определете и изберете липсващите думи за всяка колона от таблицата.

//////////////////////////////////////////////////CREATE TABLE persons(

//////////////////////////////////////////////////person_id  [INT] PRIMARY KEY,

//////////////////////////////////////////////////first_name[VARCHAR(50)],

//////////////////////////////////////////////////salary[DECIMAL(8, 2)],

//////////////////////////////////////////////////passport_id[INT] UNIQUE,

//////////////////////////////////////////////////CONSTRAINT fk_persons_passports FOREIGN KEY(passport_id) REFERENCES passports(passport_id)

//////////////////////////////////////////////////);


//////////////////////////////////////////////////Въпрос 11
//////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////Имате заявка за създаване на таблица cities с две колони city_id и name. Посочете липсващите думи в кода, така че да получите коректно работеща заявка.

////////////////////////////////////////////////// blank  TABLE cities(

//////////////////////////////////////////////////city_id  blank  PRIMARY KEY,

//////////////////////////////////////////////////name VARCHAR(50)

//////////////////////////////////////////////////);


//////////////////////////////////////////////////INTINTCREATECREATEPRIMARY KEYPRIMARY KEYVARCHAR(50)VARCHAR(50)
//////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////CREATE TABLE cities(

//////////////////////////////////////////////////city_id INT PRIMARY KEY,

//////////////////////////////////////////////////name[[1]]

//////////////////////////////////////////////////);


//////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////Имате заявка за създаване на таблица cities с две колони city_id и name. Посочете липсващите думи в кода, така че да получите коректно работеща заявка.

//////////////////////////////////////////////////[CREATE] TABLE cities(

//////////////////////////////////////////////////city_id[INT] PRIMARY KEY,

//////////////////////////////////////////////////name VARCHAR(50)

//////////////////////////////////////////////////);

//////////////////////////////////////////////////Въпрос 12
//////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////Ограниченията задават правила за данните в дадена таблица. Посочете вярното твърдение за ограничението NOT NULL.

//////////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////////a. не позволява в клетка да има празна стойност 
//////////////////////////////////////////////////b. гарантира, че всички данни в колоната удовлетворят дадено условие
//////////////////////////////////////////////////c. уникално идентифицира запис от друга таблица
//////////////////////////////////////////////////d. гарантира, че всички данни в колоната са различни/уникални
//////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////Правилният отговор е: не позволява в клетка да има празна стойност
//////////////////////////////////////////////////Въпрос 13
//////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////6,00 от максимално 6,00 точки
//////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////Имате код за създаване на таблици, които реализират връзка между таблици едно към много. Открийте липсващите думи и ги поставете в текста чрез влачене, така че да получите коректно работещ код.

//////////////////////////////////////////////////CREATE TABLE mountains(

//////////////////////////////////////////////////  mountain_id INT  blank ,

//////////////////////////////////////////////////  mountain_name VARCHAR(50)

//////////////////////////////////////////////////);

//////////////////////////////////////////////////CREATE TABLE peaks(

//////////////////////////////////////////////////  peak_id INT  blank ,

//////////////////////////////////////////////////  mountain_id INT,

//////////////////////////////////////////////////   blank  fk_peaks_mountains

//////////////////////////////////////////////////   blank  (mountain_id)
//////////////////////////////////////////////////   blank mountains(mountain_id)
//////////////////////////////////////////////////);



//////////////////////////////////////////////////VARCHARVARCHARVARCHARVARCHARVARCHARFOREIGN KEYFOREIGN KEYFOREIGN KEYFOREIGN KEYFOREIGN KEYCONSTRAINTCONSTRAINTCONSTRAINTCONSTRAINTCONSTRAINTPRIMARY KEYPRIMARY KEYPRIMARY KEYPRIMARY KEYPRIMARY KEYJOINJOINJOINJOINJOIN REFERENCES REFERENCES REFERENCES REFERENCES REFERENCES
//////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////CREATE TABLE mountains(

//////////////////////////////////////////////////  mountain_id INT PRIMARY KEY,

//////////////////////////////////////////////////  mountain_name VARCHAR(50)

//////////////////////////////////////////////////);

//////////////////////////////////////////////////CREATE TABLE peaks(

//////////////////////////////////////////////////  peak_id INT PRIMARY KEY,

//////////////////////////////////////////////////  mountain_id INT,

//////////////////////////////////////////////////  CONSTRAINT fk_peaks_mountains

//////////////////////////////////////////////////  FOREIGN KEY (mountain_id)
//////////////////////////////////////////////////  REFERENCES mountains(mountain_id)
//////////////////////////////////////////////////);


//////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////Имате код за създаване на таблици, които реализират връзка между таблици едно към много. Открийте липсващите думи и ги поставете в текста чрез влачене, така че да получите коректно работещ код.

//////////////////////////////////////////////////CREATE TABLE mountains(

//////////////////////////////////////////////////  mountain_id INT [PRIMARY KEY],

//////////////////////////////////////////////////  mountain_name VARCHAR(50)

//////////////////////////////////////////////////);

//////////////////////////////////////////////////CREATE TABLE peaks(

//////////////////////////////////////////////////  peak_id INT [PRIMARY KEY],

//////////////////////////////////////////////////  mountain_id INT,

//////////////////////////////////////////////////  [CONSTRAINT] fk_peaks_mountains

//////////////////////////////////////////////////  [FOREIGN KEY] (mountain_id)
//////////////////////////////////////////////////  [REFERENCES] mountains(mountain_id)
//////////////////////////////////////////////////);


//////////////////////////////////////////////////Въпрос 14
//////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////Имате код за създаване на две таблици. Посочете вида на връзката, която се получава.

//////////////////////////////////////////////////CREATE TABLE mountains(

//////////////////////////////////////////////////  mountain_id INT PRIMARY KEY,

//////////////////////////////////////////////////  mountain_name VARCHAR(50)

//////////////////////////////////////////////////);

//////////////////////////////////////////////////CREATE TABLE peaks(

//////////////////////////////////////////////////  peak_id INT PRIMARY KEY,

//////////////////////////////////////////////////  mountain_id INT,

//////////////////////////////////////////////////  CONSTRAINT fk_peaks_mountains

//////////////////////////////////////////////////  FOREIGN KEY (mountain_id)
//////////////////////////////////////////////////  REFERENCES mountains(mountain_id)
//////////////////////////////////////////////////);


//////////////////////////////////////////////////Връзката между тези две таблици е от тип едно към много.

//////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////Един-към-много/Много-към-един

//////////////////////////////////////////////////Въпрос 15
//////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////4,00 от максимално 4,00 точки
//////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////Имате заявка, която създава таблица Persons и трябва да се използва ограничение, което да постави стойност по подразбиране за град Burgas. От трите посочени думи, изберете ограничението, което трябва да поставите за да решите коректно примера. 




//////////////////////////////////////////////////CREATE TABLE Persons(

//////////////////////////////////////////////////            PersonID int NOT NULL,

//////////////////////////////////////////////////            FirstName varchar(255) NOT NULL,

//////////////////////////////////////////////////            LastName varchar(255) NOT NULL,

//////////////////////////////////////////////////            Age int,

//////////////////////////////////////////////////            City varchar(255)  blank 'Burgas'

//////////////////////////////////////////////////);




//////////////////////////////////////////////////FOREIGN KEYDEFAULTINDEX
//////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////CREATE TABLE Persons(

//////////////////////////////////////////////////            PersonID int NOT NULL,

//////////////////////////////////////////////////            FirstName varchar(255) NOT NULL,

//////////////////////////////////////////////////            LastName varchar(255) NOT NULL,

//////////////////////////////////////////////////            Age int,

//////////////////////////////////////////////////            City varchar(255) DEFAULT 'Burgas'

//////////////////////////////////////////////////);


//////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////Имате заявка, която създава таблица Persons и трябва да се използва ограничение, което да постави стойност по подразбиране за град Burgas. От трите посочени думи, изберете ограничението, което трябва да поставите за да решите коректно примера. 




//////////////////////////////////////////////////CREATE TABLE Persons(

//////////////////////////////////////////////////            PersonID int NOT NULL,

//////////////////////////////////////////////////            FirstName varchar(255) NOT NULL,

//////////////////////////////////////////////////            LastName varchar(255) NOT NULL,

//////////////////////////////////////////////////            Age int,

//////////////////////////////////////////////////            City varchar(255) [DEFAULT] 'Burgas'

//////////////////////////////////////////////////);



//////////////////////////////////////////////////Въпрос 16
//////////////////////////////////////////////////Правилно
//////////////////////////////////////////////////4,00 от максимално 4,00 точки
//////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////Имате заявка, която създава таблица Persons и трябва да се постави ограничение годините на хората да са по-големи от 20. От трите посочени думи, изберете ограничението, което трябва да поставите за да решите коректно примера. 



//////////////////////////////////////////////////CREATE TABLE Persons(

//////////////////////////////////////////////////            PersonID int NOT NULL,

//////////////////////////////////////////////////            FirstName varchar(255) NOT NULL,

//////////////////////////////////////////////////            LastName varchar(255) NOT NULL,

//////////////////////////////////////////////////            Age int,

//////////////////////////////////////////////////             blank  (Age >= 20)



////////////////////////////////////////////////// CHECKFOREIGN KEYDEFAULT
//////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////////§  CHECK – гарантира, че всички данни в колоната удовлетворят дадено условие

//////////////////////////////////////////////////CREATE TABLE Persons(

//////////////////////////////////////////////////            PersonID int NOT NULL,

//////////////////////////////////////////////////            FirstName varchar(255) NOT NULL,

//////////////////////////////////////////////////            LastName varchar(255) NOT NULL,

//////////////////////////////////////////////////            Age int,

//////////////////////////////////////////////////            CHECK (Age >= 20)


//////////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////////Имате заявка, която създава таблица Persons и трябва да се постави ограничение годините на хората да са по-големи от 20. От трите посочени думи, изберете ограничението, което трябва да поставите за да решите коректно примера. 



//////////////////////////////////////////////////CREATE TABLE Persons(

//////////////////////////////////////////////////            PersonID int NOT NULL,

//////////////////////////////////////////////////            FirstName varchar(255) NOT NULL,

//////////////////////////////////////////////////            LastName varchar(255) NOT NULL,

//////////////////////////////////////////////////            Age int,

//////////////////////////////////////////////////            [CHECK] (Age >= 20)


//////////////////////////////////////////////////Въпрос 17
//////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////От максимално 6,00
//////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////////Напишете заявка за създаване на таблица customers, която да съдържа три колони, които са:

//////////////////////////////////////////////////id - от тип цели числа, name - от тип текст с дължина 50 знака и birthday от тип дата.


//////////////////////////////////////////////////CREATE TABLE customers (

//////////////////////////////////////////////////  id INT PRIMARY KEY,

//////////////////////////////////////////////////  name VARCHAR(50),

//////////////////////////////////////////////////  birthday DATE

//////////////////////////////////////////////////);



//////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////CREATE TABLE customers(

//////////////////////////////////////////////////id INT(11) PRIMARY KEY,

//////////////////////////////////////////////////name VARCHAR(50),

//////////////////////////////////////////////////birthday DATE,

//////////////////////////////////////////////////);

//////////////////////////////////////////////////Въпрос 18
//////////////////////////////////////////////////Отговорен
//////////////////////////////////////////////////От максимално 6,00
//////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////////Текст на въпроса


//////////////////////////////////////////////////Допишете следната заявка за таблица Persons, така че номера на човек да бъде уникален. Завката да дава коректен резултат. 

//////////////////////////////////////////////////CREATE TABLE Persons(

//////////////////////////////////////////////////            PersonID int NOT NULL,

//////////////////////////////////////////////////            FirstName varchar(255) NOT NULL,

//////////////////////////////////////////////////            LastName varchar(255) NOT NULL,

//////////////////////////////////////////////////            Age int,



//////////////////////////////////////////////////CREATE TABLE Persons( 
//////////////////////////////////////////////////PersonID int NOT NULL PRIMARY KEY,

//////////////////////////////////////////////////FirstName varchar(255) NOT NULL,

//////////////////////////////////////////////////LastName varchar(255) NOT NULL,

//////////////////////////////////////////////////Age int 

//////////////////////////////////////////////////);



//////////////////////////////////////////////////Забележка
//////////////////////////////////////////////////CREATE TABLE Persons(

//////////////////////////////////////////////////            PersonID int NOT NULL,

//////////////////////////////////////////////////            FirstName varchar(255) NOT NULL,

//////////////////////////////////////////////////            LastName varchar(255) NOT NULL,

//////////////////////////////////////////////////            Age int,

//////////////////////////////////////////////////            UNIQUE(ID) );


//////////////////////////////////////////////////Край на прегледа
//////////////////////////////////////////////////Отиди на ...
//////////////////////////////////////////////////Отиди на ...
//////////////////////////////////////////////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
//////////////////////////////////////////////////Навигация в теста
//////////////////////////////////////////////////Показване по един въпрос на страница
//////////////////////////////////////////////////Край на прегледа
//////////////////////////////////////////////////Вие сте влезли в системата като Добри Илев (Изход)
//////////////////////////////////////////////////тренировъчен - курс - по
//////////////////////////////////////////////////Data retention summary

////////////////////////////////////////////////Прескочи на основното съдържание
////////////////////////////////////////////////ПГЕЕ
////////////////////////////////////////////////Български ‎(bg)‎ 
////////////////////////////////////////////////Добри Илев 
////////////////////////////////////////////////Тренировъчен курс - Програмно осигуряване
////////////////////////////////////////////////Начална страница
////////////////////////////////////////////////Моите курсове
//////////////////////////////////////////////// тренировъчен-курс-по
//////////////////////////////////////////////// Изпитна тема 8
//////////////////////////////////////////////// Тест 1 - Изпитна тема №8
////////////////////////////////////////////////Започнат на	понеделник, 17 април 2023, 13:43
////////////////////////////////////////////////Състояние Завършен
////////////////////////////////////////////////Приключен на	понеделник, 17 април 2023, 14:25
////////////////////////////////////////////////Изминало време	42 мин. 5 сек.
////////////////////////////////////////////////Оценка	Още не е оценен
////////////////////////////////////////////////Въпрос 1
////////////////////////////////////////////////Правилно
////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////Моля, посочете вярното твърдение за връзка едно към много.


////////////////////////////////////////////////Изберете едно
////////////////////////////////////////////////a. При тази връзка един запис от първата таблица съответства на много записи от втората таблица. 
////////////////////////////////////////////////b. Няма вярно твърдение.
////////////////////////////////////////////////c. При тази връзка на един запис от първата таблица съответства точно един запис от втората таблица.
////////////////////////////////////////////////d. При тази връзка на един запис от първата таблица съответстват много записи от втората таблица и обратно.
////////////////////////////////////////////////Забележка
////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////Правилният отговор е: При тази връзка един запис от първата таблица съответства на много записи от втората таблица.
////////////////////////////////////////////////Въпрос 2
////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////От максимално 40,00
////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////Като използвате дадената ER диаграма, напишете заявките за създаване база данни online_store и за създаване на таблиците в нея.



////////////////////////////////////////////////CREATE DATABASE online_store;

////////////////////////////////////////////////USE online_store;

////////////////////////////////////////////////CREATE TABLE items(

////////////////////////////////////////////////item_id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,

////////////////////////////////////////////////name VARCHAR(50) NOT NULL,

////////////////////////////////////////////////item_type_id INT NOT NULL,

////////////////////////////////////////////////FOREIGN KEY (item_type_id) REFERENCES item_types(item_type_id)

////////////////////////////////////////////////);

////////////////////////////////////////////////CREATE TABLE item_types(

////////////////////////////////////////////////item_type_id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,

////////////////////////////////////////////////name VARCHAR(50) NOT NULL

////////////////////////////////////////////////);

////////////////////////////////////////////////CREATE TABLE order_items(

////////////////////////////////////////////////order_id INT NOT NULL,

////////////////////////////////////////////////item_id INT NOT NULL,

////////////////////////////////////////////////PRIMARY KEY(item_id, order_id),

////////////////////////////////////////////////FOREIGN KEY(order_id) REFERENCES orders(order_id),

////////////////////////////////////////////////FOREIGN KEY(item_id) REFERENCES items(item_id)

////////////////////////////////////////////////);

////////////////////////////////////////////////CREATE TABLE orders(

////////////////////////////////////////////////order_id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,

////////////////////////////////////////////////customer_id INT NOT NULL,

////////////////////////////////////////////////FOREIGN KEY (customer_id) REFERENCES customers(customer_id)

////////////////////////////////////////////////);

////////////////////////////////////////////////CREATE TABLE customers(

////////////////////////////////////////////////customer_id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,

////////////////////////////////////////////////name VARCHAR(50) NOT NULL,

////////////////////////////////////////////////birthday DATE NOT NULL,

////////////////////////////////////////////////city_id INT NOT NULL,

////////////////////////////////////////////////FOREIGN KEY (city_id) REFERENCES cities(city_id)

////////////////////////////////////////////////);

////////////////////////////////////////////////CREATE TABLE cities(

////////////////////////////////////////////////city_id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,

////////////////////////////////////////////////name VARCHAR(50) NOT NULL

////////////////////////////////////////////////);

////////////////////////////////////////////////Забележка
////////////////////////////////////////////////CREATE DATABASE online_store;

////////////////////////////////////////////////USE online_store;

////////////////////////////////////////////////CREATE TABLE cities(

////////////////////////////////////////////////city_id INT PRIMARY KEY,

////////////////////////////////////////////////name VARCHAR(50)

////////////////////////////////////////////////);



////////////////////////////////////////////////CREATE TABLE customers(

////////////////////////////////////////////////customer_id INT PRIMARY KEY,

////////////////////////////////////////////////name VARCHAR(50),

////////////////////////////////////////////////birthday DATE,

////////////////////////////////////////////////city_id INT,

////////////////////////////////////////////////CONSTRAINT fk_customers_cities FOREIGN KEY(city_id)

////////////////////////////////////////////////REFERENCES cities(city_id)

////////////////////////////////////////////////);



////////////////////////////////////////////////CREATE TABLE orders(

////////////////////////////////////////////////order_id INT PRIMARY KEY,

////////////////////////////////////////////////customer_id INT,

////////////////////////////////////////////////CONSTRAINT fk_orders_customers FOREIGN KEY(customer_id)

////////////////////////////////////////////////REFERENCES customers(customer_id)

////////////////////////////////////////////////);



////////////////////////////////////////////////CREATE TABLE item_types(

////////////////////////////////////////////////item_type_id INT PRIMARY KEY,

////////////////////////////////////////////////name VARCHAR(50)

////////////////////////////////////////////////);



////////////////////////////////////////////////CREATE TABLE items(

////////////////////////////////////////////////item_id INT PRIMARY KEY,

////////////////////////////////////////////////name VARCHAR(50),

////////////////////////////////////////////////item_type_id INT,

////////////////////////////////////////////////CONSTRAINT fk_items_item_types FOREIGN KEY(item_type_id)

////////////////////////////////////////////////REFERENCES item_types(item_type_id)

////////////////////////////////////////////////);



////////////////////////////////////////////////CREATE TABLE order_items(

////////////////////////////////////////////////order_id INT,

////////////////////////////////////////////////item_id INT,

////////////////////////////////////////////////CONSTRAINT pk_order_items PRIMARY KEY (order_id, item_id),

////////////////////////////////////////////////CONSTRAINT fk_order_items_orders FOREIGN KEY(order_id)

////////////////////////////////////////////////REFERENCES orders(order_id),

////////////////////////////////////////////////CONSTRAINT fk_order_items_items FOREIGN KEY(item_id)

////////////////////////////////////////////////REFERENCES items(item_id)

////////////////////////////////////////////////);

////////////////////////////////////////////////Създаване на базата данни - 4 т.

////////////////////////////////////////////////Създаване на 6 броя таблици х 6 точки.  

////////////////////////////////////////////////Въпрос 3
////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////Създайте таблица cities, която да съдържа две колони - id и name, като прецените типа данни, който да укажете за двете колони. Колоната id да бъде първичен ключ.



////////////////////////////////////////////////CREATE TABLE cities(

////////////////////////////////////////////////id INT PRIMARY KEY,

////////////////////////////////////////////////name VARCHAR(50)

////////////////////////////////////////////////);

////////////////////////////////////////////////Забележка
////////////////////////////////////////////////CREATE TABLE cities

////////////////////////////////////////////////(

////////////////////////////////////////////////city_id INT PRIMARY KEY,

////////////////////////////////////////////////name VARCHAR(50)

////////////////////////////////////////////////);


////////////////////////////////////////////////Въпрос 4
////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////От максимално 6,00
////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////Текст на въпроса

////////////////////////////////////////////////Имате пример за създаване на първичен ключ на базата на една колона в таблица Persons:

////////////////////////////////////////////////CREATE TABLE Persons(

////////////////////////////////////////////////            PersonID int NOT NULL,

////////////////////////////////////////////////            FirstName varchar(255) NOT NULL,

////////////////////////////////////////////////            LastName varchar(255) NOT NULL,

////////////////////////////////////////////////            Age int



////////////////////////////////////////////////Допишете реда в който трябва да се създаде първичен ключ, като заявката работи коректно.
////////////////////////////////////////////////CREATE TABLE Persons(

////////////////////////////////////////////////PersonID int NOT NULL PRIMARY KEY,

////////////////////////////////////////////////FirstName varchar(255) NOT NULL,

////////////////////////////////////////////////LastName varchar(255) NOT NULL,

////////////////////////////////////////////////Age int

////////////////////////////////////////////////)

////////////////////////////////////////////////Забележка
////////////////////////////////////////////////CREATE TABLE Persons(

////////////////////////////////////////////////            PersonID int NOT NULL,

////////////////////////////////////////////////            FirstName varchar(255) NOT NULL,

////////////////////////////////////////////////            LastName varchar(255) NOT NULL,

////////////////////////////////////////////////            Age int,

////////////////////////////////////////////////            PRIMARY KEY(PersonID) );


////////////////////////////////////////////////Въпрос 5
////////////////////////////////////////////////Правилно
////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////Моля, посочете вярното твърдение за връзка много към много.


////////////////////////////////////////////////Изберете едно
////////////////////////////////////////////////a. При тази връзка на един запис от първата таблица съответстват много записи от втората таблица и обратно. 
////////////////////////////////////////////////b. При тази връзка един запис от първата таблица съответства на много записи от втората таблица.
////////////////////////////////////////////////c. При тази връзка на един запис от първата таблица съответства точно един запис от втората таблица.
////////////////////////////////////////////////d. Няма вярно твърдение.
////////////////////////////////////////////////Забележка
////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////Правилният отговор е: При тази връзка на един запис от първата таблица съответстват много записи от втората таблица и обратно.
////////////////////////////////////////////////Въпрос 6
////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////Имате код за създаване на две таблици. Посочете вида на връзката, която се получава.

////////////////////////////////////////////////CREATE TABLE mountains(

////////////////////////////////////////////////  mountain_id INT PRIMARY KEY,

////////////////////////////////////////////////  mountain_name VARCHAR(50)

////////////////////////////////////////////////);

////////////////////////////////////////////////CREATE TABLE peaks(

////////////////////////////////////////////////  peak_id INT PRIMARY KEY,

////////////////////////////////////////////////  mountain_id INT,

////////////////////////////////////////////////  CONSTRAINT fk_peaks_mountains

////////////////////////////////////////////////  FOREIGN KEY (mountain_id)
////////////////////////////////////////////////  REFERENCES mountains(mountain_id)
////////////////////////////////////////////////);


////////////////////////////////////////////////Връзката между таблиците е едно към много.Един запис от таблица mountains съответства на много записи от таблица peaks.
////////////////////////////////////////////////Забележка
////////////////////////////////////////////////Един-към-много/Много-към-един

////////////////////////////////////////////////Въпрос 7
////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////Имате код за създаване на таблици. Посочете вида на връзката, която се получава.

////////////////////////////////////////////////CREATE TABLE employees(

////////////////////////////////////////////////  employee_id INT PRIMARY KEY,
////////////////////////////////////////////////  employee_name VARCHAR(50)

////////////////////////////////////////////////);

////////////////////////////////////////////////CREATE TABLE projects(
////////////////////////////////////////////////  project_id INT PRIMARY KEY,
////////////////////////////////////////////////  project_name VARCHAR(50)

////////////////////////////////////////////////);

////////////////////////////////////////////////CREATE TABLE employees_projects(
////////////////////////////////////////////////  employee_id INT,
////////////////////////////////////////////////  project_id INT,

////////////////////////////////////////////////  CONSTRAINT pk_employees_projects

////////////////////////////////////////////////  PRIMARY KEY(employee_id, project_id),

////////////////////////////////////////////////  CONSTRAINT fk_employees_projects_employees

////////////////////////////////////////////////  FOREIGN KEY(employee_id)

////////////////////////////////////////////////  REFERENCES employees(employee_id),

////////////////////////////////////////////////  CONSTRAINT fk_employees_projects_projects

////////////////////////////////////////////////  FOREIGN KEY(project_id)

////////////////////////////////////////////////  REFERENCES projects(project_id)

////////////////////////////////////////////////);


////////////////////////////////////////////////Връзката между таблици employees и projects, която се получава чрез таблицата employees_projects, е "много към много" (many-to-many). Това означава, че на един запис от таблицата employees (един служител) може да съответстват много записи от таблицата projects и обратно.Таблицата employees_projects се използва като свързваща таблица, която позволява да се осъществи много към много връзка между employees и projects

////////////////////////////////////////////////Забележка
////////////////////////////////////////////////Много-към-много

////////////////////////////////////////////////Въпрос 8
////////////////////////////////////////////////Правилно
////////////////////////////////////////////////4,00 от максимално 4,00 точки
////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////Имате заявка, която създава таблица Persons и трябва да се постави ограничение годините на хората да са по-големи от 20. От трите посочени думи, изберете ограничението, което трябва да поставите за да решите коректно примера. 



////////////////////////////////////////////////CREATE TABLE Persons(

////////////////////////////////////////////////            PersonID int NOT NULL,

////////////////////////////////////////////////            FirstName varchar(255) NOT NULL,

////////////////////////////////////////////////            LastName varchar(255) NOT NULL,

////////////////////////////////////////////////            Age int,

////////////////////////////////////////////////             blank  (Age >= 20)



////////////////////////////////////////////////DEFAULT CHECKFOREIGN KEY
////////////////////////////////////////////////Забележка
////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////§  CHECK – гарантира, че всички данни в колоната удовлетворят дадено условие

////////////////////////////////////////////////CREATE TABLE Persons(

////////////////////////////////////////////////            PersonID int NOT NULL,

////////////////////////////////////////////////            FirstName varchar(255) NOT NULL,

////////////////////////////////////////////////            LastName varchar(255) NOT NULL,

////////////////////////////////////////////////            Age int,

////////////////////////////////////////////////            CHECK (Age >= 20)


////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////Имате заявка, която създава таблица Persons и трябва да се постави ограничение годините на хората да са по-големи от 20. От трите посочени думи, изберете ограничението, което трябва да поставите за да решите коректно примера. 



////////////////////////////////////////////////CREATE TABLE Persons(

////////////////////////////////////////////////            PersonID int NOT NULL,

////////////////////////////////////////////////            FirstName varchar(255) NOT NULL,

////////////////////////////////////////////////            LastName varchar(255) NOT NULL,

////////////////////////////////////////////////            Age int,

////////////////////////////////////////////////            [CHECK] (Age >= 20)


////////////////////////////////////////////////Въпрос 9
////////////////////////////////////////////////Правилно
////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////Ограниченията задават правила за данните в дадена таблица. Посочете вярното твърдение за ограничението CHECK.

////////////////////////////////////////////////Изберете едно
////////////////////////////////////////////////a. уникално идентифицира запис от друга таблица
////////////////////////////////////////////////b. гарантира, че всички данни в колоната удовлетворят дадено условие 
////////////////////////////////////////////////c. гарантира, че всички данни в колоната са различни/уникални
////////////////////////////////////////////////d. не позволява в клетка да има празна стойност
////////////////////////////////////////////////Забележка
////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////Правилният отговор е: гарантира, че всички данни в колоната удовлетворят дадено условие
////////////////////////////////////////////////Въпрос 10
////////////////////////////////////////////////Правилно
////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////Имате заявка за създаване на таблица cities с две колони city_id и name. Посочете липсващите думи в кода, така че да получите коректно работеща заявка.

//////////////////////////////////////////////// blank  TABLE cities(

////////////////////////////////////////////////city_id  blank  PRIMARY KEY,

////////////////////////////////////////////////name VARCHAR(50)

////////////////////////////////////////////////);


////////////////////////////////////////////////CREATECREATEINTINTPRIMARY KEYPRIMARY KEYVARCHAR(50)VARCHAR(50)
////////////////////////////////////////////////Забележка
////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////CREATE TABLE cities(

////////////////////////////////////////////////city_id INT PRIMARY KEY,

////////////////////////////////////////////////name[[1]]

////////////////////////////////////////////////);


////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////Имате заявка за създаване на таблица cities с две колони city_id и name. Посочете липсващите думи в кода, така че да получите коректно работеща заявка.

////////////////////////////////////////////////[CREATE] TABLE cities(

////////////////////////////////////////////////city_id[INT] PRIMARY KEY,

////////////////////////////////////////////////name VARCHAR(50)

////////////////////////////////////////////////);

////////////////////////////////////////////////Въпрос 11
////////////////////////////////////////////////Правилно
////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////Моля свържете вярното твърдение за посочените типове данни:

////////////////////////////////////////////////INT

////////////////////////////////////////////////Отговор 1
////////////////////////////////////////////////тип данни за цели числа

////////////////////////////////////////////////VARCHAR(M)

////////////////////////////////////////////////Отговор 2
////////////////////////////////////////////////текстов тип данни

////////////////////////////////////////////////DOUBLE

////////////////////////////////////////////////Отговор 3
////////////////////////////////////////////////тип данни за реални числа

////////////////////////////////////////////////Забележка
////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////Правилният отговор е: INT → тип данни за цели числа, VARCHAR(M) → текстов тип данни, DOUBLE → тип данни за реални числа
////////////////////////////////////////////////Въпрос 12
////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////От максимално 6,00
////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////Създайте заявка, която да създаде таблица directors в база от данни Movies, със следните колони:


////////////////////////////////////////////////id е от тип цяло число и да бъде първичен ключ

////////////////////////////////////////////////director_name е от текстов тип с дължина 10 знака

////////////////////////////////////////////////notes е от текстов тип с дължина 20 знака.



////////////////////////////////////////////////CREATE TABLE directors(

////////////////////////////////////////////////id INT PRIMARY KEY,

////////////////////////////////////////////////director_name VARCHAR(10),

////////////////////////////////////////////////notes VARCHAR(20)

////////////////////////////////////////////////);

////////////////////////////////////////////////Забележка
////////////////////////////////////////////////CREATE TABLE directors(

////////////////////////////////////////////////id INT PRIMARY KEY,

////////////////////////////////////////////////director_name VARCHAR(10),

////////////////////////////////////////////////notes VARCHAR(20)

////////////////////////////////////////////////);



////////////////////////////////////////////////Въпрос 13
////////////////////////////////////////////////Отчасти верен
////////////////////////////////////////////////0,67 от максимално 2,00 точки
////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////Ограниченията задават правила за данните в дадена таблица. Имате посочени примери за често срещани ограничения. Моля свържете ограничението с неговото вярно описание.


////////////////////////////////////////////////PRIMARY KEY

////////////////////////////////////////////////Отговор 1
////////////////////////////////////////////////уникално идентифицира запис от друга таблица

////////////////////////////////////////////////UNIQUE

////////////////////////////////////////////////Отговор 2
////////////////////////////////////////////////идентифицира уникално всеки запис в таблицата

////////////////////////////////////////////////NOT NULL

////////////////////////////////////////////////Отговор 3
////////////////////////////////////////////////не позволява в клетка да има празна стойност

////////////////////////////////////////////////Забележка
////////////////////////////////////////////////Your answer is partially correct.
////////////////////////////////////////////////Вие правилно сте избрали 1.
////////////////////////////////////////////////Правилният отговор е: PRIMARY KEY → идентифицира уникално всеки запис в таблицата, UNIQUE → гарантира, че всички данни в колоната са различни, NOT NULL → не позволява в клетка да има празна стойност
////////////////////////////////////////////////Въпрос 14
////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////Напишете заявка за създаване на таблица customers, която да съдържа три колони, които са:

////////////////////////////////////////////////id - от тип цели числа, name - от тип текст с дължина 50 знака и birthday от тип дата.


////////////////////////////////////////////////CREATE TABLE customers(

////////////////////////////////////////////////id INT,

////////////////////////////////////////////////name VARCHAR(50),

////////////////////////////////////////////////birthday DATE

////////////////////////////////////////////////);

////////////////////////////////////////////////Забележка
////////////////////////////////////////////////CREATE TABLE customers(

////////////////////////////////////////////////id INT(11) PRIMARY KEY,

////////////////////////////////////////////////name VARCHAR(50),

////////////////////////////////////////////////birthday DATE,

////////////////////////////////////////////////);


////////////////////////////////////////////////Въпрос 15
////////////////////////////////////////////////Правилно
////////////////////////////////////////////////4,00 от максимално 4,00 точки
////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////Имате заявка, която свързва две таблици от база от данни Orders и Persons. От изброените 6 думи, изберете три верни, с които да получите работеща заявка и ги поставете в дадения код.

////////////////////////////////////////////////CREATE TABLE Orders(

////////////////////////////////////////////////    OrderID int NOT NULL,

////////////////////////////////////////////////    OrderNumber int NOT NULL,

////////////////////////////////////////////////    PersonID int,

////////////////////////////////////////////////     blank  (OrderID),

////////////////////////////////////////////////     blank  (PersonID)  blank  Persons(PersonID)

////////////////////////////////////////////////);



////////////////////////////////////////////////PRIMARY KEYPRIMARY KEYPRIMARY KEYREFERENCESREFERENCESREFERENCESVARCHARVARCHARVARCHARDEFAULTDEFAULTDEFAULTCONSTRAINTCONSTRAINTCONSTRAINTFOREIGN KEYFOREIGN KEYFOREIGN KEY
////////////////////////////////////////////////Забележка
////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////Имате заявка, която свързва две таблици от база от данни Orders и Persons. От изброените 6 думи, изберете три верни, с които да получите работеща заявка и ги поставете в дадения код.

////////////////////////////////////////////////CREATE TABLE Orders(

////////////////////////////////////////////////    OrderID int NOT NULL,

////////////////////////////////////////////////    OrderNumber int NOT NULL,

////////////////////////////////////////////////    PersonID int,

////////////////////////////////////////////////    [PRIMARY KEY] (OrderID),

////////////////////////////////////////////////    [FOREIGN KEY] (PersonID)[REFERENCES] Persons(PersonID)

////////////////////////////////////////////////);


////////////////////////////////////////////////Въпрос 16
////////////////////////////////////////////////Правилно
////////////////////////////////////////////////6,00 от максимално 6,00 точки
////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////Имате код за създаване на таблици, които реализират връзка между таблици едно към едно. Открийте липсващите думи и ги поставете в текста чрез влачене, така че да получите коректно работещ код.

////////////////////////////////////////////////CREATE TABLE drivers(

////////////////////////////////////////////////  driver_id INT  blank ,

////////////////////////////////////////////////  driver_name VARCHAR(50)

////////////////////////////////////////////////);

////////////////////////////////////////////////CREATE TABLE cars(

////////////////////////////////////////////////  car_id INT PRIMARY KEY,

////////////////////////////////////////////////  driver_id INT UNIQUE,

////////////////////////////////////////////////   blank  fk_cars_drivers  blank 
////////////////////////////////////////////////  (driver_id)  blank drivers(driver_id)

////////////////////////////////////////////////);



////////////////////////////////////////////////PRIMARY KEYPRIMARY KEYPRIMARY KEYPRIMARY KEYCONSTRAINTCONSTRAINTCONSTRAINTCONSTRAINT REFERENCES REFERENCES REFERENCES REFERENCESFOREIGN KEYFOREIGN KEYFOREIGN KEYFOREIGN KEY
////////////////////////////////////////////////Забележка
////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////CREATE TABLE drivers(

////////////////////////////////////////////////  driver_id INT PRIMARY KEY,

////////////////////////////////////////////////  driver_name VARCHAR(50)

////////////////////////////////////////////////);

////////////////////////////////////////////////CREATE TABLE cars(

////////////////////////////////////////////////  car_id INT PRIMARY KEY,

////////////////////////////////////////////////  driver_id INT UNIQUE,

////////////////////////////////////////////////  CONSTRAINT fk_cars_drivers FOREIGN KEY
////////////////////////////////////////////////  (driver_id) REFERENCES drivers(driver_id)

////////////////////////////////////////////////);


////////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////////Имате код за създаване на таблици, които реализират връзка между таблици едно към едно. Открийте липсващите думи и ги поставете в текста чрез влачене, така че да получите коректно работещ код.

////////////////////////////////////////////////CREATE TABLE drivers(

////////////////////////////////////////////////  driver_id INT [PRIMARY KEY],

////////////////////////////////////////////////  driver_name VARCHAR(50)

////////////////////////////////////////////////);

////////////////////////////////////////////////CREATE TABLE cars(

////////////////////////////////////////////////  car_id INT PRIMARY KEY,

////////////////////////////////////////////////  driver_id INT UNIQUE,

////////////////////////////////////////////////  [CONSTRAINT] fk_cars_drivers [FOREIGN KEY]
////////////////////////////////////////////////(driver_id)[REFERENCES] drivers(driver_id)

////////////////////////////////////////////////);


////////////////////////////////////////////////Въпрос 17
////////////////////////////////////////////////Правилно
////////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////Посочете вярното твърдение за по-долу посочения код:

////////////////////////////////////////////////CREATE TABLE Persons(

////////////////////////////////////////////////            ID int NOT NULL,

////////////////////////////////////////////////            FirstName varchar(255) NOT NULL,

////////////////////////////////////////////////            LastName varchar(255) NOT NULL,

////////////////////////////////////////////////          );


////////////////////////////////////////////////Изберете едно
////////////////////////////////////////////////a. Създава таблица с колони ID от тип дробно цисло, FirstName от текстов тип и LastName от текстов тип гарантира, че всички данни в колоната са различни.
////////////////////////////////////////////////b. Създава таблица с колони ID от тип цяло цисло, FirstName от текстов тип и LastName от текстов тип и не позволява в клетките да има празна стойност. 
////////////////////////////////////////////////c. Създава таблица с колони ID, FirstName и LastName от текстов тип като може в клетките да има празна стойност.
////////////////////////////////////////////////Забележка
////////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////////Правилният отговор е: Създава таблица с колони ID от тип цяло цисло, FirstName от текстов тип и LastName от текстов тип и не позволява в клетките да има празна стойност.
////////////////////////////////////////////////Въпрос 18
////////////////////////////////////////////////Отговорен
////////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////////Създайте таблица persons, която да съдържа две колони city_id, FirstName и LastName, като прецените типа данни, който да укажете за колоните. Колоната city_id да бъде първичен ключ.



////////////////////////////////////////////////CREATE TABLE persons(

////////////////////////////////////////////////city_id INT PRIMARY KEY,

////////////////////////////////////////////////FirstName VARCHAR(50),

////////////////////////////////////////////////LastName VARCHAR(50)

////////////////////////////////////////////////);

////////////////////////////////////////////////Забележка
////////////////////////////////////////////////CREATE TABLE persons

////////////////////////////////////////////////(

////////////////////////////////////////////////city_id INT PRIMARY KEY,

////////////////////////////////////////////////FirstName VARCHAR(50),

////////////////////////////////////////////////LastName VARCHAR(50)

////////////////////////////////////////////////);


////////////////////////////////////////////////Край на прегледа
////////////////////////////////////////////////Отиди на ...
////////////////////////////////////////////////Отиди на ...
////////////////////////////////////////////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
////////////////////////////////////////////////Навигация в теста
////////////////////////////////////////////////Показване по един въпрос на страница
////////////////////////////////////////////////Край на прегледа
////////////////////////////////////////////////Вие сте влезли в системата като Добри Илев (Изход)
////////////////////////////////////////////////тренировъчен - курс - по
////////////////////////////////////////////////Data retention summary

//////////////////////////////////////////////Прескочи на основното съдържание
//////////////////////////////////////////////ПГЕЕ
//////////////////////////////////////////////Български ‎(bg)‎ 
//////////////////////////////////////////////Добри Илев 
//////////////////////////////////////////////Тренировъчен курс - Програмно осигуряване
//////////////////////////////////////////////Начална страница
//////////////////////////////////////////////Моите курсове
////////////////////////////////////////////// тренировъчен-курс-по
////////////////////////////////////////////// Изпитна тема 8
////////////////////////////////////////////// Тест 1 - Изпитна тема №8
//////////////////////////////////////////////Започнат на	понеделник, 17 април 2023, 13:43
//////////////////////////////////////////////Състояние Завършен
//////////////////////////////////////////////Приключен на	понеделник, 17 април 2023, 14:25
//////////////////////////////////////////////Изминало време	42 мин. 5 сек.
//////////////////////////////////////////////Оценка	Още не е оценен
//////////////////////////////////////////////Въпрос 1
//////////////////////////////////////////////Правилно
//////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////Моля, посочете вярното твърдение за връзка едно към много.


//////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////a. При тази връзка един запис от първата таблица съответства на много записи от втората таблица. 
//////////////////////////////////////////////b. Няма вярно твърдение.
//////////////////////////////////////////////c. При тази връзка на един запис от първата таблица съответства точно един запис от втората таблица.
//////////////////////////////////////////////d. При тази връзка на един запис от първата таблица съответстват много записи от втората таблица и обратно.
//////////////////////////////////////////////Забележка
//////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////Правилният отговор е: При тази връзка един запис от първата таблица съответства на много записи от втората таблица.
//////////////////////////////////////////////Въпрос 2
//////////////////////////////////////////////Отговорен
//////////////////////////////////////////////От максимално 40,00
//////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////Като използвате дадената ER диаграма, напишете заявките за създаване база данни online_store и за създаване на таблиците в нея.



//////////////////////////////////////////////CREATE DATABASE online_store;

//////////////////////////////////////////////USE online_store;

//////////////////////////////////////////////CREATE TABLE items(

//////////////////////////////////////////////item_id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,

//////////////////////////////////////////////name VARCHAR(50) NOT NULL,

//////////////////////////////////////////////item_type_id INT NOT NULL,

//////////////////////////////////////////////FOREIGN KEY (item_type_id) REFERENCES item_types(item_type_id)

//////////////////////////////////////////////);

//////////////////////////////////////////////CREATE TABLE item_types(

//////////////////////////////////////////////item_type_id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,

//////////////////////////////////////////////name VARCHAR(50) NOT NULL

//////////////////////////////////////////////);

//////////////////////////////////////////////CREATE TABLE order_items(

//////////////////////////////////////////////order_id INT NOT NULL,

//////////////////////////////////////////////item_id INT NOT NULL,

//////////////////////////////////////////////PRIMARY KEY(item_id, order_id),

//////////////////////////////////////////////FOREIGN KEY(order_id) REFERENCES orders(order_id),

//////////////////////////////////////////////FOREIGN KEY(item_id) REFERENCES items(item_id)

//////////////////////////////////////////////);

//////////////////////////////////////////////CREATE TABLE orders(

//////////////////////////////////////////////order_id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,

//////////////////////////////////////////////customer_id INT NOT NULL,

//////////////////////////////////////////////FOREIGN KEY (customer_id) REFERENCES customers(customer_id)

//////////////////////////////////////////////);

//////////////////////////////////////////////CREATE TABLE customers(

//////////////////////////////////////////////customer_id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,

//////////////////////////////////////////////name VARCHAR(50) NOT NULL,

//////////////////////////////////////////////birthday DATE NOT NULL,

//////////////////////////////////////////////city_id INT NOT NULL,

//////////////////////////////////////////////FOREIGN KEY (city_id) REFERENCES cities(city_id)

//////////////////////////////////////////////);

//////////////////////////////////////////////CREATE TABLE cities(

//////////////////////////////////////////////city_id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,

//////////////////////////////////////////////name VARCHAR(50) NOT NULL

//////////////////////////////////////////////);

//////////////////////////////////////////////Забележка
//////////////////////////////////////////////CREATE DATABASE online_store;

//////////////////////////////////////////////USE online_store;

//////////////////////////////////////////////CREATE TABLE cities(

//////////////////////////////////////////////city_id INT PRIMARY KEY,

//////////////////////////////////////////////name VARCHAR(50)

//////////////////////////////////////////////);



//////////////////////////////////////////////CREATE TABLE customers(

//////////////////////////////////////////////customer_id INT PRIMARY KEY,

//////////////////////////////////////////////name VARCHAR(50),

//////////////////////////////////////////////birthday DATE,

//////////////////////////////////////////////city_id INT,

//////////////////////////////////////////////CONSTRAINT fk_customers_cities FOREIGN KEY(city_id)

//////////////////////////////////////////////REFERENCES cities(city_id)

//////////////////////////////////////////////);



//////////////////////////////////////////////CREATE TABLE orders(

//////////////////////////////////////////////order_id INT PRIMARY KEY,

//////////////////////////////////////////////customer_id INT,

//////////////////////////////////////////////CONSTRAINT fk_orders_customers FOREIGN KEY(customer_id)

//////////////////////////////////////////////REFERENCES customers(customer_id)

//////////////////////////////////////////////);



//////////////////////////////////////////////CREATE TABLE item_types(

//////////////////////////////////////////////item_type_id INT PRIMARY KEY,

//////////////////////////////////////////////name VARCHAR(50)

//////////////////////////////////////////////);



//////////////////////////////////////////////CREATE TABLE items(

//////////////////////////////////////////////item_id INT PRIMARY KEY,

//////////////////////////////////////////////name VARCHAR(50),

//////////////////////////////////////////////item_type_id INT,

//////////////////////////////////////////////CONSTRAINT fk_items_item_types FOREIGN KEY(item_type_id)

//////////////////////////////////////////////REFERENCES item_types(item_type_id)

//////////////////////////////////////////////);



//////////////////////////////////////////////CREATE TABLE order_items(

//////////////////////////////////////////////order_id INT,

//////////////////////////////////////////////item_id INT,

//////////////////////////////////////////////CONSTRAINT pk_order_items PRIMARY KEY (order_id, item_id),

//////////////////////////////////////////////CONSTRAINT fk_order_items_orders FOREIGN KEY(order_id)

//////////////////////////////////////////////REFERENCES orders(order_id),

//////////////////////////////////////////////CONSTRAINT fk_order_items_items FOREIGN KEY(item_id)

//////////////////////////////////////////////REFERENCES items(item_id)

//////////////////////////////////////////////);

//////////////////////////////////////////////Създаване на базата данни - 4 т.

//////////////////////////////////////////////Създаване на 6 броя таблици х 6 точки.  

//////////////////////////////////////////////Въпрос 3
//////////////////////////////////////////////Отговорен
//////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////Създайте таблица cities, която да съдържа две колони - id и name, като прецените типа данни, който да укажете за двете колони. Колоната id да бъде първичен ключ.



//////////////////////////////////////////////CREATE TABLE cities(

//////////////////////////////////////////////id INT PRIMARY KEY,

//////////////////////////////////////////////name VARCHAR(50)

//////////////////////////////////////////////);

//////////////////////////////////////////////Забележка
//////////////////////////////////////////////CREATE TABLE cities

//////////////////////////////////////////////(

//////////////////////////////////////////////city_id INT PRIMARY KEY,

//////////////////////////////////////////////name VARCHAR(50)

//////////////////////////////////////////////);


//////////////////////////////////////////////Въпрос 4
//////////////////////////////////////////////Отговорен
//////////////////////////////////////////////От максимално 6,00
//////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////Текст на въпроса

//////////////////////////////////////////////Имате пример за създаване на първичен ключ на базата на една колона в таблица Persons:

//////////////////////////////////////////////CREATE TABLE Persons(

//////////////////////////////////////////////            PersonID int NOT NULL,

//////////////////////////////////////////////            FirstName varchar(255) NOT NULL,

//////////////////////////////////////////////            LastName varchar(255) NOT NULL,

//////////////////////////////////////////////            Age int



//////////////////////////////////////////////Допишете реда в който трябва да се създаде първичен ключ, като заявката работи коректно.
//////////////////////////////////////////////CREATE TABLE Persons(

//////////////////////////////////////////////PersonID int NOT NULL PRIMARY KEY,

//////////////////////////////////////////////FirstName varchar(255) NOT NULL,

//////////////////////////////////////////////LastName varchar(255) NOT NULL,

//////////////////////////////////////////////Age int

//////////////////////////////////////////////)

//////////////////////////////////////////////Забележка
//////////////////////////////////////////////CREATE TABLE Persons(

//////////////////////////////////////////////            PersonID int NOT NULL,

//////////////////////////////////////////////            FirstName varchar(255) NOT NULL,

//////////////////////////////////////////////            LastName varchar(255) NOT NULL,

//////////////////////////////////////////////            Age int,

//////////////////////////////////////////////            PRIMARY KEY(PersonID) );


//////////////////////////////////////////////Въпрос 5
//////////////////////////////////////////////Правилно
//////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////Моля, посочете вярното твърдение за връзка много към много.


//////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////a. При тази връзка на един запис от първата таблица съответстват много записи от втората таблица и обратно. 
//////////////////////////////////////////////b. При тази връзка един запис от първата таблица съответства на много записи от втората таблица.
//////////////////////////////////////////////c. При тази връзка на един запис от първата таблица съответства точно един запис от втората таблица.
//////////////////////////////////////////////d. Няма вярно твърдение.
//////////////////////////////////////////////Забележка
//////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////Правилният отговор е: При тази връзка на един запис от първата таблица съответстват много записи от втората таблица и обратно.
//////////////////////////////////////////////Въпрос 6
//////////////////////////////////////////////Отговорен
//////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////Имате код за създаване на две таблици. Посочете вида на връзката, която се получава.

//////////////////////////////////////////////CREATE TABLE mountains(

//////////////////////////////////////////////  mountain_id INT PRIMARY KEY,

//////////////////////////////////////////////  mountain_name VARCHAR(50)

//////////////////////////////////////////////);

//////////////////////////////////////////////CREATE TABLE peaks(

//////////////////////////////////////////////  peak_id INT PRIMARY KEY,

//////////////////////////////////////////////  mountain_id INT,

//////////////////////////////////////////////  CONSTRAINT fk_peaks_mountains

//////////////////////////////////////////////  FOREIGN KEY (mountain_id)
//////////////////////////////////////////////  REFERENCES mountains(mountain_id)
//////////////////////////////////////////////);


//////////////////////////////////////////////Връзката между таблиците е едно към много.Един запис от таблица mountains съответства на много записи от таблица peaks.
//////////////////////////////////////////////Забележка
//////////////////////////////////////////////Един-към-много/Много-към-един

//////////////////////////////////////////////Въпрос 7
//////////////////////////////////////////////Отговорен
//////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////Имате код за създаване на таблици. Посочете вида на връзката, която се получава.

//////////////////////////////////////////////CREATE TABLE employees(

//////////////////////////////////////////////  employee_id INT PRIMARY KEY,
//////////////////////////////////////////////  employee_name VARCHAR(50)

//////////////////////////////////////////////);

//////////////////////////////////////////////CREATE TABLE projects(
//////////////////////////////////////////////  project_id INT PRIMARY KEY,
//////////////////////////////////////////////  project_name VARCHAR(50)

//////////////////////////////////////////////);

//////////////////////////////////////////////CREATE TABLE employees_projects(
//////////////////////////////////////////////  employee_id INT,
//////////////////////////////////////////////  project_id INT,

//////////////////////////////////////////////  CONSTRAINT pk_employees_projects

//////////////////////////////////////////////  PRIMARY KEY(employee_id, project_id),

//////////////////////////////////////////////  CONSTRAINT fk_employees_projects_employees

//////////////////////////////////////////////  FOREIGN KEY(employee_id)

//////////////////////////////////////////////  REFERENCES employees(employee_id),

//////////////////////////////////////////////  CONSTRAINT fk_employees_projects_projects

//////////////////////////////////////////////  FOREIGN KEY(project_id)

//////////////////////////////////////////////  REFERENCES projects(project_id)

//////////////////////////////////////////////);


//////////////////////////////////////////////Връзката между таблици employees и projects, която се получава чрез таблицата employees_projects, е "много към много" (many-to-many). Това означава, че на един запис от таблицата employees (един служител) може да съответстват много записи от таблицата projects и обратно.Таблицата employees_projects се използва като свързваща таблица, която позволява да се осъществи много към много връзка между employees и projects

//////////////////////////////////////////////Забележка
//////////////////////////////////////////////Много-към-много

//////////////////////////////////////////////Въпрос 8
//////////////////////////////////////////////Правилно
//////////////////////////////////////////////4,00 от максимално 4,00 точки
//////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////Имате заявка, която създава таблица Persons и трябва да се постави ограничение годините на хората да са по-големи от 20. От трите посочени думи, изберете ограничението, което трябва да поставите за да решите коректно примера. 



//////////////////////////////////////////////CREATE TABLE Persons(

//////////////////////////////////////////////            PersonID int NOT NULL,

//////////////////////////////////////////////            FirstName varchar(255) NOT NULL,

//////////////////////////////////////////////            LastName varchar(255) NOT NULL,

//////////////////////////////////////////////            Age int,

//////////////////////////////////////////////             blank  (Age >= 20)



//////////////////////////////////////////////DEFAULT CHECKFOREIGN KEY
//////////////////////////////////////////////Забележка
//////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////§  CHECK – гарантира, че всички данни в колоната удовлетворят дадено условие

//////////////////////////////////////////////CREATE TABLE Persons(

//////////////////////////////////////////////            PersonID int NOT NULL,

//////////////////////////////////////////////            FirstName varchar(255) NOT NULL,

//////////////////////////////////////////////            LastName varchar(255) NOT NULL,

//////////////////////////////////////////////            Age int,

//////////////////////////////////////////////            CHECK (Age >= 20)


//////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////Имате заявка, която създава таблица Persons и трябва да се постави ограничение годините на хората да са по-големи от 20. От трите посочени думи, изберете ограничението, което трябва да поставите за да решите коректно примера. 



//////////////////////////////////////////////CREATE TABLE Persons(

//////////////////////////////////////////////            PersonID int NOT NULL,

//////////////////////////////////////////////            FirstName varchar(255) NOT NULL,

//////////////////////////////////////////////            LastName varchar(255) NOT NULL,

//////////////////////////////////////////////            Age int,

//////////////////////////////////////////////            [CHECK] (Age >= 20)


//////////////////////////////////////////////Въпрос 9
//////////////////////////////////////////////Правилно
//////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////Ограниченията задават правила за данните в дадена таблица. Посочете вярното твърдение за ограничението CHECK.

//////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////a. уникално идентифицира запис от друга таблица
//////////////////////////////////////////////b. гарантира, че всички данни в колоната удовлетворят дадено условие 
//////////////////////////////////////////////c. гарантира, че всички данни в колоната са различни/уникални
//////////////////////////////////////////////d. не позволява в клетка да има празна стойност
//////////////////////////////////////////////Забележка
//////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////Правилният отговор е: гарантира, че всички данни в колоната удовлетворят дадено условие
//////////////////////////////////////////////Въпрос 10
//////////////////////////////////////////////Правилно
//////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////Имате заявка за създаване на таблица cities с две колони city_id и name. Посочете липсващите думи в кода, така че да получите коректно работеща заявка.

////////////////////////////////////////////// blank  TABLE cities(

//////////////////////////////////////////////city_id  blank  PRIMARY KEY,

//////////////////////////////////////////////name VARCHAR(50)

//////////////////////////////////////////////);


//////////////////////////////////////////////CREATECREATEINTINTPRIMARY KEYPRIMARY KEYVARCHAR(50)VARCHAR(50)
//////////////////////////////////////////////Забележка
//////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////CREATE TABLE cities(

//////////////////////////////////////////////city_id INT PRIMARY KEY,

//////////////////////////////////////////////name[[1]]

//////////////////////////////////////////////);


//////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////Имате заявка за създаване на таблица cities с две колони city_id и name. Посочете липсващите думи в кода, така че да получите коректно работеща заявка.

//////////////////////////////////////////////[CREATE] TABLE cities(

//////////////////////////////////////////////city_id[INT] PRIMARY KEY,

//////////////////////////////////////////////name VARCHAR(50)

//////////////////////////////////////////////);

//////////////////////////////////////////////Въпрос 11
//////////////////////////////////////////////Правилно
//////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////Моля свържете вярното твърдение за посочените типове данни:

//////////////////////////////////////////////INT

//////////////////////////////////////////////Отговор 1
//////////////////////////////////////////////тип данни за цели числа

//////////////////////////////////////////////VARCHAR(M)

//////////////////////////////////////////////Отговор 2
//////////////////////////////////////////////текстов тип данни

//////////////////////////////////////////////DOUBLE

//////////////////////////////////////////////Отговор 3
//////////////////////////////////////////////тип данни за реални числа

//////////////////////////////////////////////Забележка
//////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////Правилният отговор е: INT → тип данни за цели числа, VARCHAR(M) → текстов тип данни, DOUBLE → тип данни за реални числа
//////////////////////////////////////////////Въпрос 12
//////////////////////////////////////////////Отговорен
//////////////////////////////////////////////От максимално 6,00
//////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////Създайте заявка, която да създаде таблица directors в база от данни Movies, със следните колони:


//////////////////////////////////////////////id е от тип цяло число и да бъде първичен ключ

//////////////////////////////////////////////director_name е от текстов тип с дължина 10 знака

//////////////////////////////////////////////notes е от текстов тип с дължина 20 знака.



//////////////////////////////////////////////CREATE TABLE directors(

//////////////////////////////////////////////id INT PRIMARY KEY,

//////////////////////////////////////////////director_name VARCHAR(10),

//////////////////////////////////////////////notes VARCHAR(20)

//////////////////////////////////////////////);

//////////////////////////////////////////////Забележка
//////////////////////////////////////////////CREATE TABLE directors(

//////////////////////////////////////////////id INT PRIMARY KEY,

//////////////////////////////////////////////director_name VARCHAR(10),

//////////////////////////////////////////////notes VARCHAR(20)

//////////////////////////////////////////////);



//////////////////////////////////////////////Въпрос 13
//////////////////////////////////////////////Отчасти верен
//////////////////////////////////////////////0,67 от максимално 2,00 точки
//////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////Ограниченията задават правила за данните в дадена таблица. Имате посочени примери за често срещани ограничения. Моля свържете ограничението с неговото вярно описание.


//////////////////////////////////////////////PRIMARY KEY

//////////////////////////////////////////////Отговор 1
//////////////////////////////////////////////уникално идентифицира запис от друга таблица

//////////////////////////////////////////////UNIQUE

//////////////////////////////////////////////Отговор 2
//////////////////////////////////////////////идентифицира уникално всеки запис в таблицата

//////////////////////////////////////////////NOT NULL

//////////////////////////////////////////////Отговор 3
//////////////////////////////////////////////не позволява в клетка да има празна стойност

//////////////////////////////////////////////Забележка
//////////////////////////////////////////////Your answer is partially correct.
//////////////////////////////////////////////Вие правилно сте избрали 1.
//////////////////////////////////////////////Правилният отговор е: PRIMARY KEY → идентифицира уникално всеки запис в таблицата, UNIQUE → гарантира, че всички данни в колоната са различни, NOT NULL → не позволява в клетка да има празна стойност
//////////////////////////////////////////////Въпрос 14
//////////////////////////////////////////////Отговорен
//////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////Напишете заявка за създаване на таблица customers, която да съдържа три колони, които са:

//////////////////////////////////////////////id - от тип цели числа, name - от тип текст с дължина 50 знака и birthday от тип дата.


//////////////////////////////////////////////CREATE TABLE customers(

//////////////////////////////////////////////id INT,

//////////////////////////////////////////////name VARCHAR(50),

//////////////////////////////////////////////birthday DATE

//////////////////////////////////////////////);

//////////////////////////////////////////////Забележка
//////////////////////////////////////////////CREATE TABLE customers(

//////////////////////////////////////////////id INT(11) PRIMARY KEY,

//////////////////////////////////////////////name VARCHAR(50),

//////////////////////////////////////////////birthday DATE,

//////////////////////////////////////////////);


//////////////////////////////////////////////Въпрос 15
//////////////////////////////////////////////Правилно
//////////////////////////////////////////////4,00 от максимално 4,00 точки
//////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////Имате заявка, която свързва две таблици от база от данни Orders и Persons. От изброените 6 думи, изберете три верни, с които да получите работеща заявка и ги поставете в дадения код.

//////////////////////////////////////////////CREATE TABLE Orders(

//////////////////////////////////////////////    OrderID int NOT NULL,

//////////////////////////////////////////////    OrderNumber int NOT NULL,

//////////////////////////////////////////////    PersonID int,

//////////////////////////////////////////////     blank  (OrderID),

//////////////////////////////////////////////     blank  (PersonID)  blank  Persons(PersonID)

//////////////////////////////////////////////);



//////////////////////////////////////////////PRIMARY KEYPRIMARY KEYPRIMARY KEYREFERENCESREFERENCESREFERENCESVARCHARVARCHARVARCHARDEFAULTDEFAULTDEFAULTCONSTRAINTCONSTRAINTCONSTRAINTFOREIGN KEYFOREIGN KEYFOREIGN KEY
//////////////////////////////////////////////Забележка
//////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////Имате заявка, която свързва две таблици от база от данни Orders и Persons. От изброените 6 думи, изберете три верни, с които да получите работеща заявка и ги поставете в дадения код.

//////////////////////////////////////////////CREATE TABLE Orders(

//////////////////////////////////////////////    OrderID int NOT NULL,

//////////////////////////////////////////////    OrderNumber int NOT NULL,

//////////////////////////////////////////////    PersonID int,

//////////////////////////////////////////////    [PRIMARY KEY] (OrderID),

//////////////////////////////////////////////    [FOREIGN KEY] (PersonID)[REFERENCES] Persons(PersonID)

//////////////////////////////////////////////);


//////////////////////////////////////////////Въпрос 16
//////////////////////////////////////////////Правилно
//////////////////////////////////////////////6,00 от максимално 6,00 точки
//////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////Имате код за създаване на таблици, които реализират връзка между таблици едно към едно. Открийте липсващите думи и ги поставете в текста чрез влачене, така че да получите коректно работещ код.

//////////////////////////////////////////////CREATE TABLE drivers(

//////////////////////////////////////////////  driver_id INT  blank ,

//////////////////////////////////////////////  driver_name VARCHAR(50)

//////////////////////////////////////////////);

//////////////////////////////////////////////CREATE TABLE cars(

//////////////////////////////////////////////  car_id INT PRIMARY KEY,

//////////////////////////////////////////////  driver_id INT UNIQUE,

//////////////////////////////////////////////   blank  fk_cars_drivers  blank 
//////////////////////////////////////////////  (driver_id)  blank drivers(driver_id)

//////////////////////////////////////////////);



//////////////////////////////////////////////PRIMARY KEYPRIMARY KEYPRIMARY KEYPRIMARY KEYCONSTRAINTCONSTRAINTCONSTRAINTCONSTRAINT REFERENCES REFERENCES REFERENCES REFERENCESFOREIGN KEYFOREIGN KEYFOREIGN KEYFOREIGN KEY
//////////////////////////////////////////////Забележка
//////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////CREATE TABLE drivers(

//////////////////////////////////////////////  driver_id INT PRIMARY KEY,

//////////////////////////////////////////////  driver_name VARCHAR(50)

//////////////////////////////////////////////);

//////////////////////////////////////////////CREATE TABLE cars(

//////////////////////////////////////////////  car_id INT PRIMARY KEY,

//////////////////////////////////////////////  driver_id INT UNIQUE,

//////////////////////////////////////////////  CONSTRAINT fk_cars_drivers FOREIGN KEY
//////////////////////////////////////////////  (driver_id) REFERENCES drivers(driver_id)

//////////////////////////////////////////////);


//////////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////////Имате код за създаване на таблици, които реализират връзка между таблици едно към едно. Открийте липсващите думи и ги поставете в текста чрез влачене, така че да получите коректно работещ код.

//////////////////////////////////////////////CREATE TABLE drivers(

//////////////////////////////////////////////  driver_id INT [PRIMARY KEY],

//////////////////////////////////////////////  driver_name VARCHAR(50)

//////////////////////////////////////////////);

//////////////////////////////////////////////CREATE TABLE cars(

//////////////////////////////////////////////  car_id INT PRIMARY KEY,

//////////////////////////////////////////////  driver_id INT UNIQUE,

//////////////////////////////////////////////  [CONSTRAINT] fk_cars_drivers [FOREIGN KEY]
//////////////////////////////////////////////(driver_id)[REFERENCES] drivers(driver_id)

//////////////////////////////////////////////);


//////////////////////////////////////////////Въпрос 17
//////////////////////////////////////////////Правилно
//////////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////Посочете вярното твърдение за по-долу посочения код:

//////////////////////////////////////////////CREATE TABLE Persons(

//////////////////////////////////////////////            ID int NOT NULL,

//////////////////////////////////////////////            FirstName varchar(255) NOT NULL,

//////////////////////////////////////////////            LastName varchar(255) NOT NULL,

//////////////////////////////////////////////          );


//////////////////////////////////////////////Изберете едно
//////////////////////////////////////////////a. Създава таблица с колони ID от тип дробно цисло, FirstName от текстов тип и LastName от текстов тип гарантира, че всички данни в колоната са различни.
//////////////////////////////////////////////b. Създава таблица с колони ID от тип цяло цисло, FirstName от текстов тип и LastName от текстов тип и не позволява в клетките да има празна стойност. 
//////////////////////////////////////////////c. Създава таблица с колони ID, FirstName и LastName от текстов тип като може в клетките да има празна стойност.
//////////////////////////////////////////////Забележка
//////////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////////Правилният отговор е: Създава таблица с колони ID от тип цяло цисло, FirstName от текстов тип и LastName от текстов тип и не позволява в клетките да има празна стойност.
//////////////////////////////////////////////Въпрос 18
//////////////////////////////////////////////Отговорен
//////////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////////Създайте таблица persons, която да съдържа две колони city_id, FirstName и LastName, като прецените типа данни, който да укажете за колоните. Колоната city_id да бъде първичен ключ.



//////////////////////////////////////////////CREATE TABLE persons(

//////////////////////////////////////////////city_id INT PRIMARY KEY,

//////////////////////////////////////////////FirstName VARCHAR(50),

//////////////////////////////////////////////LastName VARCHAR(50)

//////////////////////////////////////////////);

//////////////////////////////////////////////Забележка
//////////////////////////////////////////////CREATE TABLE persons

//////////////////////////////////////////////(

//////////////////////////////////////////////city_id INT PRIMARY KEY,

//////////////////////////////////////////////FirstName VARCHAR(50),

//////////////////////////////////////////////LastName VARCHAR(50)

//////////////////////////////////////////////);


//////////////////////////////////////////////Край на прегледа
//////////////////////////////////////////////Отиди на ...
//////////////////////////////////////////////Отиди на ...
//////////////////////////////////////////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
//////////////////////////////////////////////Навигация в теста
//////////////////////////////////////////////Показване по един въпрос на страница
//////////////////////////////////////////////Край на прегледа
//////////////////////////////////////////////Вие сте влезли в системата като Добри Илев (Изход)
//////////////////////////////////////////////тренировъчен - курс - по
//////////////////////////////////////////////Data retention summary



//////////////////////////////////////////////ИЗПИТНА ТЕМА 10

////////////////////////////////////////////Прескочи на основното съдържание
////////////////////////////////////////////ПГЕЕ
////////////////////////////////////////////Български ‎(bg)‎ 
////////////////////////////////////////////Добри Илев 
////////////////////////////////////////////Тренировъчен курс - Програмно осигуряване
////////////////////////////////////////////Начална страница
////////////////////////////////////////////Моите курсове
//////////////////////////////////////////// тренировъчен-курс-по
//////////////////////////////////////////// Изпитна тема 10
//////////////////////////////////////////// Изпитна тема №10
////////////////////////////////////////////Започнат на	събота, 25 февруари 2023, 13:09
////////////////////////////////////////////Състояние Завършен
////////////////////////////////////////////Приключен на	събота, 25 февруари 2023, 13:30
////////////////////////////////////////////Изминало време	20 мин. 32 сек.
////////////////////////////////////////////Оценка	Още не е оценен
////////////////////////////////////////////Въпрос 1
////////////////////////////////////////////Правилно
////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////Посочете коя от следните заявки ще изтрие записи от таблица projects, които са с начална дата 2006-01-01.

////////////////////////////////////////////Изберете едно
////////////////////////////////////////////a. DELETE FROM employees WHERE salary = '2006-01-01';
////////////////////////////////////////////b.DELETE FROM projects WHERE start_date = '2006-01-01';
////////////////////////////////////////////c.DELETE FROM projects WHERE start_date > '2006-01-01';
////////////////////////////////////////////d.DELETE FROM projects WHERE end_date = '2006-01-01';
////////////////////////////////////////////Забележка
////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////DELETE FROM projects

////////////////////////////////////////////      WHERE start_date = '2006-01-01';


////////////////////////////////////////////Правилният отговор е: DELETE FROM projects WHERE start_date = '2006-01-01';
////////////////////////////////////////////Въпрос 2
////////////////////////////////////////////Отговорен
////////////////////////////////////////////От максимално 6,00
////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////Във вашата база от данни Soft_uni имате създадена таблица Employees с 500 записа. Необходимо е да добавите нова колона с име salary. Напишете заявка за добавяне на колоната в таблица employees. 
////////////////////////////////////////////ALTER TABLE employees ADD COLUMN salary DECIMAL(10, 2);

////////////////////////////////////////////Забележка
////////////////////////////////////////////ALTER TABLE employees

////////////////////////////////////////////ADD salary DECIMAL;


////////////////////////////////////////////Въпрос 3
////////////////////////////////////////////Правилно
////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////Посочете действието на използваната връзка в следната заявка: 

////////////////////////////////////////////SELECT* FROM employees AS e

//////////////////////////////////////////// RIGHT OUTER JOIN departments AS d

//////////////////////////////////////////// ON e.department_id = d.department_id;


////////////////////////////////////////////Изберете едно
////////////////////////////////////////////a. Тази връзка връща записите, отговарящи на свързващото условие и също така несъвпадащите записи от таблица employees.
////////////////////////////////////////////b.
////////////////////////////////////////////Тази връзка връща записите, отговарящи на свързващото условие и също така несъвпадащите записи от лявата таблица.
////////////////////////////////////////////c.
////////////////////////////////////////////Тази връзка връща записите, отговарящи на свързващото условие и също така несъвпадащите записи от таблица departments.
////////////////////////////////////////////d. Тази връзка връща само редовете, отговарящи на условието за свързване.
////////////////////////////////////////////Забележка
////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////Тази връзка връща записите, отговарящи на свързващото условие и също така несъвпадащите записи от таблица departments.
////////////////////////////////////////////Въпрос 4
////////////////////////////////////////////Отчасти верен
////////////////////////////////////////////0,67 от максимално 2,00 точки
////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////Моля посочете вярното твърдение за посочените типове данни:

////////////////////////////////////////////Float

////////////////////////////////////////////Отговор 1
////////////////////////////////////////////тип данни за реални числа

////////////////////////////////////////////VARCHAR(M)

////////////////////////////////////////////Отговор 2
////////////////////////////////////////////текстов тип данни

////////////////////////////////////////////DOUBLE

////////////////////////////////////////////Отговор 3
////////////////////////////////////////////[Deleted choice]

////////////////////////////////////////////Забележка
////////////////////////////////////////////Your answer is partially correct.
////////////////////////////////////////////Вие правилно сте избрали 2.
////////////////////////////////////////////Правилният отговор е: Float → тип данни за реални числа, VARCHAR(M) → текстов тип данни, DOUBLE → тип данни за реални числа
////////////////////////////////////////////Въпрос 5
////////////////////////////////////////////Отговорен
////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////Допишете следната заявка, така че да изведе като резултат служителите със заплата по-голяма от 50000 и да ги сортира в низходящ ред.

////////////////////////////////////////////SELECT first_name, last_name, salary FROM employees



////////////////////////////////////////////WHERE salary > 50000 ORDER BY salary DESC;

////////////////////////////////////////////Забележка
////////////////////////////////////////////SELECT first_name, last_name, salary FROM employees

////////////////////////////////////////////WHERE salary > 50000

////////////////////////////////////////////ORDER BY salary DESC;

////////////////////////////////////////////Въпрос 6
////////////////////////////////////////////Отговорен
////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////Посочете какво прави клаузата FULL JOIN.

////////////////////////////////////////////FULL JOIN служи за свързване на две таблици, като връща всички редове от двете таблици, включително и тези, които не са свързани с другата таблица. Той съчетава елементите от LEFT JOIN и RIGHT JOIN, като връща всички редове от двете таблици, дори когато няма съответствие между редовете в двете таблици. Ако има съответствие, се връщат два пъти редовете, където има съответствие, а ако няма съответствие, се връща запис със значението NULL за пропуснатите редове.

////////////////////////////////////////////Забележка
////////////////////////////////////////////FULL JOIN - Тази връзка връща записите, отговарящи на свързващото условие и също така несъвпадащите записи от лявата и от дясната таблица.

////////////////////////////////////////////Въпрос 7
////////////////////////////////////////////Правилно
////////////////////////////////////////////4,00 от максимално 4,00 точки
////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////Имате пример за създаване на процедура:

////////////////////////////////////////////CREATE blank   blank _withdraw_money (account_id INT, money_amount DECIMAL)

//////////////////////////////////////////// blank

////////////////////////////////////////////  -- Transaction logic goes here.

////////////////////////////////////////////END

////////////////////////////////////////////Поставете липсващите думи, така че да се получи правилния код.


////////////////////////////////////////////uspPROCEDUREFUNCTIONBEGIN
////////////////////////////////////////////Забележка
////////////////////////////////////////////Your answer is correct.

////////////////////////////////////////////CREATE PROCEDURE usp_withdraw_money (account_id INT, money_amount DECIMAL)

////////////////////////////////////////////BEGIN

////////////////////////////////////////////  -- Transaction logic goes here.

////////////////////////////////////////////END


////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////Имате пример за създаване на процедура:

////////////////////////////////////////////CREATE[PROCEDURE][usp]_withdraw_money(account_id INT, money_amount DECIMAL)

////////////////////////////////////////////[BEGIN]

////////////////////////////////////////////  -- Transaction logic goes here.

////////////////////////////////////////////END

////////////////////////////////////////////Поставете липсващите думи, така че да се получи правилния код.

////////////////////////////////////////////Въпрос 8
////////////////////////////////////////////Отговорен
////////////////////////////////////////////От максимално 6,00
////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////Създайте заявка, която извежда първо име, фамилия и длъжност на служителите, които имат заплата между 20000 и 30000. Използвайте базата данни soft_uni.



////////////////////////////////////////////SELECT first_name, last_name, job_title FROM employees WHERE salary BETWEEN 20000 AND 30000;

////////////////////////////////////////////Забележка
////////////////////////////////////////////SELECT first_name, last_name, job_title

////////////////////////////////////////////FROM employees

////////////////////////////////////////////WHERE salary BETWEEN 20000 AND 30000;

////////////////////////////////////////////Въпрос 9
////////////////////////////////////////////Правилно
////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////Емате следната заявка. Посочете вярното твърдение за получения резултат от агрегиращата използвана функция след нейното изпълнение. 

////////////////////////////////////////////SELECT e.`department_id`,

////////////////////////////////////////////  AVG(e.`salary`) AS 'AvgSalary'

////////////////////////////////////////////FROM `employees` AS e

////////////////////////////////////////////GROUP BY e.`department_id`;


////////////////////////////////////////////Изберете едно
////////////////////////////////////////////a. Намира максималната стойност на заплатите на служителите и преименува колоната.
////////////////////////////////////////////b. Намира средноаритметичната стойност на заплатите на служителите и преименува колоната. 
////////////////////////////////////////////c. Намира сумата на заплатите на служителите и преименува колоната.
////////////////////////////////////////////Забележка
////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////Правилният отговор е: Намира средноаритметичната стойност на заплатите на служителите и преименува колоната.
////////////////////////////////////////////Въпрос 10
////////////////////////////////////////////Правилно
////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////Посочете коя от следните заявки ще изведе всички записи от таблица departments и извежда първите два реда от таблицата.

////////////////////////////////////////////Изберете едно
////////////////////////////////////////////a.

////////////////////////////////////////////SELECT * FROM departments WHERE department_id <=20
////////////////////////////////////////////b.
////////////////////////////////////////////SELECT * FROM employees WHERE employee_id <=20
////////////////////////////////////////////c. SELECT * FROM departments WHERE department_id >2
////////////////////////////////////////////d.
////////////////////////////////////////////SELECT * FROM departments WHERE department_id <=2 
////////////////////////////////////////////Забележка
////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////SELECT * FROM departments WHERE department_id <=2


////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////SELECT* FROM departments WHERE department_id <=2
////////////////////////////////////////////Въпрос 11
////////////////////////////////////////////Правилно
////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////Дадена е дефиниция за транзакция.  Поставете липсващите думи в дефиницията. 

////////////////////////////////////////////Транзакциите гарантират пълнотата и цялостността на базата данни. Всички промени в транзакцията са   blank . Промените се съхраняват едва след изпълнението на  blank . По всяко време всички промени могат да се отменят чрез  blank .





////////////////////////////////////////////ROLLBACKвременнипоредица от действияCOMMIT
////////////////////////////////////////////Забележка
////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////Транзакциите гарантират пълнотата и цялостността на базата данни. Всички промени в транзакцията са временни. Промените се съхраняват едва след изпълнението на COMMIT. По всяко време всички промени могат да се отменят чрез ROLLBACK.


////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////Дадена е дефиниция за транзакция.  Поставете липсващите думи в дефиницията. 

////////////////////////////////////////////Транзакциите гарантират пълнотата и цялостността на базата данни. Всички промени в транзакцията са  [временни]. Промените се съхраняват едва след изпълнението на [COMMIT]. По всяко време всички промени могат да се отменят чрез [ROLLBACK].




////////////////////////////////////////////Въпрос 12
////////////////////////////////////////////Правилно
////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////Посочете коя от следните заявки ще изведе фамилия и заплата, като заплатата е в периода 20000 и 22000.

////////////////////////////////////////////Изберете едно
////////////////////////////////////////////a.
////////////////////////////////////////////SELECT `last_name`, `salary`FROM `employees` WHERE `salary` > 22000;
////////////////////////////////////////////b.

////////////////////////////////////////////SELECT `last_name`, `salary`FROM `employees` WHERE `salary` <= 20000 AND 22000;
////////////////////////////////////////////c.
////////////////////////////////////////////SELECT `last_name`, `salary`FROM `employees` WHERE `salary` BETWEEN 20000 AND 22000;
////////////////////////////////////////////d.SELECT `last_name`, `salary`FROM `employees` WHERE `salary` > 20000 OR 'salary' < 22000;
////////////////////////////////////////////Забележка
////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////SELECT `last_name`, `salary`FROM `employees` WHERE `salary` BETWEEN 20000 AND 22000;


////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////SELECT `last_name`, `salary`FROM `employees` WHERE `salary` BETWEEN 20000 AND 22000;
////////////////////////////////////////////Въпрос 13
////////////////////////////////////////////Правилно
////////////////////////////////////////////6,00 от максимално 6,00 точки
////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////Имате синтаксис на транзакция в My SQL. Открийте липсващите думи в кода и го модифицирайте, така че да получите коректно работеща заявка. 

//////////////////////////////////////////// blank   blank 

//////////////////////////////////////////// blank  accounts SET balance = balance – withdraw_amount

////////////////////////////////////////////WHERE id = account

////////////////////////////////////////////--Transaction logic goes here

////////////////////////////////////////////IF ROW_COUNT() <> 1 THEN-- Affected rows are different than one.

////////////////////////////////////////////            SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Invalid account';

////////////////////////////////////////////blank;

////////////////////////////////////////////ELSE

////////////////////////////////////////////             blank;

////////////////////////////////////////////blank;



////////////////////////////////////////////ROLLBACKROLLBACKROLLBACKROLLBACKROLLBACKROLLBACKSTARTSTARTSTARTSTARTSTARTSTARTTRANSACTIONTRANSACTIONTRANSACTIONTRANSACTIONTRANSACTIONTRANSACTIONUPDATEUPDATEUPDATEUPDATEUPDATEUPDATEEND IFEND IFEND IFEND IFEND IFEND IFCOMMITCOMMITCOMMITCOMMITCOMMITCOMMIT
////////////////////////////////////////////Забележка
////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////START TRANSACTION

////////////////////////////////////////////UPDATE accounts SET balance = balance – withdraw_amount

////////////////////////////////////////////WHERE id = account

////////////////////////////////////////////IF ROW_COUNT() <> 1 THEN-- Affected rows are different than one.

////////////////////////////////////////////            SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Invalid account';

////////////////////////////////////////////ROLLBACK;

////////////////////////////////////////////ELSE

////////////////////////////////////////////            COMMIT;

////////////////////////////////////////////END IF;


////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////Имате синтаксис на транзакция в My SQL. Открийте липсващите думи в кода и го модифицирайте, така че да получите коректно работеща заявка. 

////////////////////////////////////////////[START][TRANSACTION]

////////////////////////////////////////////[UPDATE] accounts SET balance = balance – withdraw_amount

////////////////////////////////////////////WHERE id = account

////////////////////////////////////////////--Transaction logic goes here

////////////////////////////////////////////IF ROW_COUNT() <> 1 THEN-- Affected rows are different than one.

////////////////////////////////////////////            SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Invalid account';

////////////////////////////////////////////[ROLLBACK] ;

////////////////////////////////////////////ELSE

////////////////////////////////////////////            [COMMIT];

////////////////////////////////////////////[END IF] ;


////////////////////////////////////////////Въпрос 14
////////////////////////////////////////////Отчасти верен
////////////////////////////////////////////3,00 от максимално 4,00 точки
////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////Имате представена подзаявка за намиране служителите от отдел финанси и извеждане на всички колони от таблицата. Поставете липсващите думи, за да направите работещ код.

////////////////////////////////////////////SELECT * FROM employees
//////////////////////////////////////////// blank  department_id  blank 

////////////////////////////////////////////  (

////////////////////////////////////////////   SELECT department_id
////////////////////////////////////////////     blank  departments

////////////////////////////////////////////     blank  name = 'Finance'  );



////////////////////////////////////////////WHEREWHEREWHEREWHEREWHEREWHEREWHEREWHEREFROMFROMFROMFROMININININ
////////////////////////////////////////////Забележка
////////////////////////////////////////////Your answer is partially correct.
////////////////////////////////////////////Вие правилно сте избрали 3.
////////////////////////////////////////////SELECT * FROM employees
////////////////////////////////////////////WHERE department_id IN

////////////////////////////////////////////  (

////////////////////////////////////////////   SELECT department_id
////////////////////////////////////////////     FROM departments

////////////////////////////////////////////    WHERE name = 'Finance'  );


////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////Имате представена подзаявка за намиране служителите от отдел финанси и извеждане на всички колони от таблицата. Поставете липсващите думи, за да направите работещ код.

////////////////////////////////////////////SELECT * FROM employees
////////////////////////////////////////////[WHERE] department_id[IN]

////////////////////////////////////////////  (

////////////////////////////////////////////   SELECT department_id
////////////////////////////////////////////    [FROM] departments

////////////////////////////////////////////    [WHERE] name = 'Finance');


////////////////////////////////////////////Въпрос 15
////////////////////////////////////////////Отчасти верен
////////////////////////////////////////////1,33 от максимално 2,00 точки
////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////Имате пример за създаване на функция:

////////////////////////////////////////////CREATE blank   blank _project_weeks (start_date DATETIME, end_date DATETIME)

//////////////////////////////////////////// blank INT

////////////////////////////////////////////BEGIN

////////////////////////////////////////////            // тяло на функцията

////////////////////////////////////////////END

////////////////////////////////////////////Поставете липсващите думи, така че да се получи правилния код.


////////////////////////////////////////////RETURNSudfFUNCTIONPROCEDURE
////////////////////////////////////////////Забележка
////////////////////////////////////////////Your answer is partially correct.
////////////////////////////////////////////Вие правилно сте избрали 2.
////////////////////////////////////////////CREATE FUNCTION udf_project_weeks (start_date DATETIME, end_date DATETIME)

////////////////////////////////////////////RETURNS INT

////////////////////////////////////////////BEGIN

////////////////////////////////////////////            // тяло на функцията

////////////////////////////////////////////END


////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////Имате пример за създаване на функция:

////////////////////////////////////////////CREATE[FUNCTION][udf]_project_weeks(start_date DATETIME, end_date DATETIME)

////////////////////////////////////////////[RETURNS] INT

////////////////////////////////////////////BEGIN

////////////////////////////////////////////            // тяло на функцията

////////////////////////////////////////////END

////////////////////////////////////////////Поставете липсващите думи, така че да се получи правилния код.

////////////////////////////////////////////Въпрос 16
////////////////////////////////////////////Отговорен
////////////////////////////////////////////От максимално 4,00
////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////Имплементирайте код на заявка, която извежда колоните first_name, last_name и job_title от таблица employees и извежда само тези записи със заплата между 20000 и 30000.



////////////////////////////////////////////SELECT first_name, last_name, job_title FROM employees WHERE salary BETWEEN 20000 AND 30000;

////////////////////////////////////////////Забележка
////////////////////////////////////////////SELECT first_name, last_name, job_title

////////////////////////////////////////////FROM employees

////////////////////////////////////////////WHERE salary BETWEEN 20000 AND 30000;

////////////////////////////////////////////Въпрос 17
////////////////////////////////////////////Отговорен
////////////////////////////////////////////От максимално 2,00
////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////Имате създадена съхранена процедура с параметър usp_select_employees_by_seniority(min_years_at_work INT). Моля да дефинирате заявка за извикване на процедурата, за да може да бъде използвана.

////////////////////////////////////////////Заявката за извикване на съхранената процедура usp_select_employees_by_seniority(min_years_at_work INT) може да бъде дефинирана по следния начин:

////////////////////////////////////////////CALL usp_select_employees_by_seniority(min_years_at_work);


////////////////////////////////////////////Забележка

////////////////////////////////////////////CALL usp_select_employees_by_seniority(15);


////////////////////////////////////////////Въпрос 18
////////////////////////////////////////////Правилно
////////////////////////////////////////////4,00 от максимално 4,00 точки
////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////В посочения пример имате заявка за създаване на таблица persons с колони person_id, first_name, passport_id и salary. Моля избирете липсващите думи за всяка колона от таблицата.

////////////////////////////////////////////CREATE TABLE persons(

////////////////////////////////////////////person_id  
////////////////////////////////////////////INT
////////////////////////////////////////////  PRIMARY KEY,

////////////////////////////////////////////first_name 
////////////////////////////////////////////VARCHAR(50)
//////////////////////////////////////////// ,

////////////////////////////////////////////salary
////////////////////////////////////////////DECIMAL(8,2)
//////////////////////////////////////////// ,

////////////////////////////////////////////passport_id
////////////////////////////////////////////INT
////////////////////////////////////////////  UNIQUE,

////////////////////////////////////////////CONSTRAINT fk_persons_passports FOREIGN KEY(passport_id) REFERENCES passports(passport_id)

////////////////////////////////////////////);

////////////////////////////////////////////Забележка
////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////CREATE TABLE persons(

////////////////////////////////////////////person_id INT PRIMARY KEY,

////////////////////////////////////////////first_name VARCHAR(50),

////////////////////////////////////////////salary DECIMAL(8,2),

////////////////////////////////////////////passport_id INT UNIQUE,

////////////////////////////////////////////CONSTRAINT fk_persons_passports FOREIGN KEY(passport_id) REFERENCES passports(passport_id)

////////////////////////////////////////////);

////////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////////В посочения пример имате заявка за създаване на таблица persons с колони person_id, first_name, passport_id и salary. Моля избирете липсващите думи за всяка колона от таблицата.

////////////////////////////////////////////CREATE TABLE persons(

////////////////////////////////////////////person_id  [INT] PRIMARY KEY,

////////////////////////////////////////////first_name[VARCHAR(50)],

////////////////////////////////////////////salary[DECIMAL(8, 2)],

////////////////////////////////////////////passport_id[INT] UNIQUE,

////////////////////////////////////////////CONSTRAINT fk_persons_passports FOREIGN KEY(passport_id) REFERENCES passports(passport_id)

////////////////////////////////////////////);

////////////////////////////////////////////Въпрос 19
////////////////////////////////////////////Отговорен
////////////////////////////////////////////От максимално 40,00
////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////Създайте база данни с името online_auction. Ще получите описания, с помощта на които ще създадете следните 5 таблици: 

////////////////////////////////////////////cities

////////////////////////////////////////////persons 

////////////////////////////////////////////product_types 

////////////////////////////////////////////products 

////////////////////////////////////////////bids 

//////////////////////////////////////////// Inserting image...



////////////////////////////////////////////Код за създаване на базата и наливане на данни:

////////////////////////////////////////////https://pgeeburgas.org/pluginfile.php/17535/question/questiontext/50186/20/19381/code.sql


////////////////////////////////////////////Заявка 1:

////////////////////////////////////////////Продуктите на Britni 

////////////////////////////////////////////Извлечете всички продукти, които са на собственик с първо име Britni и са продадени в Германия. 

////////////////////////////////////////////Подредете продуктите по id в възходящ ред. 

////////////////////////////////////////////Примери 

////////////////////////////////////////////id 

////////////////////////////////////////////product_name 

////////////////////////////////////////////first_name 

////////////////////////////////////////////last_name 

////////////////////////////////////////////city_name 

////////////////////////////////////////////country_name

////////////////////////////////////////////52 

////////////////////////////////////////////adipiscing elit 

////////////////////////////////////////////Britni 

////////////////////////////////////////////De Brett 

////////////////////////////////////////////Magdeburg 

////////////////////////////////////////////Germany
////////////////////////////////////////////100 

////////////////////////////////////////////pede justo 

////////////////////////////////////////////Britni 

////////////////////////////////////////////De Brett 

////////////////////////////////////////////Berlin 

////////////////////////////////////////////Germany

////////////////////////////////////////////Фрагмент:
////////////////////////////////////////////SELECT p.id, p.name product_name, ps.first_name, ps.last_name, c.name city_name, c.country_name FROM products p

////////////////////////////////////////////JOIN persons ps ON p.owner_id = ps.id

////////////////////////////////////////////JOIN cities c ON p.sold_city_id = c.id

////////////////////////////////////////////WHERE

////////////////////////////////////////////ORDER BY p.id;

////////////////////////////////////////////Заявка 2:

////////////////////////////////////////////Брой продукти 
////////////////////////////////////////////Извлечете за всеки човек броя на продуктите му. Подредете по брой на продуктите в низходящ ред, след това по първо име във възходящ ред.

////////////////////////////////////////////Вземете първите 10 записа. 

////////////////////////////////////////////Примери 

////////////////////////////////////////////id 

////////////////////////////////////////////first_name 

////////////////////////////////////////////last_name 

////////////////////////////////////////////city_name 

////////////////////////////////////////////product_count 

////////////////////////////////////////////211 

////////////////////////////////////////////Eulalie 

////////////////////////////////////////////Sier 

////////////////////////////////////////////Koln 

////////////////////////////////////////////4 

////////////////////////////////////////////288 

////////////////////////////////////////////Guthry 

////////////////////////////////////////////Stothert 

////////////////////////////////////////////Vratsa 

////////////////////////////////////////////4 

////////////////////////////////////////////126 

////////////////////////////////////////////Herminia 

////////////////////////////////////////////De Bellis 

////////////////////////////////////////////AUnited Statestin 

////////////////////////////////////////////4 

////////////////////////////////////////////212 

////////////////////////////////////////////Bentley 

////////////////////////////////////////////Storer 

////////////////////////////////////////////Glasgow 

////////////////////////////////////////////3 

////////////////////////////////////////////127 

////////////////////////////////////////////Cacilia 

////////////////////////////////////////////Craggs 

////////////////////////////////////////////Blagoevgrad 

////////////////////////////////////////////3 

////////////////////////////////////////////22 

////////////////////////////////////////////Carita 

////////////////////////////////////////////Deavall 

////////////////////////////////////////////Novosibirsk 

////////////////////////////////////////////3 

////////////////////////////////////////////… 

////////////////////////////////////////////… 

////////////////////////////////////////////… 

////////////////////////////////////////////… 

////////////////////////////////////////////… 


////////////////////////////////////////////Фрагмент:

////////////////////////////////////////////SELECT ps.id, ps.first_name, ps.last_name, c.name city_name, CONT(p.id) product_count FROM persons ps

////////////////////////////////////////////JOIN products p ON p.owner_id = ps.id

////////////////////////////////////////////JOIN cities c ON ps.city_id = c.id

////////////////////////////////////////////GROUP BY ps.id

////////////////////////////////////////////ORDER BY product_count ASC, ps.first_name

////////////////////////////////////////////LIMIT 10;

////////////////////////////////////////////Заявка 3:

////////////////////////////////////////////Наддавания

////////////////////////////////////////////Извлечете за всеки продукт, продаден в България, броя на наддаванията, най-високата сума и най-ниската сума.

////////////////////////////////////////////Подредете по броя на наддаванията в низходящ ред. Вземете първите 5 записа. 

////////////////////////////////////////////Примери 

////////////////////////////////////////////product_name 

////////////////////////////////////////////city_name 

////////////////////////////////////////////bid_count 

////////////////////////////////////////////max_amount 

////////////////////////////////////////////min_amount 

////////////////////////////////////////////gravida sem 

////////////////////////////////////////////Sliven 

////////////////////////////////////////////10 

////////////////////////////////////////////183107.00 

////////////////////////////////////////////16819.00 

////////////////////////////////////////////ligula vehicula 

////////////////////////////////////////////Sliven 

////////////////////////////////////////////9 

////////////////////////////////////////////195057.00 

////////////////////////////////////////////44773.00 

////////////////////////////////////////////potenti nullam 

////////////////////////////////////////////Pleven 

////////////////////////////////////////////7 

////////////////////////////////////////////176130.00 

////////////////////////////////////////////15841.00 

////////////////////////////////////////////diam cras 

////////////////////////////////////////////Pernik 

////////////////////////////////////////////6 

////////////////////////////////////////////194394.00 

////////////////////////////////////////////12667.00 

////////////////////////////////////////////luctus nec 

////////////////////////////////////////////Sliven 

////////////////////////////////////////////5 

////////////////////////////////////////////194070.00 

////////////////////////////////////////////43245.00 


////////////////////////////////////////////Фрагмент:
////////////////////////////////////////////SELECT p.name product_name, c.name city_name, COUNT(b.product_id) bid_count, MIN(b.amount) max_amount, MAX(b.amount) min_amount FROM products p

////////////////////////////////////////////JOIN bids b ON p.id = b.product_id

////////////////////////////////////////////JOIN cities c ON c.id = p.sold_city_id

////////////////////////////////////////////WHERE c.country_name = 'Bulgaria'

////////////////////////////////////////////GROUP BY p.id

////////////////////////////////////////////ORDER BY bid_count ASC

////////////////////////////////////////////LIMIT 5;



////////////////////////////////////////////Заявка 1:

////////////////////////////////////////////SELECT p.id, p.name product_name, ps.first_name, ps.last_name, c.name city_name, c.country_name

////////////////////////////////////////////FROM products p

////////////////////////////////////////////JOIN persons ps ON p.owner_id = ps.id

////////////////////////////////////////////JOIN cities c ON p.sold_city_id = c.id

////////////////////////////////////////////WHERE ps.first_name = 'Britni' AND c.country_name = 'Germany'

////////////////////////////////////////////ORDER BY p.id;



////////////////////////////////////////////Заявка 2:

////////////////////////////////////////////SELECT ps.id, ps.first_name, ps.last_name, c.name city_name, COUNT(p.id) product_count

////////////////////////////////////////////FROM persons ps

////////////////////////////////////////////JOIN products p ON p.owner_id = ps.id

////////////////////////////////////////////JOIN cities c ON ps.city_id = c.id

////////////////////////////////////////////GROUP BY ps.id

////////////////////////////////////////////ORDER BY product_count DESC, ps.first_name

////////////////////////////////////////////LIMIT 10;





////////////////////////////////////////////Заявка 3:

////////////////////////////////////////////SELECT p.name product_name, c.name city_name, COUNT(b.product_id) bid_count, MIN(b.amount) min_amount, MAX(b.amount) max_amount

////////////////////////////////////////////FROM products p

////////////////////////////////////////////JOIN bids b ON p.id = b.product_id

////////////////////////////////////////////JOIN cities c ON c.id = p.sold_city_id

////////////////////////////////////////////WHERE c.country_name = 'Bulgaria'

////////////////////////////////////////////GROUP BY p.id

////////////////////////////////////////////ORDER BY bid_count DESC

////////////////////////////////////////////LIMIT 5;



////////////////////////////////////////////Въпрос 20
////////////////////////////////////////////Правилно
////////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////////Текст на въпроса
////////////////////////////////////////////Моля посочете вярното твърдение за съхранени процедури в език My SQL.

////////////////////////////////////////////Изберете едно
////////////////////////////////////////////a. Няма вярно твърдение.
////////////////////////////////////////////b. Не могат да приемат входни параметри; Могат да връщат изходни резултати.
////////////////////////////////////////////c. Могат да приемат входни параметри; Могат да връщат изходни резултати. 
////////////////////////////////////////////d. Могат да приемат входни параметри; Не могат да връщат изходни резултати.
////////////////////////////////////////////Забележка
////////////////////////////////////////////Your answer is correct.
////////////////////////////////////////////Правилният отговор е: Могат да приемат входни параметри; Могат да връщат изходни резултати.
////////////////////////////////////////////Край на прегледа
////////////////////////////////////////////Отиди на ...
////////////////////////////////////////////Отиди на ...
////////////////////////////////////////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
////////////////////////////////////////////Навигация в теста
////////////////////////////////////////////Показване по един въпрос на страница
////////////////////////////////////////////Край на прегледа
////////////////////////////////////////////Вие сте влезли в системата като Добри Илев (Изход)
////////////////////////////////////////////тренировъчен - курс - по
////////////////////////////////////////////Data retention summary
//////////////////////////////////////////Прескочи на основното съдържание
//////////////////////////////////////////ПГЕЕ
//////////////////////////////////////////Български ‎(bg)‎ 
//////////////////////////////////////////Добри Илев 
//////////////////////////////////////////Тренировъчен курс - Програмно осигуряване
//////////////////////////////////////////Начална страница
//////////////////////////////////////////Моите курсове
////////////////////////////////////////// тренировъчен-курс-по
////////////////////////////////////////// Изпитна тема 10
////////////////////////////////////////// Изпитна тема №10
//////////////////////////////////////////Започнат на	петък, 24 март 2023, 16:53
//////////////////////////////////////////Състояние Завършен
//////////////////////////////////////////Приключен на	петък, 24 март 2023, 17:30
//////////////////////////////////////////Изминало време	37 мин. 2 сек.
//////////////////////////////////////////Оценка	Още не е оценен
//////////////////////////////////////////Въпрос 1
//////////////////////////////////////////Правилно
//////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////Имате пример за създаване на функция:

//////////////////////////////////////////CREATE blank   blank _project_weeks (start_date DATETIME, end_date DATETIME)

////////////////////////////////////////// blank INT

//////////////////////////////////////////BEGIN

//////////////////////////////////////////            // тяло на функцията

//////////////////////////////////////////END

//////////////////////////////////////////Поставете липсващите думи, така че да се получи правилния код.


//////////////////////////////////////////PROCEDURERETURNSFUNCTIONudf
//////////////////////////////////////////Забележка
//////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////CREATE FUNCTION udf_project_weeks (start_date DATETIME, end_date DATETIME)

//////////////////////////////////////////RETURNS INT

//////////////////////////////////////////BEGIN

//////////////////////////////////////////            // тяло на функцията

//////////////////////////////////////////END


//////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////Имате пример за създаване на функция:

//////////////////////////////////////////CREATE[FUNCTION][udf]_project_weeks(start_date DATETIME, end_date DATETIME)

//////////////////////////////////////////[RETURNS] INT

//////////////////////////////////////////BEGIN

//////////////////////////////////////////            // тяло на функцията

//////////////////////////////////////////END

//////////////////////////////////////////Поставете липсващите думи, така че да се получи правилния код.

//////////////////////////////////////////Въпрос 2
//////////////////////////////////////////Отговорен
//////////////////////////////////////////6,00 от максимално 6,00 точки
//////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////Създайте заявка, която извежда първо име, фамилия и длъжност на служителите, които имат заплата между 20000 и 30000. Използвайте базата данни soft_uni.



//////////////////////////////////////////USE soft_uni;



//////////////////////////////////////////SELECT first_name, last_name, job_title

//////////////////////////////////////////FROM Employees

//////////////////////////////////////////WHERE salary >= 20000 AND salary <= 30000;



//////////////////////////////////////////Забележка
//////////////////////////////////////////SELECT first_name, last_name, job_title

//////////////////////////////////////////FROM employees

//////////////////////////////////////////WHERE salary BETWEEN 20000 AND 30000;

//////////////////////////////////////////КоментариКоментар:
//////////////////////////////////////////Въпрос 3
//////////////////////////////////////////Правилно
//////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////Посочете коя от следните заявки ще изтрие записи от таблица projects, които са с начална дата 2006-01-01.

//////////////////////////////////////////Изберете едно
//////////////////////////////////////////a. DELETE FROM employees WHERE salary = '2006-01-01';
//////////////////////////////////////////b.DELETE FROM projects WHERE start_date > '2006-01-01';
//////////////////////////////////////////c.DELETE FROM projects WHERE end_date = '2006-01-01';
//////////////////////////////////////////d.DELETE FROM projects WHERE start_date = '2006-01-01';
//////////////////////////////////////////Забележка
//////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////DELETE FROM projects

//////////////////////////////////////////      WHERE start_date = '2006-01-01';


//////////////////////////////////////////Правилният отговор е: DELETE FROM projects WHERE start_date = '2006-01-01';
//////////////////////////////////////////Въпрос 4
//////////////////////////////////////////Правилно
//////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////Емате следната заявка. Посочете вярното твърдение за получения резултат от агрегиращата използвана функция след нейното изпълнение. 

//////////////////////////////////////////SELECT e.`department_id`,

//////////////////////////////////////////  AVG(e.`salary`) AS 'AvgSalary'

//////////////////////////////////////////FROM `employees` AS e

//////////////////////////////////////////GROUP BY e.`department_id`;


//////////////////////////////////////////Изберете едно
//////////////////////////////////////////a. Намира максималната стойност на заплатите на служителите и преименува колоната.
//////////////////////////////////////////b. Намира сумата на заплатите на служителите и преименува колоната.
//////////////////////////////////////////c. Намира средноаритметичната стойност на заплатите на служителите и преименува колоната. 
//////////////////////////////////////////Забележка
//////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////Правилният отговор е: Намира средноаритметичната стойност на заплатите на служителите и преименува колоната.
//////////////////////////////////////////Въпрос 5
//////////////////////////////////////////Отговорен
//////////////////////////////////////////6,00 от максимално 6,00 точки
//////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////Във вашата база от данни Soft_uni имате създадена таблица Employees с 500 записа. Необходимо е да добавите нова колона с име salary. Напишете заявка за добавяне на колоната в таблица employees. 
//////////////////////////////////////////ALTER TABLE Employees

//////////////////////////////////////////ADD COLUMN salary DECIMAL(10 ,2)

//////////////////////////////////////////Забележка
//////////////////////////////////////////ALTER TABLE employees

//////////////////////////////////////////ADD salary DECIMAL;


//////////////////////////////////////////КоментариКоментар:
//////////////////////////////////////////Въпрос 6
//////////////////////////////////////////Отчасти верен
//////////////////////////////////////////1,33 от максимално 2,00 точки
//////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////Дадена е дефиниция за транзакция.  Поставете липсващите думи в дефиницията. 

//////////////////////////////////////////Транзакциите гарантират пълнотата и цялостността на базата данни. Всички промени в транзакцията са   blank . Промените се съхраняват едва след изпълнението на  blank . По всяко време всички промени могат да се отменят чрез  blank .





//////////////////////////////////////////временниCOMMITпоредица от действияROLLBACK
//////////////////////////////////////////Забележка
//////////////////////////////////////////Your answer is partially correct.
//////////////////////////////////////////Вие правилно сте избрали 2.
//////////////////////////////////////////Транзакциите гарантират пълнотата и цялостността на базата данни. Всички промени в транзакцията са временни. Промените се съхраняват едва след изпълнението на COMMIT. По всяко време всички промени могат да се отменят чрез ROLLBACK.


//////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////Дадена е дефиниция за транзакция.  Поставете липсващите думи в дефиницията. 

//////////////////////////////////////////Транзакциите гарантират пълнотата и цялостността на базата данни. Всички промени в транзакцията са  [временни]. Промените се съхраняват едва след изпълнението на [COMMIT]. По всяко време всички промени могат да се отменят чрез [ROLLBACK].




//////////////////////////////////////////Въпрос 7
//////////////////////////////////////////Правилно
//////////////////////////////////////////4,00 от максимално 4,00 точки
//////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////В посочения пример имате заявка за създаване на таблица persons с колони person_id, first_name, passport_id и salary. Моля избирете липсващите думи за всяка колона от таблицата.

//////////////////////////////////////////CREATE TABLE persons(

//////////////////////////////////////////person_id  
//////////////////////////////////////////INT
//////////////////////////////////////////  PRIMARY KEY,

//////////////////////////////////////////first_name 
//////////////////////////////////////////VARCHAR(50)
////////////////////////////////////////// ,

//////////////////////////////////////////salary
//////////////////////////////////////////DECIMAL(8,2)
////////////////////////////////////////// ,

//////////////////////////////////////////passport_id
//////////////////////////////////////////INT
//////////////////////////////////////////  UNIQUE,

//////////////////////////////////////////CONSTRAINT fk_persons_passports FOREIGN KEY(passport_id) REFERENCES passports(passport_id)

//////////////////////////////////////////);

//////////////////////////////////////////Забележка
//////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////CREATE TABLE persons(

//////////////////////////////////////////person_id INT PRIMARY KEY,

//////////////////////////////////////////first_name VARCHAR(50),

//////////////////////////////////////////salary DECIMAL(8,2),

//////////////////////////////////////////passport_id INT UNIQUE,

//////////////////////////////////////////CONSTRAINT fk_persons_passports FOREIGN KEY(passport_id) REFERENCES passports(passport_id)

//////////////////////////////////////////);

//////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////В посочения пример имате заявка за създаване на таблица persons с колони person_id, first_name, passport_id и salary. Моля избирете липсващите думи за всяка колона от таблицата.

//////////////////////////////////////////CREATE TABLE persons(

//////////////////////////////////////////person_id  [INT] PRIMARY KEY,

//////////////////////////////////////////first_name[VARCHAR(50)],

//////////////////////////////////////////salary[DECIMAL(8, 2)],

//////////////////////////////////////////passport_id[INT] UNIQUE,

//////////////////////////////////////////CONSTRAINT fk_persons_passports FOREIGN KEY(passport_id) REFERENCES passports(passport_id)

//////////////////////////////////////////);

//////////////////////////////////////////Въпрос 8
//////////////////////////////////////////Правилно
//////////////////////////////////////////6,00 от максимално 6,00 точки
//////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////Трябва да създадете потребителска функция с параметри. Открийте липсващите думи под текста и ги поставете на правилното място, така че да получите коректно работещ код.

////////////////////////////////////////// blank   blank  udf_project_weeks (start_date DATETIME, end_date DATETIME)

//////////////////////////////////////////RETURNS INT

////////////////////////////////////////// blank 

//////////////////////////////////////////            // тяло на функцията

////////////////////////////////////////// blank 



//////////////////////////////////////////BEGINBEGINBEGINBEGINPROCEDUREPROCEDUREPROCEDUREPROCEDUREENDENDENDENDCREATECREATECREATECREATEFUNCTIONFUNCTIONFUNCTIONFUNCTIONTRANSACTIONTRANSACTIONTRANSACTIONTRANSACTION
//////////////////////////////////////////Забележка
//////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////CREATE FUNCTION udf_project_weeks (start_date DATETIME, end_date DATETIME)

//////////////////////////////////////////RETURNS INT

//////////////////////////////////////////BEGIN

//////////////////////////////////////////            // тяло на функцията

//////////////////////////////////////////END


//////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////Трябва да създадете потребителска функция с параметри. Открийте липсващите думи под текста и ги поставете на правилното място, така че да получите коректно работещ код.

//////////////////////////////////////////[CREATE][FUNCTION] udf_project_weeks (start_date DATETIME, end_date DATETIME)

//////////////////////////////////////////RETURNS INT

//////////////////////////////////////////[BEGIN]

//////////////////////////////////////////            // тяло на функцията

//////////////////////////////////////////[END]


//////////////////////////////////////////Въпрос 9
//////////////////////////////////////////Отговорен
//////////////////////////////////////////От максимално 40,00
//////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////Електрическите тротинетки се превърнаха в голям хит през последните няколко години. В големите градове те са все по-предпочитан и удобен начин за транспорт. Компания за отдаване под наем на електрически тротинетки има нужда от създаване на софтуер за дейността си. Ваша отговорност е да изпълните заявки върху базата данни, която съдържа следните таблици:

//////////////////////////////////////////cities

//////////////////////////////////////////users

//////////////////////////////////////////scooters

//////////////////////////////////////////rents




//////////////////////////////////////////Код за създаване на базата и наливане на данни:

//////////////////////////////////////////https://pgeeburgas.org/pluginfile.php/17535/question/questiontext/51514/20/19380/code.sql


//////////////////////////////////////////Заявка 1:

//////////////////////////////////////////Най - голям баланс на софийски потребители
//////////////////////////////////////////Изведете информация за потребителя с най-голям баланс, който е от Варна.

//////////////////////////////////////////Примери
//////////////////////////////////////////id

//////////////////////////////////////////username

//////////////////////////////////////////balance

//////////////////////////////////////////31

//////////////////////////////////////////Georgi.Atanasov.403

//////////////////////////////////////////62.00

//////////////////////////////////////////Фрагмент:

//////////////////////////////////////////SELECT user_id, username, balance FROM `users` WHERE city_id = 2 ORDER BY balance ASC LIMIT 1;

//////////////////////////////////////////Заявка 2:

//////////////////////////////////////////Наеми по градовете
//////////////////////////////////////////Извлечете броя на потребителите-наематели по градове. Подредете по броя на наемите в намалящ ред, а след това по идентификационния номер на наема. Изведете първите 10 резултата.

//////////////////////////////////////////Примери
//////////////////////////////////////////total_rents

//////////////////////////////////////////name

//////////////////////////////////////////9

//////////////////////////////////////////Burgas

//////////////////////////////////////////8

//////////////////////////////////////////Plovdiv

//////////////////////////////////////////7

//////////////////////////////////////////Varna

//////////////////////////////////////////5	Sofia
//////////////////////////////////////////4	Vratsa
//////////////////////////////////////////4	Boychinovtsi
//////////////////////////////////////////4

//////////////////////////////////////////Sozopol

//////////////////////////////////////////3	Dragoman
//////////////////////////////////////////3

//////////////////////////////////////////Valchedram

//////////////////////////////////////////2

//////////////////////////////////////////Pernik


//////////////////////////////////////////Фрагмент:

//////////////////////////////////////////SELECT(*) AS total_rents, c.name AS name FROM rents AS r INNER JOIN users AS u ON u.user_id = r.user_id INNER JOIN cities AS c ON u.city_id=c.city_id GROUP BY  ORDER BY COUNT(*) DESC LIMIT 10;



//////////////////////////////////////////Заявка 3:

//////////////////////////////////////////Най - много наеми
//////////////////////////////////////////Извлечете информация за потребителите с най-много наеми. Подредете по броя наеми в намалящ ред, а след това по потребителското име в азбучен ред. Изведете първите 5 записа.

//////////////////////////////////////////Примери
//////////////////////////////////////////total_rents

//////////////////////////////////////////username

//////////////////////////////////////////2

//////////////////////////////////////////Denislava.Dimova.843

//////////////////////////////////////////2

//////////////////////////////////////////Dimitar.Georgiev.439

//////////////////////////////////////////2

//////////////////////////////////////////Dimitar.Nikolaev.249

//////////////////////////////////////////2

//////////////////////////////////////////Georgi.Atanasov.403

//////////////////////////////////////////2

//////////////////////////////////////////Georgi.Nikolaev.947


//////////////////////////////////////////Фрагмент:
//////////////////////////////////////////SELECT COUNT() AS total_rents, users.username FROM rents

//////////////////////////////////////////INNER JOIN users  rents.user_id = users.user_id

//////////////////////////////////////////GROUP BY rents.user_id

//////////////////////////////////////////ORDER BY COUNT(*) ASC, username ASC

//////////////////////////////////////////LIMIT 5;



////////////////////////////////////////////1

//////////////////////////////////////////SELECT user_id, username, balance

//////////////////////////////////////////FROM `users`

//////////////////////////////////////////WHERE city_id = (SELECT city_id FROM cities WHERE name = 'Varna')

//////////////////////////////////////////ORDER BY balance DESC

//////////////////////////////////////////LIMIT 1;





////////////////////////////////////////////2

//////////////////////////////////////////SELECT COUNT(*) AS total_rents, c.name AS name

//////////////////////////////////////////FROM rents AS r

//////////////////////////////////////////INNER JOIN users AS u ON u.user_id = r.user_id

//////////////////////////////////////////INNER JOIN cities AS c ON u.city_id = c.city_id

//////////////////////////////////////////GROUP BY c.name, c.city_id

//////////////////////////////////////////ORDER BY COUNT(*) DESC, c.city_id ASC

//////////////////////////////////////////LIMIT 10;





////////////////////////////////////////////3

//////////////////////////////////////////SELECT COUNT(*) AS total_rents, users.username

//////////////////////////////////////////FROM rents

//////////////////////////////////////////INNER JOIN users ON rents.user_id = users.user_id

//////////////////////////////////////////GROUP BY rents.user_id, users.username

//////////////////////////////////////////ORDER BY COUNT(*) DESC, username ASC

//////////////////////////////////////////LIMIT 5;



//////////////////////////////////////////Въпрос 10
//////////////////////////////////////////Отговорен
//////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////Имплементирайте код на заявка, която извежда колоните first_name, last_name и job_title от таблица employees и извежда само тези записи със заплата между 20000 и 30000.



//////////////////////////////////////////SELECT first_name, last_name, job_title

//////////////////////////////////////////FROM employees

//////////////////////////////////////////WHERE salary >= 20000 AND salary <= 30000;



//////////////////////////////////////////Забележка
//////////////////////////////////////////SELECT first_name, last_name, job_title

//////////////////////////////////////////FROM employees

//////////////////////////////////////////WHERE salary BETWEEN 20000 AND 30000;

//////////////////////////////////////////Въпрос 11
//////////////////////////////////////////Отговорен
//////////////////////////////////////////От максимално 2,00
//////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////Посочете какво прави клаузата FULL JOIN.

//////////////////////////////////////////Клаузата FULL JOIN (пълен съединение) в SQL е вид операция за съединение между две таблиците, която връща всички записи от двете таблиците, дори ако няма съответстващи записи в другата таблица.

//////////////////////////////////////////Когато съединението между две таблиците не съответства на запис, резултатът от операцията FULL JOIN ще включва NULL стойности за всички колони на таблицата, която няма съответстващ запис.



//////////////////////////////////////////SELECT A.id, A.name, B.id, B.age

//////////////////////////////////////////FROM A

//////////////////////////////////////////FULL JOIN B ON A.id = B.id;





//////////////////////////////////////////Забележка
//////////////////////////////////////////FULL JOIN - Тази връзка връща записите, отговарящи на свързващото условие и също така несъвпадащите записи от лявата и от дясната таблица.

//////////////////////////////////////////Въпрос 12
//////////////////////////////////////////Правилно
//////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////Моля посочете вярното твърдение за съхранени процедури в език My SQL.

//////////////////////////////////////////Изберете едно
//////////////////////////////////////////a. Не могат да приемат входни параметри; Могат да връщат изходни резултати.
//////////////////////////////////////////b. Могат да приемат входни параметри; Не могат да връщат изходни резултати.
//////////////////////////////////////////c. Няма вярно твърдение.
//////////////////////////////////////////d. Могат да приемат входни параметри; Могат да връщат изходни резултати. 
//////////////////////////////////////////Забележка
//////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////Правилният отговор е: Могат да приемат входни параметри; Могат да връщат изходни резултати.
//////////////////////////////////////////Въпрос 13
//////////////////////////////////////////Правилно
//////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////Посочете коя от следните заявки ще изведе фамилия и заплата, като заплатата е в периода 20000 и 22000.

//////////////////////////////////////////Изберете едно
//////////////////////////////////////////a.
//////////////////////////////////////////SELECT `last_name`, `salary`FROM `employees` WHERE `salary` BETWEEN 20000 AND 22000;
//////////////////////////////////////////b.SELECT `last_name`, `salary`FROM `employees` WHERE `salary` > 20000 OR 'salary' < 22000;
//////////////////////////////////////////c.

//////////////////////////////////////////SELECT `last_name`, `salary`FROM `employees` WHERE `salary` <= 20000 AND 22000;
//////////////////////////////////////////d.
//////////////////////////////////////////SELECT `last_name`, `salary`FROM `employees` WHERE `salary` > 22000;
//////////////////////////////////////////Забележка
//////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////SELECT `last_name`, `salary`FROM `employees` WHERE `salary` BETWEEN 20000 AND 22000;


//////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////SELECT `last_name`, `salary`FROM `employees` WHERE `salary` BETWEEN 20000 AND 22000;
//////////////////////////////////////////Въпрос 14
//////////////////////////////////////////Правилно
//////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////Посочете действието на използваната връзка в следната заявка: 

//////////////////////////////////////////SELECT* FROM employees AS e

////////////////////////////////////////// RIGHT OUTER JOIN departments AS d

////////////////////////////////////////// ON e.department_id = d.department_id;


//////////////////////////////////////////Изберете едно
//////////////////////////////////////////a.
//////////////////////////////////////////Тази връзка връща записите, отговарящи на свързващото условие и също така несъвпадащите записи от таблица departments.
//////////////////////////////////////////b.
//////////////////////////////////////////Тази връзка връща записите, отговарящи на свързващото условие и също така несъвпадащите записи от лявата таблица.
//////////////////////////////////////////c. Тази връзка връща записите, отговарящи на свързващото условие и също така несъвпадащите записи от таблица employees.
//////////////////////////////////////////d. Тази връзка връща само редовете, отговарящи на условието за свързване.
//////////////////////////////////////////Забележка
//////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////Тази връзка връща записите, отговарящи на свързващото условие и също така несъвпадащите записи от таблица departments.
//////////////////////////////////////////Въпрос 15
//////////////////////////////////////////Правилно
//////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////Посочете коя от следните заявки ще изведе всички записи от таблица departments и извежда първите два реда от таблицата.

//////////////////////////////////////////Изберете едно
//////////////////////////////////////////a.
//////////////////////////////////////////SELECT * FROM employees WHERE employee_id <=20
//////////////////////////////////////////b.

//////////////////////////////////////////SELECT * FROM departments WHERE department_id <=20
//////////////////////////////////////////c. SELECT * FROM departments WHERE department_id >2
//////////////////////////////////////////d.
//////////////////////////////////////////SELECT * FROM departments WHERE department_id <=2 
//////////////////////////////////////////Забележка
//////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////SELECT * FROM departments WHERE department_id <=2


//////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////SELECT* FROM departments WHERE department_id <=2
//////////////////////////////////////////Въпрос 16
//////////////////////////////////////////Отчасти верен
//////////////////////////////////////////3,00 от максимално 4,00 точки
//////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////Имате представена подзаявка за намиране служителите от отдел финанси и извеждане на всички колони от таблицата. Поставете липсващите думи, за да направите работещ код.

//////////////////////////////////////////SELECT * FROM employees
////////////////////////////////////////// blank  department_id  blank 

//////////////////////////////////////////  (

//////////////////////////////////////////   SELECT department_id
//////////////////////////////////////////     blank  departments

//////////////////////////////////////////     blank  name = 'Finance'  );



//////////////////////////////////////////ININININWHEREWHEREWHEREWHEREWHEREWHEREWHEREWHEREFROMFROMFROMFROM
//////////////////////////////////////////Забележка
//////////////////////////////////////////Your answer is partially correct.
//////////////////////////////////////////Вие правилно сте избрали 3.
//////////////////////////////////////////SELECT * FROM employees
//////////////////////////////////////////WHERE department_id IN

//////////////////////////////////////////  (

//////////////////////////////////////////   SELECT department_id
//////////////////////////////////////////     FROM departments

//////////////////////////////////////////    WHERE name = 'Finance'  );


//////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////Имате представена подзаявка за намиране служителите от отдел финанси и извеждане на всички колони от таблицата. Поставете липсващите думи, за да направите работещ код.

//////////////////////////////////////////SELECT * FROM employees
//////////////////////////////////////////[WHERE] department_id[IN]

//////////////////////////////////////////  (

//////////////////////////////////////////   SELECT department_id
//////////////////////////////////////////    [FROM] departments

//////////////////////////////////////////    [WHERE] name = 'Finance');


//////////////////////////////////////////Въпрос 17
//////////////////////////////////////////Правилно
//////////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////Моля посочете вярното твърдение за посочените типове данни:

//////////////////////////////////////////Float

//////////////////////////////////////////Отговор 1
//////////////////////////////////////////тип данни за реални числа

//////////////////////////////////////////DOUBLE

//////////////////////////////////////////Отговор 2
//////////////////////////////////////////тип данни за реални числа

//////////////////////////////////////////VARCHAR(M)

//////////////////////////////////////////Отговор 3
//////////////////////////////////////////текстов тип данни

//////////////////////////////////////////Забележка
//////////////////////////////////////////Your answer is correct.
//////////////////////////////////////////Правилният отговор е: Float → тип данни за реални числа, DOUBLE → тип данни за реални числа, VARCHAR(M) → текстов тип данни
//////////////////////////////////////////Въпрос 18
//////////////////////////////////////////Правилно
//////////////////////////////////////////4,00 от максимално 4,00 точки
//////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////Имате пример за създаване на процедура:

//////////////////////////////////////////CREATE blank   blank _withdraw_money (account_id INT, money_amount DECIMAL)

////////////////////////////////////////// blank

//////////////////////////////////////////  -- Transaction logic goes here.

//////////////////////////////////////////END

//////////////////////////////////////////Поставете липсващите думи, така че да се получи правилния код.


//////////////////////////////////////////PROCEDUREBEGINFUNCTIONusp
//////////////////////////////////////////Забележка
//////////////////////////////////////////Your answer is correct.

//////////////////////////////////////////CREATE PROCEDURE usp_withdraw_money (account_id INT, money_amount DECIMAL)

//////////////////////////////////////////BEGIN

//////////////////////////////////////////  -- Transaction logic goes here.

//////////////////////////////////////////END


//////////////////////////////////////////Правилният отговор е:
//////////////////////////////////////////Имате пример за създаване на процедура:

//////////////////////////////////////////CREATE[PROCEDURE][usp]_withdraw_money(account_id INT, money_amount DECIMAL)

//////////////////////////////////////////[BEGIN]

//////////////////////////////////////////  -- Transaction logic goes here.

//////////////////////////////////////////END

//////////////////////////////////////////Поставете липсващите думи, така че да се получи правилния код.

//////////////////////////////////////////Въпрос 19
//////////////////////////////////////////Отговорен
//////////////////////////////////////////От максимално 2,00
//////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////Имате създадена съхранена процедура с параметър usp_select_employees_by_seniority(min_years_at_work INT). Моля да дефинирате заявка за извикване на процедурата, за да може да бъде използвана.

//////////////////////////////////////////CREATE PROCEDURE  usp_select_by_seniority (min_years_at_work INT)

//////////////////////////////////////////BEGIN

//////////////////////////////////////////  -- Transaction logic goes here.

//////////////////////////////////////////END


//////////////////////////////////////////Забележка

//////////////////////////////////////////CALL usp_select_employees_by_seniority(15);


//////////////////////////////////////////Въпрос 20
//////////////////////////////////////////Отговорен
//////////////////////////////////////////От максимално 4,00
//////////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////////Текст на въпроса
//////////////////////////////////////////Допишете следната заявка, така че да изведе като резултат служителите със заплата по-голяма от 50000 и да ги сортира в низходящ ред.

//////////////////////////////////////////SELECT first_name, last_name, salary FROM employees



//////////////////////////////////////////SELECT first_name, last_name, salary FROM employees

//////////////////////////////////////////WHERE salary > 50000

//////////////////////////////////////////ORDER BY DESC;



//////////////////////////////////////////Забележка
//////////////////////////////////////////SELECT first_name, last_name, salary FROM employees

//////////////////////////////////////////WHERE salary > 50000

//////////////////////////////////////////ORDER BY salary DESC;

//////////////////////////////////////////Край на прегледа
//////////////////////////////////////////Отиди на ...
//////////////////////////////////////////Отиди на ...
//////////////////////////////////////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
//////////////////////////////////////////Навигация в теста
//////////////////////////////////////////Показване по един въпрос на страница
//////////////////////////////////////////Край на прегледа
//////////////////////////////////////////Вие сте влезли в системата като Добри Илев (Изход)
//////////////////////////////////////////тренировъчен - курс - по
//////////////////////////////////////////Data retention summary

////////////////////////////////////////Прескочи на основното съдържание
////////////////////////////////////////ПГЕЕ
////////////////////////////////////////Български ‎(bg)‎ 
////////////////////////////////////////Добри Илев 
////////////////////////////////////////Тренировъчен курс - Програмно осигуряване
////////////////////////////////////////Начална страница
////////////////////////////////////////Моите курсове
//////////////////////////////////////// тренировъчен-курс-по
//////////////////////////////////////// Изпитна тема 10
//////////////////////////////////////// Изпитна тема №10
////////////////////////////////////////Започнат на	неделя, 23 април 2023, 12:08
////////////////////////////////////////Състояние Завършен
////////////////////////////////////////Приключен на	неделя, 23 април 2023, 12:45
////////////////////////////////////////Изминало време	37 мин. 1 сек.
////////////////////////////////////////Оценка	Още не е оценен
////////////////////////////////////////Въпрос 1
////////////////////////////////////////Правилно
////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////Текст на въпроса
////////////////////////////////////////Посочете коя от следните заявки ще изведе всички записи от таблица departments и извежда първите два реда от таблицата.

////////////////////////////////////////Изберете едно
////////////////////////////////////////a. SELECT * FROM departments WHERE department_id >2
////////////////////////////////////////b.

////////////////////////////////////////SELECT * FROM departments WHERE department_id <=20
////////////////////////////////////////c.
////////////////////////////////////////SELECT * FROM employees WHERE employee_id <=20
////////////////////////////////////////d.
////////////////////////////////////////SELECT * FROM departments WHERE department_id <=2 
////////////////////////////////////////Забележка
////////////////////////////////////////Your answer is correct.
////////////////////////////////////////SELECT * FROM departments WHERE department_id <=2


////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////SELECT* FROM departments WHERE department_id <=2
////////////////////////////////////////Въпрос 2
////////////////////////////////////////Правилно
////////////////////////////////////////4,00 от максимално 4,00 точки
////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////Текст на въпроса
////////////////////////////////////////Имате пример за създаване на процедура:

////////////////////////////////////////CREATE blank   blank _withdraw_money (account_id INT, money_amount DECIMAL)

//////////////////////////////////////// blank

////////////////////////////////////////  -- Transaction logic goes here.

////////////////////////////////////////END

////////////////////////////////////////Поставете липсващите думи, така че да се получи правилния код.


////////////////////////////////////////BEGINFUNCTIONuspPROCEDURE
////////////////////////////////////////Забележка
////////////////////////////////////////Your answer is correct.

////////////////////////////////////////CREATE PROCEDURE usp_withdraw_money (account_id INT, money_amount DECIMAL)

////////////////////////////////////////BEGIN

////////////////////////////////////////  -- Transaction logic goes here.

////////////////////////////////////////END


////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////Имате пример за създаване на процедура:

////////////////////////////////////////CREATE[PROCEDURE][usp]_withdraw_money(account_id INT, money_amount DECIMAL)

////////////////////////////////////////[BEGIN]

////////////////////////////////////////  -- Transaction logic goes here.

////////////////////////////////////////END

////////////////////////////////////////Поставете липсващите думи, така че да се получи правилния код.

////////////////////////////////////////Въпрос 3
////////////////////////////////////////Отговорен
////////////////////////////////////////От максимално 2,00
////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////Текст на въпроса
////////////////////////////////////////Посочете какво прави клаузата FULL JOIN.

////////////////////////////////////////Клаузата FULL JOIN е вид SQL операция, която комбинира резултатите от две таблици. Тя връща всички записи от и двете таблици, като комбинира тези, които отговарят на зададеното условие за свързване. Ако запис от едната или другата таблица няма съответствие във втората таблица, резултатът ще съдържа NULL стойности за колоните на таблицата, която няма съответствие.

////////////////////////////////////////Забележка
////////////////////////////////////////FULL JOIN - Тази връзка връща записите, отговарящи на свързващото условие и също така несъвпадащите записи от лявата и от дясната таблица.

////////////////////////////////////////Въпрос 4
////////////////////////////////////////Правилно
////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////Текст на въпроса
////////////////////////////////////////Моля посочете вярното твърдение за съхранени процедури в език My SQL.

////////////////////////////////////////Изберете едно
////////////////////////////////////////a. Не могат да приемат входни параметри; Могат да връщат изходни резултати.
////////////////////////////////////////b. Могат да приемат входни параметри; Могат да връщат изходни резултати. 
////////////////////////////////////////c. Няма вярно твърдение.
////////////////////////////////////////d. Могат да приемат входни параметри; Не могат да връщат изходни резултати.
////////////////////////////////////////Забележка
////////////////////////////////////////Your answer is correct.
////////////////////////////////////////Правилният отговор е: Могат да приемат входни параметри; Могат да връщат изходни резултати.
////////////////////////////////////////Въпрос 5
////////////////////////////////////////Отговорен
////////////////////////////////////////От максимално 2,00
////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////Текст на въпроса
////////////////////////////////////////Имате създадена съхранена процедура с параметър usp_select_employees_by_seniority(min_years_at_work INT). Моля да дефинирате заявка за извикване на процедурата, за да може да бъде използвана.

////////////////////////////////////////CALL usp_select_employees_by_seniority(15)

////////////////////////////////////////Забележка

////////////////////////////////////////CALL usp_select_employees_by_seniority(15);


////////////////////////////////////////Въпрос 6
////////////////////////////////////////Правилно
////////////////////////////////////////4,00 от максимално 4,00 точки
////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////Текст на въпроса
////////////////////////////////////////Имате представена подзаявка за намиране служителите от отдел финанси и извеждане на всички колони от таблицата. Поставете липсващите думи, за да направите работещ код.

////////////////////////////////////////SELECT * FROM employees
//////////////////////////////////////// blank  department_id  blank 

////////////////////////////////////////  (

////////////////////////////////////////   SELECT department_id
////////////////////////////////////////     blank  departments

////////////////////////////////////////     blank  name = 'Finance'  );



////////////////////////////////////////ININININWHEREWHEREWHEREWHEREFROMFROMFROMFROMWHEREWHEREWHEREWHERE
////////////////////////////////////////Забележка
////////////////////////////////////////Your answer is correct.
////////////////////////////////////////SELECT * FROM employees
////////////////////////////////////////WHERE department_id IN

////////////////////////////////////////  (

////////////////////////////////////////   SELECT department_id
////////////////////////////////////////     FROM departments

////////////////////////////////////////    WHERE name = 'Finance'  );


////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////Имате представена подзаявка за намиране служителите от отдел финанси и извеждане на всички колони от таблицата. Поставете липсващите думи, за да направите работещ код.

////////////////////////////////////////SELECT * FROM employees
////////////////////////////////////////[WHERE] department_id[IN]

////////////////////////////////////////  (

////////////////////////////////////////   SELECT department_id
////////////////////////////////////////    [FROM] departments

////////////////////////////////////////    [WHERE] name = 'Finance');


////////////////////////////////////////Въпрос 7
////////////////////////////////////////Правилно
////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////Текст на въпроса
////////////////////////////////////////Моля посочете вярното твърдение за посочените типове данни:

////////////////////////////////////////DOUBLE

////////////////////////////////////////Отговор 1
////////////////////////////////////////тип данни за реални числа

////////////////////////////////////////Float

////////////////////////////////////////Отговор 2
////////////////////////////////////////тип данни за реални числа

////////////////////////////////////////VARCHAR(M)

////////////////////////////////////////Отговор 3
////////////////////////////////////////текстов тип данни

////////////////////////////////////////Забележка
////////////////////////////////////////Your answer is correct.
////////////////////////////////////////Правилният отговор е: DOUBLE → тип данни за реални числа, Float → тип данни за реални числа, VARCHAR(M) → текстов тип данни
////////////////////////////////////////Въпрос 8
////////////////////////////////////////Отговорен
////////////////////////////////////////От максимално 4,00
////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////Текст на въпроса
////////////////////////////////////////Допишете следната заявка, така че да изведе като резултат служителите със заплата по-голяма от 50000 и да ги сортира в низходящ ред.

////////////////////////////////////////SELECT first_name, last_name, salary FROM employees



////////////////////////////////////////SELECT first_name, last_name, salary FROM employees

////////////////////////////////////////WHERE salary > 50000 

////////////////////////////////////////ORDER BY salary DESC

////////////////////////////////////////Забележка
////////////////////////////////////////SELECT first_name, last_name, salary FROM employees

////////////////////////////////////////WHERE salary > 50000

////////////////////////////////////////ORDER BY salary DESC;

////////////////////////////////////////Въпрос 9
////////////////////////////////////////Правилно
////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////Текст на въпроса
////////////////////////////////////////Посочете действието на използваната връзка в следната заявка: 

////////////////////////////////////////SELECT* FROM employees AS e

//////////////////////////////////////// RIGHT OUTER JOIN departments AS d

//////////////////////////////////////// ON e.department_id = d.department_id;


////////////////////////////////////////Изберете едно
////////////////////////////////////////a.
////////////////////////////////////////Тази връзка връща записите, отговарящи на свързващото условие и също така несъвпадащите записи от лявата таблица.
////////////////////////////////////////b. Тази връзка връща записите, отговарящи на свързващото условие и също така несъвпадащите записи от таблица employees.
////////////////////////////////////////c. Тази връзка връща само редовете, отговарящи на условието за свързване.
////////////////////////////////////////d.
////////////////////////////////////////Тази връзка връща записите, отговарящи на свързващото условие и също така несъвпадащите записи от таблица departments.
////////////////////////////////////////Забележка
////////////////////////////////////////Your answer is correct.
////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////Тази връзка връща записите, отговарящи на свързващото условие и също така несъвпадащите записи от таблица departments.
////////////////////////////////////////Въпрос 10
////////////////////////////////////////Правилно
////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////Текст на въпроса
////////////////////////////////////////Дадена е дефиниция за транзакция.  Поставете липсващите думи в дефиницията. 

////////////////////////////////////////Транзакциите гарантират пълнотата и цялостността на базата данни. Всички промени в транзакцията са   blank . Промените се съхраняват едва след изпълнението на  blank . По всяко време всички промени могат да се отменят чрез  blank .





////////////////////////////////////////ROLLBACKвременниCOMMITпоредица от действия
////////////////////////////////////////Забележка
////////////////////////////////////////Your answer is correct.
////////////////////////////////////////Транзакциите гарантират пълнотата и цялостността на базата данни. Всички промени в транзакцията са временни. Промените се съхраняват едва след изпълнението на COMMIT. По всяко време всички промени могат да се отменят чрез ROLLBACK.


////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////Дадена е дефиниция за транзакция.  Поставете липсващите думи в дефиницията. 

////////////////////////////////////////Транзакциите гарантират пълнотата и цялостността на базата данни. Всички промени в транзакцията са  [временни]. Промените се съхраняват едва след изпълнението на [COMMIT]. По всяко време всички промени могат да се отменят чрез [ROLLBACK].




////////////////////////////////////////Въпрос 11
////////////////////////////////////////Отговорен
////////////////////////////////////////От максимално 4,00
////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////Текст на въпроса
////////////////////////////////////////Имплементирайте код на заявка, която извежда колоните first_name, last_name и job_title от таблица employees и извежда само тези записи със заплата между 20000 и 30000.



//////////////////////////////////////// SELECT first_name, last_name, job_title 

//////////////////////////////////////// FROM employees

//////////////////////////////////////// WHERE salary between 20000 and 30000

////////////////////////////////////////Забележка
////////////////////////////////////////SELECT first_name, last_name, job_title

////////////////////////////////////////FROM employees

////////////////////////////////////////WHERE salary BETWEEN 20000 AND 30000;

////////////////////////////////////////Въпрос 12
////////////////////////////////////////Правилно
////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////Текст на въпроса
////////////////////////////////////////Емате следната заявка. Посочете вярното твърдение за получения резултат от агрегиращата използвана функция след нейното изпълнение. 

////////////////////////////////////////SELECT e.`department_id`,

////////////////////////////////////////  AVG(e.`salary`) AS 'AvgSalary'

////////////////////////////////////////FROM `employees` AS e

////////////////////////////////////////GROUP BY e.`department_id`;


////////////////////////////////////////Изберете едно
////////////////////////////////////////a. Намира средноаритметичната стойност на заплатите на служителите и преименува колоната. 
////////////////////////////////////////b. Намира максималната стойност на заплатите на служителите и преименува колоната.
////////////////////////////////////////c. Намира сумата на заплатите на служителите и преименува колоната.
////////////////////////////////////////Забележка
////////////////////////////////////////Your answer is correct.
////////////////////////////////////////Правилният отговор е: Намира средноаритметичната стойност на заплатите на служителите и преименува колоната.
////////////////////////////////////////Въпрос 13
////////////////////////////////////////Правилно
////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////Текст на въпроса
////////////////////////////////////////Посочете коя от следните заявки ще изведе фамилия и заплата, като заплатата е в периода 20000 и 22000.

////////////////////////////////////////Изберете едно
////////////////////////////////////////a.

////////////////////////////////////////SELECT `last_name`, `salary`FROM `employees` WHERE `salary` <= 20000 AND 22000;
////////////////////////////////////////b.
////////////////////////////////////////SELECT `last_name`, `salary`FROM `employees` WHERE `salary` BETWEEN 20000 AND 22000;
////////////////////////////////////////c.
////////////////////////////////////////SELECT `last_name`, `salary`FROM `employees` WHERE `salary` > 22000;
////////////////////////////////////////d.SELECT `last_name`, `salary`FROM `employees` WHERE `salary` > 20000 OR 'salary' < 22000;
////////////////////////////////////////Забележка
////////////////////////////////////////Your answer is correct.
////////////////////////////////////////SELECT `last_name`, `salary`FROM `employees` WHERE `salary` BETWEEN 20000 AND 22000;


////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////SELECT `last_name`, `salary`FROM `employees` WHERE `salary` BETWEEN 20000 AND 22000;
////////////////////////////////////////Въпрос 14
////////////////////////////////////////Правилно
////////////////////////////////////////4,00 от максимално 4,00 точки
////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////Текст на въпроса
////////////////////////////////////////В посочения пример имате заявка за създаване на таблица persons с колони person_id, first_name, passport_id и salary. Моля избирете липсващите думи за всяка колона от таблицата.

////////////////////////////////////////CREATE TABLE persons(

////////////////////////////////////////person_id  
////////////////////////////////////////INT
////////////////////////////////////////  PRIMARY KEY,

////////////////////////////////////////first_name 
////////////////////////////////////////VARCHAR(50)
//////////////////////////////////////// ,

////////////////////////////////////////salary
////////////////////////////////////////DECIMAL(8,2)
//////////////////////////////////////// ,

////////////////////////////////////////passport_id
////////////////////////////////////////INT
////////////////////////////////////////  UNIQUE,

////////////////////////////////////////CONSTRAINT fk_persons_passports FOREIGN KEY(passport_id) REFERENCES passports(passport_id)

////////////////////////////////////////);

////////////////////////////////////////Забележка
////////////////////////////////////////Your answer is correct.
////////////////////////////////////////CREATE TABLE persons(

////////////////////////////////////////person_id INT PRIMARY KEY,

////////////////////////////////////////first_name VARCHAR(50),

////////////////////////////////////////salary DECIMAL(8,2),

////////////////////////////////////////passport_id INT UNIQUE,

////////////////////////////////////////CONSTRAINT fk_persons_passports FOREIGN KEY(passport_id) REFERENCES passports(passport_id)

////////////////////////////////////////);

////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////В посочения пример имате заявка за създаване на таблица persons с колони person_id, first_name, passport_id и salary. Моля избирете липсващите думи за всяка колона от таблицата.

////////////////////////////////////////CREATE TABLE persons(

////////////////////////////////////////person_id  [INT] PRIMARY KEY,

////////////////////////////////////////first_name[VARCHAR(50)],

////////////////////////////////////////salary[DECIMAL(8, 2)],

////////////////////////////////////////passport_id[INT] UNIQUE,

////////////////////////////////////////CONSTRAINT fk_persons_passports FOREIGN KEY(passport_id) REFERENCES passports(passport_id)

////////////////////////////////////////);

////////////////////////////////////////Въпрос 15
////////////////////////////////////////Отговорен
////////////////////////////////////////От максимално 40,00
////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////Текст на въпроса
////////////////////////////////////////Електрическите тротинетки се превърнаха в голям хит през последните няколко години. В големите градове те са все по-предпочитан и удобен начин за транспорт. Компания за отдаване под наем на електрически тротинетки има нужда от създаване на софтуер за дейността си. Ваша отговорност е да изпълните заявки върху базата данни, която съдържа следните таблици:

////////////////////////////////////////cities

////////////////////////////////////////users

////////////////////////////////////////scooters

////////////////////////////////////////rents




////////////////////////////////////////Код за създаване на базата и наливане на данни:

////////////////////////////////////////https://pgeeburgas.org/pluginfile.php/17535/question/questiontext/52952/20/19380/code.sql


////////////////////////////////////////Заявка 1:

////////////////////////////////////////Най - голям баланс на софийски потребители
////////////////////////////////////////Изведете информация за потребителя с най-голям баланс, който е от Варна.

////////////////////////////////////////Примери
////////////////////////////////////////id

////////////////////////////////////////username

////////////////////////////////////////balance

////////////////////////////////////////31

////////////////////////////////////////Georgi.Atanasov.403

////////////////////////////////////////62.00

////////////////////////////////////////Фрагмент:

////////////////////////////////////////SELECT user_id, username, balance FROM `users` WHERE city_id = 2 ORDER BY balance ASC LIMIT 1;

////////////////////////////////////////Заявка 2:

////////////////////////////////////////Наеми по градовете
////////////////////////////////////////Извлечете броя на потребителите-наематели по градове. Подредете по броя на наемите в намалящ ред, а след това по идентификационния номер на наема. Изведете първите 10 резултата.

////////////////////////////////////////Примери
////////////////////////////////////////total_rents

////////////////////////////////////////name

////////////////////////////////////////9

////////////////////////////////////////Burgas

////////////////////////////////////////8

////////////////////////////////////////Plovdiv

////////////////////////////////////////7

////////////////////////////////////////Varna

////////////////////////////////////////5	Sofia
////////////////////////////////////////4	Vratsa
////////////////////////////////////////4	Boychinovtsi
////////////////////////////////////////4

////////////////////////////////////////Sozopol

////////////////////////////////////////3	Dragoman
////////////////////////////////////////3

////////////////////////////////////////Valchedram

////////////////////////////////////////2

////////////////////////////////////////Pernik


////////////////////////////////////////Фрагмент:

////////////////////////////////////////SELECT(*) AS total_rents, c.name AS name FROM rents AS r INNER JOIN users AS u ON u.user_id = r.user_id INNER JOIN cities AS c ON u.city_id=c.city_id GROUP BY  ORDER BY COUNT(*) DESC LIMIT 10;



////////////////////////////////////////Заявка 3:

////////////////////////////////////////Най - много наеми
////////////////////////////////////////Извлечете информация за потребителите с най-много наеми. Подредете по броя наеми в намалящ ред, а след това по потребителското име в азбучен ред. Изведете първите 5 записа.

////////////////////////////////////////Примери
////////////////////////////////////////total_rents

////////////////////////////////////////username

////////////////////////////////////////2

////////////////////////////////////////Denislava.Dimova.843

////////////////////////////////////////2

////////////////////////////////////////Dimitar.Georgiev.439

////////////////////////////////////////2

////////////////////////////////////////Dimitar.Nikolaev.249

////////////////////////////////////////2

////////////////////////////////////////Georgi.Atanasov.403

////////////////////////////////////////2

////////////////////////////////////////Georgi.Nikolaev.947


////////////////////////////////////////Фрагмент:
////////////////////////////////////////SELECT COUNT() AS total_rents, users.username FROM rents

////////////////////////////////////////INNER JOIN users  rents.user_id = users.user_id

////////////////////////////////////////GROUP BY rents.user_id

////////////////////////////////////////ORDER BY COUNT(*) ASC, username ASC

////////////////////////////////////////LIMIT 5;



////////////////////////////////////////1//

////////////////////////////////////////SELECT user_id, username, balance

////////////////////////////////////////FROM users

////////////////////////////////////////WHERE city_id = (select city_id from cities where name = 'Varna')

////////////////////////////////////////ORDER BY balance Desc LIMIT 1;



////////////////////////////////////////2//

////////////////////////////////////////SELECT count(*) AS total_rents, c.name AS name 

////////////////////////////////////////FROM rents AS r 

////////////////////////////////////////INNER JOIN users AS u ON u.user_id = r.user_id 

////////////////////////////////////////INNER JOIN cities AS c ON u.city_id=c.city_id 

////////////////////////////////////////GROUP BY c.name, c.city_id

////////////////////////////////////////ORDER BY total_rents DESC, c.city_id LIMIT 10;



////////////////////////////////////////3//

////////////////////////////////////////SELECT COUNT(*) AS total_rents, username FROM 

////////////////////////////////////////rents AS r

////////////////////////////////////////INNER JOIN users AS u ON r.user_id = u.user_id

////////////////////////////////////////GROUP BY r.user_id

////////////////////////////////////////ORDER BY COUNT(*) DESC, username ASC

////////////////////////////////////////LIMIT 5;

////////////////////////////////////////Въпрос 16
////////////////////////////////////////Правилно
////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////Текст на въпроса
////////////////////////////////////////Посочете коя от следните заявки ще изтрие записи от таблица projects, които са с начална дата 2006-01-01.

////////////////////////////////////////Изберете едно
////////////////////////////////////////a. DELETE FROM projects WHERE start_date = '2006-01-01';
////////////////////////////////////////b.DELETE FROM projects WHERE end_date = '2006-01-01';
////////////////////////////////////////c.DELETE FROM employees WHERE salary = '2006-01-01';
////////////////////////////////////////d.DELETE FROM projects WHERE start_date > '2006-01-01';
////////////////////////////////////////Забележка
////////////////////////////////////////Your answer is correct.
////////////////////////////////////////DELETE FROM projects

////////////////////////////////////////      WHERE start_date = '2006-01-01';


////////////////////////////////////////Правилният отговор е: DELETE FROM projects WHERE start_date = '2006-01-01';
////////////////////////////////////////Въпрос 17
////////////////////////////////////////Правилно
////////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////Текст на въпроса
////////////////////////////////////////Имате пример за създаване на функция:

////////////////////////////////////////CREATE blank   blank _project_weeks (start_date DATETIME, end_date DATETIME)

//////////////////////////////////////// blank INT

////////////////////////////////////////BEGIN

////////////////////////////////////////            // тяло на функцията

////////////////////////////////////////END

////////////////////////////////////////Поставете липсващите думи, така че да се получи правилния код.


////////////////////////////////////////RETURNSudfFUNCTIONPROCEDURE
////////////////////////////////////////Забележка
////////////////////////////////////////Your answer is correct.
////////////////////////////////////////CREATE FUNCTION udf_project_weeks (start_date DATETIME, end_date DATETIME)

////////////////////////////////////////RETURNS INT

////////////////////////////////////////BEGIN

////////////////////////////////////////            // тяло на функцията

////////////////////////////////////////END


////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////Имате пример за създаване на функция:

////////////////////////////////////////CREATE[FUNCTION][udf]_project_weeks(start_date DATETIME, end_date DATETIME)

////////////////////////////////////////[RETURNS] INT

////////////////////////////////////////BEGIN

////////////////////////////////////////            // тяло на функцията

////////////////////////////////////////END

////////////////////////////////////////Поставете липсващите думи, така че да се получи правилния код.

////////////////////////////////////////Въпрос 18
////////////////////////////////////////Отговорен
////////////////////////////////////////От максимално 6,00
////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////Текст на въпроса
////////////////////////////////////////Създайте заявка, която извежда първо име, фамилия и длъжност на служителите, които имат заплата между 20000 и 30000. Използвайте базата данни soft_uni.



////////////////////////////////////////use soft_uni;

////////////////////////////////////////SELECT first_name, last_name, job_title 

////////////////////////////////////////FROM employees 

////////////////////////////////////////WHERE salary BETWEEN 20000 AND 30000

////////////////////////////////////////Забележка
////////////////////////////////////////SELECT first_name, last_name, job_title

////////////////////////////////////////FROM employees

////////////////////////////////////////WHERE salary BETWEEN 20000 AND 30000;

////////////////////////////////////////Въпрос 19
////////////////////////////////////////Правилно
////////////////////////////////////////6,00 от максимално 6,00 точки
////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////Текст на въпроса
////////////////////////////////////////Трябва да създадете потребителска функция с параметри. Открийте липсващите думи под текста и ги поставете на правилното място, така че да получите коректно работещ код.

//////////////////////////////////////// blank   blank  udf_project_weeks (start_date DATETIME, end_date DATETIME)

////////////////////////////////////////RETURNS INT

//////////////////////////////////////// blank 

////////////////////////////////////////            // тяло на функцията

//////////////////////////////////////// blank 



////////////////////////////////////////CREATECREATECREATECREATEENDENDENDENDPROCEDUREPROCEDUREPROCEDUREPROCEDUREBEGINBEGINBEGINBEGINFUNCTIONFUNCTIONFUNCTIONFUNCTIONTRANSACTIONTRANSACTIONTRANSACTIONTRANSACTION
////////////////////////////////////////Забележка
////////////////////////////////////////Your answer is correct.
////////////////////////////////////////CREATE FUNCTION udf_project_weeks (start_date DATETIME, end_date DATETIME)

////////////////////////////////////////RETURNS INT

////////////////////////////////////////BEGIN

////////////////////////////////////////            // тяло на функцията

////////////////////////////////////////END


////////////////////////////////////////Правилният отговор е:
////////////////////////////////////////Трябва да създадете потребителска функция с параметри. Открийте липсващите думи под текста и ги поставете на правилното място, така че да получите коректно работещ код.

////////////////////////////////////////[CREATE][FUNCTION] udf_project_weeks (start_date DATETIME, end_date DATETIME)

////////////////////////////////////////RETURNS INT

////////////////////////////////////////[BEGIN]

////////////////////////////////////////            // тяло на функцията

////////////////////////////////////////[END]


////////////////////////////////////////Въпрос 20
////////////////////////////////////////Отговорен
////////////////////////////////////////От максимално 6,00
////////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////////Текст на въпроса
////////////////////////////////////////Във вашата база от данни Soft_uni имате създадена таблица Employees с 500 записа. Необходимо е да добавите нова колона с име salary. Напишете заявка за добавяне на колоната в таблица employees. 
////////////////////////////////////////ALTER TABLE employees

////////////////////////////////////////ADD COLUMN salary DECIMAL

////////////////////////////////////////Забележка
////////////////////////////////////////ALTER TABLE employees

////////////////////////////////////////ADD salary DECIMAL;


////////////////////////////////////////Край на прегледа
////////////////////////////////////////Отиди на ...
////////////////////////////////////////Отиди на ...
////////////////////////////////////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
////////////////////////////////////////Навигация в теста
////////////////////////////////////////Показване по един въпрос на страница
////////////////////////////////////////Край на прегледа
////////////////////////////////////////Вие сте влезли в системата като Добри Илев (Изход)
////////////////////////////////////////тренировъчен - курс - по
////////////////////////////////////////Data retention summary


////////////////////////////////////////ИЗПИТНА ТЕМА 11

//////////////////////////////////////Прескочи на основното съдържание
//////////////////////////////////////ПГЕЕ
//////////////////////////////////////Български ‎(bg)‎ 
//////////////////////////////////////Добри Илев 
//////////////////////////////////////Тренировъчен курс - Програмно осигуряване
//////////////////////////////////////Начална страница
//////////////////////////////////////Моите курсове
////////////////////////////////////// тренировъчен-курс-по
////////////////////////////////////// Изпитна тема 11
////////////////////////////////////// Изпитна тема №11
//////////////////////////////////////Започнат на	понеделник, 20 февруари 2023, 22:45
//////////////////////////////////////Състояние Завършен
//////////////////////////////////////Приключен на	понеделник, 20 февруари 2023, 23:37
//////////////////////////////////////Изминало време	52 мин. 17 сек.
//////////////////////////////////////Оценка	Още не е оценен
//////////////////////////////////////Въпрос 1
//////////////////////////////////////Правилно
//////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////Текст на въпроса
//////////////////////////////////////Посочете кое действие от компонентния тест се случва в Arrange фазата.

//////////////////////////////////////Изберете едно
//////////////////////////////////////a. подготвяне на обекта за тестване 
//////////////////////////////////////b. нито едно от изброените
//////////////////////////////////////c. проверка на резултата от тестването
//////////////////////////////////////d. извървшане на действието за тестване
//////////////////////////////////////Забележка
//////////////////////////////////////Your answer is correct.
//////////////////////////////////////Правилният отговор е: подготвяне на обекта за тестване
//////////////////////////////////////Въпрос 2
//////////////////////////////////////Отговорен
//////////////////////////////////////От максимално 4,00
//////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////Текст на въпроса
//////////////////////////////////////Разполагате с приложение-калкулатор за действия +, -, *, / със реални числа от тип decimal.

//////////////////////////////////////Дайте пример за поне 3 различни тестови случая и очаквания резултат от всеки от тях.

//////////////////////////////////////Ето няколко примера за тестови случаи за приложението-калкулатор с очакваните резултати:

//////////////////////////////////////Тест за събиране на две положителни числа:
//////////////////////////////////////Вход: 2.5, 3.6
//////////////////////////////////////Очакван изход: 6.1



//////////////////////////////////////Тест за изваждане на две отрицателни числа:

//////////////////////////////////////Вход: -4.7, -3.3
//////////////////////////////////////Очакван изход: -1.4



//////////////////////////////////////Тест за умножение на положително и отрицателно число:

//////////////////////////////////////Вход: 2.1, -1.5
//////////////////////////////////////Очакван изход: -3.15



//////////////////////////////////////Тест за деление на положително число с нула:

//////////////////////////////////////Вход: 8.2, 0
//////////////////////////////////////Очакван изход: грешка(деление на нула)



//////////////////////////////////////Тест за деление на отрицателно число с положително число:

//////////////////////////////////////Вход: -5.5, 2.2
//////////////////////////////////////Очакван изход: -2.5


//////////////////////////////////////Тест за умножение на две числа, като поне едно от тях е нула:
//////////////////////////////////////Вход: 0, 7.9
//////////////////////////////////////Очакван изход: 0



//////////////////////////////////////Въпрос 3
//////////////////////////////////////Отговорен
//////////////////////////////////////От максимално 40,00
//////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////Текст на въпроса
//////////////////////////////////////Пример: По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен

//////////////////////////////////////фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

//////////////////////////////////////Условие:

//////////////////////////////////////Разполагате с класове Dummy и Axe. Напишете компонентни тестове, които да проверят

//////////////////////////////////////работата на класовете и да помогнат в откриването и отстраняването на евентуални проблеми.

//////////////////////////////////////За класът Axe създайте следните тестове:

//////////////////////////////////////● Тествайте дали оръжието губи здравина след всяка атака

//////////////////////////////////////● Тествайте атака със счупено оръжие

//////////////////////////////////////За класът Dummy създайте следните тестове:

//////////////////////////////////////● Чучелото губи здраве, ако е атакувано

//////////////////////////////////////● Мъртво чучело хвърля изключение, ако е атакувано

//////////////////////////////////////● Мъртвото чучело може да даде XP

//////////////////////////////////////● Живото чучело не може да даде XP

//////////////////////////////////////Фрагмент:

//////////////////////////////////////Axe.cs

//////////////////////////////////////public class Axe

//////////////////////////////////////{

//////////////////////////////////////  private int attackPoints;

//////////////////////////////////////  private int durabilityPoints;

//////////////////////////////////////  public Axe(int attack, int durability)

//////////////////////////////////////  {

//////////////////////////////////////    this.attackPoints = attack;

//////////////////////////////////////    this.durabilityPoints = durability;

//////////////////////////////////////  }

//////////////////////////////////////  public int AttackPoints

//////////////////////////////////////  {

//////////////////////////////////////    get { return this.attackPoints; }

//////////////////////////////////////  }

//////////////////////////////////////  public int DurabilityPoints

//////////////////////////////////////  {

//////////////////////////////////////    get { return this.durabilityPoints; }

//////////////////////////////////////  }

//////////////////////////////////////  public void Attack(Dummy target)

//////////////////////////////////////  {

//////////////////////////////////////    if (this.durabilityPoints <= 0)

//////////////////////////////////////    {

//////////////////////////////////////      throw new InvalidOperationException("Axe is broken.");

//////////////////////////////////////    }

//////////////////////////////////////    target.TakeAttack(this.attackPoints);

//////////////////////////////////////    this.durabilityPoints -= 1;

//////////////////////////////////////  }

//////////////////////////////////////}

//////////////////////////////////////Dummy.cs

//////////////////////////////////////public class Dummy

//////////////////////////////////////{

//////////////////////////////////////  private int health;

//////////////////////////////////////  private int experience;

//////////////////////////////////////  public Dummy(int health, int experience)

//////////////////////////////////////  {

//////////////////////////////////////    this.health = health;

//////////////////////////////////////    this.experience = experience;

//////////////////////////////////////  }

//////////////////////////////////////  public int Health

//////////////////////////////////////  {

//////////////////////////////////////    get { return this.health; }

//////////////////////////////////////  }

//////////////////////////////////////  public void TakeAttack(int attackPoints)

//////////////////////////////////////  {

//////////////////////////////////////    if (this.IsDead())

//////////////////////////////////////    {

//////////////////////////////////////      throw new InvalidOperationException("Dummy is dead.");

//////////////////////////////////////    }

//////////////////////////////////////    this.health -= attackPoints;

//////////////////////////////////////  }

//////////////////////////////////////  public int GiveExperience()

//////////////////////////////////////  {

//////////////////////////////////////    if (!this.IsDead())

//////////////////////////////////////    {

//////////////////////////////////////      throw new InvalidOperationException("Target is not dead.");

//////////////////////////////////////    }

//////////////////////////////////////    return this.experience;

//////////////////////////////////////  }

//////////////////////////////////////  public bool IsDead()

//////////////////////////////////////  {

//////////////////////////////////////    return this.health <= 0;

//////////////////////////////////////  }

//////////////////////////////////////}

//////////////////////////////////////AxeTest.cs

//////////////////////////////////////  publc class AxeTest

//////////////////////////////////////{

//////////////////////////////////////  [Test]

//////////////////////////////////////  public void AxeLosesDurabilityAfterAttack()



//////////////////////////////////////            // Arrange

//////////////////////////////////////            Axe axe = new Axe(10, 10);

//////////////////////////////////////  Dummy dummy = new Dummy(10, 10);



//////////////////////////////////////  // Act 

//////////////////////////////////////  axe.....(dummy);



//////////////////////////////////////            // Assert

//////////////////////////////////////            Assert.AreEqual(9, axe.DurabilityPoints, "Axe Duraility does not change after attack.");





//////////////////////////////////////        [Test]

//////////////////////////////////////  public void BrokenAxeCantAttack()

//////////////////////////////////////  {

//////////////////////////////////////    // Arrange

//////////////////////////////////////    Axe axe = new Axe(2, 2);

//////////////////////////////////////    Dummy dummy = new Dummy(10, 10);



//////////////////////////////////////    // Act 





//////////////////////////////////////    // Assert

//////////////////////////////////////    var ex = Assert.Throws<InvalidOperationException>(() => axe.Attack(dummy));

//////////////////////////////////////    Assert.(ex.Message, "Axe is broken.");

//////////////////////////////////////  }

//////////////////////////////////////}

//////////////////////////////////////DummyTest.cs

//////////////////////////////////////class DummyTest

//////////////////////////////////////{

//////////////////////////////////////  [Test]

//////////////////////////////////////  public void DummyAxeLosesHealthAfterAttack()

//////////////////////////////////////                    // Arrange

//////////////////////////////////////            Axe axe = new Axe(10, 10);

//////////////////////////////////////  Dummy  = new Dummy(10, 10);



//////////////////////////////////////  // Act

//////////////////////////////////////  axe.Attack(dummy);



//////////////////////////////////////            // Assert

//////////////////////////////////////            Assert.0, dummy.Health, "Dummy Health Does Not Change After Attack.");

//////////////////////////////////////        }



//////////////////////////////////////[Test]

//////////////////////////////////////public void DeadDummyThrowsExeption()

//////////////////////////////////////{

//////////////////////////////////////  // Arrange

//////////////////////////////////////  Axe axe = new Axe(10, 10);

//////////////////////////////////////  Dummy dummy = new Dummy(1, 1);



//////////////////////////////////////  // Act

//////////////////////////////////////  axe.Attack(dummy);



//////////////////////////////////////  // Assert

//////////////////////////////////////  var ex = Assert.Throws<InvalidOperationException>(() => axe.Attack(dummy));

//////////////////////////////////////  Assert.AreEqual(ex.Message, "Dummy is dead.");

//////////////////////////////////////}



//////////////////////////////////////[Test]

//////////////////////////////////////public void DeadDummyGivesExperience()

//////////////////////////////////////{

//////////////////////////////////////  // Arrange

//////////////////////////////////////  Axe axe = new Axe(10, 10);

//////////////////////////////////////  Dummy dummy = new Dummy(1, 50);



//////////////////////////////////////  // Act



//////////////////////////////////////  // Assert

//////////////////////////////////////  var ex = Assert.Throws<InvalidOperationException>(() => axe.Attack(dummy));

//////////////////////////////////////  Assert.AreEqual(50, dummy.GiveExperience(), "Dead Dummy Does Not Gives Experiense.");

//////////////////////////////////////}



//////////////////////////////////////[Test]

//////////////////////////////////////public void LiveDummyDoesNotGivesExperiense()

//////////////////////////////////////{

//////////////////////////////////////  // Arrange

//////////////////////////////////////  Axe axe = new Axe(1, 100);

//////////////////////////////////////  Dummy dummy = new Dummy(10, 50);



//////////////////////////////////////  // Act

//////////////////////////////////////  axe.Attack(dummy);



//////////////////////////////////////  // Assert

//////////////////////////////////////  var ex = Assert.Throws<InvalidOperationException>(() => dummy.GiveExperience());

//////////////////////////////////////  Assert.AreEqual(ex.Message, "Target is not dead.");

//////////////////////////////////////}





//////////////////////////////////////Фрагментите под формата на общ проект, който трябва да бъде поправен във Visual Studio:
//////////////////////////////////////https://pgeeburgas.org/pluginfile.php/17535/question/questiontext/49903/20/19309/AttackSimulator.zip


//////////////////////////////////////[TestFixture]

//////////////////////////////////////public class AxeTest

//////////////////////////////////////{

//////////////////////////////////////  [Test]

//////////////////////////////////////  public void AxeLosesDurabilityAfterAttack()

//////////////////////////////////////  {

//////////////////////////////////////    // Arrange

//////////////////////////////////////    Axe axe = new Axe(10, 10);

//////////////////////////////////////    Dummy dummy = new Dummy(10, 10);



//////////////////////////////////////    // Act 

//////////////////////////////////////    axe.Attack(dummy);



//////////////////////////////////////    // Assert

//////////////////////////////////////    Assert.AreEqual(9, axe.DurabilityPoints, "Axe Durability does not change after attack.");

//////////////////////////////////////  }



//////////////////////////////////////  [Test]

//////////////////////////////////////  public void BrokenAxeCantAttack()

//////////////////////////////////////  {

//////////////////////////////////////    // Arrange

//////////////////////////////////////    Axe axe = new Axe(2, 0);

//////////////////////////////////////    Dummy dummy = new Dummy(10, 10);



//////////////////////////////////////    // Act 

//////////////////////////////////////    var ex = Assert.Throws<InvalidOperationException>(() => axe.Attack(dummy));



//////////////////////////////////////    // Assert

//////////////////////////////////////    Assert.AreEqual(ex.Message, "Axe is broken.");

//////////////////////////////////////  }

//////////////////////////////////////}





/////////////////////////////////////////DummyTest.cs

//////////////////////////////////////[TestFixture]

//////////////////////////////////////public class DummyTest

//////////////////////////////////////{

//////////////////////////////////////  [Test]

//////////////////////////////////////  public void DummyLosesHealthAfterAttack()

//////////////////////////////////////  {

//////////////////////////////////////    // Arrange

//////////////////////////////////////    Axe axe = new Axe(10, 10);

//////////////////////////////////////    Dummy dummy = new Dummy(10, 10);



//////////////////////////////////////    // Act

//////////////////////////////////////    axe.Attack(dummy);



//////////////////////////////////////    // Assert

//////////////////////////////////////    Assert.AreEqual(0, dummy.Health, "Dummy Health Does Not Change After Attack.");

//////////////////////////////////////  }



//////////////////////////////////////  [Test]

//////////////////////////////////////  public void DeadDummyThrowsException()

//////////////////////////////////////  {

//////////////////////////////////////    // Arrange

//////////////////////////////////////    Axe axe = new Axe(10, 10);

//////////////////////////////////////    Dummy dummy = new Dummy(0, 10);



//////////////////////////////////////    // Act

//////////////////////////////////////    var ex = Assert.Throws<InvalidOperationException>(() => axe.Attack(dummy));



//////////////////////////////////////    // Assert

//////////////////////////////////////    Assert.AreEqual(ex.Message, "Dummy is dead.");

//////////////////////////////////////  }



//////////////////////////////////////  [Test]

//////////////////////////////////////  public void DeadDummyGivesExperience()

//////////////////////////////////////  {

//////////////////////////////////////    // Arrange

//////////////////////////////////////    Axe axe = new Axe(10, 10);

//////////////////////////////////////    Dummy dummy = new Dummy(0, 50);



//////////////////////////////////////    // Act

//////////////////////////////////////    int experience = dummy.GiveExperience();



//////////////////////////////////////    // Assert

//////////////////////////////////////    Assert.AreEqual(50, experience, "Dead Dummy Does Not Give Experience.");

//////////////////////////////////////  }



//////////////////////////////////////  [Test]

//////////////////////////////////////  public void LiveDummyDoesNotGiveExperience()

//////////////////////////////////////  {

//////////////////////////////////////    // Arrange

//////////////////////////////////////    Axe axe = new Axe(1, 100);

//////////////////////////////////////    Dummy dummy = new Dummy(10, 50);



//////////////////////////////////////    // Act

//////////////////////////////////////    axe.Attack(dummy);



//////////////////////////////////////    // Assert

//////////////////////////////////////    var ex = Assert.Throws<InvalidOperationException>(() => dummy.GiveExperience());

//////////////////////////////////////    Assert.AreEqual(ex.Message, "Target is not dead.");

//////////////////////////////////////  }

//////////////////////////////////////}

//////////////////////////////////////Въпрос 4
//////////////////////////////////////Отговорен
//////////////////////////////////////От максимално 6,00
//////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////Текст на въпроса
//////////////////////////////////////Демонстрирайте рефакториране на следния фрагмент от код, като зададате подходящо именуване и форматиране, ако и където това е необходимо:

//////////////////////////////////////class tdl
//////////////////////////////////////{ //class for todo list

//////////////////////////////////////  public string _Name { get; set; }

//////////////////////////////////////  public string description { get; set; }

//////////////////////////////////////  public virtual List<ToDoItem> Items { get; set; }

//////////////////////////////////////}

//////////////////////////////////////public class TodoList

//////////////////////////////////////{

//////////////////////////////////////  public string Name { get; set; }

//////////////////////////////////////  public string Description { get; set; }

//////////////////////////////////////  public virtual List<ToDoItem> Items { get; set; }

//////////////////////////////////////}



//////////////////////////////////////Въпрос 5
//////////////////////////////////////Отговорен
//////////////////////////////////////От максимално 4,00
//////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////Текст на въпроса
//////////////////////////////////////Обяснете как може да бъде реализиран презентационния слой в ASP.NET Core приложение

//////////////////////////////////////Презентационният слой в ASP.NET Core приложение обикновено се реализира чрез използване на MVC (Model-View-Controller) архитектурата.MVC архитектурата позволява разделянето на приложението на три основни компонента: модел, изглед и контролер, като всеки един от тях има своя собствена роля и отговорности.

//////////////////////////////////////Моделите в MVC служат за представяне на данните и състоянието на приложението. Те могат да бъдат представени като обекти в паметта, база от данни или какъвто друг източник на данни е необходим.

//////////////////////////////////////Изгледите в MVC служат за визуализиране на данните и за интерактивността на потребителя. Те могат да бъдат HTML, CSS, JavaScript или който и да е друг тип файл, който се използва за изграждане на потребителския интерфейс на приложението.

//////////////////////////////////////Контролерите в MVC служат за приемане на заявки от клиентите, обработка на заявките и предаване на необходимата информация на изгледите за визуализиране. Те служат като свързващ звено между моделите и изгледите.

//////////////////////////////////////ASP.NET Core предоставя редица инструменти и функционалности за реализиране на MVC архитектурата в приложението. Те включват вградените MVC контролери, поддръжка на Razor изгледи, вграден dependency injection контейнер и много други. Разработчиците могат да използват тези инструменти и функционалности за бързо и ефективно създаване на мощни и гъвкави презентационни слоеве в своите ASP.NET Core приложения.


//////////////////////////////////////Въпрос 6
//////////////////////////////////////Правилно
//////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////Текст на въпроса
//////////////////////////////////////Дефинирайте понятието Контролер (Controller) от MVC концепцията.
//////////////////////////////////////Изберете едно
//////////////////////////////////////a. Нито една от посочените дефиниции не е коректна.
//////////////////////////////////////b. Контролерът в MVC служи за обработка на заявките на потребителя към приложението 
//////////////////////////////////////c. Контролерът в MVC служи за контрол на външен вид и взаимодействие с потребителя
//////////////////////////////////////d. Контролерът в MVC служи за управление на данни и бизнес-логика
//////////////////////////////////////Забележка
//////////////////////////////////////Your answer is correct.
//////////////////////////////////////Правилният отговор е: Контролерът в MVC служи за обработка на заявките на потребителя към приложението
//////////////////////////////////////Въпрос 7
//////////////////////////////////////Правилно
//////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////Текст на въпроса
//////////////////////////////////////Какво стои зад буквата V в абревиатурата на архитектурния шаблон MVC?

//////////////////////////////////////Изберете едно
//////////////////////////////////////a. Value
//////////////////////////////////////b. Visibility
//////////////////////////////////////c. ViewModel
//////////////////////////////////////d. View 
//////////////////////////////////////Забележка
//////////////////////////////////////Your answer is correct.
//////////////////////////////////////Правилният отговор е: View
//////////////////////////////////////Въпрос 8
//////////////////////////////////////Отговорен
//////////////////////////////////////От максимално 4,00
//////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////Текст на въпроса
//////////////////////////////////////Дайте пример за коректно именуване на компонентен тест, който проверява дали потребител получава грешка при опит за влизане с грешно потребителско име и парола

//////////////////////////////////////Един добър начин за именуване на компонентен тест, който проверява дали потребител получава грешка при опит за влизане с грешно потребителско име и парола е:

//////////////////////////////////////"Login_With_Invalid_Credentials_Should_Return_Error"

//////////////////////////////////////Това име на теста е ясно и описателно, показвайки какво точно се тества и каква е очакваната реакция на приложението.


//////////////////////////////////////Въпрос 9
//////////////////////////////////////Правилно
//////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////Текст на въпроса
//////////////////////////////////////Посочете значението на абревиатурата MVC.

//////////////////////////////////////Изберете едно
//////////////////////////////////////a. Model Value Class
//////////////////////////////////////b. Model View Class
//////////////////////////////////////c. Model View Controller 
//////////////////////////////////////d. Money Value Cost
//////////////////////////////////////Забележка
//////////////////////////////////////Your answer is correct.
//////////////////////////////////////Правилният отговор е: Model View Controller
//////////////////////////////////////Въпрос 10
//////////////////////////////////////Правилно
//////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////Текст на въпроса
//////////////////////////////////////Посочете как трябва да започват имената на параметрите на методите.

//////////////////////////////////////Изберете едно
//////////////////////////////////////a. Имената на параметрите задължително започват с долна черта.
//////////////////////////////////////b. Имената на параметрите задължително започват с голяма буква.
//////////////////////////////////////c. Имената на параметрите задължително започват с цифра.
//////////////////////////////////////d. Имената на параметрите задължително започват с малка буква. 
//////////////////////////////////////Забележка
//////////////////////////////////////Your answer is correct.
//////////////////////////////////////Правилният отговор е: Имената на параметрите задължително започват с малка буква.
//////////////////////////////////////Въпрос 11
//////////////////////////////////////Неправилно
//////////////////////////////////////0,00 от максимално 2,00 точки
//////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////Текст на въпроса
//////////////////////////////////////Какво действие активира клавиша F10 във Visual Studio?

//////////////////////////////////////Изберете едно
//////////////////////////////////////a. Build
//////////////////////////////////////b. Step over 
//////////////////////////////////////c. Step Into
//////////////////////////////////////d. Run
//////////////////////////////////////Забележка
//////////////////////////////////////Your answer is incorrect.
//////////////////////////////////////Правилният отговор е: Step Into
//////////////////////////////////////Въпрос 12
//////////////////////////////////////Правилно
//////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////Текст на въпроса
//////////////////////////////////////Какво стои зад буквата C в абревиатурата на архитектурния шаблон MVC?

//////////////////////////////////////Изберете едно
//////////////////////////////////////a. Class
//////////////////////////////////////b. Create
//////////////////////////////////////c. Controller 
//////////////////////////////////////d. Cost
//////////////////////////////////////Забележка
//////////////////////////////////////Your answer is correct.
//////////////////////////////////////Правилният отговор е: Controller
//////////////////////////////////////Въпрос 13
//////////////////////////////////////Отговорен
//////////////////////////////////////От максимално 6,00
//////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////Текст на въпроса




//////////////////////////////////////Фрагмент:

//////////////////////////////////////using System;

//////////////////////////////////////class InstructionSet_broken
//////////////////////////////////////{
//////////////////////////////////////  static void Main()
//////////////////////////////////////  {

//////////////////////////////////////    string opCode = Console.ReadLine();

//////////////////////////////////////    while (opCode != "end")
//////////////////////////////////////    {
//////////////////////////////////////      string[] codeArgs = opCode.Split(' ');

//////////////////////////////////////      long result = 0;
//////////////////////////////////////      switch (codeArgs[0])
//////////////////////////////////////      {
//////////////////////////////////////        case "INC":
//////////////////////////////////////          {
//////////////////////////////////////            int operandOne = int.Parse(codeArgs[1]);
//////////////////////////////////////            result = operandOne++;
//////////////////////////////////////            break;
//////////////////////////////////////          }
//////////////////////////////////////        case "DEC":
//////////////////////////////////////          {
//////////////////////////////////////            int operandOne = int.Parse(codeArgs[1]);
//////////////////////////////////////            result = operandOne--;
//////////////////////////////////////            break;
//////////////////////////////////////          }
//////////////////////////////////////        case "ADD":
//////////////////////////////////////          {
//////////////////////////////////////            int operandOne = int.Parse(codeArgs[1]);
//////////////////////////////////////            int operandTwo = int.Parse(codeArgs[2]);
//////////////////////////////////////            result = operandOne + operandTwo;
//////////////////////////////////////            break;
//////////////////////////////////////          }
//////////////////////////////////////        case "MLA":
//////////////////////////////////////          {
//////////////////////////////////////            int operandOne = int.Parse(codeArgs[1]);
//////////////////////////////////////            int operandTwo = int.Parse(codeArgs[2]);
//////////////////////////////////////            result = (long)(operandOne * operandTwo);
//////////////////////////////////////            break;
//////////////////////////////////////          }
//////////////////////////////////////      }

//////////////////////////////////////      Console.WriteLine(result);
//////////////////////////////////////    }
//////////////////////////////////////  }
//////////////////////////////////////}
//////////////////////////////////////Забележка: Фрагментът съдържа логически грешки, които водят до неочаквано повдение на програмата. Открийте ги с помомощта на дебъгера и предоставете поправения код
//////////////////////////////////////using System;



//////////////////////////////////////class InstructionSet

//////////////////////////////////////{

//////////////////////////////////////  static void Main()

//////////////////////////////////////  {

//////////////////////////////////////    string opCode = Console.ReadLine();



//////////////////////////////////////    while (opCode != "end")

//////////////////////////////////////    {

//////////////////////////////////////      string[] codeArgs = opCode.Split(' ');



//////////////////////////////////////      long result = 0;

//////////////////////////////////////      switch (codeArgs[0])

//////////////////////////////////////      {

//////////////////////////////////////        case "INC":

//////////////////////////////////////          {

//////////////////////////////////////            int operandOne = int.Parse(codeArgs[1]);

//////////////////////////////////////            operandOne++;

//////////////////////////////////////            result = operandOne;

//////////////////////////////////////            break;

//////////////////////////////////////          }

//////////////////////////////////////        case "DEC":

//////////////////////////////////////          {

//////////////////////////////////////            int operandOne = int.Parse(codeArgs[1]);

//////////////////////////////////////            operandOne--;

//////////////////////////////////////            result = operandOne;

//////////////////////////////////////            break;

//////////////////////////////////////          }

//////////////////////////////////////        case "ADD":

//////////////////////////////////////          {

//////////////////////////////////////            int operandOne = int.Parse(codeArgs[1]);

//////////////////////////////////////            int operandTwo = int.Parse(codeArgs[2]);

//////////////////////////////////////            result = (long)operandOne + operandTwo;

//////////////////////////////////////            break;

//////////////////////////////////////          }

//////////////////////////////////////        case "MLA":

//////////////////////////////////////          {

//////////////////////////////////////            int operandOne = int.Parse(codeArgs[1]);

//////////////////////////////////////            int operandTwo = int.Parse(codeArgs[2]);

//////////////////////////////////////            result = (long)operandOne * operandTwo;

//////////////////////////////////////            break;

//////////////////////////////////////          }

//////////////////////////////////////      }



//////////////////////////////////////      Console.WriteLine(result);



//////////////////////////////////////      opCode = Console.ReadLine();

//////////////////////////////////////    }

//////////////////////////////////////  }

//////////////////////////////////////}

//////////////////////////////////////Въпрос 14
//////////////////////////////////////Отговорен
//////////////////////////////////////От максимално 6,00
//////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////Текст на въпроса
//////////////////////////////////////Демонстрирайте рефакториране на следния фрагмент от код, като зададате подходящо именуване и форматиране, ако и където това е необходимо:

//////////////////////////////////////class song
//////////////////////////////////////{ //class for song

//////////////////////////////////////  public string _Name { get; set; }

//////////////////////////////////////  public string artist { get; set; }

//////////////////////////////////////  public virtual PlayList PlayList { get; set; }

//////////////////////////////////////}

//////////////////////////////////////class Song

//////////////////////////////////////{

//////////////////////////////////////  public string Name { get; set; }

//////////////////////////////////////  public string Artist { get; set; }

//////////////////////////////////////  public virtual Playlist Playlist { get; set; }

//////////////////////////////////////}



//////////////////////////////////////Въпрос 15
//////////////////////////////////////Неправилно
//////////////////////////////////////0,00 от максимално 2,00 точки
//////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////Текст на въпроса
//////////////////////////////////////Изберете коя от следните програмни единици се използва за писането на отделен компонентен тест.

//////////////////////////////////////Изберете едно
//////////////////////////////////////a. условен оператор
//////////////////////////////////////b. цикъл
//////////////////////////////////////c. клас 
//////////////////////////////////////d. метод
//////////////////////////////////////Забележка
//////////////////////////////////////Your answer is incorrect.
//////////////////////////////////////Правилният отговор е: метод
//////////////////////////////////////Въпрос 16
//////////////////////////////////////Правилно
//////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////Текст на въпроса
//////////////////////////////////////Посочете кое от следните НЕ е част от процеса по рефакториране:

//////////////////////////////////////Изберете едно
//////////////////////////////////////a. съкращаване на излишно дълъг код
//////////////////////////////////////b. премахване на неизползвани програмни единици
//////////////////////////////////////c. добавяне на нова функционалност 
//////////////////////////////////////d. намаляне на зависимостите от останалите програмни единици в кода
//////////////////////////////////////Забележка
//////////////////////////////////////Your answer is correct.
//////////////////////////////////////Правилният отговор е: добавяне на нова функционалност
//////////////////////////////////////Въпрос 17
//////////////////////////////////////Правилно
//////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////Текст на въпроса
//////////////////////////////////////Посочете кой от следните идентификатори има нужда от рефакториране.

//////////////////////////////////////Изберете едно
//////////////////////////////////////a. public string Name { get; set; }
//////////////////////////////////////b. public interface IList
//////////////////////////////////////c. int numberofpeople;
//////////////////////////////////////d. class Game
//////////////////////////////////////Забележка
//////////////////////////////////////Your answer is correct.
//////////////////////////////////////Правилният отговор е: int numberofpeople;
//////////////////////////////////////Въпрос 18
//////////////////////////////////////Правилно
//////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////Текст на въпроса
//////////////////////////////////////Изберете за какво служи стопера (breakpoint) в дебъгването на програми?

//////////////////////////////////////Изберете едно
//////////////////////////////////////a. нито едно от изброените
//////////////////////////////////////b. точка за умишлено прекъсване на програма с цел дебъгване 
//////////////////////////////////////c. вид дебъгер
//////////////////////////////////////d. контролна точка, която следи стойността на конкретна променлива
//////////////////////////////////////Забележка
//////////////////////////////////////Your answer is correct.
//////////////////////////////////////Правилният отговор е: точка за умишлено прекъсване на програма с цел дебъгване
//////////////////////////////////////Въпрос 19
//////////////////////////////////////Правилно
//////////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////Текст на въпроса
//////////////////////////////////////Кой от следните бутони стартира програмата в Debug режим във Visual Studio?

//////////////////////////////////////Изберете едно
//////////////////////////////////////a. F1
//////////////////////////////////////b. F5 
//////////////////////////////////////c. Ctrl + F5
//////////////////////////////////////d. F12
//////////////////////////////////////Забележка
//////////////////////////////////////Your answer is correct.
//////////////////////////////////////Правилният отговор е: F5
//////////////////////////////////////Въпрос 20
//////////////////////////////////////Отговорен
//////////////////////////////////////От максимално 6,00
//////////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////////Текст на въпроса




//////////////////////////////////////Фрагмент:

//////////////////////////////////////using System;

//////////////////////////////////////    public class Substring_broken
//////////////////////////////////////{
//////////////////////////////////////  public static void Main()
//////////////////////////////////////  {
//////////////////////////////////////    string text = Console.ReadLine();
//////////////////////////////////////    int jump = int.Parse(Console.ReadLine());

//////////////////////////////////////    const char Search = 'р';
//////////////////////////////////////    bool hasMatch = false;

//////////////////////////////////////    for (int i = 0; i < text.Length; i++)
//////////////////////////////////////    {
//////////////////////////////////////      if (text[i] == Search)
//////////////////////////////////////      {
//////////////////////////////////////        hasMatch = true;

//////////////////////////////////////        int endIndex = jump;

//////////////////////////////////////        if (endIndex > text.Length)
//////////////////////////////////////        {
//////////////////////////////////////          endIndex = text.Length;
//////////////////////////////////////        }

//////////////////////////////////////        string matchedString = text.Substring(i, endIndex);
//////////////////////////////////////        Console.WriteLine(matchedString);
//////////////////////////////////////        i += jump;
//////////////////////////////////////      }
//////////////////////////////////////    }

//////////////////////////////////////    if (!hasMatch)
//////////////////////////////////////    {
//////////////////////////////////////      Console.WriteLine("no");
//////////////////////////////////////    }
//////////////////////////////////////  }
//////////////////////////////////////}
//////////////////////////////////////Забележка: Фрагментът съдържа логически грешки, които водят до неочаквано повдение на програмата. Открийте ги с помомощта на дебъгера и предоставете поправения код
//////////////////////////////////////using System;



//////////////////////////////////////public class Substring_fixed

//////////////////////////////////////{

//////////////////////////////////////  public static void Main()

//////////////////////////////////////  {

//////////////////////////////////////    string text = Console.ReadLine();

//////////////////////////////////////    int jump = int.Parse(Console.ReadLine());



//////////////////////////////////////    const char Search = 'р';

//////////////////////////////////////    bool hasMatch = false;



//////////////////////////////////////    for (int i = 0; i < text.Length; i++)

//////////////////////////////////////    {

//////////////////////////////////////      if (text[i] == Search)

//////////////////////////////////////      {

//////////////////////////////////////        hasMatch = true;



//////////////////////////////////////        int endIndex = i + jump;



//////////////////////////////////////        if (endIndex > text.Length - 1)

//////////////////////////////////////        {

//////////////////////////////////////          endIndex = text.Length - i;

//////////////////////////////////////        }



//////////////////////////////////////        string matchedString = text.Substring(i, endIndex);

//////////////////////////////////////        Console.WriteLine(matchedString);

//////////////////////////////////////        i += jump - 1;

//////////////////////////////////////      }

//////////////////////////////////////    }



//////////////////////////////////////    if (!hasMatch)

//////////////////////////////////////    {

//////////////////////////////////////      Console.WriteLine("no");

//////////////////////////////////////    }

//////////////////////////////////////  }

//////////////////////////////////////}

//////////////////////////////////////Край на прегледа
//////////////////////////////////////Отиди на ...
//////////////////////////////////////Отиди на ...
//////////////////////////////////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
//////////////////////////////////////Навигация в теста
//////////////////////////////////////Край на прегледа
//////////////////////////////////////Вие сте влезли в системата като Добри Илев (Изход)
//////////////////////////////////////тренировъчен - курс - по
//////////////////////////////////////Data retention summary

////////////////////////////////////Прескочи на основното съдържание
////////////////////////////////////ПГЕЕ
////////////////////////////////////Български ‎(bg)‎ 
////////////////////////////////////Добри Илев 
////////////////////////////////////Тренировъчен курс - Програмно осигуряване
////////////////////////////////////Начална страница
////////////////////////////////////Моите курсове
//////////////////////////////////// тренировъчен-курс-по
//////////////////////////////////// Изпитна тема 11
//////////////////////////////////// Изпитна тема №11
////////////////////////////////////Започнат на	петък, 24 март 2023, 14:56
////////////////////////////////////Състояние Завършен
////////////////////////////////////Приключен на	петък, 24 март 2023, 18:03
////////////////////////////////////Изминало време	3 часа 6 мин.
////////////////////////////////////Оценка	Още не е оценен
////////////////////////////////////Въпрос 1
////////////////////////////////////Отговорен
////////////////////////////////////От максимално 4,00
////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////Текст на въпроса
////////////////////////////////////Обяснете как си взаимодействат трите слоя на трислойната архитектура.

////////////////////////////////////Трислойната архитектура, също известна като три-табанова архитектура, е модел на софтуерно проектиране, който разделя приложението на три основни слоя: презентационен слой, бизнес логика (или домейн слой) и слой за достъп до данни. Всяко от тези нива си взаимодействат с другите, за да осигурят пълната функционалност на приложението.

////////////////////////////////////Презентационен слой (Потребителски интерфейс): Този слой е отговорен за представянето на информацията на потребителите и за взимането на техния вход. Тук се съдържат графични елементи, форми, менюта и други компоненти, които се използват за визуализация и комуникация с потребителите. Презентационният слой комуникира със слоя на бизнес логиката, за да извършва операции и да получава данни, които след това се показват на потребителя.

////////////////////////////////////Бизнес логика (Домейн слой): Този слой съдържа основната логика на приложението и е отговорен за обработката на правилата, които контролират функционирането на системата. Тук се извършват изчисления, се обработват заявки, се прилагат бизнес правила и се вземат решения. Бизнес логиката взаимодейства със слоя за достъп до данни, за да извлече, обработи и запише данни, а също така комуникира с презентационния слой, за да предостави данни за визуализация.

////////////////////////////////////Слой за достъп до данни (Data Access Layer): Този слой е отговорен за управлението на комуникацията между приложението и източниците на данни, като бази данни, файлове или API-та. Тук се извършват операции като извличане, вмъкване, актуализация и изтриване на данни. Слойът за достъп до данни капсулира специфичните технологии и протоколи за достъп до данни и предоставя на бизнес логиката единен интерфейс за извличане и запис на данни. Така слоят за достъп до данни абстрахира подробностите, свързани с комуникацията с източниците на данни, което позволява на бизнес логиката да се фокусира върху обработката на информацията, без да се притеснява от начина, по който тези данни се съхраняват или достъпват.

////////////////////////////////////В резюме, в трислойната архитектура презентационният слой предоставя потребителски интерфейс, който позволява на потребителите да взаимодействат със системата. Този слой комуникира с бизнес логиката, която от своя страна обработва данни и прилага бизнес правила, използвайки информацията, предоставена от слоя за достъп до данни. Слойът за достъп до данни абстрахира начина, по който системата комуникира с различните източници на данни и предоставя единен интерфейс за бизнес логиката. Така трите слоя взаимодействат помежду си, за да осигурят пълната функционалност на приложението.


////////////////////////////////////Въпрос 2
////////////////////////////////////Правилно
////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////Текст на въпроса
////////////////////////////////////Какво стои зад буквата M в абревиатурата на архитектурния шаблон MVC?

////////////////////////////////////Изберете едно
////////////////////////////////////a. Money
////////////////////////////////////b. Master
////////////////////////////////////c. Model 
////////////////////////////////////d. Meme
////////////////////////////////////Забележка
////////////////////////////////////Your answer is correct.
////////////////////////////////////Правилният отговор е: Model
////////////////////////////////////Въпрос 3
////////////////////////////////////Отговорен
////////////////////////////////////От максимално 4,00
////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////Текст на въпроса
////////////////////////////////////Дайте пример за коректно именуване на компонентен тест, който проверява дали програмата не допуска внасянето на отрицателна сума пари в банкова сметка.

////////////////////////////////////[Test]

////////////////////////////////////public void Deposit_NegativeAmount_ThrowsException()

////////////////////////////////////{

////////////////////////////////////  // Arrange

////////////////////////////////////  var account = new BankAccount(1000);

////////////////////////////////////  var negativeAmount = -500;



////////////////////////////////////  // Act and Assert

////////////////////////////////////  Assert.Throws<ArgumentException>(() => account.Deposit(negativeAmount));

////////////////////////////////////}



////////////////////////////////////Въпрос 4
////////////////////////////////////Правилно
////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////Текст на въпроса
////////////////////////////////////Посочете как трябва да започват имената на параметрите на методите.

////////////////////////////////////Изберете едно
////////////////////////////////////a. Имената на параметрите задължително започват с малка буква. 
////////////////////////////////////b. Имената на параметрите задължително започват с голяма буква.
////////////////////////////////////c. Имената на параметрите задължително започват с цифра.
////////////////////////////////////d. Имената на параметрите задължително започват с долна черта.
////////////////////////////////////Забележка
////////////////////////////////////Your answer is correct.
////////////////////////////////////Правилният отговор е: Имената на параметрите задължително започват с малка буква.
////////////////////////////////////Въпрос 5
////////////////////////////////////Отговорен
////////////////////////////////////От максимално 6,00
////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////Текст на въпроса
////////////////////////////////////Демонстрирайте рефакториране на следния фрагмент от код, като зададате подходящо именуване и форматиране, ако и където това е необходимо:

////////////////////////////////////class tdi
////////////////////////////////////{ //class for todo items

////////////////////////////////////  public string _Name { get; set; }

////////////////////////////////////  public string description { get; set; }

////////////////////////////////////  public int ToDoListId { get; set; }

////////////////////////////////////}






////////////////////////////////////class TodoItem // Class for todo items

////////////////////////////////////{

////////////////////////////////////  public string Name { get; set; }



////////////////////////////////////  public string Description { get; set; }



////////////////////////////////////  public int TodoListId { get; set; }

////////////////////////////////////}



////////////////////////////////////Въпрос 6
////////////////////////////////////Отговорен
////////////////////////////////////От максимално 40,00
////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////Текст на въпроса
////////////////////////////////////Пример: По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

////////////////////////////////////Условие:

////////////////////////////////////Разполагате с код за калкулатор за действия +, -, *, /, ** (степенуване).

////////////////////////////////////Напишете компоненти тестове за него, които тестват подходящи специфични случаи при прилагането на операциите, например:

////////////////////////////////////*събиране на положително и отрицателно число

////////////////////////////////////* изваждане на число от себе си

////////////////////////////////////* деление на нула

////////////////////////////////////и др. За всяка операция предвидете поне по 3 теста.

////////////////////////////////////Program.cs:

////////////////////////////////////public class Program
////////////////////////////////////{
////////////////////////////////////  public static double Division(double a, double b)
////////////////////////////////////  {
////////////////////////////////////    if (b == 0)
////////////////////////////////////    {
////////////////////////////////////      throw new DivideByZeroException();
////////////////////////////////////    }
////////////////////////////////////    return a / b;
////////////////////////////////////  }
////////////////////////////////////  public static double Subtract(double a, double b)
////////////////////////////////////  {
////////////////////////////////////    return a - b;
////////////////////////////////////  }

////////////////////////////////////  public static double Multiply(double a, double b)
////////////////////////////////////  {
////////////////////////////////////    return a * b;
////////////////////////////////////  }

////////////////////////////////////  public static double Add(double a, double b)
////////////////////////////////////  {
////////////////////////////////////    return a + b;
////////////////////////////////////  }

////////////////////////////////////  static void Main(string[] args)
////////////////////////////////////  {
////////////////////////////////////    double a = double.Parse(Console.ReadLine());
////////////////////////////////////    double b = double.Parse(Console.ReadLine());
////////////////////////////////////    string operation = Console.ReadLine();

////////////////////////////////////    double result = 0;

////////////////////////////////////    if (operation == "+")
////////////////////////////////////    {
////////////////////////////////////      result = Add(a, b);
////////////////////////////////////    }
////////////////////////////////////    else if (operation == "*")
////////////////////////////////////    {
////////////////////////////////////      result = Multiply(a, b);
////////////////////////////////////    }
////////////////////////////////////    else if (operation == "-")
////////////////////////////////////    {
////////////////////////////////////      result = Subtract(a, b);
////////////////////////////////////    }
////////////////////////////////////    else if (operation == "/")
////////////////////////////////////    {
////////////////////////////////////      try
////////////////////////////////////      {
////////////////////////////////////        result = Division(a, b);
////////////////////////////////////      }
////////////////////////////////////      catch (DivideByZeroException)
////////////////////////////////////      {
////////////////////////////////////        Console.WriteLine("Invalid result caused by division by zero!");
////////////////////////////////////      }
////////////////////////////////////    }

////////////////////////////////////    Console.WriteLine(result);
////////////////////////////////////  }
////////////////////////////////////}

////////////////////////////////////CalculatorTests.cs:

////////////////////////////////////public class Tests
////////////////////////////////////{
////////////////////////////////////  [Test]
////////////////////////////////////  [Category("Addition")]
////////////////////////////////////  public void TestAddingTwoPositiveIntegerNumbers()
////////////////////////////////////  {
////////////////////////////////////    //Arrange
////////////////////////////////////    int a = 5;
////////////////////////////////////    int b = 9;

////////////////////////////////////    //Act
////////////////////////////////////    double result = Program.(a, b);

////////////////////////////////////    //Assert
////////////////////////////////////    Assert.AreEqual(result, 14);
////////////////////////////////////  }

////////////////////////////////////  [Test]
////////////////////////////////////  [Category("Addition")]
////////////////////////////////////  public void TestAddingTwoPositiveFloatingPointNumbers()
////////////////////////////////////  {
////////////////////////////////////    //Arrange
////////////////////////////////////    double a = 5.43;
////////////////////////////////////    double b = 0.33;

////////////////////////////////////    //Act
////////////////////////////////////    double result = Program.(a, b);

////////////////////////////////////    //Assert
////////////////////////////////////    Assert.(result, 5.76);
////////////////////////////////////  }

////////////////////////////////////  [Test]
////////////////////////////////////  [Category("Addition")]
////////////////////////////////////  public void TestAddingTwoNegativeNumbers()
////////////////////////////////////  {
////////////////////////////////////    //Arrange
////////////////////////////////////    double a = -3.431;
////////////////////////////////////    double b = -3.241;

////////////////////////////////////    //Act
////////////////////////////////////    double result = Program.Add(a, b);

////////////////////////////////////    //Assert
////////////////////////////////////    Assert.AreEqual(result, -6.672, 0.0001);
////////////////////////////////////  }

////////////////////////////////////  [Test]
////////////////////////////////////  [Category("Addition")]
////////////////////////////////////  public void TestAddingTwoZeroes()
////////////////////////////////////  {
////////////////////////////////////    double a = 0;
////////////////////////////////////    double b = 0;

////////////////////////////////////    double result = Program.Add(a, b);
////////////////////////////////////    Assert.AreEqual(result, 0);
////////////////////////////////////  }

////////////////////////////////////  [Test]
////////////////////////////////////  [Category("Addition")]
////////////////////////////////////  public void TestAddingZeroAndNumber()
////////////////////////////////////  {
////////////////////////////////////    double a = 1;
////////////////////////////////////    double b = 0;

////////////////////////////////////    double result = Program.(a, b);
////////////////////////////////////    Assert.AreEqual(result, 1);
////////////////////////////////////  }

////////////////////////////////////  [Test]
////////////////////////////////////  [Category("Addition")]
////////////////////////////////////  public void TestAddingOppositeNumbers()
////////////////////////////////////  {
////////////////////////////////////    double a = -5.34;
////////////////////////////////////    double b = 5.34;

////////////////////////////////////    double result = Program.Add(a, b);
////////////////////////////////////    Assert.AreEqual(result, 0);
////////////////////////////////////  }

////////////////////////////////////  [Test]
////////////////////////////////////  [Category("Subtraction")]
////////////////////////////////////  public void TestSubtractionFirstBigger()
////////////////////////////////////  {
////////////////////////////////////    double a = 5;
////////////////////////////////////    double b = 3;

////////////////////////////////////    double result = Program.Subtract(a, b);

////////////////////////////////////    Assert.AreEqual(result, 2);
////////////////////////////////////  }

////////////////////////////////////  [Test]
////////////////////////////////////  [Category("Subtraction")]
////////////////////////////////////  public void TestSubtractionSecondBigger()
////////////////////////////////////  {
////////////////////////////////////    double a = 3;
////////////////////////////////////    double b = 5;

////////////////////////////////////    double result = Program.Subtract(a, b);

////////////////////////////////////    Assert.AreEqual(result, -2);
////////////////////////////////////  }

////////////////////////////////////  [Test]
////////////////////////////////////  [Category("Subtraction")]
////////////////////////////////////  public void TestSubtractZero()
////////////////////////////////////  {
////////////////////////////////////    double a = 3;
////////////////////////////////////    double b = 0;

////////////////////////////////////    double result = Program.Subtract(a, b);

////////////////////////////////////    Assert.AreEqual(result, 3);
////////////////////////////////////  }

////////////////////////////////////  [Test]
////////////////////////////////////  [Category("Subtraction")]
////////////////////////////////////  public void TestSubtractNegativeNumbers()
////////////////////////////////////double a = -3;
////////////////////////////////////  double b = -5;

////////////////////////////////////  double result = Program.Subtract(a, b);
////////////////////////////////////  Assert.AreEqual(result, 2);
////////////////////////////////////}

////////////////////////////////////[Test]
////////////////////////////////////[Category("Multiplication")]
////////////////////////////////////public void TestMultiplicationTwoPositiveNumbers()
////////////////////////////////////{
////////////////////////////////////  double a = 3;
////////////////////////////////////  double b = 2.5;

////////////////////////////////////  double result = Program.Multiply(a, b);

////////////////////////////////////  Assert.AreEqual(result, 7.5);
////////////////////////////////////}

////////////////////////////////////[Test]
////////////////////////////////////[Category("Multiplication")]
////////////////////////////////////public void TestMultiplicationTwoNegativeNumbers()
////////////////////////////////////{
////////////////////////////////////  double a = -3;
////////////////////////////////////  double b = -2;
////////////////////////////////////  double result = Program.(a, b);
////////////////////////////////////  Assert.AreEqual(result, 6);
////////////////////////////////////}
////////////////////////////////////[Test]
////////////////////////////////////[Category("Multiplication")]
////////////////////////////////////public void TestMultiplicationTwoDifferentSignedNumbers()
////////////////////////////////////{
////////////////////////////////////  double a = -3;
////////////////////////////////////  double b = 2;
////////////////////////////////////  double result = Program.Multiply(a, b);
////////////////////////////////////  Assert.AreEqual(result, -6)
////////////////////////////////////}

////////////////////////////////////[Test]
////////////////////////////////////[Category("Multiplication")]
////////////////////////////////////public void TestMultiplicationWithZero()
////////////////////////////////////{
////////////////////////////////////  double a = 0;
////////////////////////////////////  double b = 3;

////////////////////////////////////  double result = Program.Multiply(a, b);

////////////////////////////////////  Assert.AreEqual(result, 0);
////////////////////////////////////}

////////////////////////////////////[Test]
////////////////////////////////////[Category("Division")]
////////////////////////////////////public void TestDivisionWithTwoNumbers()
////////////////////////////////////{
////////////////////////////////////  double a = 3;
////////////////////////////////////  double b = 2;

////////////////////////////////////  double result = Program.Division(a, b)

////////////////////////////////////Assert.AreEqual(result, 1.5);
////////////////////////////////////}

////////////////////////////////////[Test]
////////////////////////////////////[Category("Division")]
////////////////////////////////////public void TestDivisionWithBiggerNumber()
////////////////////////////////////{
////////////////////////////////////  double a = 3;
////////////////////////////////////  double b = 5;

////////////////////////////////////  double result = Program.Division(a, b);

////////////////////////////////////  Assert.AreEqual(result, 0.6);
////////////////////////////////////}

////////////////////////////////////[Test]
////////////////////////////////////[Category("Division")]
////////////////////////////////////public void TestDivisionZeroByNumber()
////////////////////////////////////{
////////////////////////////////////  double a = 0;
////////////////////////////////////  double b = 5;

////////////////////////////////////  double result = Program.Division(a, b);


////////////////////////////////////}

////////////////////////////////////[Test]
////////////////////////////////////[Category("Division")]
////////////////////////////////////public void TestDivisionByZero()
////////////////////////////////////double a = 5;
////////////////////////////////////double b = 0;

////////////////////////////////////Assert.Throws<DivideByZeroException>(() => Program.Division(a, b));
////////////////////////////////////}
////////////////////////////////////}

////////////////////////////////////using NUnit.Framework;

////////////////////////////////////using System;



////////////////////////////////////[TestFixture]

////////////////////////////////////public class CalculatorTests

////////////////////////////////////{

////////////////////////////////////  [Test]

////////////////////////////////////  [Category("Addition")]

////////////////////////////////////  public void TestAddingPositiveAndNegativeNumber()

////////////////////////////////////  {

////////////////////////////////////    // Arrange

////////////////////////////////////    double a = 5;

////////////////////////////////////    double b = -3;



////////////////////////////////////    // Act

////////////////////////////////////    double result = Program.Add(a, b);



////////////////////////////////////    // Assert

////////////////////////////////////    Assert.AreEqual(result, 2);

////////////////////////////////////  }



////////////////////////////////////  [Test]

////////////////////////////////////  [Category("Subtraction")]

////////////////////////////////////  public void TestSubtractNumberFromItself()

////////////////////////////////////  {

////////////////////////////////////    // Arrange

////////////////////////////////////    double a = 5;

////////////////////////////////////    double b = 5;



////////////////////////////////////    // Act

////////////////////////////////////    double result = Program.Subtract(a, b);



////////////////////////////////////    // Assert

////////////////////////////////////    Assert.AreEqual(result, 0);

////////////////////////////////////  }



////////////////////////////////////  [Test]

////////////////////////////////////  [Category("Division")]

////////////////////////////////////  public void TestDivisionByZero()

////////////////////////////////////  {

////////////////////////////////////    // Arrange

////////////////////////////////////    double a = 5;

////////////////////////////////////    double b = 0;



////////////////////////////////////    // Assert

////////////////////////////////////    Assert.Throws<DivideByZeroException>(() => Program.Division(a, b));

////////////////////////////////////  }





////////////////////////////////////}



////////////////////////////////////Въпрос 7
////////////////////////////////////Отговорен
////////////////////////////////////От максимално 6,00
////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////Текст на въпроса




////////////////////////////////////Фрагмент:

////////////////////////////////////using System;

////////////////////////////////////    public class Substring_broken
////////////////////////////////////{
////////////////////////////////////  public static void Main()
////////////////////////////////////  {
////////////////////////////////////    string text = Console.ReadLine();
////////////////////////////////////    int jump = int.Parse(Console.ReadLine());

////////////////////////////////////    const char Search = 'р';
////////////////////////////////////    bool hasMatch = false;

////////////////////////////////////    for (int i = 0; i < text.Length; i++)
////////////////////////////////////    {
////////////////////////////////////      if (text[i] == Search)
////////////////////////////////////      {
////////////////////////////////////        hasMatch = true;

////////////////////////////////////        int endIndex = jump;

////////////////////////////////////        if (endIndex > text.Length)
////////////////////////////////////        {
////////////////////////////////////          endIndex = text.Length;
////////////////////////////////////        }

////////////////////////////////////        string matchedString = text.Substring(i, endIndex);
////////////////////////////////////        Console.WriteLine(matchedString);
////////////////////////////////////        i += jump;
////////////////////////////////////      }
////////////////////////////////////    }

////////////////////////////////////    if (!hasMatch)
////////////////////////////////////    {
////////////////////////////////////      Console.WriteLine("no");
////////////////////////////////////    }
////////////////////////////////////  }
////////////////////////////////////}
////////////////////////////////////Забележка: Фрагментът съдържа логически грешки, които водят до неочаквано повдение на програмата. Открийте ги с помомощта на дебъгера и предоставете поправения код
////////////////////////////////////using System;



////////////////////////////////////public class Substring_fixed

////////////////////////////////////{

////////////////////////////////////  public static void Main()

////////////////////////////////////  {

////////////////////////////////////    string text = Console.ReadLine();

////////////////////////////////////    int jump = int.Parse(Console.ReadLine());



////////////////////////////////////    const char Search = 'р';

////////////////////////////////////    bool hasMatch = false;



////////////////////////////////////    for (int i = 0; i < text.Length; i++)

////////////////////////////////////    {

////////////////////////////////////      if (text[i] == Search)

////////////////////////////////////      {

////////////////////////////////////        hasMatch = true;



////////////////////////////////////        int endIndex = i + jump + 1; // коригирано: добавихме +1, за да включим и самия символ 'р'



////////////////////////////////////        if (endIndex > text.Length)

////////////////////////////////////        {

////////////////////////////////////          endIndex = text.Length;

////////////////////////////////////        }



////////////////////////////////////        string matchedString = text.Substring(i, endIndex - i); // коригирано: използваме endIndex - i вместо endIndex, за да вземем правилната дължина на низа

////////////////////////////////////        Console.WriteLine(matchedString);

////////////////////////////////////        i += jump;

////////////////////////////////////      }

////////////////////////////////////    }



////////////////////////////////////    if (!hasMatch)

////////////////////////////////////    {

////////////////////////////////////      Console.WriteLine("no");

////////////////////////////////////    }

////////////////////////////////////  }

////////////////////////////////////}



////////////////////////////////////Въпрос 8
////////////////////////////////////Правилно
////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////Текст на въпроса
////////////////////////////////////Посочете кой програмен фрагмент няма нарушения във форматирането си.

////////////////////////////////////Изберете едно
////////////////////////////////////a.
////////////////////////////////////public bool IsPositive(int value)
////////////////////////////////////{

////////////////////////////////////  if (value)
////////////////////////////////////  {
////////////////////////////////////    return true;
////////////////////////////////////  }
////////////////////////////////////  else
////////////////////////////////////  {
////////////////////////////////////    return false;
////////////////////////////////////  }
////////////////////////////////////}
////////////////////////////////////b.Всички примери имат нарушения в правилата за форматиране 
////////////////////////////////////c.
////////////////////////////////////if(a > 0) {
////////////////////////////////////  Console.WriteLine("positive");
////////////////////////////////////}else { Console.WriteLine("negative"); }
////////////////////////////////////d.
////////////////////////////////////public int Calculate(int a, int b) { return a + b; }
////////////////////////////////////Забележка
////////////////////////////////////Your answer is correct.
////////////////////////////////////Правилният отговор е: Всички примери имат нарушения в правилата за форматиране
////////////////////////////////////Въпрос 9
////////////////////////////////////Неправилно
////////////////////////////////////0,00 от максимално 2,00 точки
////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////Текст на въпроса
////////////////////////////////////Дефинирайте понятието Изглед (View) от MVC концепцията.
////////////////////////////////////Изберете едно
////////////////////////////////////a. Изгледът в MVC служи за управление на данни и бизнес-логика
////////////////////////////////////b. Изгледът в MVC служи за обработка на заявките на потребителя към приложението
////////////////////////////////////c. Изгледът в MVC служи за контрол на външен вид и взаимодействие с потребителя 
////////////////////////////////////d. Нито една от посочените дефиниции не е коректна.
////////////////////////////////////Забележка
////////////////////////////////////Your answer is incorrect.
////////////////////////////////////Правилният отговор е: Изгледът в MVC служи за обработка на заявките на потребителя към приложението
////////////////////////////////////Въпрос 10
////////////////////////////////////Правилно
////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////Текст на въпроса
////////////////////////////////////Кой от следните бутони стартира програмата в Debug режим във Visual Studio?

////////////////////////////////////Изберете едно
////////////////////////////////////a. F5 
////////////////////////////////////b. F12
////////////////////////////////////c. F1
////////////////////////////////////d. Ctrl + F5
////////////////////////////////////Забележка
////////////////////////////////////Your answer is correct.
////////////////////////////////////Правилният отговор е: F5
////////////////////////////////////Въпрос 11
////////////////////////////////////Правилно
////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////Текст на въпроса
////////////////////////////////////Посочете кое от следните действия НЕ е възможно с помощта на дебъгер?

////////////////////////////////////Изберете едно
////////////////////////////////////a. Подчертаване на логически грешки в програма 
////////////////////////////////////b. Изпълнение на програмата постъпково
////////////////////////////////////c. Преглед на съдържанието на променливи
////////////////////////////////////d. Прекъсване на изпълнението на програмата в определена точка и преглед на стойностите на променливите
////////////////////////////////////Забележка
////////////////////////////////////Your answer is correct.
////////////////////////////////////Правилният отговор е: Подчертаване на логически грешки в програма
////////////////////////////////////Въпрос 12
////////////////////////////////////Правилно
////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////Текст на въпроса
////////////////////////////////////Изберете вярното твърдение.

////////////////////////////////////Изберете едно
////////////////////////////////////a. Имената на свойства трябва да започват с малка буква.
////////////////////////////////////b. Имената на променливи трябва да започват с главна буква.
////////////////////////////////////c. Имената на класове трябва да започват с главна буква. 
////////////////////////////////////d. Имената на локалните променливи трябва да започват с долна черта.
////////////////////////////////////Забележка
////////////////////////////////////Your answer is correct.
////////////////////////////////////Правилният отговор е: Имената на класове трябва да започват с главна буква.
////////////////////////////////////Въпрос 13
////////////////////////////////////Правилно
////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////Текст на въпроса
////////////////////////////////////Дефинирайте значението на абревиатурата ААА в контекста на компоненто тестване.

////////////////////////////////////Изберете едно
////////////////////////////////////a. Arrange-Assert-Act
////////////////////////////////////b. Abstract-Act-Assert
////////////////////////////////////c. Arrange-Act-Assert 
////////////////////////////////////d. Act-Assert-Arrange
////////////////////////////////////Забележка
////////////////////////////////////Your answer is correct.
////////////////////////////////////Правилният отговор е: Arrange - Act - Assert
////////////////////////////////////Въпрос 14
////////////////////////////////////Отговорен
////////////////////////////////////От максимално 6,00
////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////Текст на въпроса
////////////////////////////////////Демонстрирайте рефакториране на следния фрагмент от код, като зададате подходящо именуване и форматиране, ако и където това е необходимо:

////////////////////////////////////class playlist
////////////////////////////////////{ //class for todo list

////////////////////////////////////  public string _Name { get; set; }

////////////////////////////////////  public string description { get; set; }

////////////////////////////////////  public virtual List<Song> Songs { get; set; }

////////////////////////////////////}

////////////////////////////////////class Playlist

////////////////////////////////////{

////////////////////////////////////  public string Name { get; set; }

////////////////////////////////////  public string Description { get; set; }

////////////////////////////////////  public virtual List<Song> Songs { get; set; }

////////////////////////////////////}


////////////////////////////////////Въпрос 15
////////////////////////////////////Правилно
////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////Текст на въпроса
////////////////////////////////////Посочете коя е анотацията, която се използва за отбелязване на отделни компонентни тестове в NUnit.

////////////////////////////////////Изберете едно
////////////////////////////////////a. [SetUp]
////////////////////////////////////b. [Test]
////////////////////////////////////c. [Run]
////////////////////////////////////d. [TestFixture]
////////////////////////////////////Забележка
////////////////////////////////////Your answer is correct.
////////////////////////////////////Правилният отговор е: [Test]
////////////////////////////////////Въпрос 16
////////////////////////////////////Правилно
////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////Текст на въпроса
////////////////////////////////////Дефинирайте понятието Model от MVC концепцията.
////////////////////////////////////Изберете едно
////////////////////////////////////a. Нито една от посочените дефиниции не е коректна.
////////////////////////////////////b. Моделът в MVC служи за обработка на заявките на потребителя към приложението
////////////////////////////////////c. Моделът в MVC служи за управление на данни и бизнес-логика 
////////////////////////////////////d. Моделът в MVC служи за контрол на външен вид и взаимодействие с потребителя
////////////////////////////////////Забележка
////////////////////////////////////Your answer is correct.
////////////////////////////////////Правилният отговор е: Моделът в MVC служи за управление на данни и бизнес-логика
////////////////////////////////////Въпрос 17
////////////////////////////////////Отговорен
////////////////////////////////////От максимално 6,00
////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////Текст на въпроса




////////////////////////////////////Фрагмент:

////////////////////////////////////using System;

////////////////////////////////////class InstructionSet_broken
////////////////////////////////////{
////////////////////////////////////  static void Main()
////////////////////////////////////  {

////////////////////////////////////    string opCode = Console.ReadLine();

////////////////////////////////////    while (opCode != "end")
////////////////////////////////////    {
////////////////////////////////////      string[] codeArgs = opCode.Split(' ');

////////////////////////////////////      long result = 0;
////////////////////////////////////      switch (codeArgs[0])
////////////////////////////////////      {
////////////////////////////////////        case "INC":
////////////////////////////////////          {
////////////////////////////////////            int operandOne = int.Parse(codeArgs[1]);
////////////////////////////////////            result = operandOne++;
////////////////////////////////////            break;
////////////////////////////////////          }
////////////////////////////////////        case "DEC":
////////////////////////////////////          {
////////////////////////////////////            int operandOne = int.Parse(codeArgs[1]);
////////////////////////////////////            result = operandOne--;
////////////////////////////////////            break;
////////////////////////////////////          }
////////////////////////////////////        case "ADD":
////////////////////////////////////          {
////////////////////////////////////            int operandOne = int.Parse(codeArgs[1]);
////////////////////////////////////            int operandTwo = int.Parse(codeArgs[2]);
////////////////////////////////////            result = operandOne + operandTwo;
////////////////////////////////////            break;
////////////////////////////////////          }
////////////////////////////////////        case "MLA":
////////////////////////////////////          {
////////////////////////////////////            int operandOne = int.Parse(codeArgs[1]);
////////////////////////////////////            int operandTwo = int.Parse(codeArgs[2]);
////////////////////////////////////            result = (long)(operandOne * operandTwo);
////////////////////////////////////            break;
////////////////////////////////////          }
////////////////////////////////////      }

////////////////////////////////////      Console.WriteLine(result);
////////////////////////////////////    }
////////////////////////////////////  }
////////////////////////////////////}
////////////////////////////////////Забележка: Фрагментът съдържа логически грешки, които водят до неочаквано повдение на програмата. Открийте ги с помомощта на дебъгера и предоставете поправения код
////////////////////////////////////using System;



////////////////////////////////////class InstructionSet

////////////////////////////////////{

////////////////////////////////////  static void Main()

////////////////////////////////////  {



////////////////////////////////////    string opCode = Console.ReadLine();



////////////////////////////////////    while (opCode != "end")

////////////////////////////////////    {

////////////////////////////////////      string[] codeArgs = opCode.Split(' ');



////////////////////////////////////      long result = 0;

////////////////////////////////////      switch (codeArgs[0])

////////////////////////////////////      {

////////////////////////////////////        case "INC":

////////////////////////////////////          int operandOne = int.Parse(codeArgs[1]);

////////////////////////////////////          result = ++operandOne;

////////////////////////////////////          break;

////////////////////////////////////        case "DEC":

////////////////////////////////////          operandOne = int.Parse(codeArgs[1]);

////////////////////////////////////          result = --operandOne;

////////////////////////////////////          break;

////////////////////////////////////        case "ADD":

////////////////////////////////////          int operand1 = int.Parse(codeArgs[1]);

////////////////////////////////////          int operand2 = int.Parse(codeArgs[2]);

////////////////////////////////////          result = (long)operand1 + operand2;

////////////////////////////////////          break;

////////////////////////////////////        case "MLA":

////////////////////////////////////          operand1 = int.Parse(codeArgs[1]);

////////////////////////////////////          operand2 = int.Parse(codeArgs[2]);

////////////////////////////////////          result = (long)operand1 * operand2;

////////////////////////////////////          break;

////////////////////////////////////      }



////////////////////////////////////      Console.WriteLine(result);

////////////////////////////////////      opCode = Console.ReadLine();

////////////////////////////////////    }

////////////////////////////////////  }

////////////////////////////////////}



////////////////////////////////////Въпрос 18
////////////////////////////////////Правилно
////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////Текст на въпроса
////////////////////////////////////Какво действие активира клавиша F11 във Visual Studio?

////////////////////////////////////Изберете едно
////////////////////////////////////a. Step Into
////////////////////////////////////b. Step over 
////////////////////////////////////c. Run
////////////////////////////////////d. Build
////////////////////////////////////Забележка
////////////////////////////////////Your answer is correct.
////////////////////////////////////Правилният отговор е: Step over
////////////////////////////////////Въпрос 19
////////////////////////////////////Отговорен
////////////////////////////////////От максимално 4,00
////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////Текст на въпроса
////////////////////////////////////Дайте пример за коректно именуване на компонентен тест, който проверява дали потребител влиза успешно с валидно потребителско име и парола.

////////////////////////////////////[Test]

////////////////////////////////////public void LoginWithValidCredentials_Succeeds()

////////////////////////////////////{

////////////////////////////////////  // Arrange

////////////////////////////////////  var userService = new UserService();

////////////////////////////////////  var validUsername = "john.doe";

////////////////////////////////////  var validPassword = "password123";



////////////////////////////////////  // Act

////////////////////////////////////  var result = userService.Login(validUsername, validPassword);



////////////////////////////////////  // Assert

////////////////////////////////////  Assert.IsTrue(result.Successful);

////////////////////////////////////}



////////////////////////////////////Въпрос 20
////////////////////////////////////Правилно
////////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////////Текст на въпроса
////////////////////////////////////Какво стои зад буквата C в абревиатурата на архитектурния шаблон MVC?

////////////////////////////////////Изберете едно
////////////////////////////////////a. Create
////////////////////////////////////b. Cost
////////////////////////////////////c. Class
////////////////////////////////////d. Controller 
////////////////////////////////////Забележка
////////////////////////////////////Your answer is correct.
////////////////////////////////////Правилният отговор е: Controller
////////////////////////////////////Край на прегледа
////////////////////////////////////Отиди на ...
////////////////////////////////////Отиди на ...
////////////////////////////////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
////////////////////////////////////Навигация в теста
////////////////////////////////////Край на прегледа
////////////////////////////////////Вие сте влезли в системата като Добри Илев (Изход)
////////////////////////////////////тренировъчен - курс - по
////////////////////////////////////Data retention summary


//////////////////////////////////Прескочи на основното съдържание
//////////////////////////////////ПГЕЕ
//////////////////////////////////Български ‎(bg)‎ 
//////////////////////////////////Добри Илев 
//////////////////////////////////Тренировъчен курс - Програмно осигуряване
//////////////////////////////////Начална страница
//////////////////////////////////Моите курсове
////////////////////////////////// тренировъчен-курс-по
////////////////////////////////// Изпитна тема 11
////////////////////////////////// Изпитна тема №11
//////////////////////////////////Започнат на	вторник, 25 април 2023, 13:41
//////////////////////////////////Състояние Завършен
//////////////////////////////////Приключен на	вторник, 25 април 2023, 15:13
//////////////////////////////////Изминало време	1 час 32 мин.
//////////////////////////////////Оценка	Още не е оценен
//////////////////////////////////Въпрос 1
//////////////////////////////////Правилно
//////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////Текст на въпроса
//////////////////////////////////Посочете кое действие от компонентния тест се случва в Assert фазата.

//////////////////////////////////Изберете едно
//////////////////////////////////a. подготвяне на обекта за тестване
//////////////////////////////////b. проверка на резултата от тестването 
//////////////////////////////////c. нито едно от изброените
//////////////////////////////////d. извървшане на действието за тестване
//////////////////////////////////Забележка
//////////////////////////////////Your answer is correct.
//////////////////////////////////Правилният отговор е: проверка на резултата от тестването
//////////////////////////////////Въпрос 2
//////////////////////////////////Неправилно
//////////////////////////////////0,00 от максимално 2,00 точки
//////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////Текст на въпроса
//////////////////////////////////Какво действие активира клавиша F11 във Visual Studio?

//////////////////////////////////Изберете едно
//////////////////////////////////a. Build
//////////////////////////////////b. Run
//////////////////////////////////c. Step Into 
//////////////////////////////////d. Step over
//////////////////////////////////Забележка
//////////////////////////////////Your answer is incorrect.
//////////////////////////////////Правилният отговор е: Step over
//////////////////////////////////Въпрос 3
//////////////////////////////////Правилно
//////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////Текст на въпроса
//////////////////////////////////Посочете значението на абревиатурата MVC.

//////////////////////////////////Изберете едно
//////////////////////////////////a. Model View Controller 
//////////////////////////////////b. Money Value Cost
//////////////////////////////////c. Model Value Class
//////////////////////////////////d. Model View Class
//////////////////////////////////Забележка
//////////////////////////////////Your answer is correct.
//////////////////////////////////Правилният отговор е: Model View Controller
//////////////////////////////////Въпрос 4
//////////////////////////////////Правилно
//////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////Текст на въпроса
//////////////////////////////////Посочете кой от следните идентификатори има нужда от рефакториране.

//////////////////////////////////Изберете едно
//////////////////////////////////a. class Game
//////////////////////////////////b. int numberofpeople;
//////////////////////////////////c. public string Name { get; set; }
//////////////////////////////////d. public interface IList
//////////////////////////////////Забележка
//////////////////////////////////Your answer is correct.
//////////////////////////////////Правилният отговор е: int numberofpeople;
//////////////////////////////////Въпрос 5
//////////////////////////////////Правилно
//////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////Текст на въпроса
//////////////////////////////////Какво стои зад буквата V в абревиатурата на архитектурния шаблон MVC?

//////////////////////////////////Изберете едно
//////////////////////////////////a. View 
//////////////////////////////////b. Visibility
//////////////////////////////////c. ViewModel
//////////////////////////////////d. Value
//////////////////////////////////Забележка
//////////////////////////////////Your answer is correct.
//////////////////////////////////Правилният отговор е: View
//////////////////////////////////Въпрос 6
//////////////////////////////////Отговорен
//////////////////////////////////От максимално 6,00
//////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////Текст на въпроса
//////////////////////////////////Демонстрирайте рефакториране на следния фрагмент от код, като зададате подходящо именуване и форматиране, ако и където това е необходимо:

//////////////////////////////////class tdi
//////////////////////////////////{ //class for todo items

//////////////////////////////////  public string _Name { get; set; }

//////////////////////////////////  public string description { get; set; }

//////////////////////////////////  public int ToDoListId { get; set; }

//////////////////////////////////}






//////////////////////////////////class ToDoItem
//////////////////////////////////{ //class for todo items

//////////////////////////////////  public string Name { get; set; }

//////////////////////////////////  public string Description { get; set; }

//////////////////////////////////  public int ToDoListId { get; set; }

//////////////////////////////////}


//////////////////////////////////Въпрос 7
//////////////////////////////////Правилно
//////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////Текст на въпроса
//////////////////////////////////Изберете вярното твърдение.

//////////////////////////////////Изберете едно
//////////////////////////////////a. Имената на променливи трябва да започват с главна буква.
//////////////////////////////////b. Имената на класове трябва да започват с главна буква. 
//////////////////////////////////c. Имената на свойства трябва да започват с малка буква.
//////////////////////////////////d. Имената на локалните променливи трябва да започват с долна черта.
//////////////////////////////////Забележка
//////////////////////////////////Your answer is correct.
//////////////////////////////////Правилният отговор е: Имената на класове трябва да започват с главна буква.
//////////////////////////////////Въпрос 8
//////////////////////////////////Отговорен
//////////////////////////////////От максимално 4,00
//////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////Текст на въпроса
//////////////////////////////////Обяснете как си взаимодействат трите слоя на трислойната архитектура.

//////////////////////////////////Слойевете се взаймодействат по следния начин:

//////////////////////////////////-Потребителя взаймодейства с презентационния слой, който изпраща заявките към слоя за бизнес логика.

//////////////////////////////////-Бизнес логиката обработва заявките, прилага бизнес логиката, след което комуникира със слоя за достъп до данни за промени или извличане на данни.

//////////////////////////////////-Слойът за достъп изпълнява заявките за извличане или запис от базата данни и връща резултата.

//////////////////////////////////-Бизнес логиката обработва получените данни и връща резултатите

//////////////////////////////////-Презентационня слой показва резултатите или предоставя обратна връзка.

//////////////////////////////////Въпрос 9
//////////////////////////////////Отговорен
//////////////////////////////////От максимално 6,00
//////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////Текст на въпроса




//////////////////////////////////Фрагмент:

//////////////////////////////////using System;

//////////////////////////////////class InstructionSet_broken
//////////////////////////////////{
//////////////////////////////////  static void Main()
//////////////////////////////////  {

//////////////////////////////////    string opCode = Console.ReadLine();

//////////////////////////////////    while (opCode != "end")
//////////////////////////////////    {
//////////////////////////////////      string[] codeArgs = opCode.Split(' ');

//////////////////////////////////      long result = 0;
//////////////////////////////////      switch (codeArgs[0])
//////////////////////////////////      {
//////////////////////////////////        case "INC":
//////////////////////////////////          {
//////////////////////////////////            int operandOne = int.Parse(codeArgs[1]);
//////////////////////////////////            result = operandOne++;
//////////////////////////////////            break;
//////////////////////////////////          }
//////////////////////////////////        case "DEC":
//////////////////////////////////          {
//////////////////////////////////            int operandOne = int.Parse(codeArgs[1]);
//////////////////////////////////            result = operandOne--;
//////////////////////////////////            break;
//////////////////////////////////          }
//////////////////////////////////        case "ADD":
//////////////////////////////////          {
//////////////////////////////////            int operandOne = int.Parse(codeArgs[1]);
//////////////////////////////////            int operandTwo = int.Parse(codeArgs[2]);
//////////////////////////////////            result = operandOne + operandTwo;
//////////////////////////////////            break;
//////////////////////////////////          }
//////////////////////////////////        case "MLA":
//////////////////////////////////          {
//////////////////////////////////            int operandOne = int.Parse(codeArgs[1]);
//////////////////////////////////            int operandTwo = int.Parse(codeArgs[2]);
//////////////////////////////////            result = (long)(operandOne * operandTwo);
//////////////////////////////////            break;
//////////////////////////////////          }
//////////////////////////////////      }

//////////////////////////////////      Console.WriteLine(result);
//////////////////////////////////    }
//////////////////////////////////  }
//////////////////////////////////}
//////////////////////////////////Забележка: Фрагментът съдържа логически грешки, които водят до неочаквано повдение на програмата. Открийте ги с помомощта на дебъгера и предоставете поправения код
//////////////////////////////////using Microsoft.Win32;

//////////////////////////////////using System;

//////////////////////////////////using System.Collections.Generic;

//////////////////////////////////using System.ComponentModel;

//////////////////////////////////using System.Linq;

//////////////////////////////////using System.Runtime.CompilerServices;

//////////////////////////////////using System.Security.Cryptography.X509Certificates;

//////////////////////////////////using System.Text;

//////////////////////////////////using System.Threading.Tasks;



//////////////////////////////////namespace Test2

//////////////////////////////////{

//////////////////////////////////  public class Program

//////////////////////////////////  {

//////////////////////////////////    static void Main(string[] args)

//////////////////////////////////    {

//////////////////////////////////      string opCode = Console.ReadLine();



//////////////////////////////////      while (opCode != "END")

//////////////////////////////////      {

//////////////////////////////////        string[] codeArgs = opCode.Split(' ');



//////////////////////////////////        long result = 0;

//////////////////////////////////        switch (codeArgs[0])

//////////////////////////////////        {

//////////////////////////////////          case "INC":

//////////////////////////////////            {

//////////////////////////////////              int operandOne = int.Parse(codeArgs[1]);

//////////////////////////////////              result = ++operandOne;

//////////////////////////////////              break;

//////////////////////////////////            }

//////////////////////////////////          case "DEC":

//////////////////////////////////            {

//////////////////////////////////              int operandOne = int.Parse(codeArgs[1]);

//////////////////////////////////              result = --operandOne;

//////////////////////////////////              break;

//////////////////////////////////            }

//////////////////////////////////          case "ADD":

//////////////////////////////////            {

//////////////////////////////////              int operandOne = int.Parse(codeArgs[1]);

//////////////////////////////////              int operandTwo = int.Parse(codeArgs[2]);

//////////////////////////////////              result = operandOne + operandTwo;

//////////////////////////////////              break;

//////////////////////////////////            }

//////////////////////////////////          case "MLA":

//////////////////////////////////            {

//////////////////////////////////              long operandOne = long.Parse(codeArgs[1]);

//////////////////////////////////              long operandTwo = long.Parse(codeArgs[2]);

//////////////////////////////////              result = (long)(operandOne * operandTwo);

//////////////////////////////////              break;

//////////////////////////////////            }

//////////////////////////////////        }



//////////////////////////////////        Console.WriteLine(result);

//////////////////////////////////        opCode = Console.ReadLine();



//////////////////////////////////      }

//////////////////////////////////    }

//////////////////////////////////  }

//////////////////////////////////}



//////////////////////////////////Въпрос 10
//////////////////////////////////Отговорен
//////////////////////////////////От максимално 40,00
//////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////Текст на въпроса
//////////////////////////////////Пример: По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен

//////////////////////////////////фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

//////////////////////////////////Условие:

//////////////////////////////////Разполагате с класове Dummy и Axe. Напишете компонентни тестове, които да проверят

//////////////////////////////////работата на класовете и да помогнат в откриването и отстраняването на евентуални проблеми.

//////////////////////////////////За класът Axe създайте следните тестове:

//////////////////////////////////● Тествайте дали оръжието губи здравина след всяка атака

//////////////////////////////////● Тествайте атака със счупено оръжие

//////////////////////////////////За класът Dummy създайте следните тестове:

//////////////////////////////////● Чучелото губи здраве, ако е атакувано

//////////////////////////////////● Мъртво чучело хвърля изключение, ако е атакувано

//////////////////////////////////● Мъртвото чучело може да даде XP

//////////////////////////////////● Живото чучело не може да даде XP

//////////////////////////////////Фрагмент:

//////////////////////////////////Axe.cs

//////////////////////////////////public class Axe

//////////////////////////////////{

//////////////////////////////////  private int attackPoints;

//////////////////////////////////  private int durabilityPoints;

//////////////////////////////////  public Axe(int attack, int durability)

//////////////////////////////////  {

//////////////////////////////////    this.attackPoints = attack;

//////////////////////////////////    this.durabilityPoints = durability;

//////////////////////////////////  }

//////////////////////////////////  public int AttackPoints

//////////////////////////////////  {

//////////////////////////////////    get { return this.attackPoints; }

//////////////////////////////////  }

//////////////////////////////////  public int DurabilityPoints

//////////////////////////////////  {

//////////////////////////////////    get { return this.durabilityPoints; }

//////////////////////////////////  }

//////////////////////////////////  public void Attack(Dummy target)

//////////////////////////////////  {

//////////////////////////////////    if (this.durabilityPoints <= 0)

//////////////////////////////////    {

//////////////////////////////////      throw new InvalidOperationException("Axe is broken.");

//////////////////////////////////    }

//////////////////////////////////    target.TakeAttack(this.attackPoints);

//////////////////////////////////    this.durabilityPoints -= 1;

//////////////////////////////////  }

//////////////////////////////////}

//////////////////////////////////Dummy.cs

//////////////////////////////////public class Dummy

//////////////////////////////////{

//////////////////////////////////  private int health;

//////////////////////////////////  private int experience;

//////////////////////////////////  public Dummy(int health, int experience)

//////////////////////////////////  {

//////////////////////////////////    this.health = health;

//////////////////////////////////    this.experience = experience;

//////////////////////////////////  }

//////////////////////////////////  public int Health

//////////////////////////////////  {

//////////////////////////////////    get { return this.health; }

//////////////////////////////////  }

//////////////////////////////////  public void TakeAttack(int attackPoints)

//////////////////////////////////  {

//////////////////////////////////    if (this.IsDead())

//////////////////////////////////    {

//////////////////////////////////      throw new InvalidOperationException("Dummy is dead.");

//////////////////////////////////    }

//////////////////////////////////    this.health -= attackPoints;

//////////////////////////////////  }

//////////////////////////////////  public int GiveExperience()

//////////////////////////////////  {

//////////////////////////////////    if (!this.IsDead())

//////////////////////////////////    {

//////////////////////////////////      throw new InvalidOperationException("Target is not dead.");

//////////////////////////////////    }

//////////////////////////////////    return this.experience;

//////////////////////////////////  }

//////////////////////////////////  public bool IsDead()

//////////////////////////////////  {

//////////////////////////////////    return this.health <= 0;

//////////////////////////////////  }

//////////////////////////////////}

//////////////////////////////////AxeTest.cs

//////////////////////////////////  publc class AxeTest

//////////////////////////////////{

//////////////////////////////////  [Test]

//////////////////////////////////  public void AxeLosesDurabilityAfterAttack()



//////////////////////////////////            // Arrange

//////////////////////////////////            Axe axe = new Axe(10, 10);

//////////////////////////////////  Dummy dummy = new Dummy(10, 10);



//////////////////////////////////  // Act 

//////////////////////////////////  axe.....(dummy);



//////////////////////////////////            // Assert

//////////////////////////////////            Assert.AreEqual(9, axe.DurabilityPoints, "Axe Duraility does not change after attack.");





//////////////////////////////////        [Test]

//////////////////////////////////  public void BrokenAxeCantAttack()

//////////////////////////////////  {

//////////////////////////////////    // Arrange

//////////////////////////////////    Axe axe = new Axe(2, 2);

//////////////////////////////////    Dummy dummy = new Dummy(10, 10);



//////////////////////////////////    // Act 





//////////////////////////////////    // Assert

//////////////////////////////////    var ex = Assert.Throws<InvalidOperationException>(() => axe.Attack(dummy));

//////////////////////////////////    Assert.(ex.Message, "Axe is broken.");

//////////////////////////////////  }

//////////////////////////////////}

//////////////////////////////////DummyTest.cs

//////////////////////////////////class DummyTest

//////////////////////////////////{

//////////////////////////////////  [Test]

//////////////////////////////////  public void DummyAxeLosesHealthAfterAttack()

//////////////////////////////////                    // Arrange

//////////////////////////////////            Axe axe = new Axe(10, 10);

//////////////////////////////////  Dummy  = new Dummy(10, 10);



//////////////////////////////////  // Act

//////////////////////////////////  axe.Attack(dummy);



//////////////////////////////////            // Assert

//////////////////////////////////            Assert.0, dummy.Health, "Dummy Health Does Not Change After Attack.");

//////////////////////////////////        }



//////////////////////////////////[Test]

//////////////////////////////////public void DeadDummyThrowsExeption()

//////////////////////////////////{

//////////////////////////////////  // Arrange

//////////////////////////////////  Axe axe = new Axe(10, 10);

//////////////////////////////////  Dummy dummy = new Dummy(1, 1);



//////////////////////////////////  // Act

//////////////////////////////////  axe.Attack(dummy);



//////////////////////////////////  // Assert

//////////////////////////////////  var ex = Assert.Throws<InvalidOperationException>(() => axe.Attack(dummy));

//////////////////////////////////  Assert.AreEqual(ex.Message, "Dummy is dead.");

//////////////////////////////////}



//////////////////////////////////[Test]

//////////////////////////////////public void DeadDummyGivesExperience()

//////////////////////////////////{

//////////////////////////////////  // Arrange

//////////////////////////////////  Axe axe = new Axe(10, 10);

//////////////////////////////////  Dummy dummy = new Dummy(1, 50);



//////////////////////////////////  // Act



//////////////////////////////////  // Assert

//////////////////////////////////  var ex = Assert.Throws<InvalidOperationException>(() => axe.Attack(dummy));

//////////////////////////////////  Assert.AreEqual(50, dummy.GiveExperience(), "Dead Dummy Does Not Gives Experiense.");

//////////////////////////////////}



//////////////////////////////////[Test]

//////////////////////////////////public void LiveDummyDoesNotGivesExperiense()

//////////////////////////////////{

//////////////////////////////////  // Arrange

//////////////////////////////////  Axe axe = new Axe(1, 100);

//////////////////////////////////  Dummy dummy = new Dummy(10, 50);



//////////////////////////////////  // Act

//////////////////////////////////  axe.Attack(dummy);



//////////////////////////////////  // Assert

//////////////////////////////////  var ex = Assert.Throws<InvalidOperationException>(() => dummy.GiveExperience());

//////////////////////////////////  Assert.AreEqual(ex.Message, "Target is not dead.");

//////////////////////////////////}





//////////////////////////////////Фрагментите под формата на общ проект, който трябва да бъде поправен във Visual Studio:
//////////////////////////////////https://pgeeburgas.org/pluginfile.php/17535/question/questiontext/53034/20/19309/AttackSimulator.zip


///////////////////////////////////////AxeTest.cs

//////////////////////////////////using NUnit.Framework;

//////////////////////////////////using System;



//////////////////////////////////namespace AttackSimulator.Test

//////////////////////////////////{

//////////////////////////////////  public class AxeTest

//////////////////////////////////  {

//////////////////////////////////    [Test]

//////////////////////////////////    public void AxeLosesDurabilityAfterAttack()

//////////////////////////////////    {



//////////////////////////////////      // Arrange

//////////////////////////////////      Axe axe = new Axe(10, 10);

//////////////////////////////////      Dummy dummy = new Dummy(10, 10);



//////////////////////////////////      // Act 

//////////////////////////////////      axe.Attack(dummy);



//////////////////////////////////      // Assert

//////////////////////////////////      Assert.AreEqual(9, axe.DurabilityPoints, "Axe Duraility does not change after attack.");



//////////////////////////////////    }

//////////////////////////////////    [Test]

//////////////////////////////////    public void BrokenAxeCantAttack()

//////////////////////////////////    {

//////////////////////////////////      // Arrange

//////////////////////////////////      Axe axe = new Axe(2, 0);

//////////////////////////////////      Dummy dummy = new Dummy(10, 10);



//////////////////////////////////      // Act 

//////////////////////////////////      axe.Attack(dummy);



//////////////////////////////////      // Assert

//////////////////////////////////      var ex = Assert.Throws<InvalidOperationException>(() => axe.Attack(dummy));

//////////////////////////////////      Assert.AreEqual(ex.Message, "Axe is broken.");

//////////////////////////////////    }

//////////////////////////////////  }

//////////////////////////////////}

//////////////////////////////////////DummyTest.cs

//////////////////////////////////using NUnit.Framework;

//////////////////////////////////using System;

//////////////////////////////////using System.Collections.Generic;

//////////////////////////////////using System.Linq;

//////////////////////////////////using System.Text;

//////////////////////////////////using System.Threading.Tasks;



//////////////////////////////////namespace AttackSimulator.Test

//////////////////////////////////{

//////////////////////////////////  class DummyTest

//////////////////////////////////  {

//////////////////////////////////    [Test]

//////////////////////////////////    public void DummyAxeLosesHealthAfterAttack()

//////////////////////////////////    {

//////////////////////////////////      // Arrange

//////////////////////////////////      Axe axe = new Axe(10, 10);

//////////////////////////////////      Dummy dummy = new Dummy(10, 10);



//////////////////////////////////      // Act

//////////////////////////////////      axe.Attack(dummy);



//////////////////////////////////      // Assert

//////////////////////////////////      Assert.AreEqual(0, dummy.Health, "Dummy Health Does Not Change After Attack.");

//////////////////////////////////    }



//////////////////////////////////    [Test]

//////////////////////////////////    public void DeadDummyThrowsExeption()

//////////////////////////////////    {

//////////////////////////////////      // Arrange

//////////////////////////////////      Axe axe = new Axe(10, 10);

//////////////////////////////////      Dummy dummy = new Dummy(1, 1);



//////////////////////////////////      // Act

//////////////////////////////////      axe.Attack(dummy);



//////////////////////////////////      // Assert

//////////////////////////////////      var ex = Assert.Throws<InvalidOperationException>(() => axe.Attack(dummy));

//////////////////////////////////      Assert.AreEqual(ex.Message, "Dummy is dead.");

//////////////////////////////////    }



//////////////////////////////////    [Test]

//////////////////////////////////    public void DeadDummyGivesExperience()

//////////////////////////////////    {

//////////////////////////////////      // Arrange

//////////////////////////////////      Axe axe = new Axe(10, 10);

//////////////////////////////////      Dummy dummy = new Dummy(1, 50);



//////////////////////////////////      // Act

//////////////////////////////////      axe.Attack(dummy);

//////////////////////////////////      // Assert

//////////////////////////////////      var ex = Assert.Throws<InvalidOperationException>(() => axe.Attack(dummy));

//////////////////////////////////      Assert.AreEqual(50, dummy.GiveExperience(), "Dead Dummy Does Not Gives Experiense.");

//////////////////////////////////    }



//////////////////////////////////    [Test]

//////////////////////////////////    public void LiveDummyDoesNotGivesExperiense()

//////////////////////////////////    {

//////////////////////////////////      // Arrange

//////////////////////////////////      Axe axe = new Axe(1, 100);

//////////////////////////////////      Dummy dummy = new Dummy(10, 50);



//////////////////////////////////      // Act

//////////////////////////////////      axe.Attack(dummy);



//////////////////////////////////      // Assert

//////////////////////////////////      var ex = Assert.Throws<InvalidOperationException>(() => dummy.GiveExperience());

//////////////////////////////////      Assert.AreEqual(ex.Message, "Target is not dead.");

//////////////////////////////////    }

//////////////////////////////////  }





//////////////////////////////////}





//////////////////////////////////Въпрос 11
//////////////////////////////////Правилно
//////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////Текст на въпроса
//////////////////////////////////Посочете кое от следните действия НЕ е възможно с помощта на дебъгер?

//////////////////////////////////Изберете едно
//////////////////////////////////a. Подчертаване на логически грешки в програма 
//////////////////////////////////b. Преглед на съдържанието на променливи
//////////////////////////////////c. Изпълнение на програмата постъпково
//////////////////////////////////d. Прекъсване на изпълнението на програмата в определена точка и преглед на стойностите на променливите
//////////////////////////////////Забележка
//////////////////////////////////Your answer is correct.
//////////////////////////////////Правилният отговор е: Подчертаване на логически грешки в програма
//////////////////////////////////Въпрос 12
//////////////////////////////////Отговорен
//////////////////////////////////От максимално 4,00
//////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////Текст на въпроса
//////////////////////////////////Дайте пример за коректно именуване на компонентен тест, който проверява дали потребител получава грешка при опит за влизане с грешно потребителско име и парола

//////////////////////////////////ShouldReturnErrorWhenInvalidUsernameAndPasswordProvided

//////////////////////////////////Въпрос 13
//////////////////////////////////Отговорен
//////////////////////////////////От максимално 4,00
//////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////Текст на въпроса
//////////////////////////////////Дайте пример за коректно именуване на компонентен тест, който проверява дали потребител влиза успешно с валидно потребителско име и парола.

//////////////////////////////////ShouldLoginSuccessfullyWithValidUsernameAndPassword

//////////////////////////////////Въпрос 14
//////////////////////////////////Отговорен
//////////////////////////////////От максимално 6,00
//////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////Текст на въпроса
//////////////////////////////////Демонстрирайте рефакториране на следния фрагмент от код, като зададате подходящо именуване и форматиране, ако и където това е необходимо:

//////////////////////////////////class tdl
//////////////////////////////////{ //class for todo list

//////////////////////////////////  public string _Name { get; set; }

//////////////////////////////////  public string description { get; set; }

//////////////////////////////////  public virtual List<ToDoItem> Items { get; set; }

//////////////////////////////////}

//////////////////////////////////class ToDoList
//////////////////////////////////{

//////////////////////////////////  public string Name { get; set; }

//////////////////////////////////  public string Description { get; set; }

//////////////////////////////////  public virtual List<ToDoItem> Items { get; set; }

//////////////////////////////////}


//////////////////////////////////Въпрос 15
//////////////////////////////////Неправилно
//////////////////////////////////0,00 от максимално 2,00 точки
//////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////Текст на въпроса
//////////////////////////////////Какво действие активира клавиша F10 във Visual Studio?

//////////////////////////////////Изберете едно
//////////////////////////////////a. Run
//////////////////////////////////b. Build
//////////////////////////////////c. Step over 
//////////////////////////////////d. Step Into
//////////////////////////////////Забележка
//////////////////////////////////Your answer is incorrect.
//////////////////////////////////Правилният отговор е: Step Into
//////////////////////////////////Въпрос 16
//////////////////////////////////Правилно
//////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////Текст на въпроса
//////////////////////////////////Посочете кое действие от компонентния тест се случва в Act фазата.

//////////////////////////////////Изберете едно
//////////////////////////////////a. извървшане на действието за тестване 
//////////////////////////////////b. нито едно от изброените
//////////////////////////////////c. проверка на резултата от тестването
//////////////////////////////////d. подготвяне на обекта за тестване
//////////////////////////////////Забележка
//////////////////////////////////Your answer is correct.
//////////////////////////////////Правилният отговор е: извървшане на действието за тестване
//////////////////////////////////Въпрос 17
//////////////////////////////////Правилно
//////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////Текст на въпроса
//////////////////////////////////Какво стои зад буквата M в абревиатурата на архитектурния шаблон MVC?

//////////////////////////////////Изберете едно
//////////////////////////////////a. Money
//////////////////////////////////b. Meme
//////////////////////////////////c. Model 
//////////////////////////////////d. Master
//////////////////////////////////Забележка
//////////////////////////////////Your answer is correct.
//////////////////////////////////Правилният отговор е: Model
//////////////////////////////////Въпрос 18
//////////////////////////////////Правилно
//////////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////Текст на въпроса
//////////////////////////////////Дефинирайте понятието Контролер (Controller) от MVC концепцията.
//////////////////////////////////Изберете едно
//////////////////////////////////a. Нито една от посочените дефиниции не е коректна.
//////////////////////////////////b. Контролерът в MVC служи за обработка на заявките на потребителя към приложението 
//////////////////////////////////c. Контролерът в MVC служи за управление на данни и бизнес-логика
//////////////////////////////////d. Контролерът в MVC служи за контрол на външен вид и взаимодействие с потребителя
//////////////////////////////////Забележка
//////////////////////////////////Your answer is correct.
//////////////////////////////////Правилният отговор е: Контролерът в MVC служи за обработка на заявките на потребителя към приложението
//////////////////////////////////Въпрос 19
//////////////////////////////////Неправилно
//////////////////////////////////0,00 от максимално 2,00 точки
//////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////Текст на въпроса
//////////////////////////////////Посочете кой програмен фрагмент няма нарушения във форматирането си.

//////////////////////////////////Изберете едно
//////////////////////////////////a.
//////////////////////////////////public bool IsPositive(int value)
//////////////////////////////////{

//////////////////////////////////  if (value)
//////////////////////////////////  {
//////////////////////////////////    return true;
//////////////////////////////////  }
//////////////////////////////////  else
//////////////////////////////////  {
//////////////////////////////////    return false;
//////////////////////////////////  }
//////////////////////////////////}
//////////////////////////////////b.Всички примери имат нарушения в правилата за форматиране
//////////////////////////////////c.
//////////////////////////////////if(a > 0) {
//////////////////////////////////  Console.WriteLine("positive");
//////////////////////////////////}else { Console.WriteLine("negative"); }
//////////////////////////////////d.
//////////////////////////////////public int Calculate(int a, int b) { return a + b; }
//////////////////////////////////Забележка
//////////////////////////////////Your answer is incorrect.
//////////////////////////////////Правилният отговор е: Всички примери имат нарушения в правилата за форматиране
//////////////////////////////////Въпрос 20
//////////////////////////////////Отговорен
//////////////////////////////////От максимално 6,00
//////////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////////Текст на въпроса




//////////////////////////////////Фрагмент:

//////////////////////////////////using System;

//////////////////////////////////    public class Substring_broken
//////////////////////////////////{
//////////////////////////////////  public static void Main()
//////////////////////////////////  {
//////////////////////////////////    string text = Console.ReadLine();
//////////////////////////////////    int jump = int.Parse(Console.ReadLine());

//////////////////////////////////    const char Search = 'р';
//////////////////////////////////    bool hasMatch = false;

//////////////////////////////////    for (int i = 0; i < text.Length; i++)
//////////////////////////////////    {
//////////////////////////////////      if (text[i] == Search)
//////////////////////////////////      {
//////////////////////////////////        hasMatch = true;

//////////////////////////////////        int endIndex = jump;

//////////////////////////////////        if (endIndex > text.Length)
//////////////////////////////////        {
//////////////////////////////////          endIndex = text.Length;
//////////////////////////////////        }

//////////////////////////////////        string matchedString = text.Substring(i, endIndex);
//////////////////////////////////        Console.WriteLine(matchedString);
//////////////////////////////////        i += jump;
//////////////////////////////////      }
//////////////////////////////////    }

//////////////////////////////////    if (!hasMatch)
//////////////////////////////////    {
//////////////////////////////////      Console.WriteLine("no");
//////////////////////////////////    }
//////////////////////////////////  }
//////////////////////////////////}
//////////////////////////////////Забележка: Фрагментът съдържа логически грешки, които водят до неочаквано повдение на програмата. Открийте ги с помомощта на дебъгера и предоставете поправения код
//////////////////////////////////using Microsoft.Win32;

//////////////////////////////////using System;

//////////////////////////////////using System.Collections.Generic;

//////////////////////////////////using System.ComponentModel;

//////////////////////////////////using System.Linq;

//////////////////////////////////using System.Runtime.CompilerServices;

//////////////////////////////////using System.Security.Cryptography.X509Certificates;

//////////////////////////////////using System.Text;

//////////////////////////////////using System.Threading.Tasks;



//////////////////////////////////namespace Test2

//////////////////////////////////{

//////////////////////////////////  public class Program

//////////////////////////////////  {

//////////////////////////////////    static void Main(string[] args)

//////////////////////////////////    {

//////////////////////////////////      string text = Console.ReadLine();

//////////////////////////////////      int jump = int.Parse(Console.ReadLine());

//////////////////////////////////      bool hasMatch = false;



//////////////////////////////////      for (int i = 0; i < text.Length; i++)

//////////////////////////////////      {

//////////////////////////////////        if (text[i] == 'p')

//////////////////////////////////        {

//////////////////////////////////          hasMatch = true;



//////////////////////////////////          int endIndex = i + jump + 1;



//////////////////////////////////          if (endIndex > text.Length)

//////////////////////////////////          {

//////////////////////////////////            endIndex = text.Length;

//////////////////////////////////          }



//////////////////////////////////          string matchedString = text.Substring(i, endIndex - i);

//////////////////////////////////          Console.WriteLine(matchedString);

//////////////////////////////////          i += jump;

//////////////////////////////////        }

//////////////////////////////////      }



//////////////////////////////////      if (!hasMatch)

//////////////////////////////////      {

//////////////////////////////////        Console.WriteLine("no");

//////////////////////////////////      }

//////////////////////////////////    }

//////////////////////////////////  }

//////////////////////////////////}



//////////////////////////////////Край на прегледа
//////////////////////////////////Отиди на ...
//////////////////////////////////Отиди на ...
//////////////////////////////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
//////////////////////////////////Навигация в теста
//////////////////////////////////Край на прегледа
//////////////////////////////////Вие сте влезли в системата като Добри Илев (Изход)
//////////////////////////////////тренировъчен - курс - по
//////////////////////////////////Data retention summary


//////////////////////////////////ИЗПИТНА ТЕМА 12

////////////////////////////////Прескочи на основното съдържание
////////////////////////////////ПГЕЕ
////////////////////////////////Български ‎(bg)‎ 
////////////////////////////////Добри Илев 
////////////////////////////////Тренировъчен курс - Програмно осигуряване
////////////////////////////////Начална страница
////////////////////////////////Моите курсове
//////////////////////////////// тренировъчен-курс-по
//////////////////////////////// Изпитна тема 12
//////////////////////////////// Изпитна тема №12
////////////////////////////////Започнат на	вторник, 14 февруари 2023, 16:17
////////////////////////////////Състояние Завършен
////////////////////////////////Приключен на	вторник, 14 февруари 2023, 16:58
////////////////////////////////Изминало време	40 мин. 49 сек.
////////////////////////////////Оценка	Още не е оценен
////////////////////////////////Въпрос 1
////////////////////////////////Отговорен
////////////////////////////////От максимално 4,00
////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////Текст на въпроса
////////////////////////////////Обяснете как работят снипетите във Visual Studio. 

////////////////////////////////Зависи от програмния език.Спрямо езика visual studio има определен брой снипети, те се пускат с изписване на съответната дума и натискане два пъти на клавиша TAB.

////////////////////////////////Въпрос 2
////////////////////////////////Правилно
////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////Текст на въпроса
////////////////////////////////За какво служи клавишната комбинация Ctrl + F5 във Visual Studio?

////////////////////////////////Изберете едно
////////////////////////////////a. стартиране на програмата в стандартен режим 
////////////////////////////////b. стартиране на програмата в режим стъпка-по-стъпка
////////////////////////////////c. затваряне на стартирана програма
////////////////////////////////d. стартиране на програмата в дебъг режим
////////////////////////////////Забележка
////////////////////////////////Your answer is correct.
////////////////////////////////Правилният отговор е: стартиране на програмата в стандартен режим
////////////////////////////////Въпрос 3
////////////////////////////////Правилно
////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////Текст на въпроса
////////////////////////////////Посочете какво означава абревиатурата IDE:

////////////////////////////////Изберете едно
////////////////////////////////a. Internet Development Environment
////////////////////////////////b. Integrated Development Environment 
////////////////////////////////c. Internal Development Environment
////////////////////////////////d. Instant Document Exchange
////////////////////////////////Забележка
////////////////////////////////Your answer is correct.
////////////////////////////////Правилният отговор е: Integrated Development Environment
////////////////////////////////Въпрос 4
////////////////////////////////Правилно
////////////////////////////////6,00 от максимално 6,00 точки
////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////Текст на въпроса
////////////////////////////////Демонстрирайте използването на библиотеката System.Text.Json (в .NET 5+) за десериализиране от JSON към обект.

////////////////////////////////using Отговор
////////////////////////////////System.Text.Json


////////////////////////////////;

////////////////////////////////namespace DeserializeExtra
////////////////////////////////{
////////////////////////////////  public class WeatherForecast
////////////////////////////////  {
////////////////////////////////    public DateTimeOffset Date { get; set; }
////////////////////////////////    public int TemperatureCelsius { get; set; }
////////////////////////////////    public string? Summary { get; set; }
////////////////////////////////    public string? SummaryField;
////////////////////////////////    public IList<DateTimeOffset>? DatesAvailable { get; set; }
////////////////////////////////    public Dictionary<string, HighLowTemps>? TemperatureRanges { get; set; }
////////////////////////////////    public string[]? SummaryWords { get; set; }
////////////////////////////////  }

////////////////////////////////  public class HighLowTemps
////////////////////////////////  {
////////////////////////////////    public int High { get; set; }
////////////////////////////////    public int Low { get; set; }
////////////////////////////////  }

////////////////////////////////  public class Program
////////////////////////////////  {
////////////////////////////////    public static void Main()
////////////////////////////////    {
////////////////////////////////      string jsonString =
////////////////////////////////@"{
////////////////////////////////  ""Date"": ""2019-08-01T00:00:00-07:00"",
////////////////////////////////  ""TemperatureCelsius"": 25,
////////////////////////////////  ""Summary"": ""Hot"",
////////////////////////////////  ""DatesAvailable"": [
////////////////////////////////    ""2019-08-01T00:00:00-07:00"",
////////////////////////////////    ""2019-08-02T00:00:00-07:00""
////////////////////////////////  ],
////////////////////////////////  ""TemperatureRanges"": {
////////////////////////////////                ""Cold"": {
////////////////////////////////                    ""High"": 20,
////////////////////////////////      ""Low"": -10
////////////////////////////////                },
////////////////////////////////    ""Hot"": {
////////////////////////////////                    ""High"": 60,
////////////////////////////////      ""Low"": 20
////////////////////////////////    }
////////////////////////////////            },
////////////////////////////////  ""SummaryWords"": [
////////////////////////////////    ""Cool"",
////////////////////////////////    ""Windy"",
////////////////////////////////    ""Humid""
////////////////////////////////  ]
////////////////////////////////}
////////////////////////////////";

////////////////////////////////      WeatherForecast? weatherForecast = Отговор
////////////////////////////////JsonSerializer.Deserialize<WeatherForecast>(jsonString)


////////////////////////////////;

////////////////////////////////      Console.WriteLine($"Date: {weatherForecast?.Date}");
////////////////////////////////      Console.WriteLine($"TemperatureCelsius: {weatherForecast?.TemperatureCelsius}");
////////////////////////////////      Console.WriteLine($"Summary: {weatherForecast?.Summary}");
////////////////////////////////    }
////////////////////////////////  }
////////////////////////////////}
////////////////////////////////Въпрос 5
////////////////////////////////Правилно
////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////Текст на въпроса
////////////////////////////////Посочете за какво служи клавиша F12 във Visual Studio.

////////////////////////////////Изберете едно
////////////////////////////////a. Затваряне на програмата /Quit/
////////////////////////////////b. Навигиране до файл в проекта /Navigate To/
////////////////////////////////c. Навигиране в кода /Go to Definition/ до тялото на даден метод 
////////////////////////////////d. Бързо стартиране /Quick Launch/
////////////////////////////////Забележка
////////////////////////////////Your answer is correct.
////////////////////////////////Правилният отговор е: Навигиране в кода /Go to Definition/ до тялото на даден метод
////////////////////////////////Въпрос 6
////////////////////////////////Правилно
////////////////////////////////6,00 от максимално 6,00 точки
////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////Текст на въпроса
////////////////////////////////Демонстрирайте използването на библиотеката System.Text.Json (в .NET 5+) за десериализиране от JSON към обект.

////////////////////////////////using Отговор
////////////////////////////////System.Text.Json


////////////////////////////////;

////////////////////////////////namespace DeserializeExtra
////////////////////////////////{
////////////////////////////////  public class WeatherForecast
////////////////////////////////  {
////////////////////////////////    public DateTimeOffset Date { get; set; }
////////////////////////////////    public int TemperatureCelsius { get; set; }
////////////////////////////////    public string? Summary { get; set; }
////////////////////////////////    public string? SummaryField;
////////////////////////////////    public IList<DateTimeOffset>? DatesAvailable { get; set; }
////////////////////////////////    public Dictionary<string, HighLowTemps>? TemperatureRanges { get; set; }
////////////////////////////////    public string[]? SummaryWords { get; set; }
////////////////////////////////  }

////////////////////////////////  public class HighLowTemps
////////////////////////////////  {
////////////////////////////////    public int High { get; set; }
////////////////////////////////    public int Low { get; set; }
////////////////////////////////  }

////////////////////////////////  public class Program
////////////////////////////////  {
////////////////////////////////    public static void Main()
////////////////////////////////    {
////////////////////////////////      string jsonString =
////////////////////////////////@"{
////////////////////////////////  ""Date"": ""2019-08-01T00:00:00-07:00"",
////////////////////////////////  ""TemperatureCelsius"": 25,
////////////////////////////////  ""Summary"": ""Hot"",
////////////////////////////////  ""DatesAvailable"": [
////////////////////////////////    ""2019-08-01T00:00:00-07:00"",
////////////////////////////////    ""2019-08-02T00:00:00-07:00""
////////////////////////////////  ],
////////////////////////////////  ""TemperatureRanges"": {
////////////////////////////////                ""Cold"": {
////////////////////////////////                    ""High"": 20,
////////////////////////////////      ""Low"": -10
////////////////////////////////                },
////////////////////////////////    ""Hot"": {
////////////////////////////////                    ""High"": 60,
////////////////////////////////      ""Low"": 20
////////////////////////////////    }
////////////////////////////////            },
////////////////////////////////  ""SummaryWords"": [
////////////////////////////////    ""Cool"",
////////////////////////////////    ""Windy"",
////////////////////////////////    ""Humid""
////////////////////////////////  ]
////////////////////////////////}
////////////////////////////////";

////////////////////////////////      WeatherForecast? weatherForecast = Отговор
////////////////////////////////JsonSerializer.Deserialize<WeatherForecast>(jsonString)


////////////////////////////////;

////////////////////////////////      Console.WriteLine($"Date: {weatherForecast?.Date}");
////////////////////////////////      Console.WriteLine($"TemperatureCelsius: {weatherForecast?.TemperatureCelsius}");
////////////////////////////////      Console.WriteLine($"Summary: {weatherForecast?.Summary}");
////////////////////////////////    }
////////////////////////////////  }
////////////////////////////////}

////////////////////////////////namespace SerializeBasic
////////////////////////////////{
////////////////////////////////  public class WeatherForecast
////////////////////////////////  {
////////////////////////////////    public DateTimeOffset Date { get; set; }
////////////////////////////////    public int TemperatureCelsius { get; set; }
////////////////////////////////    public string? Summary { get; set; }
////////////////////////////////  }

////////////////////////////////  public class Program
////////////////////////////////  {
////////////////////////////////    public static void Main()
////////////////////////////////    {
////////////////////////////////      var weatherForecast = new WeatherForecast
////////////////////////////////      {
////////////////////////////////        Date = DateTime.Parse("2019-08-01"),
////////////////////////////////        TemperatureCelsius = 25,
////////////////////////////////        Summary = "Hot"
////////////////////////////////      };

////////////////////////////////      Console.WriteLine(jsonString);
////////////////////////////////    }
////////////////////////////////  }
////////////////////////////////}
////////////////////////////////Въпрос 7
////////////////////////////////Отговорен
////////////////////////////////От максимално 4,00
////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////Текст на въпроса
////////////////////////////////Обяснете какво е NuGET Package Manager.
////////////////////////////////NuGET Package Manager е пакетен мениджър във VS като позволява да използваме пакети със софтуер.
////////////////////////////////Въпрос 8
////////////////////////////////Правилно
////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////Текст на въпроса
////////////////////////////////За какво служи клавиш F10 във Visual Studio?

////////////////////////////////Изберете едно
////////////////////////////////a. стартиране на програмата в стандартен режим
////////////////////////////////b. затваряне на стартирана програма
////////////////////////////////c. стартиране на програмата в режим стъпка-по-стъпка 
////////////////////////////////d. стартиране на програмата в дебъг режим
////////////////////////////////Забележка
////////////////////////////////Your answer is correct.
////////////////////////////////Правилният отговор е: стартиране на програмата в режим стъпка-по-стъпка
////////////////////////////////Въпрос 9
////////////////////////////////Неправилно
////////////////////////////////0,00 от максимално 2,00 точки
////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////Текст на въпроса
////////////////////////////////Посочете с коя директива се включват в кода допълнителни библиотеки.

////////////////////////////////Изберете едно
////////////////////////////////a. include 
////////////////////////////////b. import
////////////////////////////////c. using
////////////////////////////////d.require
////////////////////////////////Забележка
////////////////////////////////Your answer is incorrect.
////////////////////////////////Правилният отговор е: using
////////////////////////////////Въпрос 10
////////////////////////////////Отговорен
////////////////////////////////От максимално 40,00
////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////Текст на въпроса
////////////////////////////////Пример: По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен

////////////////////////////////фрагмент. Предоставеният фрагмент да се приведе в работещ вид.



////////////////////////////////Условие:

////////////////////////////////Да се напише програма, която трябва да обработва информация за филми в JSON вид.

////////////////////////////////Създайте клас Movie със свойства за:

////////////////////////////////● Id(int) – номер на филма

////////////////////////////////● Name (string) – име на филма

////////////////////////////////● Rating (decimal) – IMDB рейтинг на филма

////////////////////////////////● Year (DateTime) – година на премиерата на филма

////////////////////////////////Подзадачи:

////////////////////////////////● Преобразувайте данните от клас Movie към JSON

////////////////////////////////● Преобразувайте JSON към Movie

////////////////////////////////Изберете подходяща библиотека за работа с JSON за реализиране на подзадачите.

////////////////////////////////Фрагмент:

////////////////////////////////Movie.cs:
////////////////////////////////public class Movie
////////////////////////////////{
////////////////////////////////  public int Id
////////////////////////////////  {
////////////////////////////////    get; set

////////////////////////////////  public string Name get; set; }
////////////////////////////////public decimal Rating { get; }
////////////////////////////////public DateTime Year get; set; }
////////////////////////////////}

////////////////////////////////Program.cs:
////////////////////////////////using System;
////////////////////////////////using System.Collections.Generic;

////////////////////////////////namespace JSONMovie
////////////////////////////////{
////////////////////////////////  class Program
////////////////////////////////  {
////////////////////////////////    static void Main(string[] args)
////////////////////////////////    {
////////////////////////////////      List movies = new List();
////////////////////////////////      movies.Add(new Movie()
////////////////////////////////      {

////////////////////////////////        Id = 1,
////////////////////////////////        Name = "Movie 1",
////////////////////////////////        Rating = 3
////////////////////////////////                Year = DateTime.Parse("1/1/1998")
////////////////////////////////      })

////////////////////////////////            movies.Add(new()
////////////////////////////////            {
////////////////////////////////              Id = 2,
////////////////////////////////              Name = "Movie 2",
////////////////////////////////              Rating = 3,
////////////////////////////////              Year = DateTime.Parse("1/1/2006")
////////////////////////////////            });

////////////////////////////////      string jsonString = JsonSerializer.(movies);

////////////////////////////////      Console.WriteLine(jsonString)
////////////////////////////////        }
////////////////////////////////  }
////////////////////////////////}

////////////////////////////////Movie.cs



////////////////////////////////public class Movie

////////////////////////////////{

////////////////////////////////  public int Id { get; set; }

////////////////////////////////  public string Name { get; set; }

////////////////////////////////  public decimal Rating { get; set; }

////////////////////////////////  public DateTime Year { get; set; }

////////////////////////////////}



////////////////////////////////Program.cs



////////////////////////////////using System;

////////////////////////////////using System.Collections.Generic;

////////////////////////////////using System.Text.Json; // including the JSON library



////////////////////////////////namespace JSONMovie

////////////////////////////////{

////////////////////////////////  class Program

////////////////////////////////  {

////////////////////////////////    static void Main(string[] args)

////////////////////////////////    {

////////////////////////////////      List<Movie> movies = new List<Movie>();

////////////////////////////////      movies.Add(new Movie()

////////////////////////////////      {

////////////////////////////////        Id = 1,

////////////////////////////////        Name = "Movie 1",

////////////////////////////////        Rating = 3,

////////////////////////////////        Year = DateTime.Parse("1/1/1998")

////////////////////////////////      });



////////////////////////////////      movies.Add(new Movie()

////////////////////////////////      {

////////////////////////////////        Id = 2,

////////////////////////////////        Name = "Movie 2",

////////////////////////////////        Rating = 3,

////////////////////////////////        Year = DateTime.Parse("1/1/2006")

////////////////////////////////      });



////////////////////////////////      string jsonString = JsonSerializer.Serialize(movies);



////////////////////////////////      Console.WriteLine(jsonString);

////////////////////////////////    }

////////////////////////////////  }

////////////////////////////////}



////////////////////////////////Въпрос 11
////////////////////////////////Отговорен
////////////////////////////////От максимално 4,00
////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////Текст на въпроса
////////////////////////////////Обяснете предназначението на breakpoint (точки на счупване) в дебъгера на Visual Studio.

////////////////////////////////Точките на счупване (breakpoints) в дебъгера на Visual Studio са инструмент, който позволява на програмиста да временно спре изпълнението на програмата в точката, където точката е поставена, за да може да анализира състоянието на програмата на тази точка.

////////////////////////////////Това е много полезен инструмент, който позволява на програмиста да проследи изпълнението на програмата стъпка по стъпка, за да установи къде се появява грешката в кода или да анализира поведението на програмата в определена точка. Точките на счупване могат да бъдат поставяни на конкретни редове от кода, за да може програмиста да анализира състоянието на програмата в този момент.

////////////////////////////////Когато програмата се изпълнява и достигне точка на счупване, изпълнението се спира и програмистът може да анализира стойностите на променливите, извиканите методи, стека на извикване и други детайли, които могат да му помогнат да разбере какво се случва в програмата. След анализа на състоянието на програмата в точката на счупване, програмистът може да реши дали да продължи изпълнението на програмата или да коригира кода на програмата и да я пусне на ново.


////////////////////////////////Въпрос 12
////////////////////////////////Правилно
////////////////////////////////6,00 от максимално 6,00 точки
////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////Текст на въпроса
////////////////////////////////Демонстрирайте как бихте инсталирали разширението Markdown Editor в средата за разработка Visual Studio. Подредете картинките така, че да спазват правилната последователност от стъпките. 

////////////////////////////////Номерирайте картинките, като използвате цифрите за влачене под таблицата.




//////////////////////////////// blank 



//////////////////////////////// blank 


//////////////////////////////// blank 








////////////////////////////////123
////////////////////////////////Забележка
////////////////////////////////Your answer is correct.
////////////////////////////////Правилният отговор е:
////////////////////////////////Демонстрирайте как бихте инсталирали разширението Markdown Editor в средата за разработка Visual Studio. Подредете картинките така, че да спазват правилната последователност от стъпките. 

////////////////////////////////Номерирайте картинките, като използвате цифрите за влачене под таблицата.




////////////////////////////////[2]



////////////////////////////////[1]


////////////////////////////////[3]







////////////////////////////////Въпрос 13
////////////////////////////////Правилно
////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////Текст на въпроса
////////////////////////////////Посочете коя от изброените програми e среда за разработка на софтуер.
////////////////////////////////Изберете едно
////////////////////////////////a. Google Chrome
////////////////////////////////b. Microsoft Excel
////////////////////////////////c. Visual Studio 
////////////////////////////////d. Notepad++
////////////////////////////////Забележка
////////////////////////////////Your answer is correct.
////////////////////////////////Правилният отговор е: Visual Studio
////////////////////////////////Въпрос 14
////////////////////////////////Правилно
////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////Текст на въпроса
////////////////////////////////За какво служи клавишната комбинация Ctrl + K, Ctrl + D?

////////////////////////////////Изберете едно
////////////////////////////////a. избор на готов снипет от код
////////////////////////////////b. нито едно от изброените
////////////////////////////////c. преименуване на програмна единица
////////////////////////////////d. подреждане на кода 
////////////////////////////////Забележка
////////////////////////////////Your answer is correct.
////////////////////////////////Правилният отговор е: подреждане на кода
////////////////////////////////Въпрос 15
////////////////////////////////Отговорен
////////////////////////////////От максимално 4,00
////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////Текст на въпроса
////////////////////////////////Обяснете каква е разликата между Solution (Решение) и Project(Проект) във Visual Studio.



////////////////////////////////Solution (Решение) в Visual Studio е колекция от един или повече проекти (projects), които са свързани и се поддържат заедно. Solution предоставя организационна и управленска структура на един или повече проекти.

////////////////////////////////Project (Проект) във Visual Studio е съвкупност от файлове и ресурси, които се съдържат в една програмна единица. Това може да бъде библиотека, приложение, уеб сайт и други.

////////////////////////////////Така че, основната разлика между Solution и Project в Visual Studio е, че Solution е организационна структура, която включва един или повече проекти, докато Project е програмна единица, която съдържа изходен код, изображения, ресурси и други файлове, необходими за създаването на приложение или библиотека.


////////////////////////////////Въпрос 16
////////////////////////////////Правилно
////////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////Текст на въпроса
////////////////////////////////Посочете как се нарича пакетния мениджър в .NET?

////////////////////////////////Изберете едно
////////////////////////////////a. dotnet
////////////////////////////////b. NPM
////////////////////////////////c. PIP
////////////////////////////////d. NuGET 
////////////////////////////////Забележка
////////////////////////////////Your answer is correct.
////////////////////////////////Правилният отговор е: NuGET
////////////////////////////////Въпрос 17
////////////////////////////////Правилно
////////////////////////////////6,00 от максимално 6,00 точки
////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////Текст на въпроса
////////////////////////////////Свържете всеки от посочените случаи с решение, в което средата се използва пълноценно.

////////////////////////////////Кодът не е добре подреден - 
////////////////////////////////използваме автоматично форматиране (подреждане)


////////////////////////////////Разполагаме с файл с около 3000 реда, трябва да намерим тялото на метод, чието име знаем - 
////////////////////////////////Навигираме до метода с помощта на F12


////////////////////////////////Налага се често да пишем стандартни фрагменти код - 
////////////////////////////////Използваме снипети, където е възможно


////////////////////////////////Забележка
////////////////////////////////Your answer is correct.
////////////////////////////////Правилният отговор е:
////////////////////////////////Свържете всеки от посочените случаи с решение, в което средата се използва пълноценно.

////////////////////////////////Кодът не е добре подреден - [използваме автоматично форматиране(подреждане)]

////////////////////////////////Разполагаме с файл с около 3000 реда, трябва да намерим тялото на метод, чието име знаем - [Навигираме до метода с помощта на F12]

////////////////////////////////Налага се често да пишем стандартни фрагменти код - [Използваме снипети, където е възможно]

////////////////////////////////Въпрос 18
////////////////////////////////Отговорен
////////////////////////////////От максимално 4,00
////////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////////Текст на въпроса
////////////////////////////////Изложете поне 2 разлики между интегрирана среда за разработка (IDE) и текстов редактор.

////////////////////////////////Ето две основни разлики между интегрирана среда за разработка (IDE) и текстов редактор:

////////////////////////////////Функционалност: IDE предоставя богат набор от инструменти и функционалности за разработка на софтуер, като среди тях включва интегриране на дебъгер, вграден компилатор и дизайнер на потребителски интерфейси. В сравнение с това, текстовият редактор обикновено предоставя само функционалности за редактиране на текст.

////////////////////////////////Сложност: Интегрираната среда за разработка обикновено е по-сложна и изисква повече време за усвояване, докато текстовият редактор е по-лесен за работа и по-бърз за стартиране. IDE обикновено има по-голямо потребление на ресурси, като оперативна памет и процесорна мощност, в сравнение с текстовия редактор.


////////////////////////////////Край на прегледа
////////////////////////////////Отиди на ...
////////////////////////////////Отиди на ...
////////////////////////////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
////////////////////////////////Навигация в теста
////////////////////////////////Край на прегледа
////////////////////////////////Вие сте влезли в системата като Добри Илев (Изход)
////////////////////////////////тренировъчен - курс - по
////////////////////////////////Data retention summary

//////////////////////////////Прескочи на основното съдържание
//////////////////////////////ПГЕЕ
//////////////////////////////Български ‎(bg)‎ 
//////////////////////////////Добри Илев 
//////////////////////////////Тренировъчен курс - Програмно осигуряване
//////////////////////////////Начална страница
//////////////////////////////Моите курсове
////////////////////////////// тренировъчен-курс-по
////////////////////////////// Изпитна тема 12
////////////////////////////// Изпитна тема №12
//////////////////////////////Започнат на	събота, 25 март 2023, 13:09
//////////////////////////////Състояние Завършен
//////////////////////////////Приключен на	събота, 25 март 2023, 13:32
//////////////////////////////Изминало време	23 мин. 7 сек.
//////////////////////////////Оценка	Още не е оценен
//////////////////////////////Въпрос 1
//////////////////////////////Правилно
//////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////Текст на въпроса
//////////////////////////////Посочете коя от следните команди е коректна команда за инсталиране на пакета Banichka чрез Package Manager Console във Visual Studo.

//////////////////////////////Изберете едно
//////////////////////////////a. dotnet add banichka
//////////////////////////////b. npm install banichka
//////////////////////////////c. Install-Package Banichka 
//////////////////////////////d. vs.exe install banichka
//////////////////////////////Забележка
//////////////////////////////Your answer is correct.
//////////////////////////////Правилният отговор е: Install - Package Banichka
//////////////////////////////Въпрос 2
//////////////////////////////Отговорен
//////////////////////////////От максимално 4,00
//////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////Текст на въпроса
//////////////////////////////Дайте пример за употреба на снипети във Visual Studio.

//////////////////////////////Снипети са предварително дефинирани блокове код, които могат да ви помогнат да кодирате по-бързо и по-ефективно във Visual Studio. Те автоматично вмъкват общи конструкции и структури на кода, за да спестите време.

//////////////////////////////Ето пример за употреба на снипети във Visual Studio:

//////////////////////////////Отворете нов C# файл във Visual Studio.
//////////////////////////////За да вмъкнете снипет, пишете ключовата дума на снипета и натиснете клавиша 'Tab'. Например, ако искате да вмъкнете конструкцията for, напишете 'for' и натиснете 'Tab'.
//////////////////////////////След като натиснете 'Tab', снипетът ще се разшири и ще попълни кода за стандартен for цикъл:


//////////////////////////////for (int i = 0; i < length; i++)

//////////////////////////////{

//////////////////////////////  // кодът в тялото на цикъла

//////////////////////////////}



//////////////////////////////Можете да промените предефинираните стойности, като преместите курсора върху тях и въведете новите стойности.
//////////////////////////////Във Visual Studio има много вградени снипети за различни езици за програмиране като C#, Visual Basic, JavaScript и др. Можете също така да създадете свои персонализирани снипети или да инсталирате допълнителни снипети от разширения на Visual Studio Marketplace.










//////////////////////////////Въпрос 3
//////////////////////////////Отговорен
//////////////////////////////От максимално 4,00
//////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////Текст на въпроса
//////////////////////////////Обяснете употребата на SQL Server Object Explorer във Visual Studio.

//////////////////////////////SQL Server Object Explorer е функционалност във Visual Studio, която позволява разработчиците да се свържат с бази данни на SQL Server, да преглеждат и да управляват обектите в тях, да изпълняват заявки и да взаимодействат с базата данни през интуитивен и удобен интерфейс.

//////////////////////////////Ето някои от основните употреби на SQL Server Object Explorer:

//////////////////////////////Свързване със сървъри и бази данни: Можете да се свържете с локални или отдалечени инстанции на SQL Server, SQL Azure и LocalDB.

//////////////////////////////Преглед и управление на обекти: Можете да прегледате и управлявате различните обекти във вашата база данни, като таблици, представления, процедури, функции, индекси, стъпки и др. Можете да добавяте, редактирате или изтривате обекти директно от SQL Server Object Explorer.

//////////////////////////////Изпълнение на SQL заявки: Можете да отворите нов прозорец за заявки и да изпълнявате SQL заявки към вашата база данни. Това ви дава възможност да тествате, анализирате и оптимизирате SQL заявките си директно от Visual Studio.

//////////////////////////////Работа с проекти за бази данни: Можете да работите с проекти за бази данни и да използвате инструменти за разработка, версиониране и разпространение на бази данни. Също така можете да генерирате скриптове за обновяване на бази данни и да управлявате версии на схеми на бази данни.

//////////////////////////////Профилиране на производителността: Можете да използвате инструментите за профилиране на производителността, за да анализирате изпълнението на SQL заявките си, да намерите бавни заявки и да оптимизирате производителността на вашата база данни.

//////////////////////////////С SQL Server Object Explorer във Visual Studio, разработчиците имат един интуитивен и централизиран интерфейс за работа със SQL Server бази данни, без да се налага да използват допълнителни инструменти или приложения.


//////////////////////////////Въпрос 4
//////////////////////////////Правилно
//////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////Текст на въпроса
//////////////////////////////За какво служи клавиш F5 във Visual Studio?

//////////////////////////////Изберете едно
//////////////////////////////a. стартиране на програмата в стандартен режим
//////////////////////////////b. затваряне на стартирана програма
//////////////////////////////c. стартиране на програмата в режим стъпка-по-стъпка
//////////////////////////////d. стартиране на програмата в дебъг режим 
//////////////////////////////Забележка
//////////////////////////////Your answer is correct.
//////////////////////////////Правилният отговор е: стартиране на програмата в дебъг режим
//////////////////////////////Въпрос 5
//////////////////////////////Правилно
//////////////////////////////6,00 от максимално 6,00 точки
//////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////Текст на въпроса
//////////////////////////////Демонстрирайте как бихте инсталирали разширението CodeMaid в средата за разработка Visual Studio. Подредете картинките така, че да спазват правилната последователност от стъпките. 

//////////////////////////////Номерирайте картинките, като използвате цифрите за влачене под таблицата.




////////////////////////////// blank 



////////////////////////////// blank 


////////////////////////////// blank 








//////////////////////////////123
//////////////////////////////Забележка
//////////////////////////////Your answer is correct.
//////////////////////////////Правилният отговор е:
//////////////////////////////Демонстрирайте как бихте инсталирали разширението CodeMaid в средата за разработка Visual Studio. Подредете картинките така, че да спазват правилната последователност от стъпките. 

//////////////////////////////Номерирайте картинките, като използвате цифрите за влачене под таблицата.




//////////////////////////////[2]



//////////////////////////////[1]


//////////////////////////////[3]







//////////////////////////////Въпрос 6
//////////////////////////////Правилно
//////////////////////////////4,00 от максимално 4,00 точки
//////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////Текст на въпроса
//////////////////////////////За всяка от клавишните комбинации задайте нейното действие във Visual Studio

//////////////////////////////Ctrl-K + Ctrl-C 
//////////////////////////////закоментиране на избраните редове


//////////////////////////////Ctrl-K + Ctrl-U 
//////////////////////////////премахване на коментар от избраните редове


//////////////////////////////Ctrl-K + Ctrl-D 
//////////////////////////////подреждане (форматиране) на кода


//////////////////////////////Ctrl + Shift + N 
//////////////////////////////създаване на нов файл


//////////////////////////////Забележка
//////////////////////////////Your answer is correct.
//////////////////////////////Правилният отговор е:
//////////////////////////////За всяка от клавишните комбинации задайте нейното действие във Visual Studio

//////////////////////////////Ctrl-K + Ctrl-C [закоментиране на избраните редове]

//////////////////////////////Ctrl - K + Ctrl - U[премахване на коментар от избраните редове]

//////////////////////////////Ctrl - K + Ctrl - D[подреждане(форматиране) на кода]

//////////////////////////////Ctrl + Shift + N[създаване на нов файл]

//////////////////////////////Въпрос 7
//////////////////////////////Неправилно
//////////////////////////////0,00 от максимално 6,00 точки
//////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////Текст на въпроса
//////////////////////////////Демонстрирайте използването на библиотеката System.Text.Json (в .NET 5+) за десериализиране от JSON към обект.

//////////////////////////////using Отговор
//////////////////////////////System.Text.Json;


//////////////////////////////;

//////////////////////////////namespace DeserializeExtra
//////////////////////////////{
//////////////////////////////  public class WeatherForecast
//////////////////////////////  {
//////////////////////////////    public DateTimeOffset Date { get; set; }
//////////////////////////////    public int TemperatureCelsius { get; set; }
//////////////////////////////    public string? Summary { get; set; }
//////////////////////////////    public string? SummaryField;
//////////////////////////////    public IList<DateTimeOffset>? DatesAvailable { get; set; }
//////////////////////////////    public Dictionary<string, HighLowTemps>? TemperatureRanges { get; set; }
//////////////////////////////    public string[]? SummaryWords { get; set; }
//////////////////////////////  }

//////////////////////////////  public class HighLowTemps
//////////////////////////////  {
//////////////////////////////    public int High { get; set; }
//////////////////////////////    public int Low { get; set; }
//////////////////////////////  }

//////////////////////////////  public class Program
//////////////////////////////  {
//////////////////////////////    public static void Main()
//////////////////////////////    {
//////////////////////////////      string jsonString =
//////////////////////////////@"{
//////////////////////////////  ""Date"": ""2019-08-01T00:00:00-07:00"",
//////////////////////////////  ""TemperatureCelsius"": 25,
//////////////////////////////  ""Summary"": ""Hot"",
//////////////////////////////  ""DatesAvailable"": [
//////////////////////////////    ""2019-08-01T00:00:00-07:00"",
//////////////////////////////    ""2019-08-02T00:00:00-07:00""
//////////////////////////////  ],
//////////////////////////////  ""TemperatureRanges"": {
//////////////////////////////                ""Cold"": {
//////////////////////////////                    ""High"": 20,
//////////////////////////////      ""Low"": -10
//////////////////////////////                },
//////////////////////////////    ""Hot"": {
//////////////////////////////                    ""High"": 60,
//////////////////////////////      ""Low"": 20
//////////////////////////////    }
//////////////////////////////            },
//////////////////////////////  ""SummaryWords"": [
//////////////////////////////    ""Cool"",
//////////////////////////////    ""Windy"",
//////////////////////////////    ""Humid""
//////////////////////////////  ]
//////////////////////////////}
//////////////////////////////";

//////////////////////////////      WeatherForecast? weatherForecast = Отговор
//////////////////////////////JsonSerializer.Deserialize<WeatherForecast>(jsonString);


//////////////////////////////      ;

//////////////////////////////      Console.WriteLine($"Date: {weatherForecast?.Date}");
//////////////////////////////      Console.WriteLine($"TemperatureCelsius: {weatherForecast?.TemperatureCelsius}");
//////////////////////////////      Console.WriteLine($"Summary: {weatherForecast?.Summary}");
//////////////////////////////    }
//////////////////////////////  }
//////////////////////////////}

//////////////////////////////namespace SerializeBasic
//////////////////////////////{
//////////////////////////////  public class WeatherForecast
//////////////////////////////  {
//////////////////////////////    public DateTimeOffset Date { get; set; }
//////////////////////////////    public int TemperatureCelsius { get; set; }
//////////////////////////////    public string? Summary { get; set; }
//////////////////////////////  }

//////////////////////////////  public class Program
//////////////////////////////  {
//////////////////////////////    public static void Main()
//////////////////////////////    {
//////////////////////////////      var weatherForecast = new WeatherForecast
//////////////////////////////      {
//////////////////////////////        Date = DateTime.Parse("2019-08-01"),
//////////////////////////////        TemperatureCelsius = 25,
//////////////////////////////        Summary = "Hot"
//////////////////////////////      };

//////////////////////////////      Console.WriteLine(jsonString);
//////////////////////////////    }
//////////////////////////////  }
//////////////////////////////}
//////////////////////////////Въпрос 8
//////////////////////////////Отговорен
//////////////////////////////От максимално 4,00
//////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////Текст на въпроса
//////////////////////////////Обяснете как се достъпва NuGET Package Manager.

//////////////////////////////NuGet Package Manager е инструмент във Visual Studio, който ви позволява да добавяте, обновявате и управлявате сторонни библиотеки и пакети във вашите проекти. Ето как можете да достъпите NuGet Package Manager във Visual Studio:

//////////////////////////////От главното меню: Изберете "Tools"(Инструменти) > "NuGet Package Manager" > "Manage NuGet Packages for Solution"(Управление на NuGet пакети за решението).Това ще отвори прозореца на NuGet Package Manager за цялото решение.

//////////////////////////////От Solution Explorer: Щракнете с десния бутон на върху решението или проекта, които желаете да управлявате, и изберете "Manage NuGet Packages" (Управление на NuGet пакети). Това ще отвори прозореца на NuGet Package Manager за съответното решение или проект.

//////////////////////////////От Package Manager Console: Във Visual Studio, изберете "Tools" (Инструменти) > "NuGet Package Manager" > "Package Manager Console"(Конзола на управителя на пакети).Това ще отвори Package Manager Console, където можете да изпълнявате команди за инсталиране, обновяване и управление на NuGet пакети чрез командния ред.

//////////////////////////////След като отворите NuGet Package Manager, можете да използвате табовете "Browse" (Преглед), "Installed"(Инсталирани), "Updates"(Обновления) и "Consolidate"(Консолидация), за да търсите, инсталирате, обновявате или премахвате пакети, както и да управлявате версиите на пакетите във вашите проекти.


//////////////////////////////Въпрос 9
//////////////////////////////Отговорен
//////////////////////////////От максимално 4,00
//////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////Текст на въпроса
//////////////////////////////Обяснете как може да използвате снипети във Visual Studio.

//////////////////////////////Снипетите (snippets) във Visual Studio са предварително дефинирани парчета код, които може да вмъкнете в редактора на кода, за да ускорите процеса на разработка и написане на код. Те включват често използвани конструкции, класове или структури, които се използват в определен език за програмиране. Ето как да използвате снипети във Visual Studio:

//////////////////////////////Вмъкване на снипет чрез клавишна комбинация: Поставете курсора в редактора на кода, където искате да вмъкнете снипета, и натиснете клавишната комбинация Ctrl+K, Ctrl+X. Това ще отвори менюто за избор на снипети, което показва наличните снипети за съответния език за програмиране. Изберете желания снипет от списъка и натиснете Enter, за да го вмъкнете в кода.

//////////////////////////////Вмъкване на снипет чрез кратко име (shortcut): Въведете краткото име (shortcut) на желания снипет в редактора на кода и натиснете клавишната комбинация Tab. Visual Studio автоматично разпознава краткото име на снипета и го вмъква в кода. Например, въведете "prop" и натиснете Tab, за да създадете автоматично свойство (property) в C#.

//////////////////////////////Редактиране на вмъкнат снипет: След като вмъкнете снипет, Visual Studio активира "смяна на полетата" (field replacement) за снипета, което позволява да редактирате определени части от снипета. Например, при вмъкване на автоматично свойство, можете да промените типа на данни, името на свойството и т.н. Натиснете клавиша Tab, за да преминете през активните полета и редактирайте ги според вашите нужди. Натиснете Enter, за да приключите редактирането на снипета.


//////////////////////////////Въпрос 10
//////////////////////////////Правилно
//////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////Текст на въпроса
//////////////////////////////За какво служи клавиш F10 във Visual Studio?

//////////////////////////////Изберете едно
//////////////////////////////a. стартиране на програмата в стандартен режим
//////////////////////////////b. стартиране на програмата в дебъг режим
//////////////////////////////c. затваряне на стартирана програма
//////////////////////////////d. стартиране на програмата в режим стъпка-по-стъпка 
//////////////////////////////Забележка
//////////////////////////////Your answer is correct.
//////////////////////////////Правилният отговор е: стартиране на програмата в режим стъпка-по-стъпка
//////////////////////////////Въпрос 11
//////////////////////////////Правилно
//////////////////////////////6,00 от максимално 6,00 точки
//////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////Текст на въпроса
//////////////////////////////Демонстрирайте използването на библиотеката System.Text.Json (в .NET 5+) за сериализиране към JSON.

//////////////////////////////using Отговор
//////////////////////////////System.Text.Json


//////////////////////////////;
//////////////////////////////namespace SerializeBasic
//////////////////////////////{
//////////////////////////////  public class WeatherForecast
//////////////////////////////  {
//////////////////////////////    public DateTimeOffset Date { get; set; }
//////////////////////////////    public int TemperatureCelsius { get; set; }
//////////////////////////////    public string? Summary { get; set; }
//////////////////////////////  }

//////////////////////////////  public class Program
//////////////////////////////  {
//////////////////////////////    public static void Main()
//////////////////////////////    {
//////////////////////////////      var weatherForecast = new WeatherForecast
//////////////////////////////      {
//////////////////////////////        Date = DateTime.Parse("2019-08-01"),
//////////////////////////////        TemperatureCelsius = 25,
//////////////////////////////        Summary = "Hot"
//////////////////////////////      };

//////////////////////////////      string jsonString = Отговор
//////////////////////////////JsonSerializer.Serialize(weatherForecast)


//////////////////////////////;
//////////////////////////////      Console.WriteLine(jsonString);
//////////////////////////////    }
//////////////////////////////  }
//////////////////////////////}
//////////////////////////////Въпрос 12
//////////////////////////////Правилно
//////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////Текст на въпроса
//////////////////////////////Посочете коя от изброените програми НЕ e среда за разработка на софтуер.
//////////////////////////////Изберете едно
//////////////////////////////a. IntelliJ IDEA
//////////////////////////////b. PyCharm
//////////////////////////////c. Visual Studio
//////////////////////////////d. Google Chrome 
//////////////////////////////Забележка
//////////////////////////////Your answer is correct.
//////////////////////////////Правилният отговор е: Google Chrome
//////////////////////////////Въпрос 13
//////////////////////////////Правилно
//////////////////////////////6,00 от максимално 6,00 точки
//////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////Текст на въпроса
//////////////////////////////Свържете всеки от посочените случаи с решение, в което средата се използва пълноценно.

//////////////////////////////Кодът не е добре подреден - 
//////////////////////////////използваме автоматично форматиране (подреждане)


//////////////////////////////Разполагаме с файл с около 3000 реда, трябва да намерим тялото на метод, чието име знаем - 
//////////////////////////////Навигираме до метода с помощта на F12


//////////////////////////////Налага се често да пишем стандартни фрагменти код - 
//////////////////////////////Използваме снипети, където е възможно


//////////////////////////////Забележка
//////////////////////////////Your answer is correct.
//////////////////////////////Правилният отговор е:
//////////////////////////////Свържете всеки от посочените случаи с решение, в което средата се използва пълноценно.

//////////////////////////////Кодът не е добре подреден - [използваме автоматично форматиране(подреждане)]

//////////////////////////////Разполагаме с файл с около 3000 реда, трябва да намерим тялото на метод, чието име знаем - [Навигираме до метода с помощта на F12]

//////////////////////////////Налага се често да пишем стандартни фрагменти код - [Използваме снипети, където е възможно]

//////////////////////////////Въпрос 14
//////////////////////////////Правилно
//////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////Текст на въпроса
//////////////////////////////Коя от следните опции НЕ Е налична във Visual Studio?

//////////////////////////////Изберете едно
//////////////////////////////a. преглед на база данни
//////////////////////////////b. компилатор
//////////////////////////////c. дебъгер
//////////////////////////////d. анализ на мрежови пакети 
//////////////////////////////Забележка
//////////////////////////////Your answer is correct.
//////////////////////////////Правилният отговор е: анализ на мрежови пакети
//////////////////////////////Въпрос 15
//////////////////////////////Отговорен
//////////////////////////////От максимално 40,00
//////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////Текст на въпроса
//////////////////////////////Пример: По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен

//////////////////////////////фрагмент. Предоставеният фрагмент да се приведе в работещ вид.



//////////////////////////////Условие:

//////////////////////////////Да се напише програма, която трябва да обработва информация за игри в JSON вид.

//////////////////////////////Създайте клас Game със свойства за:

//////////////////////////////● Id(int) – номер на играта

//////////////////////////////● Name (string) – име на играта

//////////////////////////////● Rating (decimal) – Metascore рейтинг на играта

//////////////////////////////● Year (DateTime) – дата на излизането на играта

//////////////////////////////Подзадачи:

//////////////////////////////● Преобразувайте данните от списък от клас Game към JSON

//////////////////////////////Изберете подходяща библиотека за работа с JSON за реализиране на подзадачите.

//////////////////////////////Фрагмент:

//////////////////////////////Game.cs:
//////////////////////////////public class Game
//////////////////////////////{
//////////////////////////////  public int Id
//////////////////////////////  {
//////////////////////////////    get; set

//////////////////////////////  public string Name get; set; }
//////////////////////////////public decimal Rating { get; }
//////////////////////////////public DateTime Year get; set; }
//////////////////////////////}

//////////////////////////////Program.cs:
//////////////////////////////using System;
//////////////////////////////using System.Collections.Generic;

//////////////////////////////namespace JSONGame
//////////////////////////////{
//////////////////////////////  class Program
//////////////////////////////  {
//////////////////////////////    static void Main(string[] args)
//////////////////////////////    {
//////////////////////////////      List games = new List();
//////////////////////////////      games.Add(new Game()
//////////////////////////////      {

//////////////////////////////        Id = 1,
//////////////////////////////        Name = "Game 1",
//////////////////////////////        Rating = 3
//////////////////////////////                Year = DateTime.Parse("1/1/1998")
//////////////////////////////      })

//////////////////////////////            games.Add(new()
//////////////////////////////            {
//////////////////////////////              Id = 2,
//////////////////////////////              Name = "Game 2",
//////////////////////////////              Rating = 3,
//////////////////////////////              Year = DateTime.Parse("1/1/2006")
//////////////////////////////            });

//////////////////////////////      string jsonString = JsonSerializer.(games);

//////////////////////////////      Console.WriteLine(jsonString)
//////////////////////////////        }
//////////////////////////////  }
//////////////////////////////}

////////////////////////////////Game.cs

//////////////////////////////public class Game

//////////////////////////////{

//////////////////////////////  public int Id { get; set; }

//////////////////////////////  public string Name { get; set; }

//////////////////////////////  public decimal Rating { get; set; }

//////////////////////////////  public DateTime Year { get; set; }

//////////////////////////////}



/////////////////////////////////Program.cs

//////////////////////////////using System;

//////////////////////////////using System.Collections.Generic;

//////////////////////////////using System.Text.Json;



//////////////////////////////namespace JSONGame

//////////////////////////////{

//////////////////////////////  class Program

//////////////////////////////  {

//////////////////////////////    static void Main(string[] args)

//////////////////////////////    {

//////////////////////////////      List<Game> games = new List<Game>();

//////////////////////////////      games.Add(new Game()

//////////////////////////////      {

//////////////////////////////        Id = 1,

//////////////////////////////        Name = "Game 1",

//////////////////////////////        Rating = 3,

//////////////////////////////        Year = DateTime.Parse("1/1/1998")

//////////////////////////////      });



//////////////////////////////      games.Add(new Game()

//////////////////////////////      {

//////////////////////////////        Id = 2,

//////////////////////////////        Name = "Game 2",

//////////////////////////////        Rating = 3,

//////////////////////////////        Year = DateTime.Parse("1/1/2006")

//////////////////////////////      });



//////////////////////////////      string jsonString = JsonSerializer.Serialize(games);



//////////////////////////////      Console.WriteLine(jsonString);

//////////////////////////////    }

//////////////////////////////  }

//////////////////////////////}



//////////////////////////////Въпрос 16
//////////////////////////////Правилно
//////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////Текст на въпроса
//////////////////////////////Посочете за какво служи клавиша F12 във Visual Studio.

//////////////////////////////Изберете едно
//////////////////////////////a. Бързо стартиране /Quick Launch/
//////////////////////////////b. Навигиране в кода /Go to Definition/ до тялото на даден метод 
//////////////////////////////c. Затваряне на програмата /Quit/
//////////////////////////////d. Навигиране до файл в проекта /Navigate To/
//////////////////////////////Забележка
//////////////////////////////Your answer is correct.
//////////////////////////////Правилният отговор е: Навигиране в кода /Go to Definition/ до тялото на даден метод
//////////////////////////////Въпрос 17
//////////////////////////////Правилно
//////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////Текст на въпроса
//////////////////////////////Посочете как се нарича пакетния мениджър в .NET?

//////////////////////////////Изберете едно
//////////////////////////////a. dotnet
//////////////////////////////b. NPM
//////////////////////////////c. PIP
//////////////////////////////d. NuGET 
//////////////////////////////Забележка
//////////////////////////////Your answer is correct.
//////////////////////////////Правилният отговор е: NuGET
//////////////////////////////Въпрос 18
//////////////////////////////Правилно
//////////////////////////////2,00 от максимално 2,00 точки
//////////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////////Текст на въпроса
//////////////////////////////Посочете за какво служи клавишната комбинация Ctrl + Q във Visual Studio.

//////////////////////////////Изберете едно
//////////////////////////////a. Затваряне на програмата /Quit/
//////////////////////////////b. Бързо стартиране /Quick Launch/ 
//////////////////////////////c. Навигиране в кода /Go to Definition/
//////////////////////////////d. Навигиране до файл в проекта /Navigate To/
//////////////////////////////Забележка
//////////////////////////////Your answer is correct.
//////////////////////////////Правилният отговор е: Бързо стартиране /Quick Launch/
//////////////////////////////Край на прегледа
//////////////////////////////Отиди на ...
//////////////////////////////Отиди на ...
//////////////////////////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
//////////////////////////////Навигация в теста
//////////////////////////////Край на прегледа
//////////////////////////////Вие сте влезли в системата като Добри Илев (Изход)
//////////////////////////////тренировъчен - курс - по
//////////////////////////////Data retention summary

////////////////////////////Прескочи на основното съдържание
////////////////////////////ПГЕЕ
////////////////////////////Български ‎(bg)‎ 
////////////////////////////Добри Илев 
////////////////////////////Тренировъчен курс - Програмно осигуряване
////////////////////////////Начална страница
////////////////////////////Моите курсове
//////////////////////////// тренировъчен-курс-по
//////////////////////////// Изпитна тема 12
//////////////////////////// Изпитна тема №12
////////////////////////////Започнат на	сряда, 26 април 2023, 13:22
////////////////////////////Състояние Завършен
////////////////////////////Приключен на	сряда, 26 април 2023, 13:38
////////////////////////////Изминало време	15 мин. 32 сек.
////////////////////////////Оценка	Още не е оценен
////////////////////////////Въпрос 1
////////////////////////////Правилно
////////////////////////////6,00 от максимално 6,00 точки
////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////Текст на въпроса
////////////////////////////Свържете всеки от посочените случаи с решение, в което средата се използва пълноценно.

////////////////////////////Кодът не е добре подреден - 
////////////////////////////използваме автоматично форматиране (подреждане)


////////////////////////////Разполагаме с файл с около 3000 реда, трябва да намерим тялото на метод, чието име знаем - 
////////////////////////////Навигираме до метода с помощта на F12


////////////////////////////Налага се често да пишем стандартни фрагменти код - 
////////////////////////////Използваме снипети, където е възможно


////////////////////////////Забележка
////////////////////////////Your answer is correct.
////////////////////////////Правилният отговор е:
////////////////////////////Свържете всеки от посочените случаи с решение, в което средата се използва пълноценно.

////////////////////////////Кодът не е добре подреден - [използваме автоматично форматиране(подреждане)]

////////////////////////////Разполагаме с файл с около 3000 реда, трябва да намерим тялото на метод, чието име знаем - [Навигираме до метода с помощта на F12]

////////////////////////////Налага се често да пишем стандартни фрагменти код - [Използваме снипети, където е възможно]

////////////////////////////Въпрос 2
////////////////////////////Правилно
////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////Текст на въпроса
////////////////////////////Посочете коя от следните команди е коректна команда за инсталиране на пакета Banichka чрез Package Manager Console във Visual Studo.

////////////////////////////Изберете едно
////////////////////////////a. Install-Package Banichka 
////////////////////////////b. vs.exe install banichka
////////////////////////////c. npm install banichka
////////////////////////////d. dotnet add banichka
////////////////////////////Забележка
////////////////////////////Your answer is correct.
////////////////////////////Правилният отговор е: Install - Package Banichka
////////////////////////////Въпрос 3
////////////////////////////Неправилно
////////////////////////////0,00 от максимално 2,00 точки
////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////Текст на въпроса
////////////////////////////Посочете за какво служи клавишната комбинация Ctrl + Q във Visual Studio.

////////////////////////////Изберете едно
////////////////////////////a. Навигиране в кода /Go to Definition/ 
////////////////////////////b. Навигиране до файл в проекта /Navigate To/
////////////////////////////c. Затваряне на програмата /Quit/
////////////////////////////d. Бързо стартиране /Quick Launch/
////////////////////////////Забележка
////////////////////////////Your answer is incorrect.
////////////////////////////Правилният отговор е: Бързо стартиране /Quick Launch/
////////////////////////////Въпрос 4
////////////////////////////Правилно
////////////////////////////6,00 от максимално 6,00 точки
////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////Текст на въпроса
////////////////////////////Демонстрирайте използването на библиотеката System.Text.Json (в .NET 5+) за десериализиране от JSON към обект.

////////////////////////////using Отговор
////////////////////////////System.Text.Json


////////////////////////////;

////////////////////////////namespace DeserializeExtra
////////////////////////////{
////////////////////////////  public class WeatherForecast
////////////////////////////  {
////////////////////////////    public DateTimeOffset Date { get; set; }
////////////////////////////    public int TemperatureCelsius { get; set; }
////////////////////////////    public string? Summary { get; set; }
////////////////////////////    public string? SummaryField;
////////////////////////////    public IList<DateTimeOffset>? DatesAvailable { get; set; }
////////////////////////////    public Dictionary<string, HighLowTemps>? TemperatureRanges { get; set; }
////////////////////////////    public string[]? SummaryWords { get; set; }
////////////////////////////  }

////////////////////////////  public class HighLowTemps
////////////////////////////  {
////////////////////////////    public int High { get; set; }
////////////////////////////    public int Low { get; set; }
////////////////////////////  }

////////////////////////////  public class Program
////////////////////////////  {
////////////////////////////    public static void Main()
////////////////////////////    {
////////////////////////////      string jsonString =
////////////////////////////@"{
////////////////////////////  ""Date"": ""2019-08-01T00:00:00-07:00"",
////////////////////////////  ""TemperatureCelsius"": 25,
////////////////////////////  ""Summary"": ""Hot"",
////////////////////////////  ""DatesAvailable"": [
////////////////////////////    ""2019-08-01T00:00:00-07:00"",
////////////////////////////    ""2019-08-02T00:00:00-07:00""
////////////////////////////  ],
////////////////////////////  ""TemperatureRanges"": {
////////////////////////////                ""Cold"": {
////////////////////////////                    ""High"": 20,
////////////////////////////      ""Low"": -10
////////////////////////////                },
////////////////////////////    ""Hot"": {
////////////////////////////                    ""High"": 60,
////////////////////////////      ""Low"": 20
////////////////////////////    }
////////////////////////////            },
////////////////////////////  ""SummaryWords"": [
////////////////////////////    ""Cool"",
////////////////////////////    ""Windy"",
////////////////////////////    ""Humid""
////////////////////////////  ]
////////////////////////////}
////////////////////////////";

////////////////////////////      WeatherForecast? weatherForecast = Отговор
////////////////////////////JsonSerializer.Deserialize<WeatherForecast>(jsonString)


////////////////////////////;

////////////////////////////      Console.WriteLine($"Date: {weatherForecast?.Date}");
////////////////////////////      Console.WriteLine($"TemperatureCelsius: {weatherForecast?.TemperatureCelsius}");
////////////////////////////      Console.WriteLine($"Summary: {weatherForecast?.Summary}");
////////////////////////////    }
////////////////////////////  }
////////////////////////////}
////////////////////////////Въпрос 5
////////////////////////////Правилно
////////////////////////////6,00 от максимално 6,00 точки
////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////Текст на въпроса
////////////////////////////Демонстрирайте как бихте инсталирали разширението CodeMaid в средата за разработка Visual Studio. Подредете картинките така, че да спазват правилната последователност от стъпките. 

////////////////////////////Номерирайте картинките, като използвате цифрите за влачене под таблицата.




//////////////////////////// blank 



//////////////////////////// blank 


//////////////////////////// blank 








////////////////////////////123
////////////////////////////Забележка
////////////////////////////Your answer is correct.
////////////////////////////Правилният отговор е:
////////////////////////////Демонстрирайте как бихте инсталирали разширението CodeMaid в средата за разработка Visual Studio. Подредете картинките така, че да спазват правилната последователност от стъпките. 

////////////////////////////Номерирайте картинките, като използвате цифрите за влачене под таблицата.




////////////////////////////[2]



////////////////////////////[1]


////////////////////////////[3]







////////////////////////////Въпрос 6
////////////////////////////Отговорен
////////////////////////////От максимално 4,00
////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////Текст на въпроса
////////////////////////////Обяснете как може да използвате снипети във Visual Studio.

////////////////////////////Снипетите в Visual Studio са малки фрагменти от код, които могат да бъдат лесно вмъквани в изходния код на проекта. С тяхна помощ можете да ускорите процеса на писане на код, като използвате готови конструкции и стандартни шаблони за определени задачи.

////////////////////////////За да използвате снипети в Visual Studio, можете да направите следните стъпки:

////////////////////////////Отворете редактора на код в Visual Studio.
////////////////////////////Натиснете клавиша Tab два пъти, за да се появи панелът за снипети.
////////////////////////////Изберете желания снипет от панела или напишете ключова дума, свързана с търсената функция, в полето за търсене.
////////////////////////////Натиснете Enter, за да вмъкнете снипета в текущия файл.
////////////////////////////Можете да създавате и персонализирате свои собствени снипети, като използвате функцията на Visual Studio "Създаване на нов снипет" (Create New Snippet). Това ви позволява да създавате снипети за често срещани задачи в проекта или да споделяте снипетите с други потребители.

////////////////////////////За да използвате персонализирани снипети, можете да ги добавите към Visual Studio чрез функцията "Импортиране на снипети" (Import Snippets). Това ви позволява да импортирате създадени от вас или от други потребители снипети, които може да използвате в своите проекти.


////////////////////////////Въпрос 7
////////////////////////////Отговорен
////////////////////////////От максимално 4,00
////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////Текст на въпроса
////////////////////////////Обяснете каква е разликата между Solution (Решение) и Project(Проект) във Visual Studio.

////////////////////////////Във Visual Studio Solution (Решението) е обвивка, която съдържа един или повече Project (Проекти). Solution представлява контейнер, който събира всички изходни кодове, използвани в проекта, като например класове, библиотеки, файлове за конфигурация и други. Solution може да бъде създадено от нулата или да се отвори вече създадено, а Project може да бъде добавен към Solution или да се създаде от самото Solution.

////////////////////////////Project (Проектът) във Visual Studio е единичен модул, който представлява изходен код на конкретна функционалност или логическа част от проекта. Той съдържа всички файлове, свързани с тази функционалност, като например код, изображения, конфигурационни файлове и др. Проектът може да бъде компилиран в отделен елемент на приложението или да бъде свързан с други проекти, които са част от едно и също Solution.

////////////////////////////Така че, основната разлика между Solution и Project е, че Solution представлява контейнер, който съдържа един или повече Project, като групира целия изходен код на приложението, а Project е конкретна функционалност или логическа част от приложението. Когато работите с Visual Studio, трябва да създадете Solution, за да можете да добавите проектите към него и да ги разработвате като едно цяло.


////////////////////////////Въпрос 8
////////////////////////////Правилно
////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////Текст на въпроса
////////////////////////////За какво служи клавишната комбинация Ctrl + K, Ctrl + D?

////////////////////////////Изберете едно
////////////////////////////a. нито едно от изброените
////////////////////////////b. избор на готов снипет от код
////////////////////////////c. преименуване на програмна единица
////////////////////////////d. подреждане на кода 
////////////////////////////Забележка
////////////////////////////Your answer is correct.
////////////////////////////Правилният отговор е: подреждане на кода
////////////////////////////Въпрос 9
////////////////////////////Отговорен
////////////////////////////От максимално 4,00
////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////Текст на въпроса
////////////////////////////Дайте пример за употреба на снипети във Visual Studio.

////////////////////////////Един от много примери за употреба на снипети във Visual Studio е при създаването на свойство (property) в C# код. С помощта на снипета можете да създадете много по-бързо и лесно свойство с готовия шаблон за гетър (getter) и сетър (setter). Ето как можете да използвате снипета за създаване на свойство:

////////////////////////////Отворете редактора на код в Visual Studio.
////////////////////////////Натиснете клавиша Tab два пъти, за да се появи панелът за снипети.
////////////////////////////В полето за търсене напишете "prop", за да търсите снипет за създаване на свойство.
////////////////////////////Изберете снипета "prop" и натиснете Enter.
////////////////////////////Вмъкнете името на свойството, което искате да създадете, следвано от Tab.
////////////////////////////Вмъкнете типа данни на свойството, следвано от Tab.
////////////////////////////Натиснете Enter, за да вмъкнете готовия шаблон за гетър и сетър.
////////////////////////////След като стъпките са изпълнени успешно, ще видите следния код:

////////////////////////////private int myVar; public int MyProperty { get { return myVar; } set { myVar = value; } }
////////////////////////////Този снипет ще Ви помогне да избегнете непродуктивното писане на едни и същи конструкции отново и отново и да ускорите процеса на разработка на приложения във Visual Studio.


////////////////////////////Въпрос 10
////////////////////////////Отговорен
////////////////////////////От максимално 4,00
////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////Текст на въпроса
////////////////////////////Обяснете какво е NuGET Package Manager.
////////////////////////////NuGet е пакетен мениджър за платформата .NET, който се използва за управление на външни библиотеки и зависимости в .NET проекти. Той осигурява удобен начин за инсталиране, актуализиране и премахване на библиотеки, които са нужни на вашите проекти във Visual Studio.

////////////////////////////NuGet Package Manager е инструмент, който е интегриран във Visual Studio и се използва за управление на NuGet пакетите в проектите. Той позволява на разработчиците да търсят, инсталират и актуализират NuGet пакети, без да е необходимо да търсят и изтеглят ръчно всяка библиотека. Package Manager предоставя и информация за зависимости между пакетите, което позволява на разработчиците да гарантират съвместимостта между различните пакети в тяхното приложение.

////////////////////////////За да използвате NuGet Package Manager, трябва да имате инсталиран Visual Studio и да отворите проект в средата на Visual Studio. В NuGet Package Manager може да търсите библиотеки по ключови думи или може да търсите пакети от конзолата. След като намерите нужния пакет, можете да го инсталирате в проекта, като щракнете върху бутона за инсталиране. NuGet Package Manager ще изтегли и инсталира пакета в проекта, както и всички необходими зависимости.

////////////////////////////Използването на NuGet Package Manager е много полезно, тъй като позволява лесно инсталиране и управление на библиотеки, които могат да се използват във вашия проект. Това ви осигурява бърза и удобна начин за добавяне на нови функции към вашия проект и поддържане на зависимости между библиотеките.


////////////////////////////Въпрос 11
////////////////////////////Правилно
////////////////////////////6,00 от максимално 6,00 точки
////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////Текст на въпроса
////////////////////////////Демонстрирайте използването на библиотеката System.Text.Json (в .NET 5+) за сериализиране към JSON.

////////////////////////////using Отговор
////////////////////////////System.Text.Json


////////////////////////////;
////////////////////////////namespace SerializeBasic
////////////////////////////{
////////////////////////////  public class WeatherForecast
////////////////////////////  {
////////////////////////////    public DateTimeOffset Date { get; set; }
////////////////////////////    public int TemperatureCelsius { get; set; }
////////////////////////////    public string? Summary { get; set; }
////////////////////////////  }

////////////////////////////  public class Program
////////////////////////////  {
////////////////////////////    public static void Main()
////////////////////////////    {
////////////////////////////      var weatherForecast = new WeatherForecast
////////////////////////////      {
////////////////////////////        Date = DateTime.Parse("2019-08-01"),
////////////////////////////        TemperatureCelsius = 25,
////////////////////////////        Summary = "Hot"
////////////////////////////      };

////////////////////////////      string jsonString = Отговор
////////////////////////////JsonSerializer.Serialize(weatherForecast)


////////////////////////////;
////////////////////////////      Console.WriteLine(jsonString);
////////////////////////////    }
////////////////////////////  }
////////////////////////////}
////////////////////////////Въпрос 12
////////////////////////////Правилно
////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////Текст на въпроса
////////////////////////////Посочете коя от изброените програми e среда за разработка на софтуер.
////////////////////////////Изберете едно
////////////////////////////a. Notepad++
////////////////////////////b. Google Chrome
////////////////////////////c. Microsoft Excel
////////////////////////////d. Visual Studio 
////////////////////////////Забележка
////////////////////////////Your answer is correct.
////////////////////////////Правилният отговор е: Visual Studio
////////////////////////////Въпрос 13
////////////////////////////Правилно
////////////////////////////4,00 от максимално 4,00 точки
////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////Текст на въпроса
////////////////////////////За всяка от клавишните комбинации задайте нейното действие във Visual Studio

////////////////////////////Ctrl-K + Ctrl-C 
////////////////////////////закоментиране на избраните редове


////////////////////////////Ctrl-K + Ctrl-U 
////////////////////////////премахване на коментар от избраните редове


////////////////////////////Ctrl-K + Ctrl-D 
////////////////////////////подреждане (форматиране) на кода


////////////////////////////Ctrl + Shift + N 
////////////////////////////създаване на нов файл


////////////////////////////Забележка
////////////////////////////Your answer is correct.
////////////////////////////Правилният отговор е:
////////////////////////////За всяка от клавишните комбинации задайте нейното действие във Visual Studio

////////////////////////////Ctrl-K + Ctrl-C [закоментиране на избраните редове]

////////////////////////////Ctrl - K + Ctrl - U[премахване на коментар от избраните редове]

////////////////////////////Ctrl - K + Ctrl - D[подреждане(форматиране) на кода]

////////////////////////////Ctrl + Shift + N[създаване на нов файл]

////////////////////////////Въпрос 14
////////////////////////////Правилно
////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////Текст на въпроса
////////////////////////////Посочете с коя директива се включват в кода допълнителни библиотеки.

////////////////////////////Изберете едно
////////////////////////////a. import
////////////////////////////b. using
////////////////////////////c.require
////////////////////////////d.include
////////////////////////////Забележка
////////////////////////////Your answer is correct.
////////////////////////////Правилният отговор е: using
////////////////////////////Въпрос 15
////////////////////////////Неправилно
////////////////////////////0,00 от максимално 2,00 точки
////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////Текст на въпроса
////////////////////////////Коя от следните опции НЕ Е налична във Visual Studio?

////////////////////////////Изберете едно
////////////////////////////a. компилатор 
////////////////////////////b. преглед на база данни
////////////////////////////c. дебъгер
////////////////////////////d. анализ на мрежови пакети
////////////////////////////Забележка
////////////////////////////Your answer is incorrect.
////////////////////////////Правилният отговор е: анализ на мрежови пакети
////////////////////////////Въпрос 16
////////////////////////////Правилно
////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////Текст на въпроса
////////////////////////////Посочете какво означава абревиатурата IDE:

////////////////////////////Изберете едно
////////////////////////////a. Internet Development Environment
////////////////////////////b. Integrated Development Environment 
////////////////////////////c. Instant Document Exchange
////////////////////////////d. Internal Development Environment
////////////////////////////Забележка
////////////////////////////Your answer is correct.
////////////////////////////Правилният отговор е: Integrated Development Environment
////////////////////////////Въпрос 17
////////////////////////////Отговорен
////////////////////////////От максимално 40,00
////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////Текст на въпроса
////////////////////////////Пример: По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен

////////////////////////////фрагмент. Предоставеният фрагмент да се приведе в работещ вид.



////////////////////////////Условие:

////////////////////////////Да се напише програма, която трябва да обработва информация за игри в JSON вид.

////////////////////////////Създайте клас Car със свойства за:

////////////////////////////● Id(int) – номер

////////////////////////////● Model(string) – модел на колата

////////////////////////////● Km (int) – Километри

////////////////////////////● FirstRegister(DateTime) – дата на първа регистрация

////////////////////////////Подзадачи:

////////////////////////////● Преобразувайте данните от списък от клас Car към JSON

////////////////////////////Изберете подходяща библиотека за работа с JSON за реализиране на подзадачите.

////////////////////////////Фрагмент:

////////////////////////////Car.cs:
////////////////////////////public class Car
////////////////////////////{
////////////////////////////  public int Id
////////////////////////////  {
////////////////////////////    get; set

////////////////////////////  public string Model get; set; }
////////////////////////////public int Km { get; }
////////////////////////////public DateTime FirstRegister get; set; }
////////////////////////////}

////////////////////////////Program.cs:
////////////////////////////using System;
////////////////////////////using System.Collections.Generic;

////////////////////////////namespace JSONGame
////////////////////////////{
////////////////////////////  class Program
////////////////////////////  {
////////////////////////////    static void Main(string[] args)
////////////////////////////    {
////////////////////////////      List cars = new List();
////////////////////////////      car.Add(new Car()
////////////////////////////      {

////////////////////////////        Id = 1,
////////////////////////////        Name = "Car 1",
////////////////////////////        Km = 300000
////////////////////////////                FirstRegister = DateTime.Parse("1/1/1998")
////////////////////////////      })

////////////////////////////            games.Add(new()
////////////////////////////            {
////////////////////////////              Id = 2,
////////////////////////////              Name = "Car 2",
////////////////////////////              Km = 230000,
////////////////////////////              FirstRegister = DateTime.Parse("1/8/2006")
////////////////////////////            });

////////////////////////////      string jsonString = JsonSerializer.(games);

////////////////////////////      Console.WriteLine(jsonString)
////////////////////////////        }
////////////////////////////  }
////////////////////////////}

////////////////////////////using System;

////////////////////////////using System.Collections.Generic;

////////////////////////////using System.Text.Json; // Добавено, за да използваме JsonSerializer



////////////////////////////namespace JSONCar

////////////////////////////{

////////////////////////////  class Program

////////////////////////////  {

////////////////////////////    static void Main(string[] args)

////////////////////////////    {

////////////////////////////      List<Car> cars = new List<Car>(); // Добавена спецификация на типа 'Car'



////////////////////////////      cars.Add(new Car()

////////////////////////////      {

////////////////////////////        Id = 1,

////////////////////////////        Model = "Car 1",

////////////////////////////        Km = 300000,

////////////////////////////        FirstRegister = DateTime.Parse("1/1/1998")

////////////////////////////      });



////////////////////////////      cars.Add(new Car()

////////////////////////////      {

////////////////////////////        Id = 2,

////////////////////////////        Model = "Car 2",

////////////////////////////        Km = 230000,

////////////////////////////        FirstRegister = DateTime.Parse("1/8/2006")

////////////////////////////      });



////////////////////////////      string jsonString = JsonSerializer.Serialize(cars); // Добавена Serialize функцията



////////////////////////////      Console.WriteLine(jsonString);

////////////////////////////    }

////////////////////////////  }

////////////////////////////}



////////////////////////////Въпрос 18
////////////////////////////Правилно
////////////////////////////2,00 от максимално 2,00 точки
////////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////////Текст на въпроса
////////////////////////////За какво служи клавиш F5 във Visual Studio?

////////////////////////////Изберете едно
////////////////////////////a. стартиране на програмата в дебъг режим 
////////////////////////////b. затваряне на стартирана програма
////////////////////////////c. стартиране на програмата в стандартен режим
////////////////////////////d. стартиране на програмата в режим стъпка-по-стъпка
////////////////////////////Забележка
////////////////////////////Your answer is correct.
////////////////////////////Правилният отговор е: стартиране на програмата в дебъг режим
////////////////////////////Край на прегледа
////////////////////////////Отиди на ...
////////////////////////////Отиди на ...
////////////////////////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
////////////////////////////Навигация в теста
////////////////////////////Край на прегледа
////////////////////////////Вие сте влезли в системата като Добри Илев (Изход)
////////////////////////////тренировъчен - курс - по
////////////////////////////Data retention summary

////////////////////////////ИЗПИТНА ТЕМА 13

//////////////////////////Прескочи на основното съдържание
//////////////////////////ПГЕЕ
//////////////////////////Български ‎(bg)‎ 
//////////////////////////Добри Илев 
//////////////////////////Тренировъчен курс - Програмно осигуряване
//////////////////////////Начална страница
//////////////////////////Моите курсове
////////////////////////// тренировъчен-курс-по
////////////////////////// Изпитна тема 13
////////////////////////// Изпитна тема №13
//////////////////////////Започнат на	неделя, 26 март 2023, 11:22
//////////////////////////Състояние Завършен
//////////////////////////Приключен на	неделя, 26 март 2023, 12:29
//////////////////////////Изминало време	1 час 6 мин.
//////////////////////////Оценка	Още не е оценен
//////////////////////////Въпрос 1
//////////////////////////Отговорен
//////////////////////////От максимално 6,00
//////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////Текст на въпроса
//////////////////////////Демонстрирайте създаване на ViewModel за ToDoItem със следните полета:

//////////////////////////Id

//////////////////////////Title(заглавие, максимум 50 знака, задължително)

//////////////////////////Description(описание, максимум 255 знака, не е задължително)

//////////////////////////ToDoListId

//////////////////////////public class ToDoItemViewMoDel

//////////////////////////{

//////////////////////////  public int Id { get; set; }

//////////////////////////  [MaxLength(50, ErrorMessage = "Title can have 50 characters")]

//////////////////////////  public string Title { get; set; }

//////////////////////////  [MaxLength(255, ErrorMessage = "Title can have 255 characters")]

//////////////////////////  public string Description { get; set; }

//////////////////////////  public int ToDoListId { get; set; }

//////////////////////////}

//////////////////////////Въпрос 2
//////////////////////////Не е отговорен
//////////////////////////От максимално 20,00
//////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////Текст на въпроса
//////////////////////////Пример: По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен

//////////////////////////фрагмент. Предоставеният фрагмент да се приведе в работещ вид.



//////////////////////////Условие:

//////////////////////////Разполагате със следната схема. Създайте класове, които да ѝ съответстват и да са подходящи

//////////////////////////за работа с ORM система. Запишете класовете един под друг в отговора.


//////////////////////////Въпрос 3
//////////////////////////Отговорен
//////////////////////////От максимално 4,00
//////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////Текст на въпроса
//////////////////////////Обяснете предназначението на изгледа в MVC и ASP.NET Core.

//////////////////////////Изгледът в модел-изглед-контролер(MVC) е компонент, който се използва за генериране на HTML или друга маркираща езикова информация, която се изпраща към браузъра на потребителя като резултат от заявката му.

//////////////////////////Той има следните предназначения:

//////////////////////////-Генериране на маркираща езикова информация.

//////////////////////////-Предоставяне на динамично съдържание.

//////////////////////////-Поддръжка на различни шаблони.

//////////////////////////-Разделяне на задачи.

//////////////////////////Въпрос 4
//////////////////////////Правилно
//////////////////////////2,00 от максимално 2,00 точки
//////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////Текст на въпроса
//////////////////////////Посочете какво означава абривиатурата ORM:

//////////////////////////Изберете едно
//////////////////////////a.
//////////////////////////Open Registration Method
//////////////////////////b.
//////////////////////////Operational Repair Machine
//////////////////////////c.
//////////////////////////One Real Model
//////////////////////////d.
//////////////////////////Object Relational Mapping
//////////////////////////Забележка
//////////////////////////Your answer is correct.
//////////////////////////Правилният отговор е:
//////////////////////////Object Relational Mapping
//////////////////////////Въпрос 5
//////////////////////////Правилно
//////////////////////////2,00 от максимално 2,00 точки
//////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////Текст на въпроса
//////////////////////////Посочете как се нарича типа в EntityFrameworkCore, който съдържа в себе си записите от дадена таблица от база данни.

//////////////////////////Изберете едно
//////////////////////////a. Entries
//////////////////////////b. DbContext
//////////////////////////c. List
//////////////////////////d. DbSet 
//////////////////////////Забележка
//////////////////////////Your answer is correct.
//////////////////////////Правилният отговор е: DbSet
//////////////////////////Въпрос 6
//////////////////////////Правилно
//////////////////////////2,00 от максимално 2,00 точки
//////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////Текст на въпроса
//////////////////////////Кое от следните е характерно за Code first подхода?
//////////////////////////Изберете едно
//////////////////////////a.
//////////////////////////Създава съответните таблици в БД следвайки тяхно описание чрез същностни класове (entity класове) 
//////////////////////////b.За всеки клас се създава отделна БД и контекст клас
//////////////////////////c. Използвайки вече създадена база данни, създава клас, който ѝ съответства
//////////////////////////d. Използвайки вече създадените таблици в база данни, създава класове, които ѝ съответстват
//////////////////////////Забележка
//////////////////////////Your answer is correct.
//////////////////////////Правилният отговор е:
//////////////////////////Създава съответните таблици в БД следвайки тяхно описание чрез същностни класове (entity класове)
//////////////////////////Въпрос 7
//////////////////////////Не е отговорен
//////////////////////////От максимално 20,00
//////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////Текст на въпроса
//////////////////////////Пример: По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен

//////////////////////////фрагмент. Предоставеният фрагмент да се приведе в работещ вид.



//////////////////////////Условие:

//////////////////////////Разполагате със следната схема. Създайте класове, които да ѝ съответстват и да са подходящи

//////////////////////////за работа с ORM система.


//////////////////////////Въпрос 8
//////////////////////////Правилно
//////////////////////////2,00 от максимално 2,00 точки
//////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////Текст на въпроса
//////////////////////////Трябва да създадете метод, който проверява дали дадено потребителско име съществува или не. Посочете кое е най-подходящото име за него, което спазва добрите практики за именуване на методи в .NET.
//////////////////////////Изберете едно
//////////////////////////a. check
//////////////////////////b. Username Exists
//////////////////////////c. UsernameInUse 
//////////////////////////d. Checkusername
//////////////////////////Забележка
//////////////////////////Your answer is correct.
//////////////////////////Правилният отговор е: UsernameInUse
//////////////////////////Въпрос 9
//////////////////////////Правилно
//////////////////////////2,00 от максимално 2,00 точки
//////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////Текст на въпроса
//////////////////////////Посочете кое от следните НЕ Е ORM система.

//////////////////////////Изберете едно
//////////////////////////a. Hibernate
//////////////////////////b. Doctrine
//////////////////////////c. EntityFrameworkCore
//////////////////////////d. Microsoft SQL Server 
//////////////////////////Забележка
//////////////////////////Your answer is correct.
//////////////////////////Правилният отговор е: Microsoft SQL Server
//////////////////////////Въпрос 10
//////////////////////////Отговорен
//////////////////////////От максимално 4,00
//////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////Текст на въпроса
//////////////////////////Обяснете защо примерния програмен фрагмент няма да доведе до изтриване на данни от базата данни:

//////////////////////////public void DeleteList(ToDoList toDoList)

//////////////////////////{

//////////////////////////  _context.ToDoList.Remove(toDoList);

//////////////////////////}

//////////////////////////public void DeleteList(ToDoList toDoList)

//////////////////////////{

//////////////////////////  _context.ToDoList.Remove(toDoList);

//////////////////////////}

//////////////////////////Няма да се изтрият данни от базата данни, защото не е извикана командата _context.SaveChanges(), за да се запишат промените в базата данни.

//////////////////////////Ако не се извика командата промените в базата данни няма да си останат .

//////////////////////////Ето поправения код:

//////////////////////////public void DeleteList(ToDoList toDoList)

//////////////////////////{

//////////////////////////  _context.ToDoList.Remove(toDoList);

//////////////////////////  _context.SaveChanges();

//////////////////////////}



//////////////////////////Въпрос 11
//////////////////////////Правилно
//////////////////////////2,00 от максимално 2,00 точки
//////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////Текст на въпроса
//////////////////////////Посочете кое от следните е ORM система.

//////////////////////////Изберете едно
//////////////////////////a. Visual Studio
//////////////////////////b. EntityFrameworkCore 
//////////////////////////c. MySQL
//////////////////////////d. Microsoft SQL Server
//////////////////////////Забележка
//////////////////////////Your answer is correct.
//////////////////////////The correct answers are: EntityFrameworkCore, Microsoft SQL Server
//////////////////////////Въпрос 12
//////////////////////////Правилно
//////////////////////////2,00 от максимално 2,00 точки
//////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////Текст на въпроса
//////////////////////////За колко действия може да отговаря един метод?

//////////////////////////Изберете едно
//////////////////////////a. едно 
//////////////////////////b. не повече от 10
//////////////////////////c. няма значение от броя на действията, но броя на редовите не бива да е по-голям от 30
//////////////////////////d. методите не отговарят за действия, а за стойности
//////////////////////////Забележка
//////////////////////////Your answer is correct.
//////////////////////////Правилният отговор е: едно
//////////////////////////Въпрос 13
//////////////////////////Отговорен
//////////////////////////От максимално 6,00
//////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////Текст на въпроса
//////////////////////////Разполагате със следния Context клас за връзка с БД в EntityFrameworkCore.

//////////////////////////Демонстрирайте Create операция, като напишете код за Create метода на клас, който добавя запис. Използвайте предоставения скелет.

//////////////////////////using Microsoft.EntityFrameworkCore;
//////////////////////////using System;
//////////////////////////using System.Collections.Generic;
//////////////////////////using System.Linq;
//////////////////////////using System.Text;
//////////////////////////using System.Threading.Tasks;
//////////////////////////using ToDoListMVC.DAL.Entities;

//////////////////////////namespace ToDoListMVC.DAL.Data
//////////////////////////{
//////////////////////////  public class ToDoDbContext : DbContext
//////////////////////////  {
//////////////////////////    public DbSet<ToDoList> ToDoLists { get; set; }
//////////////////////////    public DbSet<ToDoItem> ToDoItems { get; set; }
//////////////////////////    public ToDoDbContext(DbContextOptions<ToDoDbContext> options)
//////////////////////////        : base(options)
//////////////////////////    {
//////////////////////////    }
//////////////////////////    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
//////////////////////////    {
//////////////////////////      base.OnConfiguring(optionsBuilder);
//////////////////////////      optionsBuilder.UseLazyLoadingProxies();
//////////////////////////    }
//////////////////////////  }
//////////////////////////}

//////////////////////////Скелет за клас:

//////////////////////////using Microsoft.EntityFrameworkCore;
//////////////////////////using System;
//////////////////////////using System.Collections.Generic;
//////////////////////////using System.Linq;
//////////////////////////using System.Text;
//////////////////////////using System.Threading.Tasks;
//////////////////////////using ToDoListMVC.DAL.Abstractions;
//////////////////////////using ToDoListMVC.DAL.Data;

//////////////////////////namespace ToDoListMVC.DAL.Repositories
//////////////////////////{
//////////////////////////  public class ToDoRepository
//////////////////////////  {
//////////////////////////    private readonly ToDoDbContext _context;
//////////////////////////    public ToDoRepository(ToDoDbContext dbContext)
//////////////////////////    {
//////////////////////////      _context = dbContext;
//////////////////////////    }
//////////////////////////    public void Create(ToDoList entity)
//////////////////////////    {
//////////////////////////      // your code goes here
//////////////////////////    }

//////////////////////////  }
//////////////////////////}
//////////////////////////using Microsoft.EntityFrameworkCore;
//////////////////////////using System;
//////////////////////////using System.Collections.Generic;
//////////////////////////using System.Linq;
//////////////////////////using System.Text;
//////////////////////////using System.Threading.Tasks;
//////////////////////////using ToDoListMVC.DAL.Entities;

//////////////////////////namespace ToDoListMVC.DAL.Data
//////////////////////////{
//////////////////////////  public class ToDoDbContext : DbContext
//////////////////////////  {
//////////////////////////    public DbSet<ToDoList> ToDoLists { get; set; }
//////////////////////////    public DbSet<ToDoItem> ToDoItems { get; set; }
//////////////////////////    public ToDoDbContext(DbContextOptions<ToDoDbContext> options)
//////////////////////////        : base(options)
//////////////////////////    {
//////////////////////////    }
//////////////////////////    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
//////////////////////////    {
//////////////////////////      base.OnConfiguring(optionsBuilder);
//////////////////////////      optionsBuilder.UseLazyLoadingProxies();
//////////////////////////    }
//////////////////////////  }
//////////////////////////}

//////////////////////////Скелет за клас:

//////////////////////////using Microsoft.EntityFrameworkCore;
//////////////////////////using System;
//////////////////////////using System.Collections.Generic;
//////////////////////////using System.Linq;
//////////////////////////using System.Text;
//////////////////////////using System.Threading.Tasks;
//////////////////////////using ToDoListMVC.DAL.Abstractions;
//////////////////////////using ToDoListMVC.DAL.Data;

//////////////////////////namespace ToDoListMVC.DAL.Repositories
//////////////////////////{
//////////////////////////  public class ToDoRepository
//////////////////////////  {
//////////////////////////    private readonly ToDoDbContext _context;
//////////////////////////    public ToDoRepository(ToDoDbContext dbContext)
//////////////////////////    {
//////////////////////////      _context = dbContext;
//////////////////////////    }
//////////////////////////    public void Create(ToDoList entity)
//////////////////////////    {
//////////////////////////      _context.ToDoList.Add(entity);
//////////////////////////      _context.SaveChanges();
//////////////////////////    }

//////////////////////////  }
//////////////////////////}
//////////////////////////Въпрос 14
//////////////////////////Отговорен
//////////////////////////От максимално 4,00
//////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////Текст на въпроса
//////////////////////////Обяснете действието на следния фрагмент:

//////////////////////////toDoList.ModifiedAt = DateTime.Now;
//////////////////////////_context.Update(toDoList);
//////////////////////////await _context.SaveChangesAsync();
//////////////////////////Кода променя ModifiedAt свойството на ToDoList обекта на текущата дата и време, след което прави актуализация на този обект в базата данни, използвайки метода Update() на DbContext-a.

//////////////////////////Използва се асинхронен метод на контекста SaveChangesAsync, за да се запазят промените в базата данни.

//////////////////////////Въпрос 15
//////////////////////////Правилно
//////////////////////////2,00 от максимално 2,00 точки
//////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////Текст на въпроса
//////////////////////////Посочете кой от следните примери е нарушение на добрите практики при използването на WindowsForms като графичен потребителски интерфейс за приложение.

//////////////////////////Изберете едно
//////////////////////////a. разполагане на слоевете в отделни проекти в solution
//////////////////////////b. имената на контролите от форма са оставени по подразбиране на label1, button1 и т.н. 
//////////////////////////c. наличие на слой за данни
//////////////////////////d. наличие на слой за бизнес логика (слой за услуги)
//////////////////////////Забележка
//////////////////////////Your answer is correct.
//////////////////////////Правилният отговор е: имената на контролите от форма са оставени по подразбиране на label1, button1 и т.н.
//////////////////////////Въпрос 16
//////////////////////////Правилно
//////////////////////////6,00 от максимално 6,00 точки
//////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////Текст на въпроса
//////////////////////////Демонстрирайте създаване на клас, който съответства на следната таблица в БД:



//////////////////////////class Person
//////////////////////////{

//////////////////////////  blank

//////////////////////////  blank

////////////////////////// blank

////////////////////////// blank

////////////////////////// blank

////////////////////////// blank

//////////////////////////}


//////////////////////////public int Id { get; set; }
//////////////////////////public string FirstName { get; set; }
//////////////////////////public string MiddleName { get; set; }
//////////////////////////public string LastName { get; set; }
//////////////////////////public DateTime BirthDate { get; set; }
//////////////////////////public int CityId { get; set; }
//////////////////////////public int FirstName { get; set; }
//////////////////////////public int MiddkeName { get set; }public double LastName { get; set }
//////////////////////////public string BirthDate { get; set; }
//////////////////////////private DateTime BirthDate { get; set; }
//////////////////////////private int CityId { get set; }private string BirthDate { get; set; }
//////////////////////////Забележка
//////////////////////////Your answer is correct.
//////////////////////////Правилният отговор е:
//////////////////////////Демонстрирайте създаване на клас, който съответства на следната таблица в БД:



//////////////////////////class Person
//////////////////////////{

//////////////////////////  [public int Id { get; set; }]

//////////////////////////[public string FirstName { get; set; }]

//////////////////////////[public string MiddleName { get; set; }]

//////////////////////////[public string LastName { get; set; }]

//////////////////////////[public DateTime BirthDate { get; set; }]

//////////////////////////[public int CityId { get; set; }]

//////////////////////////}

//////////////////////////Въпрос 17
//////////////////////////Отговорен
//////////////////////////От максимално 4,00
//////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////Текст на въпроса
//////////////////////////Обяснете предназначението на модела в MVC и ASP.NET Core.

//////////////////////////Моделът в MVC и ASP.NET Core представлява обект или клас, който съдържа данните и логиката на приложението.Той предоставя обобщена репрезентация на данните, която може да се използва от контролерите и изгледите за да се извършват операции с тях.



//////////////////////////Моделите могат да бъдат използвани за съхраняване на данни, получени от базата данни, като също така могат да съдържат и бизнес логиката на приложението, като валидацията на данни или логиката за изпълнение на операции.

//////////////////////////Въпрос 18
//////////////////////////Отговорен
//////////////////////////От максимално 6,00
//////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////Текст на въпроса
//////////////////////////Разполагате със следния Context клас за връзка с БД в EntityFrameworkCore.

//////////////////////////Демонстрирайте Update операция, като напишете код за Update метода на клас, който редактира запис. Използвайте предоставения скелет.

//////////////////////////using Microsoft.EntityFrameworkCore;
//////////////////////////using System;
//////////////////////////using System.Collections.Generic;
//////////////////////////using System.Linq;
//////////////////////////using System.Text;
//////////////////////////using System.Threading.Tasks;
//////////////////////////using ToDoListMVC.DAL.Entities;

//////////////////////////namespace ToDoListMVC.DAL.Data
//////////////////////////{
//////////////////////////  public class ToDoDbContext : DbContext
//////////////////////////  {
//////////////////////////    public DbSet<ToDoList> ToDoLists { get; set; }
//////////////////////////    public DbSet<ToDoItem> ToDoItems { get; set; }
//////////////////////////    public ToDoDbContext(DbContextOptions<ToDoDbContext> options)
//////////////////////////        : base(options)
//////////////////////////    {
//////////////////////////    }
//////////////////////////    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
//////////////////////////    {
//////////////////////////      base.OnConfiguring(optionsBuilder);
//////////////////////////      optionsBuilder.UseLazyLoadingProxies();
//////////////////////////    }
//////////////////////////  }
//////////////////////////}

//////////////////////////Скелет за клас:

//////////////////////////using Microsoft.EntityFrameworkCore;
//////////////////////////using System;
//////////////////////////using System.Collections.Generic;
//////////////////////////using System.Linq;
//////////////////////////using System.Text;
//////////////////////////using System.Threading.Tasks;
//////////////////////////using ToDoListMVC.DAL.Abstractions;
//////////////////////////using ToDoListMVC.DAL.Data;

//////////////////////////namespace ToDoListMVC.DAL.Repositories
//////////////////////////{
//////////////////////////  public class ToDoRepository
//////////////////////////  {
//////////////////////////    private readonly ToDoDbContext _context;
//////////////////////////    public ToDoRepository(ToDoDbContext dbContext)
//////////////////////////    {
//////////////////////////      _context = dbContext;
//////////////////////////    }
//////////////////////////    public void Update(ToDoItem entity)
//////////////////////////    {


//////////////////////////    }

//////////////////////////  }
//////////////////////////}
//////////////////////////using Microsoft.EntityFrameworkCore;
//////////////////////////using System;
//////////////////////////using System.Collections.Generic;
//////////////////////////using System.Linq;
//////////////////////////using System.Text;
//////////////////////////using System.Threading.Tasks;
//////////////////////////using ToDoListMVC.DAL.Entities;

//////////////////////////namespace ToDoListMVC.DAL.Data
//////////////////////////{
//////////////////////////  public class ToDoDbContext : DbContext
//////////////////////////  {
//////////////////////////    public DbSet<ToDoList> ToDoLists { get; set; }
//////////////////////////    public DbSet<ToDoItem> ToDoItems { get; set; }
//////////////////////////    public ToDoDbContext(DbContextOptions<ToDoDbContext> options)
//////////////////////////        : base(options)
//////////////////////////    {
//////////////////////////    }
//////////////////////////    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
//////////////////////////    {
//////////////////////////      base.OnConfiguring(optionsBuilder);
//////////////////////////      optionsBuilder.UseLazyLoadingProxies();
//////////////////////////    }
//////////////////////////  }
//////////////////////////}



//////////////////////////using Microsoft.EntityFrameworkCore;
//////////////////////////using System;
//////////////////////////using System.Collections.Generic;
//////////////////////////using System.Linq;
//////////////////////////using System.Text;
//////////////////////////using System.Threading.Tasks;
//////////////////////////using ToDoListMVC.DAL.Abstractions;
//////////////////////////using ToDoListMVC.DAL.Data;

//////////////////////////namespace ToDoListMVC.DAL.Repositories
//////////////////////////{
//////////////////////////  public class ToDoRepository
//////////////////////////  {
//////////////////////////    private readonly ToDoDbContext _context;
//////////////////////////    public ToDoRepository(ToDoDbContext dbContext)
//////////////////////////    {
//////////////////////////      _context = dbContext;
//////////////////////////    }
//////////////////////////    public void Update(ToDoItem entity)
//////////////////////////    {
//////////////////////////      var existingEntity = _context.ToDoItems.FirstOrDefault(x => x.Id == entity.Id);
//////////////////////////      if (existingEntity != null)
//////////////////////////      {
//////////////////////////        existingEntity.Title = entity.Title;
//////////////////////////        existingEntity.Description = entity.Description;
//////////////////////////        existingEntity.IsDone = entity.IsDone;
//////////////////////////        existingEntity.ModifiedAt = DateTime.Now;
//////////////////////////        _context.Update(existingEntity);
//////////////////////////        _context.SaveChanges();
//////////////////////////      }

//////////////////////////    }
//////////////////////////  }
//////////////////////////}

//////////////////////////Въпрос 19
//////////////////////////Отговорен
//////////////////////////От максимално 4,00
//////////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////////Текст на въпроса
//////////////////////////Обяснете действието на следния фрагмент:

//////////////////////////	toDoList.CreatedAt = DateTime.Now;
//////////////////////////_context.Add(toDoList);
//////////////////////////await _context.SaveChangesAsync();
//////////////////////////Даденият фрагмент код служи за създаване на нов обект от тип ToDoList в базата данни. Първото действие е да се зададе текущата дата и час на свойството CreatedAt на ToDoList обекта, за да се запази информация за времето на създаване на записа.

//////////////////////////След това се извиква метода Add() на DbSet-ът ToDoLists, който добавя новия обект към контекста на базата данни, като по този начин се приготвя за записване в базата данни.

//////////////////////////След това се извиква асинхронният метод SaveChangesAsync() на контекста, който записва данните в базата данни, като този метод се изчаква да завърши, преди да продължи изпълнението на кода.

//////////////////////////Така, когато този фрагмент се изпълни, създава се нов обект от тип ToDoList в базата данни, като се запазва информация за времето на създаване на записа и се записва в базата данни, като тези промени се запазват и потвърждават чрез SaveChangesAsync() метода.


//////////////////////////Край на прегледа
//////////////////////////Отиди на ...
//////////////////////////Отиди на ...
//////////////////////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
//////////////////////////Навигация в теста
//////////////////////////Край на прегледа
//////////////////////////Вие сте влезли в системата като Добри Илев (Изход)
//////////////////////////тренировъчен - курс - по
//////////////////////////Data retention summary


//////////////////////////ИЗПИТНА  ТЕМА 14

////////////////////////Прескочи на основното съдържание
////////////////////////ПГЕЕ
////////////////////////Български ‎(bg)‎ 
////////////////////////Добри Илев 
////////////////////////Тренировъчен курс - Програмно осигуряване
////////////////////////Начална страница
////////////////////////Моите курсове
//////////////////////// тренировъчен-курс-по
//////////////////////// Изпитна тема 14
//////////////////////// Изпитна тема №14
////////////////////////Започнат на	сряда, 22 февруари 2023, 14:23
////////////////////////Състояние Завършен
////////////////////////Приключен на	сряда, 22 февруари 2023, 14:50
////////////////////////Изминало време	27 мин. 18 сек.
////////////////////////Оценка	Още не е оценен
////////////////////////Въпрос 1
////////////////////////Правилно
////////////////////////2,00 от максимално 2,00 точки
////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////Текст на въпроса
////////////////////////Кое от следните е система за инсталация на пакети в Линукс дистрибуция?
////////////////////////Изберете едно
////////////////////////a. apt 
////////////////////////b. pip
////////////////////////c. Всички изброени
////////////////////////d. npm
////////////////////////Забележка
////////////////////////Your answer is correct.
////////////////////////Правилният отговор е: apt
////////////////////////Въпрос 2
////////////////////////Правилно
////////////////////////4,00 от максимално 4,00 точки
////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////Текст на въпроса
////////////////////////Нишката  blank  от  blank . Една програма задължително има  blank . Нишките  blank . Нишките позволяват  blank .





////////////////////////e частне е частпроцесапрограматаоперационната системаглавна нишканишка на преден планнишка на заден плансподелят общи ресурсиимат самостоятелни ресурсиконкурентното изпълнение на програмни инструкциипоследователното изпълнение на програмни инструкции
////////////////////////Забележка
////////////////////////Your answer is correct.
////////////////////////Правилният отговор е: Нишката[e част] от[процеса].Една програма задължително има [главна нишка]. Нишките[споделят общи ресурси].Нишките позволяват[конкурентното изпълнение на програмни инструкции].
////////////////////////Въпрос 3
////////////////////////Отговорен
////////////////////////От максимално 6,00
////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////Текст на въпроса
////////////////////////Демонстрирайте инсталация на пакет build-essentials в Линукс дистрибуция.

////////////////////////sudo apt update

////////////////////////sudo apt install build-essential



////////////////////////Въпрос 4
////////////////////////Отговорен
////////////////////////От максимално 10,00
////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////Текст на въпроса
////////////////////////Пример: По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид. 

////////////////////////Условие: Създайте директория my_dir1, която се намира в домашната папка на потребителя. Създайте директория my_dir2, която се намира в my_dir1, а след това създайте файл hello.txt в my_dir2. Приемете, че стартирате от кореновата директория

////////////////////////Фрагмент:

////////////////////////cd..mk dir my_dir1

////////////////////////mkdir my_dir2

////////////////////////cd my_dir2

////////////////////////make hello.txt

////////////////////////cd ~



////////////////////////mkdir my_dir1



////////////////////////cd my_dir1



////////////////////////mkdir my_dir2



////////////////////////cd my_dir2



////////////////////////touch hello.txt



////////////////////////Забележка
////////////////////////Еталон на коректния отговор:

////////////////////////cd ~

////////////////////////mkdir my_dir1

////////////////////////cd my_dir1

////////////////////////mkdir my_dir2

////////////////////////cd my_dir2

////////////////////////touch hello.txt

////////////////////////Грешките във фрагмента са:

////////////////////////след първото cd трябва да стои пътя на кореновата директория.

////////////////////////mk dir командата трябва да е изписана слято

////////////////////////след mkdir my_dir1 трябва да стои командата: cd my_dir1

////////////////////////make my_dir2 трябва да бъде touch hello.txt

////////////////////////За всяка коригирана грешка се присъждат по 2 точки.

////////////////////////Въпрос 5
////////////////////////Правилно
////////////////////////2,00 от максимално 2,00 точки
////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////Текст на въпроса
////////////////////////Коя от следните команди инсталира пакет чрез apt системата за управление на пакети в Линукс?

////////////////////////Изберете едно
////////////////////////a. install package-name
////////////////////////b. apt install package-name 
////////////////////////c. npm install package-name
////////////////////////d. pip install package-name
////////////////////////Забележка
////////////////////////Your answer is correct.
////////////////////////Правилният отговор е: apt install package-name
////////////////////////Въпрос 6
////////////////////////Правилно
////////////////////////6,00 от максимално 6,00 точки
////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////Текст на въпроса
////////////////////////Демонстрирайте употребата на команда, която извежда съдържанието на текущата директория с  детайли.

////////////////////////Отговор: 
////////////////////////ls - l
////////////////////////Забележка
////////////////////////Правилният отговор е: ls - l
////////////////////////Въпрос 7
////////////////////////Отговорен
////////////////////////От максимално 6,00
////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////Текст на въпроса
////////////////////////Демонстрирайте инсталация на пакет node в Линукс дистрибуция.

////////////////////////sudo apt-get install -y nodejs

////////////////////////Въпрос 8
////////////////////////Правилно
////////////////////////2,00 от максимално 2,00 точки
////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////Текст на въпроса
////////////////////////Коя от следните команди служи за копиране на файл в Linux?

////////////////////////Изберете едно
////////////////////////a. rm
////////////////////////b. copy
////////////////////////c. mv
////////////////////////d. cp 
////////////////////////Забележка
////////////////////////Your answer is correct.
////////////////////////Правилният отговор е: cp
////////////////////////Въпрос 9
////////////////////////Отговорен
////////////////////////От максимално 10,00
////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////Текст на въпроса
////////////////////////Пример: По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид. 

////////////////////////Условие: Изтрийте чрез команди директория my_dir, която е разположена в домашната папка на потребителя. Приемете, че стартирате от кореновата директория на системата. Ако директорията не съществува, изведете съобщение "Already removed".

////////////////////////Фрагмент:

////////////////////////[ -d "$HOME/my_dir  && echo "" || rm dir ~/my_dir

////////////////////////if [ -d "$HOME/my_dir" ] ; then

////////////////////////  rm -r "$HOME/my_dir"

////////////////////////else

////////////////////////  echo "Already removed"

////////////////////////fi



////////////////////////Забележка
////////////////////////Еталон на коректния отговор:

////////////////////////[ -d "$HOME" ]  && echo "Already removed" || rmdir ~/ my_dir


////////////////////////Грешките във фрагмента са:

////////////////////////след - d трябва да се постави път към директорията, чието съществуване желаем да проверим.

////////////////////////Липсва затваряща квадратна скоба

////////////////////////името на директорията за проверка трябва да е в кавички - липсва една кавичка

////////////////////////Липсва echo командата

////////////////////////rm dir трябва да е изписано слято: rmdir

////////////////////////За всяка коригирана грешка се присъждат по 2 точки.

////////////////////////Въпрос 10
////////////////////////Отчасти верен
////////////////////////2,40 от максимално 4,00 точки
////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////Текст на въпроса
////////////////////////Провлачете състоянията на процеса до съответното място в диаграмата.

////////////////////////Background image for dragging markers onto
////////////////////////Създаден Готов Чакащ Стартиран Унищожен 
////////////////////////СъздаденГотовЧакащУнищоженСтартиран
////////////////////////Забележка
////////////////////////Your answer is partially correct.
////////////////////////Вие правилно сте избрали 3.
////////////////////////Въпрос 11
////////////////////////Правилно
////////////////////////2,00 от максимално 2,00 точки
////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////Текст на въпроса
////////////////////////Коя от следните команди инсталира програмата apache2 в Linux дистрибуция?
////////////////////////Изберете едно
////////////////////////a. apt install apache2 
////////////////////////b. install-package apache2
////////////////////////c. yarn install apache2
////////////////////////d. pip install apache2
////////////////////////Забележка
////////////////////////Your answer is correct.
////////////////////////Правилният отговор е: apt install apache2
////////////////////////Въпрос 12
////////////////////////Правилно
////////////////////////2,00 от максимално 2,00 точки
////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////Текст на въпроса
////////////////////////Коя от следните команди служи за извеждане на текущата работна директория в Линукс?

////////////////////////Изберете едно
////////////////////////a. mkdir
////////////////////////b. cp
////////////////////////c. pwd 
////////////////////////d. mv
////////////////////////Забележка
////////////////////////Your answer is correct.
////////////////////////Правилният отговор е: pwd
////////////////////////Въпрос 13
////////////////////////Правилно
////////////////////////2,00 от максимално 2,00 точки
////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////Текст на въпроса
////////////////////////Посочете какво ядро използва ОС Линукс:

////////////////////////Изберете едно
////////////////////////a. микро
////////////////////////b. монолитно 
////////////////////////c. хибридно
////////////////////////d. многослойно
////////////////////////Забележка
////////////////////////Your answer is correct.
////////////////////////Правилният отговор е: монолитно
////////////////////////Въпрос 14
////////////////////////Отчасти верен
////////////////////////2,67 от максимално 4,00 точки
////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////Текст на въпроса
////////////////////////С помощта на предложените блокчета довършете определенията:

////////////////////////хардуер - blank

////////////////////////софтуер - blank

////////////////////////потребител - blank



////////////////////////програма, която управлява хардуерачовек или машина, които се възползват от работата на компютъраоперационна система и приложениякутията на компютъра част на компютъраапаратната част на компютърапрограми, които могат да бъдат стартирани
////////////////////////Забележка
////////////////////////Your answer is partially correct.
////////////////////////Вие правилно сте избрали 2.
////////////////////////Правилният отговор е:
////////////////////////С помощта на предложените блокчета довършете определенията:

////////////////////////хардуер - [апаратната част на компютъра]

////////////////////////софтуер - [операционна система и приложения]

////////////////////////потребител - [човек или машина, които се възползват от работата на компютъра]

////////////////////////Въпрос 15
////////////////////////Правилно
////////////////////////2,00 от максимално 2,00 точки
////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////Текст на въпроса
////////////////////////Коя от следните команди служи за изтриване на файл в Линукс?

////////////////////////Изберете едно
////////////////////////a. cp
////////////////////////b. rm 
////////////////////////c. delete
////////////////////////d. mv
////////////////////////Забележка
////////////////////////Your answer is correct.
////////////////////////Правилният отговор е: rm
////////////////////////Въпрос 16
////////////////////////Отговорен
////////////////////////От максимално 4,00
////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////Текст на въпроса
////////////////////////Посочете с няколко изречения разликата между L1 и L2 кеша на процесора.
////////////////////////L1 cache и L2 cache са различни типове кеш памет, които се използват за да ускорят процесора.

////////////////////////L1 cache е по-бърза от L2 cache, но по-малка в размер. Тя се използва за да се запазят често използваните данни и инструкции, така че процесорът да може да ги достъпи бързо.

////////////////////////L2 cache е по-голяма от L1 cache и по-бавна, но се използва като вторична опция, ако данните или инструкциите не са достъпни в L1 cache.

////////////////////////В общи линии, L1 cache и L2 cache работят заедно, за да подобрят производителността на процесора, като осигуряват бърз достъп до данни и инструкции.


////////////////////////Въпрос 17
////////////////////////Отговорен
////////////////////////От максимално 10,00
////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////Текст на въпроса
////////////////////////Пример: По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид. 

////////////////////////Условие: Изтрийте чрез команди файл my_file, който е разположен в домашната папка на потребителя. Приемете, че стартирате от кореновата директория на системата. Ако файлът не съществува, изведете съобщение "Already removed".

////////////////////////Фрагмент:

//////////////////////// -f file path goes here ] && echo "Already removed" || rmdir ~/my_file



////////////////////////if [ -f ~/my_file] ; then

////////////////////////  rm ~/my_file

////////////////////////else

////////////////////////  echo "Already removed"

////////////////////////fi



////////////////////////Забележка
////////////////////////Еталон на коректния отговор:

////////////////////////[ -f "$HOME/my_file" ] && rm ~/ my_file || echo "Already removed"

////////////////////////Грешките във фрагмента са:

////////////////////////след - f трябва да се постави път към файла, чието съществуване желаем да проверим.

////////////////////////Липсва отваряща квадратна скоба

////////////////////////пътя към файла за проверка трябва да е в кавички 

////////////////////////echo и rmdir/rm командите трябва да се разменят - echo след ||

////////////////////////rmdir трябва да е изписано като: rm

////////////////////////За всяка коригирана грешка се присъждат по 2 точки.

////////////////////////Въпрос 18
////////////////////////Правилно
////////////////////////2,00 от максимално 2,00 точки
////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////Текст на въпроса
////////////////////////Изберете вярното твърдение

////////////////////////Изберете едно
////////////////////////a. Данните на SSD диск се губят след рестартиране.
////////////////////////b. RAM паметта съхранява данни временно. 
////////////////////////c. Процесорите разполагат с кеш-памет, която е по-голяма от RAM паметта.
////////////////////////d. Всяка мрежова карта поддържа безжична връзка към Интернет.
////////////////////////Забележка
////////////////////////Your answer is correct.
////////////////////////Правилният отговор е: RAM паметта съхранява данни временно.
////////////////////////Въпрос 19
////////////////////////Отговорен
////////////////////////От максимално 4,00
////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////Текст на въпроса
////////////////////////Какво е виртуална памет? Какви са ползите от нея?
////////////////////////Виртуалната памет е технология, която позволява компютърната система да работи с повече памет, отколкото физически има вътре. Тя се реализира чрез поделяне на физическата памет на няколко виртуални копия и използването на жесткия диск като временно репозитори за данните, които не се нуждаят от моментален достъп.

////////////////////////Ползите от виртуалната памет са:

////////////////////////Подобряване на производителността на компютъра, като се осигурява по-голям достъп до паметта за приложенията, които се използват.
////////////////////////Възможност за работа с повече приложения едновременно, като се позволява на компютъра да използва виртуална памет, когато физическата памет е заета.
////////////////////////Улесняване на администрирането на паметта, тъй като не е необходимо да се променя

////////////////////////Въпрос 20
////////////////////////Отговорен
////////////////////////От максимално 10,00
////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////Текст на въпроса
////////////////////////Пример: По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид. 

////////////////////////Условие: Изведете съдържанието на директорията my_dir, ако тя съществува. В противен случай изведете съобщение "The directory does not exist". Приемете, че стартирате от кореновата директория на системата. 

////////////////////////Фрагмент:

////////////////////////[ -d dir goes here  && ls ~/ my_dir || "The directory does not exist"

////////////////////////[ -d ~/my_dir] && ls ~/ my_dir || echo "The directory does not exist"



////////////////////////Забележка
////////////////////////Еталон на коректния отговор:

////////////////////////[ -d "$HOME/my_dir" ] && ls ~/ my_dir || echo "The directory does not eixst"

////////////////////////Грешките във фрагмента са:

////////////////////////след - d трябва да се постави път към директорията, чието съществуване желаем да проверим.

////////////////////////Липсва затваряща квадратна скоба

////////////////////////името на директорията за проверка трябва да е в кавички

////////////////////////Липсва echo омандата

////////////////////////~/ my_dir трябва да е изписано слято: ~/ my_dir

////////////////////////За всяка коригирана грешка се присъждат по 2 точки.

////////////////////////Въпрос 21
////////////////////////Правилно
////////////////////////6,00 от максимално 6,00 точки
////////////////////////НеотбелязанОтбелязване на въпроса
////////////////////////Текст на въпроса
////////////////////////Демонстрирайте употребата на команда, която извежда на екрана текст "Hello!"

////////////////////////Отговор: 
////////////////////////echo "Hello!"
////////////////////////Забележка
////////////////////////Правилният отговор е: echo "Hello!"
////////////////////////Край на прегледа
////////////////////////Отиди на ...
////////////////////////Отиди на ...
////////////////////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
////////////////////////Навигация в теста
////////////////////////Показване по един въпрос на страница
////////////////////////Край на прегледа
////////////////////////Вие сте влезли в системата като Добри Илев (Изход)
////////////////////////тренировъчен - курс - по
////////////////////////Data retention summary

//////////////////////Прескочи на основното съдържание
//////////////////////ПГЕЕ
//////////////////////Български ‎(bg)‎ 
//////////////////////Добри Илев 
//////////////////////Тренировъчен курс - Програмно осигуряване
//////////////////////Начална страница
//////////////////////Моите курсове
////////////////////// тренировъчен-курс-по
////////////////////// Изпитна тема 14
////////////////////// Изпитна тема №14
//////////////////////Започнат на	неделя, 26 март 2023, 16:47
//////////////////////Състояние Завършен
//////////////////////Приключен на	понеделник, 27 март 2023, 19:23
//////////////////////Изминало време	1 ден 2 часа
//////////////////////Оценка	Още не е оценен
//////////////////////Въпрос 1
//////////////////////Правилно
//////////////////////4,00 от максимално 4,00 точки
//////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////Текст на въпроса
//////////////////////Провлачете състоянията на процеса до съответното място в диаграмата.

//////////////////////Background image for dragging markers onto
//////////////////////Създаден Готов Чакащ Стартиран Унищожен 
//////////////////////УнищоженГотовЧакащСтартиранСъздаден
//////////////////////Забележка
//////////////////////Your answer is correct.
//////////////////////Въпрос 2
//////////////////////Отговорен
//////////////////////От максимално 10,00
//////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////Текст на въпроса
//////////////////////Пример: По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид. 

//////////////////////Условие: Създайте директория my_dir1, която се намира в домашната папка на потребителя. Създайте директория my_dir2, която се намира в my_dir1, а след това създайте файл hello.txt в my_dir2. Приемете, че стартирате от кореновата директория

//////////////////////Фрагмент:

//////////////////////cd..mk dir my_dir1

//////////////////////mkdir my_dir2

//////////////////////cd my_dir2

//////////////////////make hello.txt

//////////////////////cd ~

//////////////////////mkdir my_dir1

//////////////////////cd my_dir1

//////////////////////mkdir my_dir2

//////////////////////cd my_dir2

//////////////////////touch hello.txt


//////////////////////Забележка
//////////////////////Еталон на коректния отговор:

//////////////////////cd ~

//////////////////////mkdir my_dir1

//////////////////////cd my_dir1

//////////////////////mkdir my_dir2

//////////////////////cd my_dir2

//////////////////////touch hello.txt

//////////////////////Грешките във фрагмента са:

//////////////////////след първото cd трябва да стои пътя на кореновата директория.

//////////////////////mk dir командата трябва да е изписана слято

//////////////////////след mkdir my_dir1 трябва да стои командата: cd my_dir1

//////////////////////make my_dir2 трябва да бъде touch hello.txt

//////////////////////За всяка коригирана грешка се присъждат по 2 точки.

//////////////////////Въпрос 3
//////////////////////Отговорен
//////////////////////От максимално 4,00
//////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////Текст на въпроса
//////////////////////Какво е виртуална памет? Какви са ползите от нея?
//////////////////////Виртуалната памет е техника на управление на паметта, при която операционната система използва част от твърдия диск като разширение на физическата оперативна памет(RAM).Тази техника позволява на компютрите да използват по-голям обем памет от този, който е наличен физически в системата.



//////////////////////Ползите са:

//////////////////////-Увеличаване на капацитета на паметта.

//////////////////////-Поддръжка на по-големи и по-сложни приложения.

//////////////////////-Изолация на процесите.

//////////////////////-Ефективно управление на ресурсите.

//////////////////////Въпрос 4
//////////////////////Отчасти верен
//////////////////////2,00 от максимално 4,00 точки
//////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////Текст на въпроса
//////////////////////Програмата е  blank , а процесът е  blank 



//////////////////////набор от инструкции към процесора записани върху носителнабор от инструкции към потребителя записани върху носителнабор от команди към операционната система записани върху твърд дискнабор от инструкции към процесора записани в RAM паметтаабстракция на програма в режим на изпълнениеабстракция на програмаинтерфейса на програматаexe файла на програмата
//////////////////////Забележка
//////////////////////Your answer is partially correct.
//////////////////////Вие правилно сте избрали 1.
//////////////////////Правилният отговор е:
//////////////////////Програмата е[набор от инструкции към процесора записани върху носител], а процесът е [абстракция на програма в режим на изпълнение]

//////////////////////Въпрос 5
//////////////////////Отговорен
//////////////////////От максимално 6,00
//////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////Текст на въпроса
//////////////////////Демонстрирайте команда за опресняване на източниците на пакети за пакетен мениджър в Линукс дистрибуция

//////////////////////sudo apt-get update



//////////////////////Въпрос 6
//////////////////////Правилно
//////////////////////2,00 от максимално 2,00 точки
//////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////Текст на въпроса
//////////////////////Коя от следните команди служи за създаване на файл в Линукс?

//////////////////////Изберете едно
//////////////////////a. touch 
//////////////////////b. cd
//////////////////////c. ls
//////////////////////d. echo
//////////////////////Забележка
//////////////////////Your answer is correct.
//////////////////////Правилният отговор е: touch
//////////////////////Въпрос 7
//////////////////////Правилно
//////////////////////2,00 от максимално 2,00 точки
//////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////Текст на въпроса
//////////////////////Коя от следните команди инсталира програмата apache2 в Linux дистрибуция?
//////////////////////Изберете едно
//////////////////////a. yarn install apache2
//////////////////////b. pip install apache2
//////////////////////c. apt install apache2 
//////////////////////d. install-package apache2
//////////////////////Забележка
//////////////////////Your answer is correct.
//////////////////////Правилният отговор е: apt install apache2
//////////////////////Въпрос 8
//////////////////////Отговорен
//////////////////////От максимално 4,00
//////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////Текст на въпроса
//////////////////////Посочете с няколко изречения разликата между L1 и L2 кеша на процесора.
//////////////////////L1(Level 1) и L2(Level 2) кешовете са два различни слоя на кеш-паметта, които са интегрирани в процесорите, за да подобрят скоростта и производителността на достъпа до паметта.

//////////////////////Разликите са:

//////////////////////-Местоположение и близост: L1 кешът е най-близко до ядрото на процесора и обикновено е интегриран в самото ядро.L2 кешът се намира малко по-далеч от ядрото и може да бъде споделян между няколко ядра.

//////////////////////-Капацитет: L1 кешът има по-малък капацитет в сравнение с L2 кеша.L1 кеша е с размер от 16-64 KB докато L2 кеша е с 256 и достига до няколко мегабайта.

//////////////////////-Скорост:L1 кеша е по-бърз от L2 кеша, защото се намира по-близо до ядрото и има по-малък размер от L2 кеша.

//////////////////////Въпрос 9
//////////////////////Правилно
//////////////////////2,00 от максимално 2,00 точки
//////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////Текст на въпроса
//////////////////////Кое от следните спада към хардуера?

//////////////////////Изберете едно или повече:
//////////////////////a.процесор
//////////////////////b.дънна платка
//////////////////////c. оперативна памет
//////////////////////d.BIOS
//////////////////////Забележка
//////////////////////Your answer is correct.
//////////////////////The correct answers are: дънна платка, процесор, оперативна памет
//////////////////////Въпрос 10
//////////////////////Правилно
//////////////////////2,00 от максимално 2,00 точки
//////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////Текст на въпроса
//////////////////////Кое от следните спада към софтуера?

//////////////////////Изберете едно или повече:
//////////////////////a.Google Chrome
//////////////////////b.Ubuntu Linux
//////////////////////c.Node JS
//////////////////////d.CMOS батерия
//////////////////////Забележка
//////////////////////Your answer is correct.
//////////////////////The correct answers are: Ubuntu Linux, Google Chrome, Node JS
//////////////////////Въпрос 11
//////////////////////Правилно
//////////////////////2,00 от максимално 2,00 точки
//////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////Текст на въпроса
//////////////////////Кое от следните е система за инсталация на пакети в Линукс дистрибуция?
//////////////////////Изберете едно
//////////////////////a. Всички изброени
//////////////////////b.apt
//////////////////////c. npm
//////////////////////d. pip
//////////////////////Забележка
//////////////////////Your answer is correct.
//////////////////////Правилният отговор е: apt
//////////////////////Въпрос 12
//////////////////////Правилно
//////////////////////4,00 от максимално 4,00 точки
//////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////Текст на въпроса
//////////////////////С помощта на предложените блокчета довършете определенията:

//////////////////////хардуер -  blank

//////////////////////софтуер -  blank

//////////////////////потребител -  blank


//////////////////////програма, която управлява хардуерапрограми, които могат да бъдат стартираниоперационна система и приложенияапаратната част на компютъракутията на компютъра част на компютърачовек или машина, които се възползват от работата на компютъра
//////////////////////Забележка
//////////////////////Your answer is correct.
//////////////////////Правилният отговор е:
//////////////////////С помощта на предложените блокчета довършете определенията:

//////////////////////хардуер - [апаратната част на компютъра]

//////////////////////софтуер - [операционна система и приложения]

//////////////////////потребител - [човек или машина, които се възползват от работата на компютъра]

//////////////////////Въпрос 13
//////////////////////Отговорен
//////////////////////От максимално 10,00
//////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////Текст на въпроса
//////////////////////Пример: По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент.Предоставеният фрагмент да се приведе в работещ вид. 

//////////////////////Условие: Изтрийте чрез команди файл my_file, който е разположен в домашната папка на потребителя. Приемете, че стартирате от кореновата директория на системата.Ако файлът не съществува, изведете съобщение "Already removed".

//////////////////////Фрагмент:

////////////////////// -f file path goes here ] && echo "Already removed" || rmdir ~/ my_file



////////////////////// [-f  ~/ my_file] && rm ~/ my_file || echo "Already removed"

//////////////////////Забележка
//////////////////////Еталон на коректния отговор:

//////////////////////[ -f "$HOME/my_file" ] && rm ~/ my_file || echo "Already removed"

//////////////////////Грешките във фрагмента са:

//////////////////////след - f трябва да се постави път към файла, чието съществуване желаем да проверим.

//////////////////////Липсва отваряща квадратна скоба

//////////////////////пътя към файла за проверка трябва да е в кавички 

//////////////////////echo и rmdir/rm командите трябва да се разменят - echo след ||

//////////////////////rmdir трябва да е изписано като: rm

//////////////////////За всяка коригирана грешка се присъждат по 2 точки.

//////////////////////Въпрос 14
//////////////////////Правилно
//////////////////////6,00 от максимално 6,00 точки
//////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////Текст на въпроса
//////////////////////Демонстрирайте употребата на команда, която създава директория с име di_2022

//////////////////////Отговор: 
//////////////////////mkdir di_2022
//////////////////////Забележка
//////////////////////Правилният отговор е: mkdir di_2022
//////////////////////Въпрос 15
//////////////////////Правилно
//////////////////////2,00 от максимално 2,00 точки
//////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////Текст на въпроса
//////////////////////Коя от следните команди служи за промяна на текущата работна директория в Линукс?

//////////////////////Изберете едно
//////////////////////a. cd 
//////////////////////b. pwd
//////////////////////c. md
//////////////////////d. chmod
//////////////////////Забележка
//////////////////////Your answer is correct.
//////////////////////Правилният отговор е: cd
//////////////////////Въпрос 16
//////////////////////Отговорен
//////////////////////От максимално 10,00
//////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////Текст на въпроса
//////////////////////Пример: По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид. 

//////////////////////Условие: Изтрийте чрез команди директория my_dir, която е разположена в домашната папка на потребителя. Приемете, че стартирате от кореновата директория на системата. Ако директорията не съществува, изведете съобщение "Already removed".

//////////////////////Фрагмент:

//////////////////////[ -d "$HOME/my_dir  && echo "" || rm dir ~/my_dir

//////////////////////[ -d "$HOME/my_dir"] && rm - r "$HOME/my_dir" || echo ""Already removed" 

//////////////////////Забележка
//////////////////////Еталон на коректния отговор:

//////////////////////[ -d "$HOME" ]  && echo "Already removed" || rmdir ~/ my_dir


//////////////////////Грешките във фрагмента са:

//////////////////////след - d трябва да се постави път към директорията, чието съществуване желаем да проверим.

//////////////////////Липсва затваряща квадратна скоба

//////////////////////името на директорията за проверка трябва да е в кавички - липсва една кавичка

//////////////////////Липсва echo командата

//////////////////////rm dir трябва да е изписано слято: rmdir

//////////////////////За всяка коригирана грешка се присъждат по 2 точки.

//////////////////////Въпрос 17
//////////////////////Отговорен
//////////////////////От максимално 6,00
//////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////Текст на въпроса
//////////////////////Демонстрирайте инсталация на пакет gimp в Линукс дистрибуция/

//////////////////////sudo apt update
//////////////////////sudo apt install gimp

//////////////////////Въпрос 18
//////////////////////Неправилно
//////////////////////0,00 от максимално 6,00 точки
//////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////Текст на въпроса
//////////////////////Демонстрирайте употребата на команда, която извежда всички файлове и директории рекурсивно за директория с име di_2022, която се намира в домашната папка на потребителя. Приемете, че изпълнявате командата, намирайки се в домашната папка на потребителя.

//////////////////////Отговор: 
//////////////////////ls - R di_2022
//////////////////////Забележка
//////////////////////Правилният отговор е: ls - l - R ~/ di_2022
//////////////////////Въпрос 19
//////////////////////Отговорен
//////////////////////От максимално 10,00
//////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////Текст на въпроса
//////////////////////Пример: По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид. 

//////////////////////Условие: Създайте чрез команди директория my_dir, която да е разположена в домашната папка на потребителя. Приемете, че стартирате от кореновата директория на системата. Ако директорията съществува, изведете съобщение "Already exists".

//////////////////////Фрагмент:

//////////////////////[ -d dir goes here  &&  "Dir exists" || mk dir ~/my_dir

//////////////////////[ -d ~/my_dir]  && mkdir ~/ my_dir || echo "Already exists"

//////////////////////Забележка
//////////////////////Еталон на коректния отговор:

//////////////////////[ -d "$HOME/my_dir" ] && echo "Dir exists" || mkdir ~/ my_dir

//////////////////////Грешките във фрагмента са:

//////////////////////след - dir трябва да се постави път към директорията, чието съществуване желаем да проверим.

//////////////////////Липсва затваряща квадратна скоба

//////////////////////името на директорията за проверка трябва да е в кавички

//////////////////////Липсва echo омандата

//////////////////////mk dir трябва да е изписано слято: mkdir

//////////////////////За всяка коригирана грешка се присъждат по 2 точки.

//////////////////////Въпрос 20
//////////////////////Правилно
//////////////////////2,00 от максимално 2,00 точки
//////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////Текст на въпроса
//////////////////////Коя от следните команди служи за създаване на директория в Линукс?

//////////////////////Изберете едно
//////////////////////a. cp
//////////////////////b. mv
//////////////////////c. touch
//////////////////////d. mkdir 
//////////////////////Забележка
//////////////////////Your answer is correct.
//////////////////////Правилният отговор е: mkdir
//////////////////////Въпрос 21
//////////////////////Правилно
//////////////////////2,00 от максимално 2,00 точки
//////////////////////НеотбелязанОтбелязване на въпроса
//////////////////////Текст на въпроса
//////////////////////Кое от следните НЕ е система за инсталация на пакети в Линукс дистрибуция?

//////////////////////Изберете едно
//////////////////////a. apt
//////////////////////b. dpkg
//////////////////////c. npm 
//////////////////////d. yum
//////////////////////Забележка
//////////////////////Your answer is correct.
//////////////////////Правилният отговор е: npm
//////////////////////Край на прегледа
//////////////////////Отиди на ...
//////////////////////Отиди на ...
//////////////////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
//////////////////////Навигация в теста
//////////////////////Показване по един въпрос на страница
//////////////////////Край на прегледа
//////////////////////Вие сте влезли в системата като Добри Илев (Изход)
//////////////////////тренировъчен - курс - по
//////////////////////Data retention summary


//////////////////////ИЗПИТНА ТЕМА 15
////////////////////Прескочи на основното съдържание
////////////////////ПГЕЕ
////////////////////Български ‎(bg)‎ 
////////////////////Добри Илев 
////////////////////Тренировъчен курс - Програмно осигуряване
////////////////////Начална страница
////////////////////Моите курсове
//////////////////// тренировъчен-курс-по
//////////////////// Изпитна тема 15
//////////////////// Изпитна тема №15
////////////////////Започнат на	сряда, 22 февруари 2023, 15:14
////////////////////Състояние Завършен
////////////////////Приключен на	сряда, 22 февруари 2023, 15:36
////////////////////Изминало време	22 мин. 24 сек.
////////////////////Въпрос 1
////////////////////Отговорен
////////////////////От максимално 40,00
////////////////////НеотбелязанОтбелязване на въпроса
////////////////////Текст на въпроса
////////////////////Пример: По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен

////////////////////фрагмент. Предоставеният фрагмент да се приведе в работещ вид.



////////////////////Условие:

////////////////////Създайте чрез команди необходимите директории и файлове от следната диаграма:



////////////////////Файловете red, green и blue трябва да съдържат като съдържание шестнадесетичните кодове

////////////////////на всеки от цветовете. След създаване на всички файлове и директории архивирайте mydir и

////////////////////всички поддиректории и файлове.

////////////////////Фрагмент:

////////////////////cd ~

////////////////////mk dir mydir

////////////////////  mydir

////////////////////mkdir colors shapes animals

////////////////////cd ../animals

////////////////////mkdir reptiles mammals

////////////////////cd colors

////////////////////touch red green blue

////////////////////echo '#ff0000' < red

////////////////////echo '#00ff00' > green

////////////////////echo '#0000ff' > blue

////////////////////cd ../../

////////////////////zip -r mydir.zip mydir


////////////////////cd ~



////////////////////mkdir mydir  # грешка в командата за създаване на директория



////////////////////cd mydir



////////////////////mkdir colors shapes animals  # необходимо е да се използва пълен път до директорията colors



////////////////////cd ../animals



////////////////////mkdir reptiles mammals



////////////////////cd ../colors



////////////////////touch red green blue



////////////////////echo '#ff0000' > red  # грешка в командата за пренасочване на входа



////////////////////echo '#00ff00' > green



////////////////////echo '#0000ff' > blue



////////////////////cd ../../



////////////////////zip -r mydir.zip mydir



////////////////////Въпрос 2
////////////////////Отговорен
////////////////////От максимално 2,00
////////////////////НеотбелязанОтбелязване на въпроса
////////////////////Текст на въпроса
////////////////////Как се нарича единицата за разпределение на дисковото пространство в ext4?

////////////////////Изберете едно
////////////////////a. том
////////////////////b. блок
////////////////////c. клъстер
////////////////////d. страница
////////////////////Въпрос 3
////////////////////Отговорен
////////////////////От максимално 2,00
////////////////////НеотбелязанОтбелязване на въпроса
////////////////////Текст на въпроса
////////////////////Коя от следните услуги е свръзана с протокола HyperText Transfer Protocol?

////////////////////Изберете едно
////////////////////a. ntpd
////////////////////b. nfsd
////////////////////c. httpd
////////////////////d. sshd
////////////////////Въпрос 4
////////////////////Отговорен
////////////////////От максимално 6,00
////////////////////НеотбелязанОтбелязване на въпроса
////////////////////Текст на въпроса
////////////////////Демонстрирайте с помощта на команда монтиране на файлова система от устройство /dev/sdb1 на точка /mnt/media, като зададете за тип на файловата система ntfs

////////////////////sudo mount -t ntfs /dev/sdb1 /mnt/media



////////////////////Въпрос 5
////////////////////Отговорен
////////////////////От максимално 6,00
////////////////////НеотбелязанОтбелязване на въпроса
////////////////////Текст на въпроса
////////////////////Демонстрирайте команда за създаване на директория с име di_2022 в Линукс. Приемете, че се намирате в домашната папка на потребителя.

////////////////////mkdir ~/di_2022



////////////////////Въпрос 6
////////////////////Отговорен
////////////////////От максимално 4,00
////////////////////НеотбелязанОтбелязване на въпроса
////////////////////Текст на въпроса
////////////////////Изберете правилното наименование за описаната файлова система


////////////////////ntfs

////////////////////Тази файлова система се използва по подразбиране в Windows 10. Поддържа файл с размери до 256 TB.


////////////////////fat32

////////////////////Тази файлова система се използва често върху определени устройства. Нейният максимален размер на файл е 4 гигабайта. 



////////////////////Въпрос 7
////////////////////Отговорен
////////////////////От максимално 2,00
////////////////////НеотбелязанОтбелязване на въпроса
////////////////////Текст на въпроса
////////////////////Коя от следните команди рестартира напълно услугата serviced?

////////////////////Изберете едно
////////////////////a. restart-service serviced
////////////////////b. sudo systemctl restart serviced
////////////////////c. serviced restart
////////////////////d. sudo systemctl reload serviced
////////////////////Въпрос 8
////////////////////Отговорен
////////////////////От максимално 6,00
////////////////////НеотбелязанОтбелязване на въпроса
////////////////////Текст на въпроса
////////////////////Демонстрирайте команда за създаване на файл с име di_2022 в Линукс. Приемете, че се намирате в домашната папка на потребителя.

////////////////////touch di_2022

////////////////////Въпрос 9
////////////////////Отговорен
////////////////////От максимално 6,00
////////////////////НеотбелязанОтбелязване на въпроса
////////////////////Текст на въпроса
////////////////////Демонстрирайте с помощта на команда монтиране на файлова система от устройство /dev/sdc1 на точка /mnt/data

////////////////////sudo mount /dev/sdc1 /mnt/data



////////////////////Въпрос 10
////////////////////Отговорен
////////////////////От максимално 2,00
////////////////////НеотбелязанОтбелязване на въпроса
////////////////////Текст на въпроса
////////////////////Коя от следните услуги е свръзана с протокола File Transfer Protocol?

////////////////////Изберете едно
////////////////////a. nfsd
////////////////////b. vsftpd
////////////////////c. sshd
////////////////////d. httpd
////////////////////Въпрос 11
////////////////////Отговорен
////////////////////От максимално 6,00
////////////////////НеотбелязанОтбелязване на въпроса
////////////////////Текст на въпроса
////////////////////Демонстрирайте команда, с помощта на която форматирате като ntfs устройството /dev/sdb1

////////////////////sudo mkfs.ntfs /dev/sdb1



////////////////////Въпрос 12
////////////////////Отговорен
////////////////////От максимално 2,00
////////////////////НеотбелязанОтбелязване на въпроса
////////////////////Текст на въпроса
////////////////////Коя от следните команди стартира услугата serviced

////////////////////Изберете едно
////////////////////a. start-service serviced
////////////////////b. sudo systemctl start serviced
////////////////////c. start serviced
////////////////////d. serviced start
////////////////////Въпрос 13
////////////////////Отговорен
////////////////////От максимално 6,00
////////////////////НеотбелязанОтбелязване на въпроса
////////////////////Текст на въпроса
////////////////////Демонстрирайте команда за изтриване на файл с име di_2022 в Линукс. Приемете, че се намирате в домашната папка на потребителя.

////////////////////rm di_2022



////////////////////Въпрос 14
////////////////////Отговорен
////////////////////От максимално 2,00
////////////////////НеотбелязанОтбелязване на въпроса
////////////////////Текст на въпроса
////////////////////Изберете грешното твърдение
////////////////////Изберете едно
////////////////////a. Всички твърдения са верни.
////////////////////b. Демоните (Daemons) в Линукс НЕ могат да бъдат услуги
////////////////////c. init.d е демон, който се стартира като първи процес в Линукс система
////////////////////d. crond е свързан с изпълнението на задачи през определен интервал от време
////////////////////Въпрос 15
////////////////////Отговорен
////////////////////От максимално 2,00
////////////////////НеотбелязанОтбелязване на въпроса
////////////////////Текст на въпроса
////////////////////Коя от следните услуги е свръзана с мрежови протокол?

////////////////////Изберете едно
////////////////////a. crond
////////////////////b. bluetooch
////////////////////c. cupd
////////////////////d. dhcpd
////////////////////Въпрос 16
////////////////////Отговорен
////////////////////От максимално 2,00
////////////////////НеотбелязанОтбелязване на въпроса
////////////////////Текст на въпроса
////////////////////Коя от следните файлови системи не може да бъде разпозната от ОС Windows 10 по подразбиране?

////////////////////Изберете едно
////////////////////a. ntfs
////////////////////b. ext4
////////////////////c. exfat
////////////////////d. fat
////////////////////Въпрос 17
////////////////////Отговорен
////////////////////От максимално 4,00
////////////////////НеотбелязанОтбелязване на въпроса
////////////////////Текст на въпроса
////////////////////Изберете правилното наименование за описаната файлова система


////////////////////ext4

////////////////////Тази файлова система е скалируемо разширение на друга подобна на нея файлова систена. Често е налична по подразбиране в немалко линукс дистрибуции. Тази файлова система поддържа файл с размери 16 терабайта. Системата поддържа неограничен брой поддиректории.


////////////////////ntfs

////////////////////Тази файлова система се използва по подразбиране в Windows 10. Поддържа файл с размери до 256 TB.

////////////////////Край на прегледа
////////////////////Отиди на ...
////////////////////Отиди на ...
////////////////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
////////////////////Навигация в теста
////////////////////Показване по един въпрос на страница
////////////////////Край на прегледа
////////////////////Вие сте влезли в системата като Добри Илев (Изход)
////////////////////тренировъчен - курс - по
////////////////////Data retention summary



////////////////////ИЗПИТНА ТЕМА 16
//////////////////Прескочи на основното съдържание
//////////////////ПГЕЕ
//////////////////Български ‎(bg)‎ 
//////////////////Добри Илев 
//////////////////Тренировъчен курс - Програмно осигуряване
//////////////////Начална страница
//////////////////Моите курсове
////////////////// тренировъчен-курс-по
////////////////// Изпитна тема 16
////////////////// Изпитна тема №16
//////////////////Започнат на	понеделник, 6 февруари 2023, 13:35
//////////////////Състояние Непредаден
//////////////////Въпрос 1
//////////////////Отговорът съхранен
//////////////////От максимално 2,00
//////////////////НеотбелязанОтбелязване на въпроса
//////////////////Текст на въпроса
//////////////////Посочете правилната дефиниция на понятието генерална съвкупност.

//////////////////Изберете едно
//////////////////a. Множество от всички изследвани характеристики
//////////////////b. Множество от всички изследвани обекти
//////////////////c. Множество от стойностите на разглеждания признак за част от изследваните обекти
//////////////////d. Множество от стойностите на разглеждания признак за всички изследвани обекти
//////////////////Въпрос 2
//////////////////Все още не е даден отговор
//////////////////От максимално 2,00
//////////////////НеотбелязанОтбелязване на въпроса
//////////////////Текст на въпроса
//////////////////Кое от следните НЕ е свойство на математическа функция:

//////////////////Изберете едно
//////////////////a. монотонност
//////////////////b. дефинириуемост (да притежава дефиниционно множество)
//////////////////c.комутативност
//////////////////d.непрекъснатост
//////////////////Въпрос 3
//////////////////Отговорът съхранен
//////////////////От максимално 6,00
//////////////////НеотбелязанОтбелязване на въпроса
//////////////////Текст на въпроса
//////////////////Приложете софтуерен метод за решаване на следната система линейни уравнения:



//////////////////С помощта на блокчета постройте код, който да реши успешно системата.

//////////////////import blank
//////////////////import blank as plt
//////////////////import  blank as np
//////////////////a = np.array([blank, blank, blank])
//////////////////b = np.array(blank)
//////////////////x = np.linalg.solve(blank, blank)
//////////////////print(blank)



//////////////////mathmatplotlib.pyplotnumpy[1, 2, 5][1,‑1, 2][3, ‑6, ‑1][‑9, 3, 25]abxnpplt
//////////////////Въпрос 4
//////////////////Все още не е даден отговор
//////////////////От максимално 6,00
//////////////////НеотбелязанОтбелязване на въпроса
//////////////////Текст на въпроса
//////////////////Демонстрирайте с помощта на код на програмен език от изучаваните (Python, C#) изчертаване на графиката на функцията:

//////////////////y = 2x2 - 2x + 3

//////////////////в интервала от [0; 10]

//////////////////Въпрос 5
//////////////////Отговорът съхранен
//////////////////От максимално 2,00
//////////////////НеотбелязанОтбелязване на въпроса
//////////////////Текст на въпроса
//////////////////Посочете коя е основата на шестнадесетичната бройна система.

//////////////////Изберете едно
//////////////////a. 16
//////////////////b. 2
//////////////////c. 6
//////////////////d. 10
//////////////////Въпрос 6
//////////////////Отговорът съхранен
//////////////////От максимално 2,00
//////////////////НеотбелязанОтбелязване на въпроса
//////////////////Текст на въпроса
//////////////////Посочете коя бройна система използва цифрите от 0 до 9 и буквите A, B, C, D, E и F.

//////////////////Изберете едно
//////////////////a. десетична
//////////////////b. двоична
//////////////////c. шестнадесетична
//////////////////d. осмична
//////////////////Въпрос 7
//////////////////Отговорът съхранен
//////////////////От максимално 4,00
//////////////////НеотбелязанОтбелязване на въпроса
//////////////////Текст на въпроса
//////////////////Преобразувайте двоичното число 10111101 към положително число в десетична бройна система.

//////////////////Отговор: 
//////////////////189
//////////////////Въпрос 8
//////////////////Отговорът съхранен
//////////////////От максимално 4,00
//////////////////НеотбелязанОтбелязване на въпроса
//////////////////Текст на въпроса
//////////////////Десетичното число 8 в двоичен вид записано в четири позиции е:

//////////////////Отговор:
//////////////////1000
//////////////////Въпрос 9
//////////////////Отговорът съхранен
//////////////////От максимално 2,00
//////////////////НеотбелязанОтбелязване на въпроса
//////////////////Текст на въпроса
//////////////////По какъв начин са представени данните на приложеното графично изображение?



//////////////////Изберете едно
//////////////////a. честотен полигон
//////////////////b. йерархична диаграма
//////////////////c. хистограма (колонна диаграма)
//////////////////d.кръгова диаграма
//////////////////Въпрос 10
//////////////////Отговорът съхранен
//////////////////От максимално 2,00
//////////////////НеотбелязанОтбелязване на въпроса
//////////////////Текст на въпроса
//////////////////По какъв начин са представени данните на приложеното графично изображение?



//////////////////Изберете едно
//////////////////a. йерархична диаграма
//////////////////b. кръгова диаграма
//////////////////c. хистограма (колонна диаграма)
//////////////////d.честотен полигон
//////////////////Въпрос 11
//////////////////Отговорът съхранен
//////////////////От максимално 2,00
//////////////////НеотбелязанОтбелязване на въпроса
//////////////////Текст на въпроса
//////////////////Функцията f(x) = 2x + 5 e:

//////////////////Изберете едно
//////////////////a.периодична
//////////////////b.кубична
//////////////////c.квадратична
//////////////////d. линейна
//////////////////Въпрос 12
//////////////////Отговорът съхранен
//////////////////От максимално 2,00
//////////////////НеотбелязанОтбелязване на въпроса
//////////////////Текст на въпроса
//////////////////Посочете правилната дефиниция на понятието средна стойност.

//////////////////Изберете едно
//////////////////a.сумата от стойностите на всички елементи в дадена съвкупност, разделено на броя им.
//////////////////b.сумата от квадратите на всички елементи в дадена съвкупност, разделено на броя им.
//////////////////c.сумата от стойностите на всички елементи в дадена съвкупност, разделено на броя им на квадрат.
//////////////////d.произведението от стойностите на всички елементи в дадена съвкупност, разделено на броя им.
//////////////////Въпрос 13
//////////////////Отговорът съхранен
//////////////////От максимално 2,00
//////////////////НеотбелязанОтбелязване на въпроса
//////////////////Текст на въпроса
//////////////////Посочете правилната дефиниция на понятието функция.

//////////////////Изберете едно
//////////////////a.съпоставяне на определена величина, която наричаме аргумент на друга, която наричаме стойност, като допускаме за един аргумент да съответства повече от една стойност
//////////////////b. съпоставяне на определена величина, която наричаме аргумент на друга, която наричаме стойност, като допускаме за един аргумент да съответства точно една стойност
//////////////////c.съпоставяне на определена величина, която наричаме стойност на друга, която наричаме аргумент
//////////////////d. последователност от букви, цифри и знаци, за които може да бъде изчислена определена стойност
//////////////////Въпрос 14
//////////////////Отговорът съхранен
//////////////////От максимално 2,00
//////////////////НеотбелязанОтбелязване на въпроса
//////////////////Текст на въпроса
//////////////////Дефинирайте понятието генерална съвкупност:


//////////////////генерална съвкупност
////////////////// наричаме множество от стойностите на разглеждания признак за
//////////////////всички
////////////////// изследвани обекти.

//////////////////Въпрос 15
//////////////////Все още не е даден отговор
//////////////////От максимално 10,00
//////////////////НеотбелязанОтбелязване на въпроса
//////////////////Текст на въпроса
//////////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент.Предоставеният фрагмент да се приведе в работещ вид.

//////////////////Условие:

//////////////////Изчертайте графика на следната дненвна температура като са ви известни следните замервания:

//////////////////15, 13, 12, 12, 19, 22, 21, 18.

//////////////////Замерванията са извършени в:

//////////////////0:00, 3:00, 6:00, 9:00, 12:00, 15:00, 18:00, 21:00

//////////////////Фрагмент:

//////////////////import matplotlib.pyplot as plt
//////////////////import numpy as np

//////////////////temperature = np.array()
//////////////////hours = np.array()
//////////////////plt.plot(hours, temperature)
//////////////////plt.xlabel(Час)
//////////////////plt.ylabel'Температура'
//////////////////plt.title('Графика на температурата през дененощието')
//////////////////plt.show



//////////////////Въпрос 16
//////////////////Отговорът съхранен
//////////////////От максимално 10,00
//////////////////НеотбелязанОтбелязване на въпроса
//////////////////Текст на въпроса
//////////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

//////////////////Условие:

//////////////////Решете следната система линейни уравнения, чрез използването на избрана изучавана софтуерна среда:



//////////////////Фрагмент:

//////////////////import math
//////////////////import matplotlib.pyplot as plt
//////////////////import numpy as np


//////////////////a = np.array([ [1, 2, 5], [1 -1 2], [-9,3,25] ] 
//////////////////b = np.array[3, -6, -1])
//////////////////x = np.linalg.solve(a  b)
//////////////////print(x) # решение на системата: [ 2. -3. -1.]



//////////////////import math

//////////////////import matplotlib.pyplot as plt ///може и без това 

//////////////////import numpy as np





//////////////////a = np.array([ [1,2,5], [1 ,-1, 2], [-9,3,25] ])

//////////////////b = np.array([3, -6, -1])

//////////////////x = np.linalg.solve(a, b)

//////////////////print(x)

//////////////////Въпрос 17
//////////////////Все още не е даден отговор
//////////////////От максимално 6,00
//////////////////НеотбелязанОтбелязване на въпроса
//////////////////Текст на въпроса
//////////////////Приложете софтуерен или математически метод за решаване на следната СЛУ:



//////////////////Опишете подробно решението, ако сте избрали математически метод или програмния код, ако сте избрали софтуерен метод за решаване.

//////////////////Въпрос 18
//////////////////Отговорът съхранен
//////////////////От максимално 6,00
//////////////////НеотбелязанОтбелязване на въпроса
//////////////////Текст на въпроса
//////////////////Приложете софтуерен метод за решаване на следната система линейни уравнения:



//////////////////С помощта на блокчета постройте код, който да реши успешно системата.

//////////////////import  blank
//////////////////import  blank as plt
//////////////////import  blank as np
//////////////////a = np.array([blank, blank, blank])
//////////////////b = np.array(blank)
//////////////////x = np.linalg.solve(blank, blank)
//////////////////print(blank)



//////////////////mathmatplotlib.pyplotnumpy[5,‑1,‑1][1, 2, 3][4, 3, 2][0, 7, 8]abxnpplt
//////////////////Въпрос 19
//////////////////Все още не е даден отговор
//////////////////От максимално 6,00
//////////////////НеотбелязанОтбелязване на въпроса
//////////////////Текст на въпроса
//////////////////Демонстрирайте с помощта на код на програмен език от изучаваните (Python, C#) изчертаване на графиката на функцията:

//////////////////y = 3x2 + 2x - 3

//////////////////в интервала от [-10; 10]

//////////////////Въпрос 20
//////////////////Все още не е даден отговор
//////////////////От максимално 10,00
//////////////////НеотбелязанОтбелязване на въпроса
//////////////////Текст на въпроса
//////////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

//////////////////Условие:

//////////////////Намерете средната дневна температура за следните замервания:

//////////////////15, 13, 12, 12, 19, 22, 21, 18
//////////////////Фрагмент:

//////////////////import matplotlib.pyplot as plt
//////////////////import numpy as np

//////////////////temperature = np.array

//////////////////print(f'Средна дневна температура: { }')



//////////////////Въпрос 21
//////////////////Отговорът съхранен
//////////////////От максимално 2,00
//////////////////НеотбелязанОтбелязване на въпроса
//////////////////Текст на въпроса
//////////////////Посочете правилната дефиниция на понятието медиана в статистиката.

//////////////////Изберете едно
//////////////////a. стойността, която се среща най-често в статистически ред
//////////////////b. стойността, която се намира по средата на подреден статистически ред
//////////////////c. стойността, която се получава при сумиране на квадратите от всички елементи и разделянето на корен от броя им
//////////////////d. стойността, която се получава при сумиране на всички елементи и разделянето на броя им в статистическия ред
//////////////////Въпрос 22
//////////////////Все още не е даден отговор
//////////////////От максимално 10,00
//////////////////НеотбелязанОтбелязване на въпроса
//////////////////Текст на въпроса
//////////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

//////////////////Условие:


//////////////////Напишете програма, кооято въвежда матрица 3х3, въведете от клавиатурата реално число и умножете матрицата по него. 

//////////////////Фрагмент:
//////////////////import numpy as np

//////////////////data = []
//////////////////for i in range():
//////////////////  row = list(map(int, input().split()))
//////////////////  data.append(row)

//////////////////matrix = np.array(data)
//////////////////n = float(input('Enter a number: '))

//////////////////result = np.(matrix, n)
//////////////////print(result)





//////////////////Край на прегледа
//////////////////Отиди на...
//////////////////Отиди на...
//////////////////Прескочи < span id = "mod_quiz_navblock_title" > Навигация в теста </ span >
//////////////////Навигация в теста
//////////////////Показване по един въпрос на страница
//////////////////Край на прегледа
//////////////////Вие сте влезли в системата като Добри Илев(Изход)
//////////////////тренировъчен - курс - по
//////////////////Data retention summary


////////////////Прескочи на основното съдържание
////////////////ПГЕЕ
////////////////Български ‎(bg)‎ 
////////////////Добри Илев 
////////////////Тренировъчен курс - Програмно осигуряване
////////////////Начална страница
////////////////Моите курсове
//////////////// тренировъчен-курс-по
//////////////// Изпитна тема 16
//////////////// Изпитна тема №16
////////////////Започнат на	сряда, 22 февруари 2023, 17:03
////////////////Състояние Завършен
////////////////Приключен на	сряда, 22 февруари 2023, 17:31
////////////////Изминало време	28 мин. 34 сек.
////////////////Оценка	Още не е оценен
////////////////Въпрос 1
////////////////Правилно
////////////////2,00 от максимално 2,00 точки
////////////////НеотбелязанОтбелязване на въпроса
////////////////Текст на въпроса
////////////////Кое от следните НЕ е свойство на математическа функция:

////////////////Изберете едно
////////////////a. комутативност 
////////////////b. дефинириуемост (да притежава дефиниционно множество)
////////////////c.монотонност
////////////////d.непрекъснатост
////////////////Забележка
////////////////Your answer is correct.
////////////////Правилният отговор е: комутативност
////////////////Въпрос 2
////////////////Отговорен
////////////////От максимално 10,00
////////////////НеотбелязанОтбелязване на въпроса
////////////////Текст на въпроса
////////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент.Предоставеният фрагмент да се приведе в работещ вид.

////////////////Условие:


////////////////Напишете програма, кооято въвежда матрица 3х3, въведете от клавиатурата реално число и умножете матрицата по него. 

////////////////Фрагмент:
////////////////import numpy as np

////////////////data = []
////////////////for i in range( ):
////////////////  row = list(map(int, input().split()))
////////////////  data.append(row)

////////////////matrix = np.array(data)
////////////////n = float(input('Enter a number: '))

////////////////result = np.(matrix, n)
////////////////print(result)





////////////////import numpy as np



////////////////data = []

////////////////for i in range(3):

////////////////  row = list(map(float, input().split()))

////////////////  data.append(row)



////////////////matrix = np.array(data)

////////////////n = float(input('Enter a number: '))



////////////////result = np.multiply(matrix, n)

////////////////print(result)



////////////////Въпрос 3
////////////////Отговорен
////////////////От максимално 10,00
////////////////НеотбелязанОтбелязване на въпроса
////////////////Текст на въпроса
////////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

////////////////Условие:

////////////////Изчертайте графика на следната дненвна температура като са ви известни следните замервания:

////////////////15, 13, 12, 12, 19, 22, 21, 18.

////////////////Замерванията са извършени в:

////////////////0:00, 3:00, 6:00, 9:00, 12:00, 15:00, 18:00, 21:00

////////////////Фрагмент:

////////////////import matplotlib.pyplot as plt
////////////////import numpy as np

////////////////temperature = np.array()
////////////////hours = np.array()
////////////////plt.plot(hours, temperature)
////////////////plt.xlabel(Час)
////////////////plt.ylabel'Температура'
////////////////plt.title('Графика на температурата през дененощието')
////////////////plt.show



////////////////import matplotlib.pyplot as plt

////////////////import numpy as np



////////////////temperature = np.array([15, 13, 12, 12, 19, 22, 21, 18])

////////////////hours = np.array([0, 3, 6, 9, 12, 15, 18, 21])

////////////////plt.plot(hours, temperature)

////////////////plt.xlabel('Hours')

////////////////plt.ylabel('Temperature')

////////////////plt.title('Temperature graph during the day')

////////////////plt.show()



////////////////Въпрос 4
////////////////Правилно
////////////////6,00 от максимално 6,00 точки
////////////////НеотбелязанОтбелязване на въпроса
////////////////Текст на въпроса
////////////////Приложете софтуерен метод за решаване на следната система линейни уравнения:



////////////////С помощта на блокчета постройте код, който да реши успешно системата.

////////////////import  blank 
////////////////import  blank  as plt
////////////////import  blank  as np
////////////////a = np.array([blank, blank, blank])
////////////////b = np.array(blank)
////////////////x = np.linalg.solve(blank, blank)
////////////////print(blank)



////////////////mathmatplotlib.pyplotnumpy[3, 2, 1][2, ‑1, 2][4, 3, ‑1][2, ‑2, 1]abxnpplt
////////////////Забележка
////////////////Your answer is correct.
////////////////Правилният отговор е:
////////////////Приложете софтуерен метод за решаване на следната система линейни уравнения:



////////////////С помощта на блокчета постройте код, който да реши успешно системата.

////////////////import [math]
////////////////import[matplotlib.pyplot] as plt
////////////////import[numpy] as np
////////////////a = np.array([ [[3, 2, 1]], [[2, ‑1, 2]], [[4, 3, ‑1]] ])
////////////////b = np.array( [[2, ‑2, 1]] )
////////////////x = np.linalg.solve([a], [b])
////////////////print([x])

////////////////Въпрос 5
////////////////Отговорен
////////////////От максимално 6,00
////////////////НеотбелязанОтбелязване на въпроса
////////////////Текст на въпроса
////////////////Демонстрирайте с помощта на код на програмен език от изучаваните (Python, C#) изчертаване на графиката на функцията:

////////////////y = 3x2 + 2x - 3

////////////////в интервала от [-20; 20]

////////////////using System;

////////////////using MathNet.Numerics.Data.Matlab;

////////////////using MathNet.Numerics.Data.Text;

////////////////using MathNet.Numerics.Plotting;



////////////////class Program

////////////////{

////////////////  static void Main(string[] args)

////////////////  {

////////////////    var x = Vector<double>.Build.Dense(-20, 20, 100);

////////////////    var y = x.Map(t => 3 * Math.Pow(t, 2) + 2 * t - 3);



////////////////    var plot = new Plot();

////////////////    plot.AddLine(x, y, "y = 3x^2 + 2x - 3");

////////////////    plot.Title("Graph of y = 3x^2 + 2x - 3");

////////////////    plot.XLabel("x");

////////////////    plot.YLabel("y");

////////////////    plot.Show();

////////////////  }

////////////////}



////////////////Въпрос 6
////////////////Правилно
////////////////4,00 от максимално 4,00 точки
////////////////НеотбелязанОтбелязване на въпроса
////////////////Текст на въпроса
////////////////Кое от следните числа е невъзможно да е запис на число в двоична бройна система?

////////////////Изберете едно
////////////////a. 0
////////////////b. 124543 
////////////////c. 101
////////////////d. 11111
////////////////Забележка
////////////////Your answer is correct.
////////////////Правилният отговор е: 124543
////////////////Въпрос 7
////////////////Правилно
////////////////2,00 от максимално 2,00 точки
////////////////НеотбелязанОтбелязване на въпроса
////////////////Текст на въпроса
////////////////По какъв начин са представени данните на приложеното графично изображение?



////////////////Изберете едно
////////////////a. кръгова диаграма 
////////////////b. хистограма (колонна диаграма)
////////////////c.честотен полигон
////////////////d. йерархична диаграма
////////////////Забележка
////////////////Your answer is correct.
////////////////Правилният отговор е: кръгова диаграма
////////////////Въпрос 8
////////////////Правилно
////////////////2,00 от максимално 2,00 точки
////////////////НеотбелязанОтбелязване на въпроса
////////////////Текст на въпроса
////////////////Функцията f(x) = 3x2 - 2x + 5 e:

////////////////Изберете едно
////////////////a.линейна
////////////////b.периодична
////////////////c.квадратична
////////////////d. кубична
////////////////Забележка
////////////////Your answer is correct.
////////////////Правилният отговор е: квадратична
////////////////Въпрос 9
////////////////Правилно
////////////////2,00 от максимално 2,00 точки
////////////////НеотбелязанОтбелязване на въпроса
////////////////Текст на въпроса
////////////////По какъв начин са представени данните на приложеното графично изображение?



////////////////Изберете едно
////////////////a. хистограма (колонна диаграма)
////////////////b. кръгова диаграма
////////////////c.честотен полигон
////////////////d.йерархична диаграма
////////////////Забележка
////////////////Your answer is correct.
////////////////Правилният отговор е: честотен полигон
////////////////Въпрос 10
////////////////Правилно
////////////////6,00 от максимално 6,00 точки
////////////////НеотбелязанОтбелязване на въпроса
////////////////Текст на въпроса
////////////////Приложете софтуерен метод за решаване на следната система линейни уравнения:



////////////////С помощта на блокчета постройте код, който да реши успешно системата.

////////////////import blank
////////////////import blank  as plt
////////////////import  blank  as np
////////////////a = np.array([blank, blank, blank])
////////////////b = np.array(blank)
////////////////x = np.linalg.solve(blank, blank)
////////////////print(blank)



////////////////mathmatplotlib.pyplotnumpy[3, 2,‑5][2,‑1, 3][1, 2, ‑1][‑1, 13, 9]abxnpplt
////////////////Забележка
////////////////Your answer is correct.
////////////////Правилният отговор е:
////////////////Приложете софтуерен метод за решаване на следната система линейни уравнения:



////////////////С помощта на блокчета постройте код, който да реши успешно системата.

////////////////import [math]
////////////////import[matplotlib.pyplot] as plt
////////////////import[numpy] as np
////////////////a = np.array([ [[3, 2,‑5]], [[2,‑1,3]], [[1, 2, ‑1]] ])
////////////////b = np.array( [[‑1, 13, 9]] )
////////////////x = np.linalg.solve([a], [b])
////////////////print([x])

////////////////Въпрос 11
////////////////Неправилно
////////////////0,00 от максимално 4,00 точки
////////////////НеотбелязанОтбелязване на въпроса
////////////////Текст на въпроса
////////////////Преобразувайте десетичното число 765 към число в шестнадесетична бройна система. Отговорът изпишете в 4 позиции.

////////////////Отговор: 
////////////////2FD
////////////////Забележка
////////////////Правилният отговор е: 02FD
////////////////Въпрос 12
////////////////Отговорен
////////////////От максимално 6,00
////////////////НеотбелязанОтбелязване на въпроса
////////////////Текст на въпроса
////////////////Демонстрирайте с помощта на код на програмен език от изучаваните (Python, C#) изчертаване на графиката на функцията:

////////////////y = 2x2 - 2x + 3

////////////////в интервала от [-20; 20]

////////////////# Python

////////////////import matplotlib.pyplot as plt

////////////////import numpy as np



////////////////x = np.linspace(-20, 20, num = 100)

////////////////y = 2 * x * *2 - 2 * x + 3



////////////////plt.plot(x, y)

////////////////plt.xlabel('x')

////////////////plt.ylabel('y')

////////////////plt.title('Graph of y = 2x^2 - 2x + 3')

////////////////plt.grid()

////////////////plt.show()



////////////////Въпрос 13
////////////////Правилно
////////////////2,00 от максимално 2,00 точки
////////////////НеотбелязанОтбелязване на въпроса
////////////////Текст на въпроса
////////////////Посочете правилната дефиниция на понятието медиана в статистиката.

////////////////Изберете едно
////////////////a. стойността, която се намира по средата на подреден статистически ред 
////////////////b. стойността, която се среща най-често в статистически ред
////////////////c. стойността, която се получава при сумиране на всички елементи и разделянето на броя им в статистическия ред
////////////////d. стойността, която се получава при сумиране на квадратите от всички елементи и разделянето на корен от броя им
////////////////Забележка
////////////////Your answer is correct.
////////////////Правилният отговор е: стойността, която се намира по средата на подреден статистически ред
////////////////Въпрос 14
////////////////Правилно
////////////////2,00 от максимално 2,00 точки
////////////////НеотбелязанОтбелязване на въпроса
////////////////Текст на въпроса
////////////////Посочете коя бройна система използва цифрите от 0 до 9 и буквите A, B, C, D, E и F.

////////////////Изберете едно
////////////////a. двоична
////////////////b. осмична
////////////////c. десетична
////////////////d. шестнадесетична 
////////////////Забележка
////////////////Your answer is correct.
////////////////Правилният отговор е: шестнадесетична
////////////////Въпрос 15
////////////////Правилно
////////////////2,00 от максимално 2,00 точки
////////////////НеотбелязанОтбелязване на въпроса
////////////////Текст на въпроса
////////////////Посочете правилната дефиниция на понятието мода в статистиката.

////////////////Изберете едно
////////////////a. стойността, която се получава при сумиране на квадратите от всички елементи и разделянето на корен от броя им
////////////////b. стойността, която се получава при сумиране на всички елементи и разделянето на броя им в статистическия ред
////////////////c. стойността, която се среща най-често в статистически ред 
////////////////d. стойността, която се намира по средата на подреден статистически ред
////////////////Забележка
////////////////Your answer is correct.
////////////////Правилният отговор е: стойността, която се среща най-често в статистически ред
////////////////Въпрос 16
////////////////Правилно
////////////////2,00 от максимално 2,00 точки
////////////////НеотбелязанОтбелязване на въпроса
////////////////Текст на въпроса
////////////////Дефинирайте понятието представителна извадка:


////////////////представителна извадка
////////////////  наричаме множество от стойностите на разглеждания признак за 
////////////////част от
////////////////  изследвани обекти.

////////////////Забележка
////////////////Your answer is correct.
////////////////Правилният отговор е:
////////////////Дефинирайте понятието представителна извадка:

////////////////[представителна извадка] наричаме множество от стойностите на разглеждания признак за [част от]
////////////////изследвани обекти.

////////////////Въпрос 17
////////////////Отговорен
////////////////От максимално 6,00
////////////////НеотбелязанОтбелязване на въпроса
////////////////Текст на въпроса
////////////////Приложете софтуерен или математически метод за решаване на следната СЛУ:



////////////////Опишете подробно решението, ако сте избрали математически метод или програмния код, ако сте избрали софтуерен метод за решаване.

////////////////import math

////////////////import matplotlib.pyplotas plt

////////////////import numpy as np

////////////////a = np.array([2, 3], [5, -4])

////////////////b = np.array( [33, 2])

////////////////x = np.linalg.solve(a, b)

////////////////print(x)

////////////////Въпрос 18
////////////////Правилно
////////////////2,00 от максимално 2,00 точки
////////////////НеотбелязанОтбелязване на въпроса
////////////////Текст на въпроса
////////////////Посочете коя е основата на осмичната бройна система.

////////////////Изберете едно
////////////////a. 2
////////////////b. 10
////////////////c. 8 
////////////////d. 16
////////////////Забележка
////////////////Your answer is correct.
////////////////Правилният отговор е: 8
////////////////Въпрос 19
////////////////Отговорен
////////////////От максимално 10,00
////////////////НеотбелязанОтбелязване на въпроса
////////////////Текст на въпроса
////////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

////////////////Условие:

////////////////Намерете средната дневна температура за следните замервания:

////////////////15, 13, 12, 12, 19, 22, 21, 18
////////////////Фрагмент:

////////////////import matplotlib.pyplot as plt
////////////////import numpy as np

////////////////temperature = np.array

////////////////print(f'Средна дневна температура: { }')



////////////////import matplotlib.pyplot as plt

////////////////import numpy as np



////////////////temperature = np.array([15, 13, 12, 12, 19, 22, 21, 18])

////////////////mean_temperature = temperature.mean()



////////////////print(f'Средна дневна температура: {mean_temperature}')



////////////////Въпрос 20
////////////////Отговорен
////////////////От максимално 10,00
////////////////НеотбелязанОтбелязване на въпроса
////////////////Текст на въпроса
////////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

////////////////Условие:


////////////////Напишете програма, кооято въвежда матрица 2х2, въведете от клавиатурата реално число и умножете матрицата по него. 

////////////////Фрагмент:
////////////////import numpy as np

////////////////data = []
////////////////for i in range():
////////////////  row = list(map(int, input().split()))
////////////////  data.append(row)

////////////////matrix = np.array(data)
////////////////n = float(input('Enter a number: '))

////////////////result = np.(matrix, n)
////////////////print(result)





////////////////import numpy as np



////////////////data = []

////////////////for i in range(2):

////////////////  row = list(map(float, input().split()))

////////////////  data.append(row)



////////////////matrix = np.array(data)

////////////////n = float(input('Enter a number: '))



////////////////result = np.multiply(matrix, n)

////////////////print(result)



////////////////Въпрос 21
////////////////Правилно
////////////////2, 00 от максимално 2, 00 точки
////////////////НеотбелязанОтбелязване на въпроса
////////////////Текст на въпроса
////////////////Посочете правилната дефиниция на понятието функция.

////////////////Изберете едно
////////////////a.съпоставяне на определена величина, която наричаме аргумент на друга, която наричаме стойност, като допускаме за един аргумент да съответства точно една стойност
////////////////b.съпоставяне на определена величина, която наричаме стойност на друга, която наричаме аргумент
////////////////c.последователност от букви, цифри и знаци, за които може да бъде изчислена определена стойност
////////////////d.съпоставяне на определена величина, която наричаме аргумент на друга, която наричаме стойност, като допускаме за един аргумент да съответства повече от една стойност
////////////////Забележка
////////////////Your answer is correct.
////////////////Правилният отговор е: съпоставяне на определена величина, която наричаме аргумент на друга, която наричаме стойност, като допускаме за един аргумент да съответства точно една стойност
////////////////Въпрос 22
////////////////Отчасти верен
////////////////1, 00 от максимално 2, 00 точки
////////////////НеотбелязанОтбелязване на въпроса
////////////////Текст на въпроса
////////////////Дефинирайте понятието генерална съвкупност:


////////////////генерална съвкупност
////////////////  наричаме множество от стойностите на разглеждания признак за
////////////////част от
////////////////  изследвани обекти.

////////////////Забележка
////////////////Your answer is partially correct.
////////////////Вие правилно сте избрали 1.
////////////////Правилният отговор е:
////////////////Дефинирайте понятието генерална съвкупност:

////////////////[генерална съвкупност] наричаме множество от стойностите на разглеждания признак за[всички] изследвани обекти.

////////////////Край на прегледа
////////////////Отиди на...
////////////////Отиди на...
////////////////Прескочи < span id = "mod_quiz_navblock_title" > Навигация в теста </ span >
////////////////Навигация в теста
////////////////Показване по един въпрос на страница
////////////////Край на прегледа
////////////////Вие сте влезли в системата като Добри Илев(Изход)
////////////////тренировъчен - курс - по
////////////////Data retention summary


//////////////Прескочи на основното съдържание
//////////////ПГЕЕ
//////////////Български ‎(bg)‎ 
//////////////Добри Илев 
//////////////Тренировъчен курс - Програмно осигуряване
//////////////Начална страница
//////////////Моите курсове
////////////// тренировъчен-курс-по
////////////// Изпитна тема 16
////////////// Изпитна тема №16
//////////////Започнат на	петък, 17 март 2023, 16:02
//////////////Състояние Завършен
//////////////Приключен на	петък, 17 март 2023, 16:25
//////////////Изминало време	22 мин. 36 сек.
//////////////Оценка	Още не е оценен
//////////////Въпрос 1
//////////////Неправилно
//////////////0,00 от максимално 2,00 точки
//////////////НеотбелязанОтбелязване на въпроса
//////////////Текст на въпроса
//////////////Най-голямата цифра на седмичната бройна система е?

//////////////Изберете едно
//////////////a. 6
//////////////b. 0
//////////////c. 7 
//////////////d. 10
//////////////Забележка
//////////////Your answer is incorrect.
//////////////Правилният отговор е: 6
//////////////Въпрос 2
//////////////Отговорен
//////////////От максимално 6,00
//////////////НеотбелязанОтбелязване на въпроса
//////////////Текст на въпроса
//////////////Приложете софтуерен или математически метод за решаване на следната СЛУ:



//////////////Опишете подробно решението, ако сте избрали математически метод или програмния код, ако сте избрали софтуерен метод за решаване.

//////////////Ще използвам математически метод за решаване на тази система от линейни уравнения.

//////////////Уравненията са:

//////////////3x + 2y = 22
//////////////4x - y = 21
//////////////Нека изолираме y от второто уравнение: y = 4x - 21

//////////////Сега заместваме y в първото уравнение с израза, който получихме: 3x + 2(4x - 21) = 22

//////////////Разширяваме и събираме подобни членове: 3x + 8x - 42 = 22 11x = 64

//////////////Разделяме на 11: x = 64 / 11

//////////////Сега заместваме x обратно в израза за y, за да намерим y: y = 4(64 / 11) - 21 y = 256 / 11 - 21

//////////////За да сметнем y, превръщаме 21 в разлом от 11: y = 256 / 11 - 231 / 11

//////////////Сега събираме: y = (256 - 231) / 11 y = 25 / 11

//////////////Така че решението на системата от линейни уравнения е: x = 64 / 11 y = 25 / 11


//////////////Въпрос 3
//////////////Правилно
//////////////2,00 от максимално 2,00 точки
//////////////НеотбелязанОтбелязване на въпроса
//////////////Текст на въпроса
//////////////Посочете правилната дефиниция на понятието средна стойност.

//////////////Изберете едно
//////////////a. сумата от стойностите на всички елементи в дадена съвкупност, разделено на броя им на квадрат.
//////////////b. сумата от квадратите на всички елементи в дадена съвкупност, разделено на броя им.
//////////////c. произведението от стойностите на всички елементи в дадена съвкупност, разделено на броя им.
//////////////d. сумата от стойностите на всички елементи в дадена съвкупност, разделено на броя им. 
//////////////Забележка
//////////////Your answer is correct.
//////////////Правилният отговор е: сумата от стойностите на всички елементи в дадена съвкупност, разделено на броя им.
//////////////Въпрос 4
//////////////Правилно
//////////////6,00 от максимално 6,00 точки
//////////////НеотбелязанОтбелязване на въпроса
//////////////Текст на въпроса
//////////////Приложете софтуерен метод за решаване на следната система линейни уравнения:



//////////////С помощта на блокчета постройте код, който да реши успешно системата.

//////////////import  blank 
//////////////import  blank  as plt
//////////////import  blank  as np
//////////////a = np.array([blank, blank, blank])
//////////////b = np.array(blank)
//////////////x = np.linalg.solve(blank, blank)
//////////////print(blank)



//////////////mathmatplotlib.pyplotnumpy[5,‑1,‑1][1, 2, 3][4, 3, 2][0, 7, 8]abxnpplt
//////////////Забележка
//////////////Your answer is correct.
//////////////Правилният отговор е:
//////////////Приложете софтуерен метод за решаване на следната система линейни уравнения:



//////////////С помощта на блокчета постройте код, който да реши успешно системата.

//////////////import [math]
//////////////import[matplotlib.pyplot] as plt
//////////////import[numpy] as np
//////////////a = np.array([ [[5,‑1,‑1]], [[1,2,3]], [[4, 3, 2]] ])
//////////////b = np.array( [[0, 7, 8]] )
//////////////x = np.linalg.solve([a], [b])
//////////////print([x])

//////////////Въпрос 5
//////////////Правилно
//////////////2,00 от максимално 2,00 точки
//////////////НеотбелязанОтбелязване на въпроса
//////////////Текст на въпроса
//////////////По какъв начин са представени данните на приложеното графично изображение?



//////////////Изберете едно
//////////////a. йерархична диаграма
//////////////b. кръгова диаграма
//////////////c. хистограма (колонна диаграма) 
//////////////d.честотен полигон
//////////////Забележка
//////////////Your answer is correct.
//////////////Правилният отговор е: хистограма(колонна диаграма)
//////////////Въпрос 6
//////////////Правилно
//////////////2,00 от максимално 2,00 точки
//////////////НеотбелязанОтбелязване на въпроса
//////////////Текст на въпроса
//////////////Посочете правилната дефиниция на понятието мода в статистиката.

//////////////Изберете едно
//////////////a. стойността, която се среща най-често в статистически ред 
//////////////b. стойността, която се намира по средата на подреден статистически ред
//////////////c. стойността, която се получава при сумиране на квадратите от всички елементи и разделянето на корен от броя им
//////////////d. стойността, която се получава при сумиране на всички елементи и разделянето на броя им в статистическия ред
//////////////Забележка
//////////////Your answer is correct.
//////////////Правилният отговор е: стойността, която се среща най-често в статистически ред
//////////////Въпрос 7
//////////////Правилно
//////////////2,00 от максимално 2,00 точки
//////////////НеотбелязанОтбелязване на въпроса
//////////////Текст на въпроса
//////////////Функцията f(x) = 2x + 5 e:

//////////////Изберете едно
//////////////a.линейна
//////////////b.квадратична
//////////////c.периодична
//////////////d. кубична
//////////////Забележка
//////////////Your answer is correct.
//////////////Правилният отговор е: линейна
//////////////Въпрос 8
//////////////Правилно
//////////////2,00 от максимално 2,00 точки
//////////////НеотбелязанОтбелязване на въпроса
//////////////Текст на въпроса
//////////////На кой от посочените редове са записани цифрите на осмичната бройна система?
//////////////Изберете едно
//////////////a. 1, 2, 3, 4, 5, 6, 7, 8
//////////////b. 0, 1, 2, 3, 4, 5, 6, 7 
//////////////c.a, b, c, d, e, f, g, h
//////////////d. 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
//////////////Забележка
//////////////Your answer is correct.
//////////////Правилният отговор е: 0, 1, 2, 3, 4, 5, 6, 7
//////////////Въпрос 9
//////////////Правилно
//////////////4,00 от максимално 4,00 точки
//////////////НеотбелязанОтбелязване на въпроса
//////////////Текст на въпроса
//////////////Преобразувайте двоичното число 1010110 към положително число в десетична бройна система.

//////////////Отговор: 
//////////////86
//////////////Забележка
//////////////Правилният отговор е: 86
//////////////Въпрос 10
//////////////Отговорен
//////////////От максимално 6,00
//////////////НеотбелязанОтбелязване на въпроса
//////////////Текст на въпроса
//////////////Демонстрирайте с помощта на код на програмен език от изучаваните (Python, C#) изчертаване на графиката на функцията:

//////////////y = 3x2 + 2x - 3

//////////////в интервала от[-10; 10]

//////////////import numpy as np

//////////////import matplotlib.pyplot as plt



//////////////def func(x):

//////////////    return 3 * x * *2 + 2 * x - 3



//////////////x = np.linspace(-10, 10, 1000)

//////////////y = func(x)



//////////////plt.plot(x, y)

//////////////plt.xlabel('x-axis')

//////////////plt.ylabel('y-axis')

//////////////plt.title('Graph of y = 3x^2 + 2x - 3')

//////////////plt.grid(True)

//////////////plt.show()



//////////////Въпрос 11
//////////////Правилно
//////////////2,00 от максимално 2,00 точки
//////////////НеотбелязанОтбелязване на въпроса
//////////////Текст на въпроса
//////////////По какъв начин са представени данните на приложеното графично изображение?



//////////////Изберете едно
//////////////a. хистограма (колонна диаграма)
//////////////b.йерархична диаграма
//////////////c. кръгова диаграма 
//////////////d. честотен полигон
//////////////Забележка
//////////////Your answer is correct.
//////////////Правилният отговор е: кръгова диаграма
//////////////Въпрос 12
//////////////Отговорен
//////////////От максимално 10,00
//////////////НеотбелязанОтбелязване на въпроса
//////////////Текст на въпроса
//////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

//////////////Условие:

//////////////Решете следната система линейни уравнения, чрез използването на избрана изучавана софтуерна среда:



//////////////Фрагмент:

//////////////import math
//////////////import matplotlib.pyplot as plt
//////////////import numpy as np


//////////////a = np.array([ [1, 2, 5], [1 -1 2], [-9,3,25] ] 
//////////////b = np.array[3, -6, -1])
//////////////x = np.linalg.solve(a  b)
//////////////print(x) # решение на системата: [ 2. -3. -1.]



//////////////import math
//////////////import matplotlib.pyplot as plt
//////////////import numpy as np


//////////////a = np.array([ [1,2,5], [1 -1 2], [3, -6, -1]  ] 
//////////////b = np.array([-9, 3, 25])
//////////////x = np.linalg.solve(a, b)
//////////////print(x)



//////////////Въпрос 13
//////////////Отговорен
//////////////От максимално 10,00
//////////////НеотбелязанОтбелязване на въпроса
//////////////Текст на въпроса
//////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

//////////////Условие:


//////////////Напишете програма, кооято въвежда матрица 2х2, въведете от клавиатурата реално число и умножете матрицата по него. 

//////////////Фрагмент:
//////////////import numpy as np

//////////////data = []
//////////////for i in range():
//////////////  row = list(map(int, input().split()))
//////////////  data.append(row)

//////////////matrix = np.array(data)
//////////////n = float(input('Enter a number: '))

//////////////result = np.(matrix, n)
//////////////print(result)





//////////////import numpy as np



//////////////data = []

//////////////for i in range(2):

//////////////    row = list(map(float, input("Enter row {}: ".format(i + 1)).split()))

//////////////    data.append(row)



//////////////matrix = np.array(data)

//////////////n = float(input('Enter a number: '))



//////////////result = np.multiply(matrix, n)

//////////////print(result)



//////////////Въпрос 14
//////////////Правилно
//////////////2, 00 от максимално 2, 00 точки
//////////////НеотбелязанОтбелязване на въпроса
//////////////Текст на въпроса
//////////////Посочете правилната дефиниция на понятието функция.

//////////////Изберете едно
//////////////a.съпоставяне на определена величина, която наричаме аргумент на друга, която наричаме стойност, като допускаме за един аргумент да съответства точно една стойност
//////////////b.съпоставяне на определена величина, която наричаме аргумент на друга, която наричаме стойност, като допускаме за един аргумент да съответства повече от една стойност
//////////////c.последователност от букви, цифри и знаци, за които може да бъде изчислена определена стойност
//////////////d.съпоставяне на определена величина, която наричаме стойност на друга, която наричаме аргумент
//////////////Забележка
//////////////Your answer is correct.
//////////////Правилният отговор е: съпоставяне на определена величина, която наричаме аргумент на друга, която наричаме стойност, като допускаме за един аргумент да съответства точно една стойност
//////////////Въпрос 15
//////////////Правилно
//////////////2, 00 от максимално 2, 00 точки
//////////////НеотбелязанОтбелязване на въпроса
//////////////Текст на въпроса
//////////////Функцията f(x) = 3x2 - 2x + 5 e:

//////////////Изберете едно
//////////////a.кубична
//////////////b.квадратична
//////////////c.периодична
//////////////d.линейна
//////////////Забележка
//////////////Your answer is correct.
//////////////Правилният отговор е: квадратична
//////////////Въпрос 16
//////////////Неправилно
//////////////0, 00 от максимално 2, 00 точки
//////////////НеотбелязанОтбелязване на въпроса
//////////////Текст на въпроса
//////////////Посочете правилната дефиниция на понятието генерална съвкупност.

//////////////Изберете едно
//////////////a.Множество от стойностите на разглеждания признак за част от изследваните обекти
//////////////b.Множество от всички изследвани характеристики
//////////////c.Множество от стойностите на разглеждания признак за всички изследвани обекти
//////////////d.Множество от всички изследвани обекти
//////////////Забележка
//////////////Your answer is incorrect.
//////////////Правилният отговор е: Множество от стойностите на разглеждания признак за всички изследвани обекти
//////////////Въпрос 17
//////////////Правилно
//////////////4, 00 от максимално 4, 00 точки
//////////////НеотбелязанОтбелязване на въпроса
//////////////Текст на въпроса
//////////////Числото 11(2) в десетичен вид е:

//////////////Отговор: 
//////////////3
//////////////Забележка
//////////////Правилният отговор е: 3
//////////////Въпрос 18
//////////////Правилно
//////////////6, 00 от максимално 6, 00 точки
//////////////НеотбелязанОтбелязване на въпроса
//////////////Текст на въпроса
//////////////Приложете софтуерен метод за решаване на следната система линейни уравнения:



//////////////С помощта на блокчета постройте код, който да реши успешно системата.

//////////////import  blank
//////////////import  blank as plt
//////////////import  blank as np
//////////////a = np.array([blank, blank, blank])
//////////////    b = np.array(blank)
//////////////x = np.linalg.solve(blank, blank)
//////////////print(blank)



//////////////mathmatplotlib.pyplotnumpy[3, 2,‑5][2,‑1, 3][1, 2, ‑1][‑1, 13, 9]abxnpplt
//////////////Забележка
//////////////Your answer is correct.
//////////////Правилният отговор е:
//////////////Приложете софтуерен метод за решаване на следната система линейни уравнения:



//////////////С помощта на блокчета постройте код, който да реши успешно системата.

//////////////import [math]
//////////////import[matplotlib.pyplot] as plt
//////////////import[numpy] as np
//////////////a = np.array([ [[3, 2,‑5]], [[2,‑1,3]], [[1, 2, ‑1]] ])
//////////////b = np.array( [[‑1, 13, 9]] )
//////////////x = np.linalg.solve([a], [b])
//////////////print([x])

//////////////Въпрос 19
//////////////Отговорен
//////////////От максимално 10,00
//////////////НеотбелязанОтбелязване на въпроса
//////////////Текст на въпроса
//////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

//////////////Условие:

//////////////Намерете средната дневна температура за следните замервания:

//////////////15, 13, 12, 12, 19, 22, 21, 18
//////////////Фрагмент:

//////////////import matplotlib.pyplot as plt
//////////////import numpy as np

//////////////temperature = np.array

//////////////print(f'Средна дневна температура: { }')



//////////////import numpy as np



//////////////temperature = np.array([15, 13, 12, 12, 19, 22, 21, 18])



//////////////average_temperature = np.mean(temperature)



//////////////print(f'Средна дневна температура: {average_temperature}')



//////////////Въпрос 20
//////////////Отговорен
//////////////От максимално 10,00
//////////////НеотбелязанОтбелязване на въпроса
//////////////Текст на въпроса
//////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

//////////////Условие:


//////////////Напишете програма, кооято въвежда матрица 3х3, въведете от клавиатурата реално число и умножете матрицата по него. 

//////////////Фрагмент:
//////////////import numpy as np

//////////////data = []
//////////////for i in range():
//////////////  row = list(map(int, input().split()))
//////////////  data.append(row)

//////////////matrix = np.array(data)
//////////////n = float(input('Enter a number: '))

//////////////result = np.(matrix, n)
//////////////print(result)





//////////////import numpy as np



//////////////data = []

//////////////for i in range(3):

//////////////  row = list(map(int, input().split()))

//////////////  data.append(row)



//////////////matrix = np.array(data)

//////////////n = float(input('Enter a number: '))



//////////////result = np.multiply(matrix, n)

//////////////print(result)



//////////////Въпрос 21
//////////////Неправилно
//////////////0, 00 от максимално 2, 00 точки
//////////////НеотбелязанОтбелязване на въпроса
//////////////Текст на въпроса
//////////////Дефинирайте понятието представителна извадка:


//////////////генерална съвкупност
//////////////  наричаме множество от стойностите на разглеждания признак за
//////////////всички
//////////////  изследвани обекти.

//////////////Забележка
//////////////Your answer is incorrect.
//////////////Правилният отговор е:
//////////////Дефинирайте понятието представителна извадка:

//////////////[представителна извадка] наричаме множество от стойностите на разглеждания признак за[част от] изследвани обекти.

//////////////Въпрос 22
//////////////Отговорен
//////////////От максимално 6, 00
//////////////НеотбелязанОтбелязване на въпроса
//////////////Текст на въпроса
//////////////Демонстрирайте с помощта на код на програмен език от изучаваните(Python, C#) изчертаване на графиката на функцията:

//////////////y = 2x2 - 2x + 3

//////////////в интервала от[0; 10]

//////////////import numpy as np

//////////////import matplotlib.pyplot as plt



//////////////# Функцията, която искаме да изчертаем

//////////////def func(x):

//////////////    return 2 * x * *2 - 2 * x + 3



//////////////# Генериране на x стойности в интервала [0, 10]

//////////////x_values = np.linspace(0, 10, 1000)



//////////////# Изчисляване на y стойностите, съответстващи на x стойностите

//////////////y_values = func(x_values)



//////////////# Изчертаване на графиката на функцията

//////////////plt.plot(x_values, y_values, label = 'y = 2x^2 - 2x + 3')



//////////////# Заглавие и означения на остите

//////////////plt.title('Графика на функцията y = 2x^2 - 2x + 3')

//////////////plt.xlabel('x')

//////////////plt.ylabel('y')



//////////////# Включване на легенда

//////////////plt.legend()



//////////////# Показване на графиката

//////////////plt.show()



//////////////Край на прегледа
//////////////Отиди на ...
//////////////Отиди на ...
//////////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
//////////////Навигация в теста
//////////////Показване по един въпрос на страница
//////////////Край на прегледа
//////////////Вие сте влезли в системата като Добри Илев (Изход)
//////////////тренировъчен - курс - по
//////////////Data retention summary


////////////Прескочи на основното съдържание
////////////ПГЕЕ
////////////Български ‎(bg)‎ 
////////////Добри Илев 
////////////Тренировъчен курс - Програмно осигуряване
////////////Начална страница
////////////Моите курсове
//////////// тренировъчен-курс-по
//////////// Изпитна тема 16
//////////// Изпитна тема №16
////////////Започнат на	вторник, 28 март 2023, 17:18
////////////Състояние Завършен
////////////Приключен на	вторник, 28 март 2023, 17:53
////////////Изминало време	35 мин. 38 сек.
////////////Оценка	Още не е оценен
////////////Въпрос 1
////////////Правилно
////////////2,00 от максимално 2,00 точки
////////////НеотбелязанОтбелязване на въпроса
////////////Текст на въпроса
////////////Кое от следните НЕ е свойство на математическа функция:

////////////Изберете едно
////////////a. комутативност 
////////////b. непрекъснатост
////////////c. дефинириуемост (да притежава дефиниционно множество)
////////////d.монотонност
////////////Забележка
////////////Your answer is correct.
////////////Правилният отговор е: комутативност
////////////Въпрос 2
////////////Правилно
////////////2,00 от максимално 2,00 точки
////////////НеотбелязанОтбелязване на въпроса
////////////Текст на въпроса
////////////Посочете коя е основата на осмичната бройна система.

////////////Изберете едно
////////////a. 16
////////////b. 10
////////////c. 8 
////////////d. 2
////////////Забележка
////////////Your answer is correct.
////////////Правилният отговор е: 8
////////////Въпрос 3
////////////Правилно
////////////4,00 от максимално 4,00 точки
////////////НеотбелязанОтбелязване на въпроса
////////////Текст на въпроса
////////////Кое от следните числа е записано в двоична бройна система?

////////////Изберете едно
////////////a. 123
////////////b. 3053
////////////c. a8c
////////////d. 10101 
////////////Забележка
////////////Your answer is correct.
////////////Правилният отговор е: 10101
////////////Въпрос 4
////////////Правилно
////////////2,00 от максимално 2,00 точки
////////////НеотбелязанОтбелязване на въпроса
////////////Текст на въпроса
////////////Функцията f(x) = 2x + 5 e:

////////////Изберете едно
////////////a.периодична
////////////b.кубична
////////////c.линейна
////////////d. квадратична
////////////Забележка
////////////Your answer is correct.
////////////Правилният отговор е: линейна
////////////Въпрос 5
////////////Правилно
////////////2,00 от максимално 2,00 точки
////////////НеотбелязанОтбелязване на въпроса
////////////Текст на въпроса
////////////Посочете правилната дефиниция на понятието средна стойност.

////////////Изберете едно
////////////a.произведението от стойностите на всички елементи в дадена съвкупност, разделено на броя им.
////////////b.сумата от стойностите на всички елементи в дадена съвкупност, разделено на броя им. 
////////////c.сумата от квадратите на всички елементи в дадена съвкупност, разделено на броя им.
////////////d.сумата от стойностите на всички елементи в дадена съвкупност, разделено на броя им на квадрат.
////////////Забележка
////////////Your answer is correct.
////////////Правилният отговор е: сумата от стойностите на всички елементи в дадена съвкупност, разделено на броя им.
////////////Въпрос 6
////////////Правилно
////////////2,00 от максимално 2,00 точки
////////////НеотбелязанОтбелязване на въпроса
////////////Текст на въпроса
////////////Посочете правилната дефиниция на понятието генерална съвкупност.

////////////Изберете едно
////////////a.Множество от всички изследвани обекти
////////////b. Множество от стойностите на разглеждания признак за част от изследваните обекти
////////////c. Множество от стойностите на разглеждания признак за всички изследвани обекти
////////////d.Множество от всички изследвани характеристики
////////////Забележка
////////////Your answer is correct.
////////////Правилният отговор е: Множество от стойностите на разглеждания признак за всички изследвани обекти
////////////Въпрос 7
////////////Правилно
////////////6,00 от максимално 6,00 точки
////////////НеотбелязанОтбелязване на въпроса
////////////Текст на въпроса
////////////Приложете софтуерен метод за решаване на следната система линейни уравнения:



////////////С помощта на блокчета постройте код, който да реши успешно системата.

////////////import blank
////////////import blank  as plt
////////////import  blank  as np
////////////a = np.array([blank, blank, blank])
////////////b = np.array(blank)
////////////x = np.linalg.solve(blank, blank)
////////////print(blank)



////////////mathmatplotlib.pyplotnumpy[1, 2, 5][1,‑1, 2][3, ‑6, ‑1][‑9, 3, 25]abxnpplt
////////////Забележка
////////////Your answer is correct.
////////////Правилният отговор е:
////////////Приложете софтуерен метод за решаване на следната система линейни уравнения:



////////////С помощта на блокчета постройте код, който да реши успешно системата.

////////////import [math]
////////////import[matplotlib.pyplot] as plt
////////////import[numpy] as np
////////////a = np.array([ [[1, 2, 5]], [[1,‑1,2]], [[3, ‑6, ‑1]] ])
////////////b = np.array( [[‑9, 3, 25]] )
////////////x = np.linalg.solve([a], [b])
////////////print([x])

////////////Въпрос 8
////////////Правилно
////////////2,00 от максимално 2,00 точки
////////////НеотбелязанОтбелязване на въпроса
////////////Текст на въпроса
////////////По какъв начин са представени данните на приложеното графично изображение?



////////////Изберете едно
////////////a. йерархична диаграма
////////////b. кръгова диаграма
////////////c. честотен полигон
////////////d. хистограма (колонна диаграма) 
////////////Забележка
////////////Your answer is correct.
////////////Правилният отговор е: хистограма(колонна диаграма)
////////////Въпрос 9
////////////Правилно
////////////4,00 от максимално 4,00 точки
////////////НеотбелязанОтбелязване на въпроса
////////////Текст на въпроса
////////////Десетичното число 10 в двоичен вид записано в четири позиции е:

////////////Отговор:
////////////1010
////////////Забележка
////////////Правилният отговор е: 1010
////////////Въпрос 10
////////////Неправилно
////////////0,00 от максимално 2,00 точки
////////////НеотбелязанОтбелязване на въпроса
////////////Текст на въпроса
////////////Посочете правилната дефиниция на понятието медиана в статистиката.

////////////Изберете едно
////////////a. стойността, която се намира по средата на подреден статистически ред
////////////b. стойността, която се среща най-често в статистически ред 
////////////c. стойността, която се получава при сумиране на квадратите от всички елементи и разделянето на корен от броя им
////////////d. стойността, която се получава при сумиране на всички елементи и разделянето на броя им в статистическия ред
////////////Забележка
////////////Your answer is incorrect.
////////////Правилният отговор е: стойността, която се намира по средата на подреден статистически ред
////////////Въпрос 11
////////////Правилно
////////////2,00 от максимално 2,00 точки
////////////НеотбелязанОтбелязване на въпроса
////////////Текст на въпроса
////////////Функцията f(x) = 3x2 - 2x + 5 e:

////////////Изберете едно
////////////a.квадратична
////////////b.линейна
////////////c.кубична
////////////d. периодична
////////////Забележка
////////////Your answer is correct.
////////////Правилният отговор е: квадратична
////////////Въпрос 12
////////////Отговорен
////////////От максимално 10,00
////////////НеотбелязанОтбелязване на въпроса
////////////Текст на въпроса
////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент.Предоставеният фрагмент да се приведе в работещ вид.

////////////Условие:

////////////Решете следната система линейни уравнения, чрез използването на избрана изучавана софтуерна среда:



////////////Фрагмент:

////////////import math
////////////import matplotlib.pyplot as plt
////////////import numpy as np


////////////a = np.array([ [1, 2, 5], [1 -1 2], [-9,3,25] ] 
////////////b = np.array[3, -6, -1])
////////////x = np.linalg.solve(a  b)
////////////print(x) # решение на системата: [ 2. -3. -1.]



////////////import math
////////////import matplotlib.pyplot as plt
////////////import numpy as np


////////////a = np.array([ [1,2,5], [1 -1 2], [3, -6, -1]  ])
////////////b = np.array([-9, 3, 25])
////////////x = np.linalg.solve(a, b)
////////////print(x) # решение на системата: [ 2. -3. -1.]


////////////Въпрос 13
////////////Отговорен
////////////От максимално 10,00
////////////НеотбелязанОтбелязване на въпроса
////////////Текст на въпроса
////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

////////////Условие:

////////////Изчертайте графика на следната дненвна температура като са ви известни следните замервания:

////////////15, 13, 12, 12, 19, 22, 21, 18.

////////////Замерванията са извършени в:

////////////0:00, 3:00, 6:00, 9:00, 12:00, 15:00, 18:00, 21:00

////////////Фрагмент:

////////////import matplotlib.pyplot as plt
////////////import numpy as np

////////////temperature = np.array()
////////////hours = np.array()
////////////plt.plot(hours, temperature)
////////////plt.xlabel(Час)
////////////plt.ylabel'Температура'
////////////plt.title('Графика на температурата през дененощието')
////////////plt.show



////////////import math
////////////import matplotlib.pyplot as plt
////////////import numpy as np

////////////temperature = np.array([15, 13, 12, 12, 19, 22, 21, 18])
////////////hours = np.array(["0:00", "3:00", "6:00", "9:00", "12:00", "15:00", "18:00", "21:00"])
////////////plt.plot(hours, temperature)
////////////plt.xlabel('Час')
////////////plt.ylabel('Температура')
////////////plt.title('Графика на температурата през дененощието')
////////////plt.show()


////////////Въпрос 14
////////////Правилно
////////////2,00 от максимално 2,00 точки
////////////НеотбелязанОтбелязване на въпроса
////////////Текст на въпроса
////////////Дефинирайте понятието генерална съвкупност:


////////////генерална съвкупност
////////////  наричаме множество от стойностите на разглеждания признак за 
////////////всички
////////////  изследвани обекти.

////////////Забележка
////////////Your answer is correct.
////////////Правилният отговор е:
////////////Дефинирайте понятието генерална съвкупност:

////////////[генерална съвкупност] наричаме множество от стойностите на разглеждания признак за [всички]
////////////изследвани обекти.

////////////Въпрос 15
////////////Правилно
////////////2,00 от максимално 2,00 точки
////////////НеотбелязанОтбелязване на въпроса
////////////Текст на въпроса
////////////Посочете коя бройна система използва цифрите 0 и 1.

////////////Изберете едно
////////////a.двоична
////////////b. осмична
////////////c. шестнадесетична
////////////d. десетична
////////////Забележка
////////////Your answer is correct.
////////////Правилният отговор е: двоична
////////////Въпрос 16
////////////Отговорен
////////////От максимално 6,00
////////////НеотбелязанОтбелязване на въпроса
////////////Текст на въпроса
////////////Демонстрирайте с помощта на код на програмен език от изучаваните (Python, C#) изчертаване на графиката на функцията:

////////////y = 3x2 + 2x - 3

////////////в интервала от[-20; 20]

////////////import numpy as np

////////////import matplotlib.pyplot as plt



////////////def function(x):

////////////    return 3 * x * *2 + 2 * x - 3



////////////x_values = np.linspace(-20, 20, 1000)  # Генерира 1000 точки равномерно разпределени в интервала [-20, 20]

////////////y_values = function(x_values)



////////////plt.plot(x_values, y_values)

////////////plt.xlabel('x')

////////////plt.ylabel('y')

////////////plt.title('y = 3x^2 + 2x - 3')



////////////plt.grid()

////////////plt.show()



////////////Въпрос 17
////////////Правилно
////////////2,00 от максимално 2,00 точки
////////////НеотбелязанОтбелязване на въпроса
////////////Текст на въпроса
////////////По какъв начин са представени данните на приложеното графично изображение?



////////////Изберете едно
////////////a. кръгова диаграма
////////////b. йерархична диаграма
////////////c. хистограма (колонна диаграма)
////////////d.честотен полигон 
////////////Забележка
////////////Your answer is correct.
////////////Правилният отговор е: честотен полигон
////////////Въпрос 18
////////////Отговорен
////////////От максимално 10,00
////////////НеотбелязанОтбелязване на въпроса
////////////Текст на въпроса
////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

////////////Условие:


////////////Напишете програма, кооято въвежда матрица 3х3, въведете от клавиатурата реално число и умножете матрицата по него. 

////////////Фрагмент:
////////////import numpy as np

////////////data = []
////////////for i in range():
////////////  row = list(map(int, input().split()))
////////////  data.append(row)

////////////matrix = np.array(data)
////////////n = float(input('Enter a number: '))

////////////result = np.(matrix, n)
////////////print(result)





////////////import numpy as np

////////////data = []
////////////for i in range(3):
////////////  row = list(map(int, input().split()))
////////////  data.append(row)

////////////matrix = np.array(data)
////////////n = float(input('Enter a number: '))

////////////result = np.multiply(matrix, n)
////////////print(result)


////////////Въпрос 19
////////////Правилно
////////////6, 00 от максимално 6, 00 точки
////////////НеотбелязанОтбелязване на въпроса
////////////Текст на въпроса
////////////Приложете софтуерен метод за решаване на следната система линейни уравнения:



////////////С помощта на блокчета постройте код, който да реши успешно системата.

////////////import  blank
////////////import  blank as plt
////////////import  blank as np
////////////a = np.array([blank, blank, blank])
////////////    b = np.array(blank)
////////////x = np.linalg.solve(blank, blank)
////////////print(blank)



////////////mathmatplotlib.pyplotnumpy[3, 2, 1][2, ‑1, 2][4, 3, ‑1][2, ‑2, 1]abxnpplt
////////////Забележка
////////////Your answer is correct.
////////////Правилният отговор е:
////////////Приложете софтуерен метод за решаване на следната система линейни уравнения:



////////////С помощта на блокчета постройте код, който да реши успешно системата.

////////////import [math]
////////////import[matplotlib.pyplot] as plt
////////////import[numpy] as np
////////////a = np.array([ [[3, 2, 1]], [[2, ‑1, 2]], [[4, 3, ‑1]] ])
////////////b = np.array( [[2, ‑2, 1]] )
////////////x = np.linalg.solve([a], [b])
////////////print([x])

////////////Въпрос 20
////////////Отговорен
////////////От максимално 10,00
////////////НеотбелязанОтбелязване на въпроса
////////////Текст на въпроса
////////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

////////////Условие:


////////////Напишете програма, кооято въвежда матрица 2х2, въведете от клавиатурата реално число и умножете матрицата по него. 

////////////Фрагмент:
////////////import numpy as np

////////////data = []
////////////for i in range():
////////////  row = list(map(int, input().split()))
////////////  data.append(row)

////////////matrix = np.array(data)
////////////n = float(input('Enter a number: '))

////////////result = np.(matrix, n)
////////////print(result)





////////////import numpy as np

////////////data = []
////////////for i in range(2):
////////////  row = list(map(int, input().split()))
////////////  data.append(row)

////////////matrix = np.array(data)
////////////n = float(input('Enter a number: '))

////////////result = np.multiply(matrix, n)
////////////print(result)

////////////Въпрос 21
////////////Отговорен
////////////От максимално 6, 00
////////////НеотбелязанОтбелязване на въпроса
////////////Текст на въпроса
////////////Приложете софтуерен или математически метод за решаване на следната СЛУ:



////////////Опишете подробно решението, ако сте избрали математически метод или програмния код, ако сте избрали софтуерен метод за решаване.


////////////import math
////////////import numpy as np

////////////import matplotlib.pyplot as plt



////////////a = np.array([ [2, 2], [2, -6] ])

////////////    b = np.array([ [12, -2] ])

////////////x = np.linalg.solve(a, b)

////////////print(x)

////////////Въпрос 22
////////////Отговорен
////////////От максимално 6,00
////////////НеотбелязанОтбелязване на въпроса
////////////Текст на въпроса
////////////Демонстрирайте с помощта на код на програмен език от изучаваните (Python, C#) изчертаване на графиката на функцията:

////////////y = 2x2 - 2x + 3

////////////в интервала от [-20; 20]

////////////import numpy as np

////////////import mathplotlib.pyplot as plt



////////////def function(x):

////////////   return 2 * x * *2 - 2 * x + 3



////////////x_values = np.linspace(-20, 20, 1000)

////////////y_values = function(x_values)



////////////plt.plot(x_values, y_values)



////////////plt.xlabel('x')

////////////plt.ylable('y')



////////////plt.grid()

////////////plt.show()

////////////Край на прегледа
////////////Отиди на ...
////////////Отиди на ...
////////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
////////////Навигация в теста
////////////Показване по един въпрос на страница
////////////Край на прегледа
////////////Вие сте влезли в системата като Добри Илев (Изход)
////////////тренировъчен - курс - по
////////////Data retention summary


////////////ИЗПИТНА ТЕМА 17

//////////Прескочи на основното съдържание
//////////ПГЕЕ
//////////Български ‎(bg)‎ 
//////////Добри Илев 
//////////Тренировъчен курс - Програмно осигуряване
//////////Начална страница
//////////Моите курсове
////////// тренировъчен-курс-по
////////// Изпитна тема 17
////////// Изпитна тема №17
//////////Започнат на	четвъртък, 23 февруари 2023, 10:29
//////////Състояние Завършен
//////////Приключен на	четвъртък, 23 февруари 2023, 11:04
//////////Изминало време	34 мин. 2 сек.
//////////Въпрос 1
//////////Отговорен
//////////От максимално 2,00
//////////НеотбелязанОтбелязване на въпроса
//////////Текст на въпроса
//////////Посочете кое от следните НЕ е свойство на векторите:

//////////Изберете едно
//////////a. еднопосочност
//////////b. идемпотентност
//////////c. колинеарност
//////////d. противоположност
//////////Въпрос 2
//////////Отговорен
//////////От максимално 4,00
//////////НеотбелязанОтбелязване на въпроса
//////////Текст на въпроса
//////////Представени са три комбинаторни конфигурации. Надпишете всяка от тях.

//////////Представени са три комбинаторни конфигурации. Надпишете всяка от тях.


//////////a b c

//////////a c b

//////////b a c

//////////b c a

//////////c a b

//////////c b a

//////////+ +

//////////+ -

//////////+ *

//////////- -

//////////- *

//////////* *

//////////+ -

//////////+ *

//////////- *

//////////А. 
//////////Вариации с повторение

//////////Б. 
//////////Комбинации с потворение

//////////В. 
//////////Комбинации без повторение



//////////Въпрос 3
//////////Отговорен
//////////От максимално 6,00
//////////НеотбелязанОтбелязване на въпроса
//////////Текст на въпроса
//////////Демонстрирайте пресмятане на средната вероятност за резултат от 1 до 6 при хвърляне на зар за 5000 хвърляния. Използвайте средствата на изучаван език за програмиране (Python и Numpy или C#).



//////////import numpy as np



//////////# 5000 dice rolls

//////////dice_rolls = np.random.randint(1, 7, 5000)



//////////# Calculate the mean of the rolls

//////////mean = np.mean(dice_rolls)



//////////print("The average of the dice rolls is:", mean)



//////////Въпрос 4
//////////Отговорен
//////////От максимално 2,00
//////////НеотбелязанОтбелязване на въпроса
//////////Текст на въпроса
//////////Посочете кое от следните е правилна дефиниция на понятието вектор:
//////////Изберете едно
//////////a. отсечка, на която единия край е избран за начало, а другият за край
//////////b. отсечка с определена големина
//////////c. множество от точки в равнината, които са свързани помежду си
//////////d. права, която може да бъде с безкраен размер
//////////Въпрос 5
//////////Отговорен
//////////От максимално 4,00
//////////НеотбелязанОтбелязване на въпроса
//////////Текст на въпроса
//////////Нека имаме следните множества:

//////////A = { 1, 2, 3}

//////////B = { 3, 4, 5}

//////////Можем да кажем, че:

//////////A ∩ B = blank

//////////3  blank B


//////////{1, 2, 3, 4, 5}
//////////{ 3}
//////////{ 1, 2}∈∉Ø
//////////{ 1, 2, 3, 3, 4, 5}
//////////{ 1, 2}
//////////{ 4, 5}
//////////{ 1, 2, 3}
//////////{ 3, 4, 5}
//////////Въпрос 6
//////////Отговорен
//////////От максимално 2,00
//////////НеотбелязанОтбелязване на въпроса
//////////Текст на въпроса
//////////Дефинирайте понятието множество.

//////////Множество е колекция от елементи, които могат да бъдат числа, обекти, стрингове или друг тип данни. Всеки елемент в множеството може да бъде достъпен само веднъж, така че множеството не може да съдържа дубликати. Множествата се използват в математиката за изучаване на свойствата на елементите, като те могат да бъдат съчетани, разделени или сравнявани едно с друго.

//////////Въпрос 7
//////////Отговорен
//////////От максимално 6,00
//////////НеотбелязанОтбелязване на въпроса
//////////Текст на въпроса
//////////Демонстрирайте пресмятане на средната вероятност за резултати "ези" или "тора" при хвърляне на монета за 10000 хвърляния. Използвайте средствата на изучаван език за програмиране (Python и Numpy или C#).



//////////import numpy as np



//////////num_flips = 10000

//////////results = np.random.choice(['Heads', 'Tails'], num_flips)

//////////mean = np.mean(results == 'Heads')

//////////print("The average probability of getting Heads is:", mean)



//////////Въпрос 8
//////////Отговорен
//////////От максимално 2,00
//////////НеотбелязанОтбелязване на въпроса
//////////Текст на въпроса
//////////Коя операция между множества е показана на изображението:





//////////Изберете едно
//////////a. разлика
//////////b. симетрична разлика
//////////c. обединение
//////////d. сечение
//////////Въпрос 9
//////////Отговорен
//////////От максимално 2,00
//////////НеотбелязанОтбелязване на въпроса
//////////Текст на въпроса
//////////Изберете правилната дефиниция на понятието комбинация без повторение.

//////////Изберете едно
//////////a. Съвкупност от избрани k елемента от общо n елемента на дадено множество, като редът не е от значение
//////////b. Съвкупност от избрани k елемента от общо n елемента на дадено множество, като елементите могат да се повтарят
//////////c. Съвкупност от избрани k елемента от общо n елемента на дадено множество, като редът е от значение
//////////d. Всяка подредена съвкупност от n елемента на дадено множество, като всеки се среща само веднъж
//////////Въпрос 10
//////////Отговорен
//////////От максимално 10,00
//////////НеотбелязанОтбелязване на въпроса
//////////Текст на въпроса
//////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

//////////Условие:

//////////Напишете програма, която въвежда координатите на две точки (А и B) в тримерна координатна система и изчислява координатите на вектора AB. Намерете дължината на вектора AB.

//////////Фрагмент:

//////////import numpy as np
//////////coordinates1 = list(map(int, input('Въведете координатите на точка А: ').split()))
//////////coordinates2 =
//////////A = np.array(coordinates1)
//////////B = np.array()

//////////v1 = B - A
//////////length = np.linalg
//////////print(length)






//////////import numpy as np

//////////coordinates1 = list(map(int, input('Въведете координатите на точка А: ').split()))

//////////coordinates2 = list(map(int, input('Въведете координатите на точка B: ').split()))



//////////A = np.array(coordinates1)

//////////B = np.array(coordinates2)



//////////v1 = B - A

//////////length = np.linalg.norm(v1)

//////////print("Дължина на вектора AB:", length)

//////////Въпрос 11
//////////Отговорен
//////////От максимално 6,00
//////////НеотбелязанОтбелязване на въпроса
//////////Текст на въпроса

//////////Векторите
////////// са съставени от компоненти, които са числа. Те представляват 
//////////масив
////////// от числа, а операциите върху тях се разглеждат като операции върху него. В програмните езици те могат да се представят като 
//////////матрица
////////// .

//////////Въпрос 12
//////////Отговорен
//////////От максимално 10,00
//////////НеотбелязанОтбелязване на въпроса
//////////Текст на въпроса
//////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

//////////Условие:

//////////Напишете програма, която въвежда координатите на два вектора v1 и v2 в тримерна координатна система. Програмата да намира дали двата вектора са перпендикулярни.

//////////Фрагмент:

//////////import numpy as np
//////////coordinates1 = list(map(int, input('Въведете координатите на вектор v1: ').split()))
//////////coordinates2 = list(map(int, input('Въведете координатите на вектор v2: ').split()))
//////////A = np.array(coordinates1)
//////////B = np.array()

//////////result =
//////////print(result)
//////////if result == :

//////////  print('yes')

//////////else:

//////////  print('no')






//////////import numpy as np

//////////coordinates1 = list(map(int, input('Въведете координатите на вектор v1: ').split()))

//////////coordinates2 = list(map(int, input('Въведете координатите на вектор v2: ').split()))

//////////v1 = np.array(coordinates1)

//////////v2 = np.array(coordinates2)



//////////result = np.dot(v1, v2)

//////////if result == 0:

//////////print('yes')

//////////else:

//////////print('no')

//////////Въпрос 13
//////////Отговорен
//////////От максимално 4,00
//////////НеотбелязанОтбелязване на въпроса
//////////Текст на въпроса
//////////Нека имаме следните множества:

//////////A = { 1, 2, 3}

//////////B = { 3, 4, 5}

//////////Можем да кажем, че:

//////////A \ B = blank

//////////3  blank B


//////////{1, 2, 3, 4, 5}
//////////{ 3}
//////////{ 1, 2}∈∉Ø
//////////{ 1, 2, 3, 3, 4, 5}
//////////{ 1, 2}
//////////{ 4, 5}
//////////{ 1, 2, 3}
//////////{ 3, 4, 5}
//////////Въпрос 14
//////////Отговорен
//////////От максимално 4,00
//////////НеотбелязанОтбелязване на въпроса
//////////Текст на въпроса
//////////Представени са три комбинаторни конфигурации. Надпишете всяка от тях.

//////////Представени са три комбинаторни конфигурации. Надпишете всяка от тях.


//////////1 2 3 4

//////////1 2 4 3

//////////1 3 2 4

//////////1 3 4 2

//////////1 4 2 3

//////////1 4 3 2

//////////2 1 3 4

//////////2 1 4 3

//////////2 3 1 4

//////////2 3 4 1

//////////2 4 3 1

//////////2 4 1 3

//////////3 1 2 4

//////////3 1 4 2

//////////3 2 1 4

//////////3 2 4 1

//////////3 4 1 2

//////////3 4 2 1

//////////4 1 2 3

//////////4 1 3 2

//////////4 2 1 3

//////////4 2 3 1

//////////4 3 1 2

//////////4 3 2 1

//////////1 1

//////////1 2

//////////1 3

//////////2 2

//////////2 3

//////////3 3

//////////1 2

//////////1 3

//////////2 3

//////////А. 
//////////Пермутации без повторение

//////////Б. 
//////////Комбинации с потворение

//////////В. 
//////////Комбинации без повторение



//////////Въпрос 15
//////////Отговорен
//////////От максимално 2,00
//////////НеотбелязанОтбелязване на въпроса
//////////Текст на въпроса
//////////Нека имаме вектор v1(k1, k2, k3, ... kn) и v2(l1, l2, l3, ..., ln). Кой от изразите описва скаларното произведение на двата вектора?

//////////Изберете едно
//////////a. (k1 - l1) +(k2 - l2) + ... +(kn - ln)
//////////b. (k1 + l1) + (k2 + l2) + ... +(kn + ln)
//////////c.l1 * (k1 + k2 + ... + kn) +l2 * (k1 + k2 + ... + kn) +... +ln * (k1 + k2 + ... + kn)
//////////d. (k1 * l1) + (k2 * l2) + ... +(kn * ln)
//////////Въпрос 16
//////////Отговорен
//////////От максимално 2,00
//////////НеотбелязанОтбелязване на въпроса
//////////Текст на въпроса
//////////Изберете правилната дефиниция на понятието вариация без повторение.

//////////Изберете едно
//////////a. Всяка подредена съвкупност от n елемента на дадено множество, като всеки се среща само веднъж
//////////b. Съвкупност от избрани k елемента от общо n елемента на дадено множество, като редът е от значение
//////////c. Съвкупност от избрани k елемента от общо n елемента на дадено множество, като редът не е от значение
//////////d. Съвкупност от избрани k елемента от общо n елемента на дадено множество, като елементите могат да се повтарят
//////////Въпрос 17
//////////Отговорен
//////////От максимално 2,00
//////////НеотбелязанОтбелязване на въпроса
//////////Текст на въпроса
//////////Използвайте блоковете, за да опишете алгоритъм за генериране на комбинации без повторение

//////////public static void Generate(int index, int start)

//////////{

//////////  if (blank)
//////////  {

//////////    Console.WriteLine(string.Join(" ", combination));

//////////  }
//////////  else
//////////  {

//////////    for (int i = start; i < elements.Length; i++)
//////////    {

//////////      combination[blank] = blank;

//////////      Generate(index + 1, blank);

//////////    }

//////////  }

//////////}


//////////index >= ki + 1used[i] = trueindexelements[i]used[i]used[i] = falsei
//////////Въпрос 18
//////////Отговорен
//////////От максимално 10,00
//////////НеотбелязанОтбелязване на въпроса
//////////Текст на въпроса
//////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

//////////Условие:

//////////Напишете програма, която въвежда координатите на две точки (А и B) в тримерна координатна система и изчислява координатите на вектора AB

//////////Фрагмент:

//////////import numpy as np
//////////coordinates1 = list(map(int, input('Въведете координатите на точка А: ').split()))
//////////coordinates2 =
//////////A = np.array(coordinates1)
//////////B = np.array()

//////////v1 = B  A
//////////print(v1)






//////////import numpy as np

//////////coordinates1 = list(map(int, input('Enter the coordinates of point A: ').split()))

//////////coordinates2 = list(map(int, input('Enter the coordinates of point B: ').split()))



//////////A = np.array(coordinates1)

//////////B = np.array(coordinates2)



//////////v1 = B - A

//////////print(v1)



//////////Въпрос 19
//////////Отговорен
//////////От максимално 2,00
//////////НеотбелязанОтбелязване на въпроса
//////////Текст на въпроса
//////////Изберете правилната дефиниция на понятието вариация с повторение.

//////////Изберете едно
//////////a. Съвкупност от избрани k елемента от общо n елемента на дадено множество, като редът е от значение
//////////b. Съвкупност от избрани k елемента от общо n елемента на дадено множество, като редът не е от значение
//////////c. Съвкупност от избрани k елемента от общо n елемента на дадено множество, като елементите могат да се повтарят
//////////d. Всяка подредена съвкупност от n елемента на дадено множество, като всеки се среща само веднъж
//////////Въпрос 20
//////////Отговорен
//////////От максимално 2,00
//////////НеотбелязанОтбелязване на въпроса
//////////Текст на въпроса
//////////Използвайте блоковете, за да опишете алгоритъм за генериране на вариации с повторение

//////////public static void Generate(int index)

//////////{

//////////  if (blank)
//////////  {

//////////    Console.WriteLine(string.Join(" ", variation));

//////////  }
//////////  else
//////////  {

//////////    for (int i = 0; i < elements.Length; i++)
//////////    {

//////////      variation[blank] = blank;

//////////      Generate(index + 1);

//////////    }

//////////  }

//////////}


//////////index >= ki + 1used[i] = trueindexelements[i]used[i]used[i] = falsei
//////////Въпрос 21
//////////Отговорен
//////////От максимално 2,00
//////////НеотбелязанОтбелязване на въпроса
//////////Текст на въпроса
//////////Използвайте блоковете, за да опишете алгоритъм за генериране на пермутации

//////////public static void Generate(int index)

//////////{

//////////  if (blank)
//////////  {

//////////    Console.WriteLine(string.Join(" ", permutation));

//////////  }
//////////  else
//////////  {

//////////    for (int i = 0; i < elements.Length; i++)
//////////    {

//////////      if (blank)
//////////      {

//////////        blank;

//////////        permutation[blank] = blank;

//////////        Generate(index + 1);

//////////        used[i] = false;

//////////      }

//////////    }

//////////  }

//////////}


//////////index >= elements.Length!used[i]used[i] = trueindexelements[i]used[i]used[i] = falsei
//////////Въпрос 22
//////////Отговорен
//////////От максимално 10,00
//////////НеотбелязанОтбелязване на въпроса
//////////Текст на въпроса
//////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

//////////Условие:

//////////Напишете програма, която въвежда координатите на две точки (А и B) в тримерна координатна система и изчислява координатите на вектора BA

//////////Фрагмент:

//////////import numpy as np
//////////coordinates1 = 
//////////coordinates2 = list(map(int, input('Въведете координатите на точка B: ').split()))
//////////A = np.array()
//////////B = np.array(coordinates2)

//////////v1 = A B
//////////print(v1)






//////////import numpy as np

//////////coordinates1 = list(map(int, input('Въведете координатите на точка А: ').split()))

//////////coordinates2 = list(map(int, input('Въведете координатите на точка B: ').split()))

//////////A = np.array(coordinates1)

//////////B = np.array(coordinates2)



//////////v1 = B - A

//////////print(v1)

//////////Въпрос 23
//////////Отговорен
//////////От максимално 4,00
//////////НеотбелязанОтбелязване на въпроса
//////////Текст на въпроса
//////////Представени са три комбинаторни конфигурации. Надпишете всяка от тях.


//////////1 1

//////////1 2

//////////1 3

//////////2 1

//////////2 2

//////////2 3

//////////3 1

//////////3 2

//////////3 3

//////////1 1

//////////1 2

//////////1 3

//////////2 2

//////////2 3

//////////3 3

//////////1 2

//////////1 3

//////////2 1

//////////2 3

//////////3 1

//////////3 2



//////////А.  
//////////Вариации с повторение

//////////Б. 
//////////Вариации с повторение

//////////В. 
//////////Комбинации без повторение



//////////Край на прегледа
//////////Отиди на ...
//////////Отиди на ...
//////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
//////////Навигация в теста
//////////Показване по един въпрос на страница
//////////Край на прегледа
//////////Вие сте влезли в системата като Добри Илев (Изход)
//////////тренировъчен - курс - по
//////////Data retention summary


////////Прескочи на основното съдържание
////////ПГЕЕ
////////Български ‎(bg)‎ 
////////Добри Илев 
////////Тренировъчен курс - Програмно осигуряване
////////Начална страница
////////Моите курсове
//////// тренировъчен-курс-по
//////// Изпитна тема 17
//////// Изпитна тема №17
////////Започнат на	четвъртък, 30 март 2023, 10:08
////////Състояние Завършен
////////Приключен на	четвъртък, 30 март 2023, 10:47
////////Изминало време	39 мин. 25 сек.
////////Въпрос 1
////////Отговорен
////////От максимално 6,00
////////НеотбелязанОтбелязване на въпроса
////////Текст на въпроса
////////Демонстрирайте пресмятане на средната вероятност за резултат от 1 до 6 при хвърляне на зар за 5000 хвърляния. Използвайте средствата на изучаван език за програмиране (Python и Numpy или C#).



////////import numpy as np

////////num_trials = 5000

////////num_tosess = 5000



////////result = np.random.randint(6, size = (num_trials, num_tosses))

////////probabilities = np.mean(results, axis = 1)

////////average_probability = np.mean(probabilities)

////////Въпрос 2
////////Отговорен
////////От максимално 2,00
////////НеотбелязанОтбелязване на въпроса
////////Текст на въпроса
////////Нека имаме вектор v1(k1, k2, k3, ... kn) и v2(l1, l2, l3, ..., ln). Кой от изразите описва скаларното произведение на двата вектора?

////////Изберете едно
////////a. (k1 - l1) +(k2 - l2) + ... +(kn - ln)
////////b. (k1 * l1) + (k2 * l2) + ... +(kn * ln)
////////c.l1 * (k1 + k2 + ... + kn) +l2 * (k1 + k2 + ... + kn) +... +ln * (k1 + k2 + ... + kn)
////////d. (k1 + l1) + (k2 + l2) + ... +(kn + ln)
////////Въпрос 3
////////Отговорен
////////От максимално 10,00
////////НеотбелязанОтбелязване на въпроса
////////Текст на въпроса
////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

////////Условие:

////////Напишете програма, която въвежда координатите на две точки (А и B) в тримерна координатна система и изчислява координатите на вектора AB. Намерете дължината на вектора AB.

////////Фрагмент:

////////import numpy as np
////////coordinates1 = list(map(int, input('Въведете координатите на точка А: ').split()))
////////coordinates2 =
////////A = np.array(coordinates1)
////////B = np.array()

////////v1 = B - A
////////length = np.linalg
////////print(length)






////////import numpy as np
////////coordinates1 = list(map(int, input('Въведете координатите на точка А: ').split()))
////////coordinates2 = list(map(int, input('Въведете координатите на точка B: ').split()))
////////A = np.array(coordinates1)
////////B = np.array(coordinates2)

////////v1 = B - A
////////length = np.linalg.norm(v1)
////////print(v1)
////////print(length)

////////Въпрос 4
////////Отговорен
////////От максимално 2,00
////////НеотбелязанОтбелязване на въпроса
////////Текст на въпроса
////////Какъв е сборът на вектор v1(3, 6) с вектор v2(1, 5)?
////////Изберете едно
////////a. v3(9, 6)
////////b.v3(2, 1)
////////c.v3(4, 11)
////////d.v4(-2, -1)
////////Въпрос 5
////////Отговорен
////////От максимално 2,00
////////НеотбелязанОтбелязване на въпроса
////////Текст на въпроса
////////Посочете кое от следните е правилна дефиниция на понятието вектор:
////////Изберете едно
////////a. права, която може да бъде с безкраен размер
////////b. множество от точки в равнината, които са свързани помежду си
////////c. отсечка с определена големина
////////d. отсечка, на която единия край е избран за начало, а другият за край
////////Въпрос 6
////////Отговорен
////////От максимално 2,00
////////НеотбелязанОтбелязване на въпроса
////////Текст на въпроса
////////Използвайте блоковете, за да опишете алгоритъм за генериране на вариации с повторение

////////public static void Generate(int index)

////////{

////////  if (blank)
////////  {

////////    Console.WriteLine(string.Join(" ", variation));

////////  }
////////  else
////////  {

////////    for (int i = 0; i < elements.Length; i++)
////////    {

////////      variation[blank] = blank;

////////      Generate(index + 1);

////////    }

////////  }

////////}


////////index >= ki + 1used[i] = trueindexelements[i]used[i]used[i] = falsei
////////Въпрос 7
////////Отговорен
////////От максимално 2,00
////////НеотбелязанОтбелязване на въпроса
////////Текст на въпроса
////////Коя операция между множества е показана на изображението:





////////Изберете едно
////////a. симетрична разлика
////////b. сечение
////////c. обединение
////////d. разлика
////////Въпрос 8
////////Отговорен
////////От максимално 4,00
////////НеотбелязанОтбелязване на въпроса
////////Текст на въпроса
////////Нека имаме следните множества:

////////A = { 1, 2, 3}

////////B = { 3, 4, 5}

////////Можем да кажем, че:

////////A ∩ B = blank

////////5  blank A


////////{1, 2, 3, 4, 5}
////////{ 3}
////////{ 1, 2}∈∉Ø
////////{ 1, 2, 3, 3, 4, 5}
////////{ 1, 2}
////////{ 4, 5}
////////{ 1, 2, 3}
////////{ 3, 4, 5}
////////Въпрос 9
////////Отговорен
////////От максимално 4,00
////////НеотбелязанОтбелязване на въпроса
////////Текст на въпроса
////////Нека имаме следните множества:

////////A = { 1, 2, 3}

////////B = { 3, 4, 5}

////////Можем да кажем, че:

////////A ∪ B = blank

////////1  blank A


////////{1, 2, 3, 4, 5}
////////{ 3}
////////{ 1, 2}∈∉Ø
////////{ 1, 2, 3, 3, 4, 5}
////////{ 1, 2}
////////{ 4, 5}
////////{ 1, 2, 3}
////////{ 3, 4, 5}
////////Въпрос 10
////////Отговорен
////////От максимално 6,00
////////НеотбелязанОтбелязване на въпроса
////////Текст на въпроса

////////Матриците
//////// са съставени от компоненти, които са числа. Те представляват 
////////списък
//////// от числа, а операциите върху тях се разглеждат като операции върху него. В програмните езици те могат да се представят като 
////////масив
//////// .

////////Въпрос 11
////////Отговорен
////////От максимално 2,00
////////НеотбелязанОтбелязване на въпроса
////////Текст на въпроса
////////Изберете правилната дефиниция на понятието комбинация с повторение.

////////Изберете едно
////////a. Съвкупност от избрани k елемента от общо n елемента на дадено множество, като елементите могат да се повтарят
////////b. Всяка подредена съвкупност от n елемента на дадено множество, като всеки се среща само веднъж
////////c. Съвкупност от избрани k елемента от общо n елемента на дадено множество, като редът не е от значение
////////d. Съвкупност от избрани k елемента от общо n елемента на дадено множество, като редът е от значение
////////Въпрос 12
////////Отговорен
////////От максимално 4,00
////////НеотбелязанОтбелязване на въпроса
////////Текст на въпроса
////////Представени са три комбинаторни конфигурации. Надпишете всяка от тях.


////////1 1

////////1 2

////////1 3

////////2 1

////////2 2

////////2 3

////////3 1

////////3 2

////////3 3

////////1 1

////////1 2

////////1 3

////////2 2

////////2 3

////////3 3

////////1 2

////////1 3

////////2 3

////////А.  
////////Вариации с повторение

////////Б. 
////////Комбинации с потворение

////////В. 
////////Комбинации без повторение



////////Въпрос 13
////////Отговорен
////////От максимално 2,00
////////НеотбелязанОтбелязване на въпроса
////////Текст на въпроса
////////Използвайте блоковете, за да опишете алгоритъм за генериране на пермутации

////////public static void Generate(int index)

////////{

////////  if (blank)
////////  {

////////    Console.WriteLine(string.Join(" ", permutation));

////////  }
////////  else
////////  {

////////    for (int i = 0; i < elements.Length; i++)
////////    {

////////      if (blank)
////////      {

////////        blank;

////////        permutation[blank] = blank;

////////        Generate(index + 1);

////////        used[i] = false;

////////      }

////////    }

////////  }

////////}


////////index >= elements.Length!used[i]used[i] = trueindexelements[i]used[i]used[i] = falsei
////////Въпрос 14
////////Отговорен
////////От максимално 2,00
////////НеотбелязанОтбелязване на въпроса
////////Текст на въпроса
////////Коя операция между множества е показана на изображението:





////////Изберете едно
////////a. симетрична разлика
////////b. разлика
////////c. сечение
////////d. обединение
////////Въпрос 15
////////Отговорен
////////От максимално 10,00
////////НеотбелязанОтбелязване на въпроса
////////Текст на въпроса
////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

////////Условие:

////////Напишете програма, която въвежда координатите на два вектора v1 и v2 в тримерна координатна система. Програмата да намира дали двата вектора са перпендикулярни.

////////Фрагмент:

////////import numpy as np
////////coordinates1 = list(map(int, input('Въведете координатите на вектор v1: ').split()))
////////coordinates2 = list(map(int, input('Въведете координатите на вектор v2: ').split()))
////////A = np.array(coordinates1)
////////B = np.array()

////////result =
////////print(result)
////////if result == :

////////  print('yes')

////////else:

////////  print('no')




////////coordinates1 = list(map(int, input('Въведете координатите на вектор v1: ').split()))
////////coordinates2 = list(map(int, input('Въведете координатите на вектор v2: ').split()))
////////A = np.array(coordinates1)
////////B = np.array(coordinates2)

////////result = np.dot(A, B)
////////print(result)
////////if result == 0:

////////  print('yes')

////////else:

////////  print('no')


////////Въпрос 16
////////Отговорен
////////От максимално 10,00
////////НеотбелязанОтбелязване на въпроса
////////Текст на въпроса
////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

////////Условие:

////////Напишете програма, която въвежда координатите на две точки (А и B) в тримерна координатна система и изчислява координатите на вектора BA

////////Фрагмент:

////////import numpy as np
////////coordinates1 = 
////////coordinates2 = list(map(int, input('Въведете координатите на точка B: ').split()))
////////A = np.array()
////////B = np.array(coordinates2)

////////v1 = A B
////////print(v1)






////////import numpy as np

////////coordinates1 = list(map(int, input('Въведете координатите на точка A: ').split())) coordinates2 = list(map(int, input('Въведете координатите на точка B: ').split()))

////////A = np.array(coordinates1)

////////B = np.array(coordinates2)

////////v1 = A - B

////////print(v1)


////////Въпрос 17
////////Отговорен
////////От максимално 2,00
////////НеотбелязанОтбелязване на въпроса
////////Текст на въпроса
////////Изберете правилната дефиниция на понятието пермутация.

////////Изберете едно
////////a. Съвкупност от избрани k елемента от общо n елемента на дадено множество, като редът е от значение
////////b. Съвкупност от избрани k елемента от общо n елемента на дадено множество, като редът не е от значение
////////c. Всяка подредена съвкупност от n елемента на дадено множество, като всеки се среща само веднъж
////////d. Съвкупност от избрани k елемента от общо n елемента на дадено множество, като елементите могат да се повтарят
////////Въпрос 18
////////Отговорен
////////От максимално 4,00
////////НеотбелязанОтбелязване на въпроса
////////Текст на въпроса
////////Представени са три комбинаторни конфигурации. Надпишете всяка от тях.

////////Представени са три комбинаторни конфигурации. Надпишете всяка от тях.


////////a b c

////////a c b

////////b a c

////////b c a

////////c a b

////////c b a

////////+ +

////////+ -

////////+ *

////////- -

////////- *

////////* *

////////+ -

////////+ *

////////- *

////////А. 
////////Пермутации с повторение

////////Б. 
////////Комбинации без повторение

////////В. 
////////Комбинации с потворение



////////Въпрос 19
////////Отговорен
////////От максимално 2,00
////////НеотбелязанОтбелязване на въпроса
////////Текст на въпроса
////////Използвайте блоковете, за да опишете алгоритъм за генериране на комбинации без повторение

////////public static void Generate(int index, int start)

////////{

////////  if (blank)
////////  {

////////    Console.WriteLine(string.Join(" ", combination));

////////  }
////////  else
////////  {

////////    for (int i = start; i < elements.Length; i++)
////////    {

////////      combination[blank] = blank;

////////      Generate(index + 1, blank);

////////    }

////////  }

////////}


////////index >= ki + 1used[i] = trueindexelements[i]used[i]used[i] = falsei
////////Въпрос 20
////////Отговорен
////////От максимално 2,00
////////НеотбелязанОтбелязване на въпроса
////////Текст на въпроса
////////Изберете правилната дефиниция на понятието вариация с повторение.

////////Изберете едно
////////a. Съвкупност от избрани k елемента от общо n елемента на дадено множество, като редът е от значение
////////b. Съвкупност от избрани k елемента от общо n елемента на дадено множество, като редът не е от значение
////////c. Съвкупност от избрани k елемента от общо n елемента на дадено множество, като елементите могат да се повтарят
////////d. Всяка подредена съвкупност от n елемента на дадено множество, като всеки се среща само веднъж
////////Въпрос 21
////////Отговорен
////////От максимално 6,00
////////НеотбелязанОтбелязване на въпроса
////////Текст на въпроса
////////Демонстрирайте пресмятане на средната вероятност за резултати "ези" или "тора" при хвърляне на монета за 10000 хвърляния. Използвайте средствата на изучаван език за програмиране (Python и Numpy или C#).



////////import numpy as np

////////num_trials = 10000

////////num_tosess = 10000

////////result = np.random.randint(2, size = (num_trials, num_tosses))

////////probabilities = np.mean(results, axis = 1)

////////average_probability = np.mean(probabilities)


////////Въпрос 22
////////Отговорен
////////От максимално 10,00
////////НеотбелязанОтбелязване на въпроса
////////Текст на въпроса
////////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

////////Условие:

////////Напишете програма, която въвежда координатите на два вектора v1 и v2 в тримерна координатна система. Програмата да намира скаларното произведение на двата вектора.

////////Фрагмент:

////////import numpy as np
////////coordinates1 = list(map(int, input('Въведете координатите на вектор v1: ').split()))
////////coordinates2 =
////////A = np.array(coordinates1)
////////B = np.array()

////////result =
////////print(result)





////////coordinates1 = list(map(int, input('Въведете координатите на вектор v1: ').split()))

////////coordinates2 = list(map(int, input('Въведете координатите на вектор v2: ').split()))

////////A = np.array(coordinates1)

////////B = np.array(coordinates2)

////////result = np.dot(A, B)

////////print(result)


////////Въпрос 23
////////Отговорен
////////От максимално 4,00
////////НеотбелязанОтбелязване на въпроса
////////Текст на въпроса
////////Представени са три комбинаторни конфигурации. Надпишете всяка от тях.


////////1 1

////////1 2

////////1 3

////////2 1

////////2 2

////////2 3

////////3 1

////////3 2

////////3 3

////////1 1

////////1 2

////////1 3

////////2 2

////////2 3

////////3 3

////////1 2

////////1 3

////////2 1

////////2 3

////////3 1

////////3 2



////////А.  
////////Вариации с повторение

////////Б. 
////////Комбинации с потворение

////////В. 
////////Вариации без повторение



////////Край на прегледа
////////Отиди на ...
////////Отиди на ...
////////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
////////Навигация в теста
////////Показване по един въпрос на страница
////////Край на прегледа
////////Вие сте влезли в системата като Добри Илев (Изход)
////////тренировъчен - курс - по
////////Data retention summary


////////ИЗПИТНА ТЕМА 18

//////Прескочи на основното съдържание
//////ПГЕЕ
//////Български ‎(bg)‎ 
//////Добри Илев 
//////Тренировъчен курс - Програмно осигуряване
//////Начална страница
//////Моите курсове
////// тренировъчен-курс-по
////// Изпитна тема 18
////// Изпитна тема №18
//////Започнат на	сряда, 22 февруари 2023, 23:48
//////Състояние Завършен
//////Приключен на	четвъртък, 23 февруари 2023, 01:09
//////Изминало време	1 час 20 мин.
//////Оценка	Още не е оценен
//////Въпрос 1
//////Правилно
//////2,00 от максимално 2,00 точки
//////НеотбелязанОтбелязване на въпроса
//////Текст на въпроса
//////Изберете липсващата фраза, така че да дефинирате правилно понятието:
//////______________________________ наричаме такава операция, която възпрепятства продължението на изпълнение на програмата до приключване на съответната операция.


//////Изберете едно
//////a.
//////конкурентна

//////b.
//////блокираща 

//////c.
//////асинхронна

//////d.
//////паралелна

//////Забележка
//////Your answer is correct.
//////Правилният отговор е:
//////блокираща

//////Въпрос 2
//////Отговорен
//////От максимално 6,00
//////НеотбелязанОтбелязване на въпроса
//////Текст на въпроса
//////Открийте какъв проблем при употреба на нишки се наблюдава в примерния програмен фрагмент.

//////Проблемът с използването на нишки в дадения код е, че опашката е достъпна от множество нишки едновременно. Това може да доведе до условия на състезание и несъответствия в данните. Класът Queue не е безопасен за нишки, което означава, че ако две нишки се опитат да получат достъп до него едновременно, поведението е недефинирано.



//////Едно решение на този проблем е да се използва колекция, безопасна за нишки, като ConcurrentQueue, вместо Queue. Друго решение е да се използват механизми за синхронизиране, като изявления за заключване, за да се гарантира, че само една нишка има достъп до опашката в даден момент.

//////Въпрос 3
//////Правилно
//////2,00 от максимално 2,00 точки
//////НеотбелязанОтбелязване на въпроса
//////Текст на въпроса
//////Кое от следните НЕ е състояние на нишка?


//////Изберете едно
//////a.
//////„подлежаща на изпълнение” (Runnable)

//////b.
//////„незапочната” (Unstarted)

//////c.
//////„в изпълнение” (Running)

//////d.
//////„в изчакване” (Awaiting) 

//////Забележка
//////Your answer is correct.
//////Правилният отговор е:
//////„в изчакване” (Awaiting)

//////Въпрос 4
//////Неправилно
//////0,00 от максимално 2,00 точки
//////НеотбелязанОтбелязване на въпроса
//////Текст на въпроса
//////Кой е проблемът, който отговаря на посоченото описание?
//////Това състояние на нишка е свързано с ресурсите, които получават нишките. Нека имаме нишка А, която използва общ ресурс с друга нишка, но често го задържа за себе си за по-дълго време. Нишка Б получава ресурса на цената на дълго чакане.


//////Отговор: 
//////Deadlock
//////Забележка
//////Правилният отговор е: Гладуване(starvation)
//////Въпрос 5
//////Неправилно
//////0,00 от максимално 2,00 точки
//////НеотбелязанОтбелязване на въпроса
//////Текст на въпроса
//////Кое от следните е метод за прекъсване на работата на Thread обект?

//////Изберете едно
//////a. Suspend
//////b.
//////Join

//////c.
//////Stop 

//////d.
//////Start

//////Забележка
//////Your answer is incorrect.
//////Правилният отговор е: Suspend
//////Въпрос 6
//////Отговорен
//////От максимално 6,00
//////НеотбелязанОтбелязване на въпроса
//////Текст на въпроса
//////Открийте какъв проблем при употреба на нишки се наблюдава в примерния програмен фрагмент и предложете решение.


//////Проблемът в примерната програма е, че нишката t1 е създадена, но никога не е стартирана. Това означава, че методът PrintBunny никога няма да бъде изпълнен.



//////За да коригирате това, нишката t1 трябва да бъде стартирана чрез извикване на метода Start. Ето актуализирана версия на кода:





//////class Program

//////{

//////  static void PrintBunny()

//////  {

//////    Console.WriteLine(@"|)___(|");

//////    Console.WriteLine(@"(o . o)");

//////    Console.WriteLine(@"(_).(_)");

//////  }



//////  static void Main()

//////  {

//////    Thread t1 = new Thread(PrintBunny);

//////    t1.Start();

//////  }

//////}

//////Въпрос 7
//////Отговорен
//////От максимално 6,00
//////НеотбелязанОтбелязване на въпроса
//////Текст на въпроса
//////Демонстрирайте създаването и стартирането на нишка, която изпълнява метода по-долу. Включете целия необходим код в отговора, в това число class Program и Main метод.


//////static void Count(int n)
//////{

//////  for (int i = n; i >= 0; i--)
//////  {

//////    Console.WriteLine(i);

//////  }

//////}

//////using System;

//////using System.Threading;



//////class Program

//////{

//////  static void Main(string[] args)

//////  {

//////    Thread t = new Thread(() => Count(10));

//////    t.Start();

//////    Console.ReadKey();

//////  }



//////  static void Count(int n)

//////  {

//////    for (int i = n; i >= 0; i--)

//////    {

//////      Console.WriteLine(i);

//////    }

//////  }

//////}



//////Въпрос 8
//////Отговорен
//////От максимално 6,00
//////НеотбелязанОтбелязване на въпроса
//////Текст на въпроса
//////Демонстрирайте създаването и стартирането на нишка, която изпълнява метода по-долу. Включете целия необходим код в отговора, в това число class Program и Main метод.


//////static void PrintTriangle(int n)
//////{

//////  for (int i = 1; i <= n; i++)
//////  {
//////    for (int j = 1; j <= i; j++)
//////    {
//////      Console.Write($"{j} ");
//////    }
//////    Console.WriteLine();
//////  }

//////}

//////using System;

//////using System.Threading;



//////class Program

//////{

//////  static void Main(string[] args)

//////  {

//////    Thread t = new Thread(() => PrintTriangle(5));

//////    t.Start();



//////    Console.ReadLine();

//////  }



//////  static void PrintTriangle(int n)

//////  {

//////    for (int i = 1; i <= n; i++)

//////    {

//////      for (int j = 1; j <= i; j++)

//////      {

//////        Console.Write($"{j} ");

//////      }

//////      Console.WriteLine();

//////    }

//////  }

//////}



//////Въпрос 9
//////Отговорен
//////От максимално 2,00
//////НеотбелязанОтбелязване на въпроса
//////Текст на въпроса
//////Опишете изпълнението на следния програмен фрагмент. В какъв ред се изпълняват отделните програмни единици?


//////Програмата създава две нишки, t1 и t2. Първата нишка, t1, извиква метода Console.WriteLine и предава резултата от метода Sum като аргумент. Методът Sum приема два целочислени аргумента, a и b, и връща сумата от двете стойности. Втората нишка, t2, също извиква метода Console.WriteLine и предава резултата от метода Max като аргумент. Методът Max приема два целочислени аргумента, a и b, и връща максималната стойност на двата.



//////Основният метод стартира и двете нишки t1 и t2. Точният ред, в който ще се изпълняват нишките, не е дефиниран и може да се променя при всяко стартиране на програмата. И двете нишки могат да се изпълняват едновременно, или едната може да се изпълнява, докато другата чака, или могат да се изпълняват по редуващ се начин. От операционната система зависи как да планира нишките.



//////Резултатът от програмата ще бъде два реда, всеки от които показва или сумата от двете цели числа, предадени на метода Sum, която е 8, или максималната стойност на двете цели числа, предадени на метода Max, която е 5.

//////Въпрос 10
//////Отчасти верен
//////1,00 от максимално 4,00 точки
//////НеотбелязанОтбелязване на въпроса
//////Текст на въпроса
//////Обобщете чрез попълване на празните места в диаграмата жизнения цикъл на нишката.


//////Background image for dragging markers onto
//////1 2 3 4 
//////ЗаявкаСъздаване на обектИзпълнениеОсвобождаване на ресурспрекъсванеинициализацияасоцииране
//////Забележка
//////Your answer is partially correct.
//////Вие правилно сте избрали 1.
//////Въпрос 11
//////Отговорен
//////От максимално 4,00
//////НеотбелязанОтбелязване на въпроса
//////Текст на въпроса
//////Дайте пример за ситуация, в която възниква проблем „гладуване“ (starvation)?


//////"Starvation" е ситуация, в която една нишка не може да получи достатъчно време на процесора за да се изпълнява. Това може да се случи, когато има много нишки с висок приоритет, които постоянно изпълняват и задържат процесора, или когато системата няма достатъчно ресурси за всички нишки. В резултат на това, нишката с нисък приоритет може да продължи да чака за достъп до процесора за дълго време.

//////Въпрос 12
//////Отговорен
//////От максимално 2,00
//////НеотбелязанОтбелязване на въпроса
//////Текст на въпроса
//////Дефинирайте понятието блокираща операция.


//////Блокираща операция е такава операция, която възпрепятства продължението на изпълнение на програмата до приключване на съответната операция. Тя може да се появи, когато една нишка заема ресурс, който е необходим за друга нишка, и това води до блокиране на изпълнението на другата нишка.

//////Въпрос 13
//////Отчасти верен
//////32,00 от максимално 40,00 точки
//////НеотбелязанОтбелязване на въпроса
//////Текст на въпроса
//////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

//////Условие:

//////Да се напише програма, която получава цяло число n. След това програмата да генерира масива с n на брой елементи от случайни числа в интервала [-100; 100]. Програмата трябва да разполага с две нишки, които намират и отпечатват съответно минимума и максимума от елементите в масива.


//////Предоставен фрагмент:

//////using System;

//////using System.Collections.Generic;

//////using System.Linq;

//////using System.Threading;


//////namespace ExampleThread1

//////{

//////  class Program

////// blank

////// blank  void FindMin(int[] arr)

//////  {

//////    blank

//////    blank

//////{

//////      if (blank)

//////      {

//////        min = blank;

//////      }

//////    }

//////    Console.WriteLine($"Minimum: {min}");

//////  }

//////  static void FindMax(blank )

//////  {

//////    int max = arr[0];

//////    for (int i = 0; i < arr.Length; i++)

//////    {

//////      if (arr[i] > max)

//////      {

//////        blank

//////}

//////    }

//////    Console.WriteLine($"Maximum: {max}");

//////  }

//////  static void Main(string[] args)

//////  {

//////    int n = int.Parse(Console.ReadLine());

//////    int[] arr = new int[n];

//////    Random r = new Random();

//////    for (int i = 0; i < n; i++)

//////    {

//////      arr[i] = r.Next(-100, 100);

//////    }


//////    blank

//////   Thread t2 = new Thread(() => FindMax(arr));

//////    t1.Start();

//////    t2.Start();

//////    blank

//////}

//////}






//////{ staticint min = arr[0]; for (int i = 0; i < arr.Length; i++) arr[i] < minarr[i]int[] arrmax = arr[i]; Thread t1 = new Thread(() => FindMin(arr)); } ()[]voidint min; int min = arr; int min = 0; for (int i = 0; i > arr.Length; i++) for (int i = 1; i < arr.Length; i +) for (int i = 0, i < arr.Length, i++) for (int i = arr.Length ‑ 1; i >= 0; i‑‑)arr[i] < minarr[i] > minarr[i] == mini < mini > miniint arrint arr[]arr[i] = max; Thread t1; Thread t1 = new Thread(() => FindMin(arr));
//////Забележка
//////Your answer is partially correct.
//////Вие правилно сте избрали 8.
//////Правилният отговор е:
//////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

//////Условие:

//////Да се напише програма, която получава цяло число n. След това програмата да генерира масива с n на брой елементи от случайни числа в интервала [-100; 100]. Програмата трябва да разполага с две нишки, които намират и отпечатват съответно минимума и максимума от елементите в масива.


//////Предоставен фрагмент:

//////using System;

//////using System.Collections.Generic;

//////using System.Linq;

//////using System.Threading;


//////namespace ExampleThread1

//////{

//////  class Program

//////[{]

//////  [static] void FindMin(int[] arr)

//////  {

//////    [int min = arr[0];]

//////[for (int i = 0; i < arr.Length; i++)]

//////{

//////      if ([arr[i] < min])

//////      {

//////        min = [arr[i]];

//////      }

//////    }

//////    Console.WriteLine($"Minimum: {min}");

//////  }

//////  static void FindMax([int[] arr])

//////{

//////int max = arr[0];

//////for (int i = 0; i<arr.Length; i++)

//////{

//////if (arr[i] > max)

//////{

//////[max = arr[i];]

//////}

//////}

//////Console.WriteLine($"Maximum: {max}");

//////}

//////static void Main(string[] args)

//////{

//////  int n = int.Parse(Console.ReadLine());

//////  int[] arr = new int[n];

//////  Random r = new Random();

//////  for (int i = 0; i < n; i++)

//////  {

//////    arr[i] = r.Next(-100, 100);

//////  }


//////  [Thread t1 = new Thread(() => FindMin(arr));]

//////Thread t2 = new Thread(() => FindMax(arr));

//////  t1.Start();

//////  t2.Start();

//////  [}]

//////}

//////}





//////Въпрос 14
//////Отговорен
//////От максимално 6,00
//////НеотбелязанОтбелязване на въпроса
//////Текст на въпроса
//////Демонстрирайте създаването и стартирането на нишка, която изпълнява метода по-долу. Включете целия необходим код в отговора, в това число class Program и Main метод.


//////static void SayHello()
//////{

//////  Console.WriteLine("Hello");

//////}

//////using System;

//////using System.Threading;



//////namespace ExampleThread

//////{

//////  class Program

//////  {

//////    static void SayHello()

//////    {

//////      Console.WriteLine("Hello");

//////    }



//////    static void Main(string[] args)

//////    {

//////      Thread t = new Thread(SayHello);

//////      t.Start();



//////      Console.ReadKey();

//////    }

//////  }

//////}



//////Въпрос 15
//////Неправилно
//////0,00 от максимално 2,00 точки
//////НеотбелязанОтбелязване на въпроса
//////Текст на въпроса
//////Между процесите и нишките съществува връзка. Кое от тези твърдения описва вярно тази връзка?


//////Изберете едно
//////a.
//////процесът може да изпълнява множество нишки, които имат споделена памет 

//////b.
//////множество нишки на различни програми може да бъдат изпълнявани от даден процес

//////c.
//////процесът може да изпълнява множество нишки, които имат самостоятелна памет

//////d.
//////процесът може да изпълнява само една нишка

//////Забележка
//////Your answer is incorrect.
//////Правилният отговор е:
//////множество нишки на различни програми може да бъдат изпълнявани от даден процес

//////Въпрос 16
//////Отговорен
//////От максимално 4,00
//////НеотбелязанОтбелязване на въпроса
//////Текст на въпроса
//////Дайте пример за поне два вида блокиращи операции.


//////Lock (мутекс) -това е механизъм, който защитава даден участък от код от паралелно изпълнение от други нишки. Например:



//////object lockObject = new object();







//////void Method1()



//////{



//////  lock (lockObject)



//////  {



//////    // Критичния участък на код



//////  }



//////}











//////Wait / Pulse - това са методи, които се използват за управление на синхронизацията между нишки. Например:

//////private readonly object lockObject = new object();

//////private bool condition = false;



//////void Method1()

//////{

//////  lock (lockObject)

//////  {

//////    while (!condition)

//////    {

//////      Monitor.Wait(lockObject);

//////    }



//////    // Критичния участък на код

//////  }

//////}



//////void Method2()

//////{

//////  lock (lockObject)

//////  {

//////    condition = true;

//////    Monitor.Pulse(lockObject);

//////  }

//////}



//////Въпрос 17
//////Правилно
//////2,00 от максимално 2,00 точки
//////НеотбелязанОтбелязване на въпроса
//////Текст на въпроса
//////Кое от следните НЕ е метод на Thread обекта.


//////Изберете едно
//////a.
//////Stop 

//////b.
//////Join

//////c. Sleep
//////d.
//////Start

//////Забележка
//////Your answer is correct.
//////Правилният отговор е:
//////Stop

//////Въпрос 18
//////Отговорен
//////От максимално 2,00
//////НеотбелязанОтбелязване на въпроса
//////Текст на въпроса
//////Опишете изпълнението на следния програмен фрагмент. В какъв ред се изпълняват отделните програмни единици?


//////Програмата създава две нишки, t1 и t2. И двете нишки извикват метода Console.WriteLine и предават резултата от метода Min като аргумент. Методът Min взема три цели аргумента, a, b и c, и връща минималната стойност от трите.



//////Основният метод стартира и двете нишки t1 и t2. Точният ред, в който ще се изпълняват нишките, не е дефиниран и може да се променя при всяко стартиране на програмата. И двете нишки могат да се изпълняват едновременно, или едната може да се изпълнява, докато другата чака, или могат да се изпълняват по редуващ се начин. От операционната система зависи как да планира нишките.



//////Резултатът от програмата ще бъде два реда, всеки от които показва минималната стойност на трите цели числа, предадени на метода Min, която е 2.



//////Редът на изпълнение на отделните модули не е посочен и може да се променя при всяко стартиране на програмата. Операционната система решава как да планира нишките.

//////Край на прегледа
//////Отиди на ...
//////Отиди на ...
//////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
//////Навигация в теста
//////Показване по един въпрос на страница
//////Край на прегледа
//////Вие сте влезли в системата като Добри Илев (Изход)
//////тренировъчен - курс - по
//////Data retention summary

////Прескочи на основното съдържание
////ПГЕЕ
////Български ‎(bg)‎ 
////Добри Илев 
////Тренировъчен курс - Програмно осигуряване
////Начална страница
////Моите курсове
//// тренировъчен-курс-по
//// Изпитна тема 18
//// Изпитна тема №18
////Започнат на	сряда, 26 април 2023, 13:39
////Състояние Завършен
////Приключен на	сряда, 26 април 2023, 13:50
////Изминало време	10 мин. 39 сек.
////Оценка	Още не е оценен
////Въпрос 1
////Отговорен
////От максимално 6,00
////НеотбелязанОтбелязване на въпроса
////Текст на въпроса
////Демонстрирайте синхронизацията на нишки, чрез правилно прилагане на lock операторите, така че програмата да не изпада в безкраен цикъл и да се избягва проблема „мъртва хватка“ (deadlock).




////Решението на проблема със "мъртва хватка" (deadlock) може да бъде постигнато чрез правилна синхронизация на нишките, като се използва lock оператора в C#. Lock оператора позволява на програмиста да блокира достъпа до даден обект, за да може да бъде обработен само от една нишка в даден момент от време. Това е основната техника за синхронизация на нишки в C#.

////Ето един примерен код, който демонстрира как да се използва lock оператора за синхронизация на нишки:

////class Program

////{

////  static object lockObject = new object();



////  static void Main(string[] args)

////  {

////    Thread thread1 = new Thread(DoWork);

////    Thread thread2 = new Thread(DoWork);



////    thread1.Start();

////    thread2.Start();



////    thread1.Join();

////    thread2.Join();



////    Console.WriteLine("Finished.");

////    Console.ReadKey();

////  }



////  static void DoWork()

////  {

////    lock (lockObject)

////    {

////      Console.WriteLine("Thread {0} has entered the lock.", Thread.CurrentThread.ManagedThreadId);

////      Thread.Sleep(1000);

////      Console.WriteLine("Thread {0} is leaving the lock.", Thread.CurrentThread.ManagedThreadId);

////    }

////  }

////}



////В този код имаме две нишки, които изпълняват метода "DoWork". Методът "DoWork" използва lock оператора, за да блокира достъпа до обекта "lockObject" по време на обработка на нишката. Това гарантира, че обектът ще бъде обработен само от една нишка в даден момент от време. Когато нишката завърши обработката, lock операторът се освобождава и другата нишка може да достъпи обекта.

////За да избегнете "мъртва хватка", трябва да се уверите, че всички lock оператори в кода са използвани в една и съща последователност на обектите. Ако две нишки опитат да заключат два обекта в различна последователност, може да се получи "мъртва хватка". Така че, е важно да се осигури, че всички нишки заключват обектите в една и съща последователност, за да се избегне "мъртва хватка".


////Въпрос 2
////Отговорен
////От максимално 6,00
////НеотбелязанОтбелязване на въпроса
////Текст на въпроса
////Демонстрирайте създаването и стартирането на нишка, която изпълнява метода по-долу. Включете целия необходим код в отговора, в това число class Program и Main метод.


////static void PrintTriangle(int n)
////{

////  for (int i = 1; i <= n; i++)
////  {
////    for (int j = 1; j <= i; j++)
////    {
////      Console.Write($"{j} ");
////    }
////    Console.WriteLine();
////  }

////}

////using System;

////using System.Threading;



////class Program

////{

////  static void Main(string[] args)

////  {

////    // Създаване на нова нишка

////    Thread thread = new Thread(() =>

////    {

////      PrintTriangle(5);

////    });



////    // Стартиране на нишката

////    thread.Start();



////    Console.WriteLine("Main thread has finished.");

////    Console.ReadKey();

////  }



////  static void PrintTriangle(int n)

////  {

////    for (int i = 1; i <= n; i++)

////    {

////      for (int j = 1; j <= i; j++)

////      {

////        Console.Write($"{j} ");

////      }

////      Console.WriteLine();

////    }

////  }

////}

////В този код имаме метод "PrintTriangle", който изпълнява вложени цикли, за да изведе триъгълник на екрана. Създаваме нова нишка и я стартираме, като подаваме като параметър метода "PrintTriangle". Когато нишката стартира, методът "PrintTriangle" се изпълнява в отделна нишка, докато главната нишка продължава да изпълнява кода си.

////С помощта на метода "Thread.Start()", можем да стартираме нова нишка. Когато стартираме нишка, методът, който искаме да изпълним, се изпълнява в отделна нишка. В този случай, изпълнението на метода "PrintTriangle" започва в отделната нишка, която сме създали. Когато методът приключи, нишката завършва и главната нишка продължава да изпълнява своя код.

////Когато използваме нишки в C#, е важно да сме внимателни при работата с данните и да синхронизираме достъпа до общите данни между нишките, за да избегнем проблеми като "мъртва хватка" (deadlock) и състояние на гонка (race condition).


////Въпрос 3
////Правилно
////2,00 от максимално 2,00 точки
////НеотбелязанОтбелязване на въпроса
////Текст на въпроса
////Посочете вярното твърдение за нишка


////Изберете едно
////a.
////Нишките могат да се изпълняват конкурентно 

////b.
////Всяка програма има по две нишки - на преден и заден план

////c.
////Нишките се стартират за изпълнение автоматично при създаването на обекта

////d.
////Нишките имат самостоятелни ресурси

////Забележка
////Your answer is correct.
////Правилният отговор е:
////Нишките могат да се изпълняват конкурентно

////Въпрос 4
////Правилно
////40,00 от максимално 40,00 точки
////НеотбелязанОтбелязване на въпроса
////Текст на въпроса
////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

////Условие:

////Да се напише програма, която получава цяло число n. След това програмата да генерира масива с n на брой елементи от случайни числа в интервала [-100; 100]. Програмата трябва да разполага с две нишки, които намират и отпечатват съответно минимума и максимума от елементите в масива.


////Предоставен фрагмент:

////using System;

////using System.Collections.Generic;

////using System.Linq;

////using System.Threading;


////namespace ExampleThread1

////{

////  class Program

//// blank

//// blank  void FindMin(int[] arr)

////  {

////    blank

////    blank

////{

////      if (blank)

////      {

////        min = blank;

////      }

////    }

////    Console.WriteLine($"Minimum: {min}");

////  }

////  static void FindMax(blank )

////  {

////    int max = arr[0];

////    for (int i = 0; i < arr.Length; i++)

////    {

////      if (arr[i] > max)

////      {

////        blank

////}

////    }

////    Console.WriteLine($"Maximum: {max}");

////  }

////  static void Main(string[] args)

////  {

////    int n = int.Parse(Console.ReadLine());

////    int[] arr = new int[n];

////    Random r = new Random();

////    for (int i = 0; i < n; i++)

////    {

////      arr[i] = r.Next(-100, 100);

////    }


////    blank

////   Thread t2 = new Thread(() => FindMax(arr));

////    t1.Start();

////    t2.Start();

////    blank

////}

////}






////{ staticint min = arr[0]; for (int i = 0; i < arr.Length; i++) arr[i] < minarr[i]int[] arrmax = arr[i]; Thread t1 = new Thread(() => FindMin(arr)); } ()[]voidint min; int min = arr; int min = 0; for (int i = 0; i > arr.Length; i++) for (int i = 1; i < arr.Length; i +) for (int i = 0, i < arr.Length, i++) for (int i = arr.Length ‑ 1; i >= 0; i‑‑)arr[i] < minarr[i] > minarr[i] == mini < mini > miniint arrint arr[]arr[i] = max; Thread t1; Thread t1 = new Thread(() => FindMin(arr));
////Забележка
////Your answer is correct.
////Правилният отговор е:
////По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

////Условие:

////Да се напише програма, която получава цяло число n. След това програмата да генерира масива с n на брой елементи от случайни числа в интервала [-100; 100]. Програмата трябва да разполага с две нишки, които намират и отпечатват съответно минимума и максимума от елементите в масива.


////Предоставен фрагмент:

////using System;

////using System.Collections.Generic;

////using System.Linq;

////using System.Threading;


////namespace ExampleThread1

////{

////  class Program

////[{]

////  [static] void FindMin(int[] arr)

////  {

////    [int min = arr[0];]

////[for (int i = 0; i < arr.Length; i++)]

////{

////      if ([arr[i] < min])

////      {

////        min = [arr[i]];

////      }

////    }

////    Console.WriteLine($"Minimum: {min}");

////  }

////  static void FindMax([int[] arr])

////{

////int max = arr[0];

////for (int i = 0; i<arr.Length; i++)

////{

////if (arr[i] > max)

////{

////[max = arr[i];]

////}

////}

////Console.WriteLine($"Maximum: {max}");

////}

////static void Main(string[] args)

////{

////  int n = int.Parse(Console.ReadLine());

////  int[] arr = new int[n];

////  Random r = new Random();

////  for (int i = 0; i < n; i++)

////  {

////    arr[i] = r.Next(-100, 100);

////  }


////  [Thread t1 = new Thread(() => FindMin(arr));]

////Thread t2 = new Thread(() => FindMax(arr));

////  t1.Start();

////  t2.Start();

////  [}]

////}

////}





////Въпрос 5
////Отговорен
////От максимално 6,00
////НеотбелязанОтбелязване на въпроса
////Текст на въпроса
////Открийте какъв проблем при употреба на нишки се наблюдава в примерния програмен фрагмент и предложете решение.



////В предоставения програмен фрагмент липсва синхронизация на достъпа до масива "arr" от двата метода "FindMin" и "FindMax", които се изпълняват в различни нишки. Това може да доведе до некоректни резултати, тъй като двата метода могат да достъпват едновременно елементи на масива и да променят стойността им преди другия метод да ги прочете.

////Решението на този проблем е да се използва монитор за блокиране на достъпа до масива от двата метода. Мониторът гарантира, че само една нишка може да достъпва масива в даден момент от време, като блокира достъпа до него за другите нишки, докато текущата нишка не приключи работата си с него.

////Ето как бихме модифицирали методите "FindMin" и "FindMax" за да се използва монитор за синхронизация на достъпа до масива:



////static object lockObject = new object();



////static void FindMin(int[] arr)

////{

////  int min = arr[0];

////  lock (lockObject)

////  {

////    for (int i = 1; i < arr.Length; i++)

////    {

////      if (arr[i] < min)

////      {

////        min = arr[i];

////      }

////    }

////  }

////  Console.WriteLine($"Minimum: {min}");

////}



////static void FindMax(int[] arr)

////{

////  int max = arr[0];

////  lock (lockObject)

////  {

////    for (int i = 0; i < arr.Length; i++)

////    {

////      if (arr[i] > max)

////      {

////        max = arr[i];

////      }

////    }

////  }

////  Console.WriteLine($"Maximum: {max}");

////}

////В този модифициран код използваме lock оператора за блокиране на достъпа до масива "arr" в двете нишки. Заключваме достъпа до масива във всеки метод, като използваме общ обект "lockObject" за монитор. Това гарантира, че само една нишка може да достъпва масива в даден момент от време, като блокира достъпа до него за другите нишки, докато текущата нишка не приключи работата си с него.



////Въпрос 6
////Неправилно
////0,00 от максимално 2,00 точки
////НеотбелязанОтбелязване на въпроса
////Текст на въпроса
////Между процесите и нишките съществува връзка. Кое от тези твърдения описва вярно тази връзка?


////Изберете едно
////a.
////множество нишки на различни програми може да бъдат изпълнявани от даден процес

////b.
////процесът може да изпълнява множество нишки, които имат самостоятелна памет 

////c.
////процесът може да изпълнява само една нишка

////d.
////процесът може да изпълнява множество нишки, които имат споделена памет

////Забележка
////Your answer is incorrect.
////Правилният отговор е:
////множество нишки на различни програми може да бъдат изпълнявани от даден процес

////Въпрос 7
////Отчасти верен
////1,00 от максимално 4,00 точки
////НеотбелязанОтбелязване на въпроса
////Текст на въпроса
////Обобщете чрез попълване на празните места в диаграмата жизнения цикъл на нишката.


////Background image for dragging markers onto
////1 2 3 4 
////ЗаявкаСъздаване на обектИзпълнениеОсвобождаване на ресурспрекъсванеинициализацияасоцииране
////Забележка
////Your answer is partially correct.
////Вие правилно сте избрали 1.
////Въпрос 8
////Отговорен
////От максимално 6,00
////НеотбелязанОтбелязване на въпроса
////Текст на въпроса
////Демонстрирайте създаването и стартирането на нишка, която изпълнява метода по-долу. Включете целия необходим код в отговора, в това число class Program и Main метод.


////static void SayHello(string name)
////{

////  Console.WriteLine($"Hello, {name}!");

////}

////using System;

////using System.Threading;



////class Program

////{

////  static void Main(string[] args)

////  {

////    Thread t = new Thread(() => SayHello("John"));

////    t.Start();

////    Console.WriteLine("Main thread finished");

////  }



////  static void SayHello(string name)

////  {

////    Console.WriteLine($"Hello, {name}!");

////  }

////}

////В този код създаваме нишка "t", която изпълнява метода SayHello с аргумент "John". Стартираме нишката чрез метода Start и продължаваме да изпълняваме кода на главната нишка, като изписваме "Main thread finished". Когато нишката "t" завърши изпълнението на метода SayHello, тя автоматично се завършва и животът й приключва. В резултат на това програмата завършва.

////Въпрос 9
////Отговорен
////От максимално 2,00
////НеотбелязанОтбелязване на въпроса
////Текст на въпроса
////Дефинирайте понятието конкурентност.


////Конкурентността е свойство на софтуерни системи, което позволява на две или повече задачи да се изпълняват едновременно и независимо една от друга. Това се постига чрез използване на многонишково програмиране, където всяка нишка изпълнява своя код паралелно с другите нишки.

////В конкурентните системи, задачите се изпълняват възможно най-ефективно и бързо, като се използват всички налични ресурси, включително процесорното време и паметта. Конкурентността може да подобри ефективността и производителността на софтуерните системи, тъй като повече задачи могат да бъдат изпълнени за по-кратко време.

////Въпреки това, конкурентността може да доведе до някои проблеми, като мъртва хватка (deadlock) и състезание за ресурси (race condition), когато няколко нишки се опитват да достъпят един и същи ресурс едновременно. Затова е важно да се прилагат правилни практики за програмиране на многонишкови системи и да се използват инструменти за управление на конкурентността, като синхронизационни механизми и протоколи за комуникация между нишки.


////Въпрос 10
////Правилно
////2,00 от максимално 2,00 точки
////НеотбелязанОтбелязване на въпроса
////Текст на въпроса
////Кое от следните НЕ е метод на Thread обекта.


////Изберете едно
////a. Sleep
////b.
////Start

////c.
////Join

////d.
////Stop 

////Забележка
////Your answer is correct.
////Правилният отговор е:
////Stop

////Въпрос 11
////Правилно
////2,00 от максимално 2,00 точки
////НеотбелязанОтбелязване на въпроса
////Текст на въпроса
////Дефиницията „Абстракция на програма в режим на изпълнение” е на понятието:


////Изберете едно
////a.
////нишка

////b.
////процес 

////c.
////конкурентност

////d.
////асинхронност

////Забележка
////Your answer is correct.
////Правилният отговор е:
////процес

////Въпрос 12
////Отговорен
////От максимално 4,00
////НеотбелязанОтбелязване на въпроса
////Текст на въпроса
////Дайте пример за ситуация, в която възниква проблем „гладуване“ (starvation)?


////Проблемът "гладуване" (starvation) се появява, когато някои задачи в системата не могат да получат достъп до ресурсите, от които се нуждаят за да бъдат изпълнени. Този проблем може да се появи, когато някои задачи използват ресурсите за продължителен период от време или когато други задачи се опитват да ги достъпят постоянно.

////Един пример за ситуация, в която възниква проблемът "гладуване", е при използване на синхронизационни механизми в многонишкови приложения. Ако някои нишки в приложението са постоянно блокирани от други нишки, които използват същите ресурси, това може да доведе до гладуване на тези нишки.

////Например, ако имаме система с две нишки - една за запис на данни и друга за извличане на данни от база данни, може да се появи проблем на гладуване, ако нишката за запис на данни постоянно използва базата данни, като не освобождава ресурса за достъп от други нишки. Това може да доведе до блокиране на нишката за извличане на данни, която не може да получи достъп до базата данни за да извлече необходимата информация.


////Въпрос 13
////Правилно
////2,00 от максимално 2,00 точки
////НеотбелязанОтбелязване на въпроса
////Текст на въпроса
////Кое от следните НЕ е състояние на нишка?


////Изберете едно
////a.
////„в изпълнение” (Running)

////b.
////„незапочната” (Unstarted)

////c.
////„подлежаща на изпълнение” (Runnable)

////d.
////„в изчакване” (Awaiting) 

////Забележка
////Your answer is correct.
////Правилният отговор е:
////„в изчакване” (Awaiting)

////Въпрос 14
////Отговорен
////От максимално 4,00
////НеотбелязанОтбелязване на въпроса
////Текст на въпроса
////Дайте пример за поне два вида конкурентност.


////Конкурентността може да се постигне по много начини. Вот няколко примера:

////Конкурентност на нишки: Многонишковите приложения са пример за конкурентност на нишки. В тези приложения, няколко нишки могат да изпълняват едновременно различни задачи, като се състезават за ресурси и използват синхронизационни механизми за да се избегне проблемът "мъртва хватка" (deadlock) или "гладуване"(starvation).

////Конкурентност на процеси: Многопроцесорните системи са пример за конкурентност на процеси. В тези системи, няколко процеса могат да работят едновременно, като се състезават за общи ресурси като паметта, входно-изходните устройства и др.

////Конкурентност на заявки: Когато множество потребители или приложения едновременно заявят достъп до една база данни или мрежово приложение, това може да доведе до конкурентност на заявките. В тези случаи, се използват синхронизационни механизми като транзакции и оптимистично заключване, за да се избегне проблемът "мъртва хватка" и да се гарантира целостта на данните.

////Конкурентност на задачи: В модерните операционни системи като Windows и Linux, конкурентността на задачите е използвана за ускоряване на работата на компютърната система. Например, операционната система може да изпълнява няколко задачи едновременно, като се използва време-делене (time-sharing) за да се сменят между тях и да се осигури бързо реагиране на потребителите.


////Въпрос 15
////Неправилно
////0,00 от максимално 2,00 точки
////НеотбелязанОтбелязване на въпроса
////Текст на въпроса
////Кой е проблемът, който отговаря на посоченото описание?
////Това е самоизключващо се блокиране. Такова състояние може да възникне, ако нишка А засече, че нишка Б се опитва да заеме ресурс и се опита да го освободи. От своя страна при получаване на ресурса нишка Б също се опитва да го освободи отново за нишка А. Това може да продължи до безкрайност.


////Отговор: 
////"мъртва хватка"(deadlock).
////Забележка
////Правилният отговор е: Жива хватка(livelock)
////Въпрос 16
////Отговорен
////От максимално 2,00
////НеотбелязанОтбелязване на въпроса
////Текст на въпроса
////Дефинирайте понятието блокираща операция.


////Блокираща операция е операция, която блокира или задържа изпълнението на програмата до като се изпълнят определени условия. Тези условия могат да включват чакане за изпълнение на друга операция, заетост на ресурс или друга нишка, или някакво друго събитие, което трябва да се случи преди продължаване на изпълнението на програмата.

////Такива операции могат да доведат до забавяне на работата на програмата и да заемат ресурси, което може да доведе до проблеми с конкурентността на програмата. Затова е важно да се избягват блокиращи операции, когато е възможно и да се използват асинхронни механизми за обработка на събития и задачи.


////Въпрос 17
////Не е отговорен
////От максимално 2,00
////НеотбелязанОтбелязване на въпроса
////Текст на въпроса


////Въпрос 18
////Не е отговорен
////От максимално 6,00
////НеотбелязанОтбелязване на въпроса
////Текст на въпроса
////Открийте какъв проблем при употреба на нишки се наблюдава в примерния програмен фрагмент.


////Край на прегледа
////Отиди на ...
////Отиди на ...
////Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
////Навигация в теста
////Показване по един въпрос на страница
////Край на прегледа
////Вие сте влезли в системата като Добри Илев (Изход)
////тренировъчен - курс - по
////Data retention summary

//Прескочи на основното съдържание
//ПГЕЕ
//Български ‎(bg)‎ 
//Добри Илев 
//Тренировъчен курс - Програмно осигуряване
//Начална страница
//Моите курсове
// тренировъчен-курс-по
// Изпитна тема 18
// Изпитна тема №18
//Започнат на	петък, 31 март 2023, 12:18
//Състояние Непредаден
//Въпрос 1
//Все още не е даден отговор
//От максимално 6,00
//НеотбелязанОтбелязване на въпроса
//Текст на въпроса
//Демонстрирайте синхронизацията на нишки, чрез правилно прилагане на lock операторите, така че програмата да не изпада в безкраен цикъл и да се избягва проблема „мъртва хватка“ (deadlock).




//Въпрос 2
//Отговорът съхранен
//От максимално 40,00
//НеотбелязанОтбелязване на въпроса
//Текст на въпроса

//По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.


//Условие:

//Да се напише програма, която получава цяло число n. След това програмата да генерира масива с n на брой елементи от случайни числа в интервала [-100; 100]. Програмата трябва да разполага с две нишки, които намират и отпечатват съответно броя на четните и броя на нечетните елементите в масива.


//Предоставен фрагмент:

//using System;

//using System.Collections.Generic;

//using System.Linq;

//using System.Threading;


//namespace ExampleThread1

//{

//  class Program

// blank

// blank void FindEven(int[] arr)

//  {

//    blank

//    blank

//{

//      blank

//}



//    Console.WriteLine($"Even: {countEven}");

//  }

//  static void FindOdd(blank )

//  {

//    blank
  
//for (int i = 0; i < arr.Length; i++)

//    {

//      if (arr[i] % 2 != 0)

//      {

//        blank
      
//}

//    }

//    Console.WriteLine($"Odd: {countOdd}");

//  }

//  static void Main(string[] args)

//  {

//    int n = int.Parse(Console.ReadLine());

//    int[] arr = new int[n];

//    Random r = new Random();

//    for (int i = 0; i < n; i++)

//    {

//      arr[i] = r.Next(-100, 100);

//    }


//    blank

//   Thread t2 = new Thread(() => FindOdd(arr));

//    t1.Start();

//    t2.Start();

//    blank
  
//}

//}






//{ staticint countEven = 0; for (int i = 0; i < arr.Length; i++) int countOdd = 0; if (arr[i] % 2 == 0) { countEven++; } int[] arrcountOdd++; Thread t1 = new Thread(() => FindEven(arr)); } ()[]voidint count; int count = arr; int sum = arr[0]; for (int i = 0; i > arr.Length; i++) for (int i = 1; i < arr.Length; i +) for (int i = 0, i < arr.Length, i++) for (int i = arr.Length ‑ 1; i >= 0; i‑‑)countEven++; arr[i] + sum; arr[i] += sum; i<mini> miniint arrint arr[] arr[i] = max; Thread t1; Thread t1 = FindEven(arr); if (i % 2 == 0) { countEven++; }
//if (arr[i] % 2) { countEven++; }
//if (arr[i] % 2 != 0) { countEven++; }
//Въпрос 3
//Все още не е даден отговор
//От максимално 6,00
//НеотбелязанОтбелязване на въпроса
//Текст на въпроса
//Открийте какъв проблем при употреба на нишки се наблюдава в примерния програмен фрагмент.


//Въпрос 4
//Отговорът съхранен
//От максимално 4,00
//НеотбелязанОтбелязване на въпроса
//Текст на въпроса
//Дайте пример за ситуация, в която възниква проблем „състояние на гонка“ (race condition)?


//"Състояние на гонка"(race condition) е проблем, който възниква, когато поведението на програма или система зависи от относителната последователност на събитията, като например изпълнението на нишки. Това може да доведе до непредвидими резултати и грешки.

//Пример за такава ситуация:

//Имаме банкова програма, която позволява на двама потребители да извършват трансфери между си. И двамата искат да трансферират пари един на друг от своите сметки едновременно. Нека програмата използва следните стъпки при трансфер на пари:

//Проверява наличното салдо на сметката на изпращача.
//Изважда трансферирания размер от салдото на изпращача.
//Добавя трансферирания размер към салдото на получателя.
//Ако програмата не е правилно синхронизирана, може да възникне състояние на гонка, когато двамата потребители извършват трансферите едновременно. Например, ако програмата изпълнява стъпки 1 и 2 за първия потребител и в същото време изпълнява стъпки 1 и 2 за втория потребител, преди да премине към стъпка 3, може да доведе до неправилно обновяване на салдата на сметките и грешки в баланса на потребителите.




//Въпрос 5
//Отговорът съхранен
//От максимално 2,00
//НеотбелязанОтбелязване на въпроса
//Текст на въпроса
//Кой е проблемът, който отговаря на посоченото описание?
//Това е самоизключващо се блокиране. Такова състояние може да възникне, ако нишка А засече, че нишка Б се опитва да заеме ресурс и се опита да го освободи. От своя страна при получаване на ресурса нишка Б също се опитва да го освободи отново за нишка А. Това може да продължи до безкрайност.


//Отговор: 
//deadlock
//Въпрос 6
//Отговорът съхранен
//От максимално 6,00
//НеотбелязанОтбелязване на въпроса
//Текст на въпроса
//Демонстрирайте създаването и стартирането на нишка, която изпълнява метода по-долу. Включете целия необходим код в отговора, в това число class Program и Main метод.


//static void Count()
//{

//  for (int i = 5; i >= 0; i--)
//  {

//    Console.WriteLine(i);

//  }

//}

//using System;

//using System.Threading;



//class Program

//{

//  static void Count()

//  {

//    for (int i = 5; i >= 0; i--)

//    {

//      Console.WriteLine(i);

//    }

//  }



//  static void Main(string[] args)

//  {

//    Thread countThread = new Thread(Count);

//    countThread.Start();

//    countThread.Join();

//  }

//}



//Въпрос 7
//Отговорът съхранен
//От максимално 2,00
//НеотбелязанОтбелязване на въпроса
//Текст на въпроса
//Кое от следните НЕ е свойство на нишка?


//Изберете едно
//a.
//IsBackgroundThread

//b.
//IsThreadPoolThread

//c.
//Value

//d.
//ThreadState

//Въпрос 8
//Отговорът съхранен
//От максимално 2,00
//НеотбелязанОтбелязване на въпроса
//Текст на въпроса
//Опишете връзката между процес и нишка

//Нишките са част от процеса и представляват начинът, по който процесът може да изпълнява множество задачи едновременно или паралелно. Всички нишки в рамките на един процес споделят общите ресурси на процеса, което ги прави по-леки и по-бързи за създаване и управление в сравнение със създаването на множество процеси. Тъй като нишките споделят ресурсите на процеса, те трябва да се синхронизират правилно, за да се избегнат конфликти и проблеми, като "състояние на гонка" и "взаимно блокиране".

//Въпрос 9
//Отговорът съхранен
//От максимално 6,00
//НеотбелязанОтбелязване на въпроса
//Текст на въпроса
//Демонстрирайте синхронизацията на нишки, чрез създаване на синхронизиращ обект и оператора lock в кода по-долу, така че стойността на брояча да е правилна и да се избягва проблема „състояние на гонка“ (race condition).

//class Counter
//{

//  public int Count { get; private set; }

//  public void Increment()
//  {

//    Count++;

//  }

//  public void Decrement()
//  {

//    Count--;

//  }

//  static void TestCounter(Counter c)

//  {

//    for (int i = 0; i < 10000; i++)

//    {

//      c.Increment();

//      c.Decrement();

//    }

//  }

//}

//class Program
//{

//  public static void Main(string[] args)
//  {

//    Counter c = new Counter();

//    Thread t1 = new Thread(() => TestCounter(c));

//    Thread t2 = new Thread(() => TestCounter(c));

//    Thread t3 = new Thread(() => TestCounter(c));

//    t1.Start();

//    t2.Start();

//    t3.Start();

//    t1.Join();

//    t2.Join();

//    t3.Join();

//  }

//}


//using System;

//using System.Threading;



//class Counter

//{

//  private object lockObject = new object();



//  public int Count { get; private set; }



//  public void Increment()

//  {

//    lock (lockObject)

//    {

//      Count++;

//    }

//  }



//  public void Decrement()

//  {

//    lock (lockObject)

//    {

//      Count--;

//    }

//  }



//  static void TestCounter(Counter c)

//  {

//    for (int i = 0; i < 10000; i++)

//    {

//      c.Increment();

//      c.Decrement();

//    }

//  }

//}



//class Program

//{

//  public static void Main(string[] args)

//  {

//    Counter c = new Counter();



//    Thread t1 = new Thread(() => TestCounter(c));

//    Thread t2 = new Thread(() => TestCounter(c));

//    Thread t3 = new Thread(() => TestCounter(c));



//    t1.Start();

//    t2.Start();

//    t3.Start();



//    t1.Join();

//    t2.Join();

//    t3.Join();



//    Console.WriteLine($"Counter: {c.Count}");

//  }

//}



//Въпрос 10
//Все още не е даден отговор
//От максимално 4,00
//НеотбелязанОтбелязване на въпроса
//Текст на въпроса
//Попълнете липсващите места в текста с подходящи думи, така че да опишете връзката между процес и нишка.
//А. 
 
// може да притежава многобройни Б. 
 
// . Те В. 
 
// ресурси. Програма, която може да изпълнява едновременно няколко редици от програмни инструкции наричаме Г. 
 
// .


//Въпрос 11
//Все още не е даден отговор
//От максимално 2,00
//НеотбелязанОтбелязване на въпроса
//Текст на въпроса
//Дефиницията „Самостоятелна редица от програмни инструкции, които се изпълняват последователно” е на понятието


//Изберете едно
//a.
//процес

//b.
//конкурентност

//c.
//асинхронност

//d.
//нишка

//Въпрос 12
//Все още не е даден отговор
//От максимално 2,00
//НеотбелязанОтбелязване на въпроса
//Текст на въпроса
//На кой от редовете се създава правилно обект за нишка, който изпълнява метод MyMethod без параметри?

//Изберете едно
//a.
//var Thread t1 = new Thread(MyMethod);

//b.
//Нито едно от посочените.

//c.
//Thread thread = new Thread(MyMethod);

//d.
//var thread = MyMethod();

//Въпрос 13
//Все още не е даден отговор
//От максимално 6,00
//НеотбелязанОтбелязване на въпроса
//Текст на въпроса
//Открийте какъв проблем при употреба на нишки се наблюдава в примерния програмен фрагмент.


//Въпрос 14
//Все още не е даден отговор
//От максимално 2,00
//НеотбелязанОтбелязване на въпроса
//Текст на въпроса


//Въпрос 15
//Все още не е даден отговор
//От максимално 2,00
//НеотбелязанОтбелязване на въпроса
//Текст на въпроса
//Дефинирайте понятието конкурентност.


//Въпрос 16
//Все още не е даден отговор
//От максимално 2,00
//НеотбелязанОтбелязване на въпроса
//Текст на въпроса
//Свойството ThreadState на нишка показва:


//Изберете едно
//a.
//състоянието на нишката

//b.
//дали работи на преден или заден план

//c.
//дали е част от пула с нишки

//d.
//номерът на нишката

//Въпрос 17
//Все още не е даден отговор
//От максимално 2,00
//НеотбелязанОтбелязване на въпроса
//Текст на въпроса
//Кое от понятията е дефинирано в текста по-долу?

//Изпълнение на набор от операции едновременно.


//Изберете едно
//a.
//задача

//b.
//нишка

//c.
//конкурентност

//d.
//процес

//Въпрос 18
//Все още не е даден отговор
//От максимално 4,00
//НеотбелязанОтбелязване на въпроса
//Текст на въпроса
//Дайте пример за поне два вида конкурентност.


//Край на прегледа
//Отиди на ...
//Отиди на ...
//Прескочи <span id="mod_quiz_navblock_title">Навигация в теста</span>
//Навигация в теста
//Показване по един въпрос на страница
//Край на прегледа
//Вие сте влезли в системата като Добри Илев (Изход)
//тренировъчен - курс - по
//Data retention summary
